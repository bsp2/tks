#
# Makefile for tkminnie plugin on Linux / GCC platform
#
# (c) 2014-2025 Bastian Spiegel <bs@tkscript.de>
#

YAC_ROOTPATH=../../
include ../../install_linux.mk

PLUGIN=tkminnie

HAVE_VGTESSELATE=y

EXTRAFLAGS+= -DMINNIE_ALLOC_DEBUG=1
EXTRAFLAGS+= -DMINNIE_SW_RENDER=0
EXTRAFLAGS+= -DMINNIE_EXPORT_VERTEX_16BIT=1
EXTRAFLAGS+= -DTKMINNIE_BUILD
EXTRAFLAGS+= -DSHADERVG_SCRIPT_API
EXTRAFLAGS+= -DSHADERVG_TEXT
EXTRAFLAGS+= -DSHADERVG_TEXT_BATCH_SIZE=128
EXTRAFLAGS+= -DSHADERVG_UNDERLINE_TEXT_BATCH_SIZE=16

# required on NVidia / not on macOS
EXTRAFLAGS+= -DSHADERVG_UNMAP_SCRATCHVBO_DURING_DRAW

# (note) slower than mapping the scratch buffer
##EXTRAFLAGS+= -DSHADERVG_USE_SCRATCHBUFFERSUBDATA

# (note) **EXPERIMENTAL** when not defined, use glDrawElements to repeat 6 or 9(linestripbevel) vertices
EXTRAFLAGS += -DTKMINNIE_DUPLICATE_POINT_VERTICES

# (todo) line strips, also requires gl_VertexID (GLES3+, GL3+(GLSL1.30), GL4.1core on macOS)
# (todo) need a GL extensions that advances vertex attributes every 'n' vertices
#         (glVertexAttribDivisor is used for instanced rendering only)
##EXTRAFLAGS+= -DUSE_VERTEX_ATTRIB_DIVISOR

# redirect VG_tesselator malloc/free to vgtess_malloc/free functions and track memory usage
EXTRAFLAGS += -DVGTESSELATE_MALLOC_DEBUG

ifeq ("$(HAVE_VGTESSELATE)","y")
EXTRAFLAGS += -DHAVE_VGTESSELATE
endif

EXTRALIBS=

PLAF_OBJ=

include make.objects

include ../../plugin_linux.mk

.PHONY: ee
ee::
	$(TKS) app:dog++ -pn $(PLUGIN) -mn $(PLUGIN) ../*.h  >"$(YAC_ROOTPATH)/apidocs/ee/tkminnie.ee"
	$(TKS) app:dog++ -pn ShaderVG -mn ShaderVG ../shadervg/shadervg.h >"$(YAC_ROOTPATH)/apidocs/ee/shadervg.ee"
	$(TKS) app:dog++ -pn ShaderVG_Text -mn ShaderVG_Text ../shadervg/text.h >"$(YAC_ROOTPATH)/apidocs/ee/shadervg_text.ee"
