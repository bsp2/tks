// ---- ying_minnie_MinnieDrawable.cpp: auto generated by YInG - the YAC interface generator (Fri, 26/Sep/2025 15:20:50)

#ifndef YAC_NO_HOST
void  YAC_CALL MinnieDrawable__init (void *                        );
sSI   YAC_CALL MinnieDrawable__alloc(void *, yacmemptr             );
void  YAC_CALL MinnieDrawable__reset(void *                        );
void  YAC_CALL MinnieDrawable__setEnableDebug(void *, yacmemptr    );
sSI   YAC_CALL MinnieDrawable__getEnableDebug(void *               );
void  YAC_CALL MinnieDrawable__freeGL(void *                       );
void  YAC_CALL MinnieDrawable__free (void *                        );
void  YAC_CALL MinnieDrawable__lazyAllocGL(void *                  );
void* YAC_CALL MinnieDrawable__getGLBuffer(void *                  );
sSI   YAC_CALL MinnieDrawable__getGLOffset(void *                  );
void* YAC_CALL MinnieDrawable__getDrawBuffer(void *                );
sSI   YAC_CALL MinnieDrawable__getDrawOffset(void *                );
void  YAC_CALL MinnieDrawable__onOpen(void *                       );
void  YAC_CALL MinnieDrawable__setSize2f(void *, yacmemptr         );
void  YAC_CALL MinnieDrawable__setSizeX(void *, yacmemptr          );
void  YAC_CALL MinnieDrawable__setSizeY(void *, yacmemptr          );
sF32  YAC_CALL MinnieDrawable__getSizeX(void *                     );
sF32  YAC_CALL MinnieDrawable__getSizeY(void *                     );
void  YAC_CALL MinnieDrawable__setBackgroundColor(void *, yacmemptr);
sSI   YAC_CALL MinnieDrawable__getBackgroundColor(void *           );
void  YAC_CALL MinnieDrawable__setScale2f(void *, yacmemptr        );
void  YAC_CALL MinnieDrawable__setScaleX(void *, yacmemptr         );
void  YAC_CALL MinnieDrawable__setScaleY(void *, yacmemptr         );
sF32  YAC_CALL MinnieDrawable__getScaleX(void *                    );
sF32  YAC_CALL MinnieDrawable__getScaleY(void *                    );
void  YAC_CALL MinnieDrawable__setRotation(void *, yacmemptr       );
sF32  YAC_CALL MinnieDrawable__getRotation(void *                  );
void  YAC_CALL MinnieDrawable__setTranslate2f(void *, yacmemptr    );
void  YAC_CALL MinnieDrawable__setTranslateX(void *, yacmemptr     );
void  YAC_CALL MinnieDrawable__setTranslateY(void *, yacmemptr     );
sF32  YAC_CALL MinnieDrawable__getTranslateX(void *                );
sF32  YAC_CALL MinnieDrawable__getTranslateY(void *                );
void  YAC_CALL MinnieDrawable__queueGLBufUpdate(void *             );
sSI   YAC_CALL MinnieDrawable__isComplete(void *                   );
void  YAC_CALL MinnieDrawable__draw (void *                        );
#endif // YAC_NO_HOST

// ------------------ YAC class "_MinnieDrawable" reflection map (implementation) ------------------
sUI          YAC_VCALL _MinnieDrawable::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _MinnieDrawable::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _MinnieDrawable::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _MinnieDrawable::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _MinnieDrawable::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _MinnieDrawable::yacMethodGetNum                  (void) {return 36;}
const char **YAC_VCALL _MinnieDrawable::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "init", "alloc", "reset", "setEnableDebug", "getEnableDebug", "freeGL", "free", "lazyAllocGL", "getGLBuffer", "getGLOffset", "getDrawBuffer", "getDrawOffset", "onOpen", "setSize2f", "setSizeX", "setSizeY", "getSizeX", "getSizeY", "setBackgroundColor", "getBackgroundColor", "setScale2f", "setScaleX", "setScaleY", "getScaleX", "getScaleY", "setRotation", "getRotation", "setTranslate2f", "setTranslateX", "setTranslateY", "getTranslateX", "getTranslateY", "queueGLBufUpdate", "isComplete", "draw"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _MinnieDrawable::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _MinnieDrawable::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={1, 1,};static const sUI rt3[]={0,};static const sUI rt4[]={1,};static const sUI rt5[]={0,};static const sUI rt6[]={0,};static const sUI rt7[]={0,};static const sUI rt8[]={0,};static const sUI rt9[]={0,};static const sUI rt10[]={0,};static const sUI rt11[]={0,};static const sUI rt12[]={0,};static const sUI rt13[]={0,};static const sUI rt14[]={2, 2,};static const sUI rt15[]={2,};static const sUI rt16[]={2,};static const sUI rt17[]={0,};static const sUI rt18[]={0,};static const sUI rt19[]={1,};static const sUI rt20[]={0,};static const sUI rt21[]={2, 2,};static const sUI rt22[]={2,};static const sUI rt23[]={2,};static const sUI rt24[]={0,};static const sUI rt25[]={0,};static const sUI rt26[]={2,};static const sUI rt27[]={0,};static const sUI rt28[]={2, 2,};static const sUI rt29[]={2,};static const sUI rt30[]={2,};static const sUI rt31[]={0,};static const sUI rt32[]={0,};static const sUI rt33[]={0,};static const sUI rt34[]={0,};static const sUI rt35[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _MinnieDrawable::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0, (const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0, (const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0, (const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0,};static const char *rs26[]={(const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0, (const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0,};static const char *rs31[]={(const char*)0,};static const char *rs32[]={(const char*)0,};static const char *rs33[]={(const char*)0,};static const char *rs34[]={(const char*)0,};static const char *rs35[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _MinnieDrawable::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 1, 0, 0, 1, 0, 0, 0, 3, 1, 3, 1, 0, 0, 0, 0, 2, 2, 0, 1, 0, 0, 0, 2, 2, 0, 2, 0, 0, 0, 2, 2, 0, 1, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _MinnieDrawable::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, "Buffer", (const char*)0, "Buffer", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _MinnieDrawable::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)MinnieDrawable__init, (void*)MinnieDrawable__alloc, (void*)MinnieDrawable__reset, (void*)MinnieDrawable__setEnableDebug, (void*)MinnieDrawable__getEnableDebug, (void*)MinnieDrawable__freeGL, (void*)MinnieDrawable__free, (void*)MinnieDrawable__lazyAllocGL, (void*)MinnieDrawable__getGLBuffer, (void*)MinnieDrawable__getGLOffset, (void*)MinnieDrawable__getDrawBuffer, (void*)MinnieDrawable__getDrawOffset, (void*)MinnieDrawable__onOpen, (void*)MinnieDrawable__setSize2f, (void*)MinnieDrawable__setSizeX, (void*)MinnieDrawable__setSizeY, (void*)MinnieDrawable__getSizeX, (void*)MinnieDrawable__getSizeY, (void*)MinnieDrawable__setBackgroundColor, (void*)MinnieDrawable__getBackgroundColor, (void*)MinnieDrawable__setScale2f, (void*)MinnieDrawable__setScaleX, (void*)MinnieDrawable__setScaleY, (void*)MinnieDrawable__getScaleX, (void*)MinnieDrawable__getScaleY, (void*)MinnieDrawable__setRotation, (void*)MinnieDrawable__getRotation, (void*)MinnieDrawable__setTranslate2f, (void*)MinnieDrawable__setTranslateX, (void*)MinnieDrawable__setTranslateY, (void*)MinnieDrawable__getTranslateX, (void*)MinnieDrawable__getTranslateY, (void*)MinnieDrawable__queueGLBufUpdate, (void*)MinnieDrawable__isComplete, (void*)MinnieDrawable__draw}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _MinnieDrawable::yacConstantGetNum                (void) {return 43;}
const char **YAC_VCALL _MinnieDrawable::yacConstantGetNames              (void) {
#ifndef YAC_NO_HOST
static const char*r[]={"MINNIE_PATH_TYPE_DRAW", "MINNIE_PATH_TYPE_CONVEX", "MINNIE_PATH_TYPE_CONCAVE", "MINNIE_PATH_TYPE_EVENODD", "MINNIE_LINEJOIN_NONE", "MINNIE_LINEJOIN_MITER", "MINNIE_LINEJOIN_ROUND", "MINNIE_LINEJOIN_BEVEL", "MINNIE_LINECAP_NONE", "MINNIE_LINECAP_BUTT", "MINNIE_LINECAP_ROUND", "MINNIE_LINECAP_SQUARE", "MINNIE_DRAWOP_END", "MINNIE_DRAWOP_TRIANGLES_FILL_FLAT_32", "MINNIE_DRAWOP_TRIANGLES_FILL_FLAT_14_2", "MINNIE_DRAWOP_TRIANGLES_FILL_GOURAUD_32", "MINNIE_DRAWOP_TRIANGLES_FILL_GOURAUD_14_2", "MINNIE_DRAWOP_TRIANGLES_FILL_FLAT_EDGEAA_32", "MINNIE_DRAWOP_TRIANGLES_FILL_FLAT_EDGEAA_14_2", "MINNIE_DRAWOP_TRIANGLES_FILL_GOURAUD_EDGEAA_32", "MINNIE_DRAWOP_TRIANGLES_FILL_GOURAUD_EDGEAA_14_2", "MINNIE_DRAWOP_POLYGON_FILL_FLAT_32", "MINNIE_DRAWOP_POLYGON_FILL_FLAT_14_2", "MINNIE_DRAWOP_POLYGON_FILL_GOURAUD_32", "MINNIE_DRAWOP_POLYGON_FILL_GOURAUD_14_2", "MINNIE_DRAWOP_RECT_FILL", "MINNIE_DRAWOP_RECT_STROKE", "MINNIE_DRAWOP_RECT_FILL_STROKE", "MINNIE_DRAWOP_ELLIPSE_FILL", "MINNIE_DRAWOP_ELLIPSE_STROKE", "MINNIE_DRAWOP_ELLIPSE_FILL_STROKE", "MINNIE_DRAWOP_ROUNDRECT_FILL", "MINNIE_DRAWOP_ROUNDRECT_STROKE", "MINNIE_DRAWOP_ROUNDRECT_FILL_STROKE", "MINNIE_DRAWOP_BIND_TEXTURE", "MINNIE_DRAWOP_UNBIND_TEXTURE", "MINNIE_DRAWOP_TEXTURE_DECAL_ALPHA", "MINNIE_DRAWOP_TRIANGLES_TEX_UV_FLAT_32", "MINNIE_DRAWOP_TRIANGLES_TEX_UV_FLAT_DECAL_32", "MINNIE_DRAWOP_TRIANGLES_TEX_UV_GOURAUD_32", "MINNIE_DRAWOP_TRIANGLES_TEX_UV_GOURAUD_DECAL_32", "MINNIE_DRAWOP_LINE_STRIP_FLAT_14_2", "MINNIE_DRAWOP_LINE_STRIP_FLAT_BEVEL_14_2"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _MinnieDrawable::yacConstantGetTypes              (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
yacmemptr    YAC_VCALL _MinnieDrawable::yacConstantGetValues             (void) {yacmemptr m;
#ifndef YAC_NO_HOST
static sUI r[43]; m.ui=r; m.si[0]=(sSI)0;m.si[1]=(sSI)1;m.si[2]=(sSI)2;m.si[3]=(sSI)3;m.si[4]=(sSI)0;m.si[5]=(sSI)1;m.si[6]=(sSI)2;m.si[7]=(sSI)3;m.si[8]=(sSI)0;m.si[9]=(sSI)1;m.si[10]=(sSI)2;m.si[11]=(sSI)3;m.si[12]=(sSI)0x00;m.si[13]=(sSI)0x01;m.si[14]=(sSI)0x02;m.si[15]=(sSI)0x03;m.si[16]=(sSI)0x04;m.si[17]=(sSI)0x05;m.si[18]=(sSI)0x06;m.si[19]=(sSI)0x07;m.si[20]=(sSI)0x08;m.si[21]=(sSI)0x09;m.si[22]=(sSI)0x0A;m.si[23]=(sSI)0x0B;m.si[24]=(sSI)0x0C;m.si[25]=(sSI)0x0D;m.si[26]=(sSI)0x0E;m.si[27]=(sSI)0x0F;m.si[28]=(sSI)0x10;m.si[29]=(sSI)0x11;m.si[30]=(sSI)0x12;m.si[31]=(sSI)0x13;m.si[32]=(sSI)0x14;m.si[33]=(sSI)0x15;m.si[34]=(sSI)0x16;m.si[35]=(sSI)0x17;m.si[36]=(sSI)0x18;m.si[37]=(sSI)0x19;m.si[38]=(sSI)0x1A;m.si[39]=(sSI)0x1B;m.si[40]=(sSI)0x1C;m.si[41]=(sSI)0x1D;m.si[42]=(sSI)0x1E;; return m;
#else
m.any = 0; return m;
#endif // YAC_NO_HOST
}

YAC_C(_MinnieDrawable, "MinnieDrawable");

#ifndef YAC_NO_HOST
void  YAC_CALL MinnieDrawable__init (void *_o                                ) {((_MinnieDrawable*)_o)->init();}
sSI   YAC_CALL MinnieDrawable__alloc(void *_o, yacmemptr _args               ) {return (sSI)((_MinnieDrawable*)_o)->alloc(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL MinnieDrawable__reset(void *_o                                ) {((_MinnieDrawable*)_o)->reset();}
void  YAC_CALL MinnieDrawable__setEnableDebug(void *_o, yacmemptr _args      ) {((_MinnieDrawable*)_o)->setEnableDebug(_args.mem[0].si);}
sSI   YAC_CALL MinnieDrawable__getEnableDebug(void *_o                       ) {return (sSI)((_MinnieDrawable*)_o)->getEnableDebug();}
void  YAC_CALL MinnieDrawable__freeGL(void *_o                               ) {((_MinnieDrawable*)_o)->freeGL();}
void  YAC_CALL MinnieDrawable__free (void *_o                                ) {((_MinnieDrawable*)_o)->free();}
void  YAC_CALL MinnieDrawable__lazyAllocGL(void *_o                          ) {((_MinnieDrawable*)_o)->lazyAllocGL();}
void* YAC_CALL MinnieDrawable__getGLBuffer(void *_o                          ) {return (void*)((_MinnieDrawable*)_o)->getGLBuffer();}
sSI   YAC_CALL MinnieDrawable__getGLOffset(void *_o                          ) {return (sSI)((_MinnieDrawable*)_o)->getGLOffset();}
void* YAC_CALL MinnieDrawable__getDrawBuffer(void *_o                        ) {return (void*)((_MinnieDrawable*)_o)->getDrawBuffer();}
sSI   YAC_CALL MinnieDrawable__getDrawOffset(void *_o                        ) {return (sSI)((_MinnieDrawable*)_o)->getDrawOffset();}
void  YAC_CALL MinnieDrawable__onOpen(void *_o                               ) {((_MinnieDrawable*)_o)->onOpen();}
void  YAC_CALL MinnieDrawable__setSize2f(void *_o, yacmemptr _args           ) {((_MinnieDrawable*)_o)->setSize2f(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL MinnieDrawable__setSizeX(void *_o, yacmemptr _args            ) {((_MinnieDrawable*)_o)->setSizeX(_args.mem[0].f32);}
void  YAC_CALL MinnieDrawable__setSizeY(void *_o, yacmemptr _args            ) {((_MinnieDrawable*)_o)->setSizeY(_args.mem[0].f32);}
sF32  YAC_CALL MinnieDrawable__getSizeX(void *_o                             ) {return (sF32)((_MinnieDrawable*)_o)->getSizeX();}
sF32  YAC_CALL MinnieDrawable__getSizeY(void *_o                             ) {return (sF32)((_MinnieDrawable*)_o)->getSizeY();}
void  YAC_CALL MinnieDrawable__setBackgroundColor(void *_o, yacmemptr _args  ) {((_MinnieDrawable*)_o)->setBackgroundColor(_args.mem[0].si);}
sSI   YAC_CALL MinnieDrawable__getBackgroundColor(void *_o                   ) {return (sSI)((_MinnieDrawable*)_o)->getBackgroundColor();}
void  YAC_CALL MinnieDrawable__setScale2f(void *_o, yacmemptr _args          ) {((_MinnieDrawable*)_o)->setScale2f(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL MinnieDrawable__setScaleX(void *_o, yacmemptr _args           ) {((_MinnieDrawable*)_o)->setScaleX(_args.mem[0].f32);}
void  YAC_CALL MinnieDrawable__setScaleY(void *_o, yacmemptr _args           ) {((_MinnieDrawable*)_o)->setScaleY(_args.mem[0].f32);}
sF32  YAC_CALL MinnieDrawable__getScaleX(void *_o                            ) {return (sF32)((_MinnieDrawable*)_o)->getScaleX();}
sF32  YAC_CALL MinnieDrawable__getScaleY(void *_o                            ) {return (sF32)((_MinnieDrawable*)_o)->getScaleY();}
void  YAC_CALL MinnieDrawable__setRotation(void *_o, yacmemptr _args         ) {((_MinnieDrawable*)_o)->setRotation(_args.mem[0].f32);}
sF32  YAC_CALL MinnieDrawable__getRotation(void *_o                          ) {return (sF32)((_MinnieDrawable*)_o)->getRotation();}
void  YAC_CALL MinnieDrawable__setTranslate2f(void *_o, yacmemptr _args      ) {((_MinnieDrawable*)_o)->setTranslate2f(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL MinnieDrawable__setTranslateX(void *_o, yacmemptr _args       ) {((_MinnieDrawable*)_o)->setTranslateX(_args.mem[0].f32);}
void  YAC_CALL MinnieDrawable__setTranslateY(void *_o, yacmemptr _args       ) {((_MinnieDrawable*)_o)->setTranslateY(_args.mem[0].f32);}
sF32  YAC_CALL MinnieDrawable__getTranslateX(void *_o                        ) {return (sF32)((_MinnieDrawable*)_o)->getTranslateX();}
sF32  YAC_CALL MinnieDrawable__getTranslateY(void *_o                        ) {return (sF32)((_MinnieDrawable*)_o)->getTranslateY();}
void  YAC_CALL MinnieDrawable__queueGLBufUpdate(void *_o                     ) {((_MinnieDrawable*)_o)->queueGLBufUpdate();}
sSI   YAC_CALL MinnieDrawable__isComplete(void *_o                           ) {return (sSI)((_MinnieDrawable*)_o)->isComplete();}
void  YAC_CALL MinnieDrawable__draw (void *_o                                ) {((_MinnieDrawable*)_o)->draw();}
#endif // YAC_NO_HOST
