// ---- ying_minnie_Minnie.cpp: auto generated by YInG - the YAC interface generator (Wed, 3/Sep/2025 22:44:25)

#ifndef YAC_NO_HOST
void  YAC_CALL Minnie__freeDynamic  (void *                        );
sSI   YAC_CALL Minnie__setFramebufferOverride(void *, yacmemptr    );
sSI   YAC_CALL Minnie__initScratchBuffers(void *, yacmemptr        );
void  YAC_CALL Minnie__setStrokeScale(void *, yacmemptr            );
void  YAC_CALL Minnie__setStrokeOffset(void *, yacmemptr           );
sSI   YAC_CALL Minnie__parseBuffer  (void *, yacmemptr             );
void  YAC_CALL Minnie__debugPrintAllocStats(void *                 );
void  YAC_CALL Minnie__resetAllocStats(void *                      );
void  YAC_CALL Minnie__debugPrintPathStats(void *                  );
sSI   YAC_CALL Minnie__getTotalNumPoints(void *                    );
sSI   YAC_CALL Minnie__getTotalNumLines(void *                     );
sSI   YAC_CALL Minnie__getTotalNumLineStrips(void *                );
sSI   YAC_CALL Minnie__getTotalNumTris(void *                      );
sSI   YAC_CALL Minnie__getTotalNumTrisTex(void *                   );
sSI   YAC_CALL Minnie__getTotalNumRects(void *                     );
sSI   YAC_CALL Minnie__getTotalNumEllipses(void *                  );
sSI   YAC_CALL Minnie__getWidth     (void *                        );
sSI   YAC_CALL Minnie__getHeight    (void *                        );
sSI   YAC_CALL Minnie__getColorByIndex(void *, yacmemptr           );
void  YAC_CALL Minnie__setEnableDraw(void *, yacmemptr             );
void  YAC_CALL Minnie__setEnableDrawSW(void *, yacmemptr           );
void  YAC_CALL Minnie__setEnableRenderStrokes(void *, yacmemptr    );
sSI   YAC_CALL Minnie__getEnableRenderStrokes(void *               );
void  YAC_CALL Minnie__setEnableRenderJoinCap(void *, yacmemptr    );
sSI   YAC_CALL Minnie__getEnableRenderJoinCap(void *               );
void  YAC_CALL Minnie__setEnableRenderFillConcave(void *, yacmemptr);
sSI   YAC_CALL Minnie__getEnableRenderFillConcave(void *           );
void  YAC_CALL Minnie__setEnableRenderFillHoles(void *, yacmemptr  );
sSI   YAC_CALL Minnie__getEnableRenderFillHoles(void *             );
void  YAC_CALL Minnie__setEnableEdgeAA(void *, yacmemptr           );
sSI   YAC_CALL Minnie__getEnableEdgeAA(void *                      );
void  YAC_CALL Minnie__setEnableTesselateConcave(void *, yacmemptr );
sSI   YAC_CALL Minnie__getEnableTesselateConcave(void *            );
void  YAC_CALL Minnie__setSwTesselateSizeThreshold(void *, yacmemptr);
sSI   YAC_CALL Minnie__getSwTesselateSizeThreshold(void *          );
void  YAC_CALL Minnie__setEnableForceConcaveHoles(void *, yacmemptr);
sSI   YAC_CALL Minnie__getEnableForceConcaveHoles(void *           );
void  YAC_CALL Minnie__setEnableUniformColors(void *, yacmemptr    );
sSI   YAC_CALL Minnie__getEnableUniformColors(void *               );
void  YAC_CALL Minnie__setStrokeWLineStripThreshold(void *, yacmemptr);
sF32  YAC_CALL Minnie__getStrokeWLineStripThreshold(void *         );
void  YAC_CALL Minnie__setStrokeWLineJoinThreshold(void *, yacmemptr);
sF32  YAC_CALL Minnie__getStrokeWLineJoinThreshold(void *          );
void  YAC_CALL Minnie__setVertexBufferExportOFS(void *, yacmemptr  );
void  YAC_CALL Minnie__setDrawListExportOFS(void *, yacmemptr      );
sSI   YAC_CALL Minnie__IsEdgeAA     (void *                        );
sSI   YAC_CALL Minnie__IsVertexFix16(void *                        );
sSI   YAC_CALL Minnie__IsEdgeAAScaleFix16(void *                   );
void  YAC_CALL Minnie__apiBegin     (void *                        );
void  YAC_CALL Minnie__apiEnd       (void *                        );
void  YAC_CALL Minnie__apiSeg       (void *, yacmemptr             );
void  YAC_CALL Minnie__apiMoveTo    (void *, yacmemptr             );
void  YAC_CALL Minnie__apiLineTo    (void *, yacmemptr             );
void  YAC_CALL Minnie__apiCubicTo   (void *, yacmemptr             );
void  YAC_CALL Minnie__apiCubicMirrorTo(void *, yacmemptr          );
void  YAC_CALL Minnie__apiRect      (void *, yacmemptr             );
void  YAC_CALL Minnie__apiRoundRect (void *, yacmemptr             );
void  YAC_CALL Minnie__apiEllipse   (void *, yacmemptr             );
void  YAC_CALL Minnie__apiCircle    (void *, yacmemptr             );
sSI   YAC_CALL Minnie__apiBeginPathEx(void *, yacmemptr            );
sSI   YAC_CALL Minnie__apiBeginPathConvex(void *                   );
sSI   YAC_CALL Minnie__apiBeginPathConcave(void *                  );
sSI   YAC_CALL Minnie__apiBeginPathHoles(void *                    );
sSI   YAC_CALL Minnie__apiBeginPathImmediate(void *                );
sSI   YAC_CALL Minnie__apiBeginPath (void *                        );
void  YAC_CALL Minnie__apiEndPath   (void *, yacmemptr             );
void  YAC_CALL Minnie__apiEndPathOpen(void *                       );
void  YAC_CALL Minnie__apiEndPathClosed(void *                     );
sSI   YAC_CALL Minnie__apiBeginSubEx(void *, yacmemptr             );
sSI   YAC_CALL Minnie__apiBeginSubConvex(void *                    );
sSI   YAC_CALL Minnie__apiBeginSubConcave(void *                   );
sSI   YAC_CALL Minnie__apiBeginSubHoles(void *                     );
sSI   YAC_CALL Minnie__apiBeginSub  (void *                        );
void  YAC_CALL Minnie__apiEndSub    (void *, yacmemptr             );
void  YAC_CALL Minnie__apiEndSubOpen(void *                        );
void  YAC_CALL Minnie__apiEndSubClosed(void *                      );
void  YAC_CALL Minnie__apiStrokeWidth(void *, yacmemptr            );
void  YAC_CALL Minnie__apiMiterLimit(void *, yacmemptr             );
void  YAC_CALL Minnie__apiFill      (void *                        );
void  YAC_CALL Minnie__apiColor     (void *, yacmemptr             );
void  YAC_CALL Minnie__apiJoinCap   (void *, yacmemptr             );
void  YAC_CALL Minnie__apiJoin      (void *, yacmemptr             );
void  YAC_CALL Minnie__apiJoinNone  (void *                        );
void  YAC_CALL Minnie__apiJoinMiter (void *                        );
void  YAC_CALL Minnie__apiJoinRound (void *                        );
void  YAC_CALL Minnie__apiJoinBevel (void *                        );
void  YAC_CALL Minnie__apiCap       (void *, yacmemptr             );
void  YAC_CALL Minnie__apiCapNone   (void *                        );
void  YAC_CALL Minnie__apiCapRound  (void *                        );
void  YAC_CALL Minnie__apiCapButt   (void *                        );
void  YAC_CALL Minnie__apiDrawPath  (void *, yacmemptr             );
void  YAC_CALL Minnie__apiBindTexture(void *, yacmemptr            );
void  YAC_CALL Minnie__apiUnbindTexture(void *                     );
void  YAC_CALL Minnie__apiTextureDecalAlpha(void *, yacmemptr      );
void  YAC_CALL Minnie__apiTriangleTexUVFlat(void *, yacmemptr      );
void  YAC_CALL Minnie__apiTriangleTexUVFlatDecal(void *, yacmemptr );
void  YAC_CALL Minnie__apiTriangleTexUVGouraud(void *, yacmemptr   );
void  YAC_CALL Minnie__apiTriangleTexUVGouraudDecal(void *, yacmemptr);
void  YAC_CALL Minnie__apiRectTexUVFlat(void *, yacmemptr          );
void  YAC_CALL Minnie__apiRectTexUVFlatDecal(void *, yacmemptr     );
void  YAC_CALL Minnie__apiRectTexUVGouraud(void *, yacmemptr       );
void  YAC_CALL Minnie__apiRectTexUVGouraudDecal(void *, yacmemptr  );
#endif // YAC_NO_HOST

// ------------------ YAC class "_Minnie" reflection map (implementation) ------------------
sUI          YAC_VCALL _Minnie::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Minnie::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Minnie::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Minnie::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Minnie::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Minnie::yacMethodGetNum                  (void) {return 103;}
const char **YAC_VCALL _Minnie::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "freeDynamic", "setFramebufferOverride", "initScratchBuffers", "setStrokeScale", "setStrokeOffset", "parseBuffer", "debugPrintAllocStats", "resetAllocStats", "debugPrintPathStats", "getTotalNumPoints", "getTotalNumLines", "getTotalNumLineStrips", "getTotalNumTris", "getTotalNumTrisTex", "getTotalNumRects", "getTotalNumEllipses", "getWidth", "getHeight", "getColorByIndex", "setEnableDraw", "setEnableDrawSW", "setEnableRenderStrokes", "getEnableRenderStrokes", "setEnableRenderJoinCap", "getEnableRenderJoinCap", "setEnableRenderFillConcave", "getEnableRenderFillConcave", "setEnableRenderFillHoles", "getEnableRenderFillHoles", "setEnableEdgeAA", "getEnableEdgeAA", "setEnableTesselateConcave", "getEnableTesselateConcave", "setSwTesselateSizeThreshold", "getSwTesselateSizeThreshold", "setEnableForceConcaveHoles", "getEnableForceConcaveHoles", "setEnableUniformColors", "getEnableUniformColors", "setStrokeWLineStripThreshold", "getStrokeWLineStripThreshold", "setStrokeWLineJoinThreshold", "getStrokeWLineJoinThreshold", "setVertexBufferExportOFS", "setDrawListExportOFS", "IsEdgeAA", "IsVertexFix16", "IsEdgeAAScaleFix16", "apiBegin", "apiEnd", "apiSeg", "apiMoveTo", "apiLineTo", "apiCubicTo", "apiCubicMirrorTo", "apiRect", "apiRoundRect", "apiEllipse", "apiCircle", "apiBeginPathEx", "apiBeginPathConvex", "apiBeginPathConcave", "apiBeginPathHoles", "apiBeginPathImmediate", "apiBeginPath", "apiEndPath", "apiEndPathOpen", "apiEndPathClosed", "apiBeginSubEx", "apiBeginSubConvex", "apiBeginSubConcave", "apiBeginSubHoles", "apiBeginSub", "apiEndSub", "apiEndSubOpen", "apiEndSubClosed", "apiStrokeWidth", "apiMiterLimit", "apiFill", "apiColor", "apiJoinCap", "apiJoin", "apiJoinNone", "apiJoinMiter", "apiJoinRound", "apiJoinBevel", "apiCap", "apiCapNone", "apiCapRound", "apiCapButt", "apiDrawPath", "apiBindTexture", "apiUnbindTexture", "apiTextureDecalAlpha", "apiTriangleTexUVFlat", "apiTriangleTexUVFlatDecal", "apiTriangleTexUVGouraud", "apiTriangleTexUVGouraudDecal", "apiRectTexUVFlat", "apiRectTexUVFlatDecal", "apiRectTexUVGouraud", "apiRectTexUVGouraudDecal"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Minnie::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 5, 6, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 2, 2, 6, 4, 2, 4, 2, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 3, 0, 1, 12, 12, 15, 15, 8, 8, 12, 12}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _Minnie::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={1, 3, 1, 1, 1,};static const sUI rt3[]={3, 1, 1, 1, 1, 1,};static const sUI rt4[]={2,};static const sUI rt5[]={2,};static const sUI rt6[]={3,};static const sUI rt7[]={0,};static const sUI rt8[]={0,};static const sUI rt9[]={0,};static const sUI rt10[]={0,};static const sUI rt11[]={0,};static const sUI rt12[]={0,};static const sUI rt13[]={0,};static const sUI rt14[]={0,};static const sUI rt15[]={0,};static const sUI rt16[]={0,};static const sUI rt17[]={0,};static const sUI rt18[]={0,};static const sUI rt19[]={1,};static const sUI rt20[]={1,};static const sUI rt21[]={1,};static const sUI rt22[]={1,};static const sUI rt23[]={0,};static const sUI rt24[]={1,};static const sUI rt25[]={0,};static const sUI rt26[]={1,};static const sUI rt27[]={0,};static const sUI rt28[]={1,};static const sUI rt29[]={0,};static const sUI rt30[]={1,};static const sUI rt31[]={0,};static const sUI rt32[]={1,};static const sUI rt33[]={0,};static const sUI rt34[]={1,};static const sUI rt35[]={0,};static const sUI rt36[]={1,};static const sUI rt37[]={0,};static const sUI rt38[]={1,};static const sUI rt39[]={0,};static const sUI rt40[]={2,};static const sUI rt41[]={0,};static const sUI rt42[]={2,};static const sUI rt43[]={0,};static const sUI rt44[]={3,};static const sUI rt45[]={3,};static const sUI rt46[]={0,};static const sUI rt47[]={0,};static const sUI rt48[]={0,};static const sUI rt49[]={0,};static const sUI rt50[]={0,};static const sUI rt51[]={1,};static const sUI rt52[]={2, 2,};static const sUI rt53[]={2, 2,};static const sUI rt54[]={2, 2, 2, 2, 2, 2,};static const sUI rt55[]={2, 2, 2, 2,};static const sUI rt56[]={2, 2,};static const sUI rt57[]={2, 2, 2, 2,};static const sUI rt58[]={2, 2,};static const sUI rt59[]={2,};static const sUI rt60[]={1,};static const sUI rt61[]={0,};static const sUI rt62[]={0,};static const sUI rt63[]={0,};static const sUI rt64[]={0,};static const sUI rt65[]={0,};static const sUI rt66[]={1,};static const sUI rt67[]={0,};static const sUI rt68[]={0,};static const sUI rt69[]={1,};static const sUI rt70[]={0,};static const sUI rt71[]={0,};static const sUI rt72[]={0,};static const sUI rt73[]={0,};static const sUI rt74[]={1,};static const sUI rt75[]={0,};static const sUI rt76[]={0,};static const sUI rt77[]={2,};static const sUI rt78[]={2,};static const sUI rt79[]={0,};static const sUI rt80[]={1,};static const sUI rt81[]={1,};static const sUI rt82[]={1,};static const sUI rt83[]={0,};static const sUI rt84[]={0,};static const sUI rt85[]={0,};static const sUI rt86[]={0,};static const sUI rt87[]={1,};static const sUI rt88[]={0,};static const sUI rt89[]={0,};static const sUI rt90[]={0,};static const sUI rt91[]={1,};static const sUI rt92[]={1, 1, 1,};static const sUI rt93[]={0,};static const sUI rt94[]={2,};static const sUI rt95[]={2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,};static const sUI rt96[]={2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,};static const sUI rt97[]={2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1,};static const sUI rt98[]={2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1,};static const sUI rt99[]={2, 2, 2, 2, 2, 2, 2, 2,};static const sUI rt100[]={2, 2, 2, 2, 2, 2, 2, 2,};static const sUI rt101[]={2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,};static const sUI rt102[]={2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40, rt41, rt42, rt43, rt44, rt45, rt46, rt47, rt48, rt49, rt50, rt51, rt52, rt53, rt54, rt55, rt56, rt57, rt58, rt59, rt60, rt61, rt62, rt63, rt64, rt65, rt66, rt67, rt68, rt69, rt70, rt71, rt72, rt73, rt74, rt75, rt76, rt77, rt78, rt79, rt80, rt81, rt82, rt83, rt84, rt85, rt86, rt87, rt88, rt89, rt90, rt91, rt92, rt93, rt94, rt95, rt96, rt97, rt98, rt99, rt100, rt101, rt102}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _Minnie::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs3[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0,};static const char *rs26[]={(const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0,};static const char *rs31[]={(const char*)0,};static const char *rs32[]={(const char*)0,};static const char *rs33[]={(const char*)0,};static const char *rs34[]={(const char*)0,};static const char *rs35[]={(const char*)0,};static const char *rs36[]={(const char*)0,};static const char *rs37[]={(const char*)0,};static const char *rs38[]={(const char*)0,};static const char *rs39[]={(const char*)0,};static const char *rs40[]={(const char*)0,};static const char *rs41[]={(const char*)0,};static const char *rs42[]={(const char*)0,};static const char *rs43[]={(const char*)0,};static const char *rs44[]={(const char*)0,};static const char *rs45[]={(const char*)0,};static const char *rs46[]={(const char*)0,};static const char *rs47[]={(const char*)0,};static const char *rs48[]={(const char*)0,};static const char *rs49[]={(const char*)0,};static const char *rs50[]={(const char*)0,};static const char *rs51[]={(const char*)0,};static const char *rs52[]={(const char*)0, (const char*)0,};static const char *rs53[]={(const char*)0, (const char*)0,};static const char *rs54[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs55[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs56[]={(const char*)0, (const char*)0,};static const char *rs57[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs58[]={(const char*)0, (const char*)0,};static const char *rs59[]={(const char*)0,};static const char *rs60[]={(const char*)0,};static const char *rs61[]={(const char*)0,};static const char *rs62[]={(const char*)0,};static const char *rs63[]={(const char*)0,};static const char *rs64[]={(const char*)0,};static const char *rs65[]={(const char*)0,};static const char *rs66[]={(const char*)0,};static const char *rs67[]={(const char*)0,};static const char *rs68[]={(const char*)0,};static const char *rs69[]={(const char*)0,};static const char *rs70[]={(const char*)0,};static const char *rs71[]={(const char*)0,};static const char *rs72[]={(const char*)0,};static const char *rs73[]={(const char*)0,};static const char *rs74[]={(const char*)0,};static const char *rs75[]={(const char*)0,};static const char *rs76[]={(const char*)0,};static const char *rs77[]={(const char*)0,};static const char *rs78[]={(const char*)0,};static const char *rs79[]={(const char*)0,};static const char *rs80[]={(const char*)0,};static const char *rs81[]={(const char*)0,};static const char *rs82[]={(const char*)0,};static const char *rs83[]={(const char*)0,};static const char *rs84[]={(const char*)0,};static const char *rs85[]={(const char*)0,};static const char *rs86[]={(const char*)0,};static const char *rs87[]={(const char*)0,};static const char *rs88[]={(const char*)0,};static const char *rs89[]={(const char*)0,};static const char *rs90[]={(const char*)0,};static const char *rs91[]={(const char*)0,};static const char *rs92[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs93[]={(const char*)0,};static const char *rs94[]={(const char*)0,};static const char *rs95[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs96[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs97[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs98[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs99[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs100[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs101[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs102[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40, rs41, rs42, rs43, rs44, rs45, rs46, rs47, rs48, rs49, rs50, rs51, rs52, rs53, rs54, rs55, rs56, rs57, rs58, rs59, rs60, rs61, rs62, rs63, rs64, rs65, rs66, rs67, rs68, rs69, rs70, rs71, rs72, rs73, rs74, rs75, rs76, rs77, rs78, rs79, rs80, rs81, rs82, rs83, rs84, rs85, rs86, rs87, rs88, rs89, rs90, rs91, rs92, rs93, rs94, rs95, rs96, rs97, rs98, rs99, rs100, rs101, rs102}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Minnie::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 2, 0, 2, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _Minnie::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _Minnie::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)Minnie__freeDynamic, (void*)Minnie__setFramebufferOverride, (void*)Minnie__initScratchBuffers, (void*)Minnie__setStrokeScale, (void*)Minnie__setStrokeOffset, (void*)Minnie__parseBuffer, (void*)Minnie__debugPrintAllocStats, (void*)Minnie__resetAllocStats, (void*)Minnie__debugPrintPathStats, (void*)Minnie__getTotalNumPoints, (void*)Minnie__getTotalNumLines, (void*)Minnie__getTotalNumLineStrips, (void*)Minnie__getTotalNumTris, (void*)Minnie__getTotalNumTrisTex, (void*)Minnie__getTotalNumRects, (void*)Minnie__getTotalNumEllipses, (void*)Minnie__getWidth, (void*)Minnie__getHeight, (void*)Minnie__getColorByIndex, (void*)Minnie__setEnableDraw, (void*)Minnie__setEnableDrawSW, (void*)Minnie__setEnableRenderStrokes, (void*)Minnie__getEnableRenderStrokes, (void*)Minnie__setEnableRenderJoinCap, (void*)Minnie__getEnableRenderJoinCap, (void*)Minnie__setEnableRenderFillConcave, (void*)Minnie__getEnableRenderFillConcave, (void*)Minnie__setEnableRenderFillHoles, (void*)Minnie__getEnableRenderFillHoles, (void*)Minnie__setEnableEdgeAA, (void*)Minnie__getEnableEdgeAA, (void*)Minnie__setEnableTesselateConcave, (void*)Minnie__getEnableTesselateConcave, (void*)Minnie__setSwTesselateSizeThreshold, (void*)Minnie__getSwTesselateSizeThreshold, (void*)Minnie__setEnableForceConcaveHoles, (void*)Minnie__getEnableForceConcaveHoles, (void*)Minnie__setEnableUniformColors, (void*)Minnie__getEnableUniformColors, (void*)Minnie__setStrokeWLineStripThreshold, (void*)Minnie__getStrokeWLineStripThreshold, (void*)Minnie__setStrokeWLineJoinThreshold, (void*)Minnie__getStrokeWLineJoinThreshold, (void*)Minnie__setVertexBufferExportOFS, (void*)Minnie__setDrawListExportOFS, (void*)Minnie__IsEdgeAA, (void*)Minnie__IsVertexFix16, (void*)Minnie__IsEdgeAAScaleFix16, (void*)Minnie__apiBegin, (void*)Minnie__apiEnd, (void*)Minnie__apiSeg, (void*)Minnie__apiMoveTo, (void*)Minnie__apiLineTo, (void*)Minnie__apiCubicTo, (void*)Minnie__apiCubicMirrorTo, (void*)Minnie__apiRect, (void*)Minnie__apiRoundRect, (void*)Minnie__apiEllipse, (void*)Minnie__apiCircle, (void*)Minnie__apiBeginPathEx, (void*)Minnie__apiBeginPathConvex, (void*)Minnie__apiBeginPathConcave, (void*)Minnie__apiBeginPathHoles, (void*)Minnie__apiBeginPathImmediate, (void*)Minnie__apiBeginPath, (void*)Minnie__apiEndPath, (void*)Minnie__apiEndPathOpen, (void*)Minnie__apiEndPathClosed, (void*)Minnie__apiBeginSubEx, (void*)Minnie__apiBeginSubConvex, (void*)Minnie__apiBeginSubConcave, (void*)Minnie__apiBeginSubHoles, (void*)Minnie__apiBeginSub, (void*)Minnie__apiEndSub, (void*)Minnie__apiEndSubOpen, (void*)Minnie__apiEndSubClosed, (void*)Minnie__apiStrokeWidth, (void*)Minnie__apiMiterLimit, (void*)Minnie__apiFill, (void*)Minnie__apiColor, (void*)Minnie__apiJoinCap, (void*)Minnie__apiJoin, (void*)Minnie__apiJoinNone, (void*)Minnie__apiJoinMiter, (void*)Minnie__apiJoinRound, (void*)Minnie__apiJoinBevel, (void*)Minnie__apiCap, (void*)Minnie__apiCapNone, (void*)Minnie__apiCapRound, (void*)Minnie__apiCapButt, (void*)Minnie__apiDrawPath, (void*)Minnie__apiBindTexture, (void*)Minnie__apiUnbindTexture, (void*)Minnie__apiTextureDecalAlpha, (void*)Minnie__apiTriangleTexUVFlat, (void*)Minnie__apiTriangleTexUVFlatDecal, (void*)Minnie__apiTriangleTexUVGouraud, (void*)Minnie__apiTriangleTexUVGouraudDecal, (void*)Minnie__apiRectTexUVFlat, (void*)Minnie__apiRectTexUVFlatDecal, (void*)Minnie__apiRectTexUVGouraud, (void*)Minnie__apiRectTexUVGouraudDecal}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _Minnie::yacConstantGetNum                (void) {return 43;}
const char **YAC_VCALL _Minnie::yacConstantGetNames              (void) {
#ifndef YAC_NO_HOST
static const char*r[]={"MINNIE_PATH_TYPE_DRAW", "MINNIE_PATH_TYPE_CONVEX", "MINNIE_PATH_TYPE_CONCAVE", "MINNIE_PATH_TYPE_HOLES", "MINNIE_LINEJOIN_NONE", "MINNIE_LINEJOIN_MITER", "MINNIE_LINEJOIN_ROUND", "MINNIE_LINEJOIN_BEVEL", "MINNIE_LINECAP_NONE", "MINNIE_LINECAP_BUTT", "MINNIE_LINECAP_ROUND", "MINNIE_LINECAP_SQUARE", "MINNIE_DRAWOP_END", "MINNIE_DRAWOP_TRIANGLES_FILL_FLAT_32", "MINNIE_DRAWOP_TRIANGLES_FILL_FLAT_14_2", "MINNIE_DRAWOP_TRIANGLES_FILL_GOURAUD_32", "MINNIE_DRAWOP_TRIANGLES_FILL_GOURAUD_14_2", "MINNIE_DRAWOP_TRIANGLES_FILL_FLAT_EDGEAA_32", "MINNIE_DRAWOP_TRIANGLES_FILL_FLAT_EDGEAA_14_2", "MINNIE_DRAWOP_TRIANGLES_FILL_GOURAUD_EDGEAA_32", "MINNIE_DRAWOP_TRIANGLES_FILL_GOURAUD_EDGEAA_14_2", "MINNIE_DRAWOP_POLYGON_FILL_FLAT_32", "MINNIE_DRAWOP_POLYGON_FILL_FLAT_14_2", "MINNIE_DRAWOP_POLYGON_FILL_GOURAUD_32", "MINNIE_DRAWOP_POLYGON_FILL_GOURAUD_14_2", "MINNIE_DRAWOP_RECT_FILL", "MINNIE_DRAWOP_RECT_STROKE", "MINNIE_DRAWOP_RECT_FILL_STROKE", "MINNIE_DRAWOP_ELLIPSE_FILL", "MINNIE_DRAWOP_ELLIPSE_STROKE", "MINNIE_DRAWOP_ELLIPSE_FILL_STROKE", "MINNIE_DRAWOP_ROUNDRECT_FILL", "MINNIE_DRAWOP_ROUNDRECT_STROKE", "MINNIE_DRAWOP_ROUNDRECT_FILL_STROKE", "MINNIE_DRAWOP_BIND_TEXTURE", "MINNIE_DRAWOP_UNBIND_TEXTURE", "MINNIE_DRAWOP_TEXTURE_DECAL_ALPHA", "MINNIE_DRAWOP_TRIANGLES_TEX_UV_FLAT_32", "MINNIE_DRAWOP_TRIANGLES_TEX_UV_FLAT_DECAL_32", "MINNIE_DRAWOP_TRIANGLES_TEX_UV_GOURAUD_32", "MINNIE_DRAWOP_TRIANGLES_TEX_UV_GOURAUD_DECAL_32", "MINNIE_DRAWOP_LINE_STRIP_FLAT_14_2", "MINNIE_DRAWOP_LINE_STRIP_FLAT_BEVEL_14_2"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Minnie::yacConstantGetTypes              (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
yacmemptr    YAC_VCALL _Minnie::yacConstantGetValues             (void) {yacmemptr m;
#ifndef YAC_NO_HOST
static sUI r[43]; m.ui=r; m.si[0]=(sSI)0;m.si[1]=(sSI)1;m.si[2]=(sSI)2;m.si[3]=(sSI)3;m.si[4]=(sSI)0;m.si[5]=(sSI)1;m.si[6]=(sSI)2;m.si[7]=(sSI)3;m.si[8]=(sSI)0;m.si[9]=(sSI)1;m.si[10]=(sSI)2;m.si[11]=(sSI)3;m.si[12]=(sSI)0x00;m.si[13]=(sSI)0x01;m.si[14]=(sSI)0x02;m.si[15]=(sSI)0x03;m.si[16]=(sSI)0x04;m.si[17]=(sSI)0x05;m.si[18]=(sSI)0x06;m.si[19]=(sSI)0x07;m.si[20]=(sSI)0x08;m.si[21]=(sSI)0x09;m.si[22]=(sSI)0x0A;m.si[23]=(sSI)0x0B;m.si[24]=(sSI)0x0C;m.si[25]=(sSI)0x0D;m.si[26]=(sSI)0x0E;m.si[27]=(sSI)0x0F;m.si[28]=(sSI)0x10;m.si[29]=(sSI)0x11;m.si[30]=(sSI)0x12;m.si[31]=(sSI)0x13;m.si[32]=(sSI)0x14;m.si[33]=(sSI)0x15;m.si[34]=(sSI)0x16;m.si[35]=(sSI)0x17;m.si[36]=(sSI)0x18;m.si[37]=(sSI)0x19;m.si[38]=(sSI)0x1A;m.si[39]=(sSI)0x1B;m.si[40]=(sSI)0x1C;m.si[41]=(sSI)0x1D;m.si[42]=(sSI)0x1E;; return m;
#else
m.any = 0; return m;
#endif // YAC_NO_HOST
}

YAC_C(_Minnie, "Minnie");

#ifndef YAC_NO_HOST
void  YAC_CALL Minnie__freeDynamic  (void *_o                                ) {((_Minnie*)_o)->freeDynamic();}
sSI   YAC_CALL Minnie__setFramebufferOverride(void *_o, yacmemptr _args      ) {return (sSI)((_Minnie*)_o)->setFramebufferOverride(_args.mem[0].si, _args.mem[1].o, _args.mem[2].si, _args.mem[3].si, _args.mem[4].si);}
sSI   YAC_CALL Minnie__initScratchBuffers(void *_o, yacmemptr _args          ) {return (sSI)((_Minnie*)_o)->initScratchBuffers(_args.mem[0].o, _args.mem[1].si, _args.mem[2].si, _args.mem[3].si, _args.mem[4].si, _args.mem[5].si);}
void  YAC_CALL Minnie__setStrokeScale(void *_o, yacmemptr _args              ) {((_Minnie*)_o)->setStrokeScale(_args.mem[0].f32);}
void  YAC_CALL Minnie__setStrokeOffset(void *_o, yacmemptr _args             ) {((_Minnie*)_o)->setStrokeOffset(_args.mem[0].f32);}
sSI   YAC_CALL Minnie__parseBuffer  (void *_o, yacmemptr _args               ) {return (sSI)((_Minnie*)_o)->parseBuffer(_args.mem[0].o);}
void  YAC_CALL Minnie__debugPrintAllocStats(void *_o                         ) {((_Minnie*)_o)->debugPrintAllocStats();}
void  YAC_CALL Minnie__resetAllocStats(void *_o                              ) {((_Minnie*)_o)->resetAllocStats();}
void  YAC_CALL Minnie__debugPrintPathStats(void *_o                          ) {((_Minnie*)_o)->debugPrintPathStats();}
sSI   YAC_CALL Minnie__getTotalNumPoints(void *_o                            ) {return (sSI)((_Minnie*)_o)->getTotalNumPoints();}
sSI   YAC_CALL Minnie__getTotalNumLines(void *_o                             ) {return (sSI)((_Minnie*)_o)->getTotalNumLines();}
sSI   YAC_CALL Minnie__getTotalNumLineStrips(void *_o                        ) {return (sSI)((_Minnie*)_o)->getTotalNumLineStrips();}
sSI   YAC_CALL Minnie__getTotalNumTris(void *_o                              ) {return (sSI)((_Minnie*)_o)->getTotalNumTris();}
sSI   YAC_CALL Minnie__getTotalNumTrisTex(void *_o                           ) {return (sSI)((_Minnie*)_o)->getTotalNumTrisTex();}
sSI   YAC_CALL Minnie__getTotalNumRects(void *_o                             ) {return (sSI)((_Minnie*)_o)->getTotalNumRects();}
sSI   YAC_CALL Minnie__getTotalNumEllipses(void *_o                          ) {return (sSI)((_Minnie*)_o)->getTotalNumEllipses();}
sSI   YAC_CALL Minnie__getWidth     (void *_o                                ) {return (sSI)((_Minnie*)_o)->getWidth();}
sSI   YAC_CALL Minnie__getHeight    (void *_o                                ) {return (sSI)((_Minnie*)_o)->getHeight();}
sSI   YAC_CALL Minnie__getColorByIndex(void *_o, yacmemptr _args             ) {return (sSI)((_Minnie*)_o)->getColorByIndex(_args.mem[0].si);}
void  YAC_CALL Minnie__setEnableDraw(void *_o, yacmemptr _args               ) {((_Minnie*)_o)->setEnableDraw(_args.mem[0].si);}
void  YAC_CALL Minnie__setEnableDrawSW(void *_o, yacmemptr _args             ) {((_Minnie*)_o)->setEnableDrawSW(_args.mem[0].si);}
void  YAC_CALL Minnie__setEnableRenderStrokes(void *_o, yacmemptr _args      ) {((_Minnie*)_o)->setEnableRenderStrokes(_args.mem[0].si);}
sSI   YAC_CALL Minnie__getEnableRenderStrokes(void *_o                       ) {return (sSI)((_Minnie*)_o)->getEnableRenderStrokes();}
void  YAC_CALL Minnie__setEnableRenderJoinCap(void *_o, yacmemptr _args      ) {((_Minnie*)_o)->setEnableRenderJoinCap(_args.mem[0].si);}
sSI   YAC_CALL Minnie__getEnableRenderJoinCap(void *_o                       ) {return (sSI)((_Minnie*)_o)->getEnableRenderJoinCap();}
void  YAC_CALL Minnie__setEnableRenderFillConcave(void *_o, yacmemptr _args  ) {((_Minnie*)_o)->setEnableRenderFillConcave(_args.mem[0].si);}
sSI   YAC_CALL Minnie__getEnableRenderFillConcave(void *_o                   ) {return (sSI)((_Minnie*)_o)->getEnableRenderFillConcave();}
void  YAC_CALL Minnie__setEnableRenderFillHoles(void *_o, yacmemptr _args    ) {((_Minnie*)_o)->setEnableRenderFillHoles(_args.mem[0].si);}
sSI   YAC_CALL Minnie__getEnableRenderFillHoles(void *_o                     ) {return (sSI)((_Minnie*)_o)->getEnableRenderFillHoles();}
void  YAC_CALL Minnie__setEnableEdgeAA(void *_o, yacmemptr _args             ) {((_Minnie*)_o)->setEnableEdgeAA(_args.mem[0].si);}
sSI   YAC_CALL Minnie__getEnableEdgeAA(void *_o                              ) {return (sSI)((_Minnie*)_o)->getEnableEdgeAA();}
void  YAC_CALL Minnie__setEnableTesselateConcave(void *_o, yacmemptr _args   ) {((_Minnie*)_o)->setEnableTesselateConcave(_args.mem[0].si);}
sSI   YAC_CALL Minnie__getEnableTesselateConcave(void *_o                    ) {return (sSI)((_Minnie*)_o)->getEnableTesselateConcave();}
void  YAC_CALL Minnie__setSwTesselateSizeThreshold(void *_o, yacmemptr _args ) {((_Minnie*)_o)->setSwTesselateSizeThreshold(_args.mem[0].si);}
sSI   YAC_CALL Minnie__getSwTesselateSizeThreshold(void *_o                  ) {return (sSI)((_Minnie*)_o)->getSwTesselateSizeThreshold();}
void  YAC_CALL Minnie__setEnableForceConcaveHoles(void *_o, yacmemptr _args  ) {((_Minnie*)_o)->setEnableForceConcaveHoles(_args.mem[0].si);}
sSI   YAC_CALL Minnie__getEnableForceConcaveHoles(void *_o                   ) {return (sSI)((_Minnie*)_o)->getEnableForceConcaveHoles();}
void  YAC_CALL Minnie__setEnableUniformColors(void *_o, yacmemptr _args      ) {((_Minnie*)_o)->setEnableUniformColors(_args.mem[0].si);}
sSI   YAC_CALL Minnie__getEnableUniformColors(void *_o                       ) {return (sSI)((_Minnie*)_o)->getEnableUniformColors();}
void  YAC_CALL Minnie__setStrokeWLineStripThreshold(void *_o, yacmemptr _args) {((_Minnie*)_o)->setStrokeWLineStripThreshold(_args.mem[0].f32);}
sF32  YAC_CALL Minnie__getStrokeWLineStripThreshold(void *_o                 ) {return (sF32)((_Minnie*)_o)->getStrokeWLineStripThreshold();}
void  YAC_CALL Minnie__setStrokeWLineJoinThreshold(void *_o, yacmemptr _args ) {((_Minnie*)_o)->setStrokeWLineJoinThreshold(_args.mem[0].f32);}
sF32  YAC_CALL Minnie__getStrokeWLineJoinThreshold(void *_o                  ) {return (sF32)((_Minnie*)_o)->getStrokeWLineJoinThreshold();}
void  YAC_CALL Minnie__setVertexBufferExportOFS(void *_o, yacmemptr _args    ) {((_Minnie*)_o)->setVertexBufferExportOFS(_args.mem[0].o);}
void  YAC_CALL Minnie__setDrawListExportOFS(void *_o, yacmemptr _args        ) {((_Minnie*)_o)->setDrawListExportOFS(_args.mem[0].o);}
sSI   YAC_CALL Minnie__IsEdgeAA     (void *_o                                ) {return (sSI)((_Minnie*)_o)->IsEdgeAA();}
sSI   YAC_CALL Minnie__IsVertexFix16(void *_o                                ) {return (sSI)((_Minnie*)_o)->IsVertexFix16();}
sSI   YAC_CALL Minnie__IsEdgeAAScaleFix16(void *_o                           ) {return (sSI)((_Minnie*)_o)->IsEdgeAAScaleFix16();}
void  YAC_CALL Minnie__apiBegin     (void *_o                                ) {((_Minnie*)_o)->apiBegin();}
void  YAC_CALL Minnie__apiEnd       (void *_o                                ) {((_Minnie*)_o)->apiEnd();}
void  YAC_CALL Minnie__apiSeg       (void *_o, yacmemptr _args               ) {((_Minnie*)_o)->apiSeg(_args.mem[0].si);}
void  YAC_CALL Minnie__apiMoveTo    (void *_o, yacmemptr _args               ) {((_Minnie*)_o)->apiMoveTo(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL Minnie__apiLineTo    (void *_o, yacmemptr _args               ) {((_Minnie*)_o)->apiLineTo(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL Minnie__apiCubicTo   (void *_o, yacmemptr _args               ) {((_Minnie*)_o)->apiCubicTo(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32);}
void  YAC_CALL Minnie__apiCubicMirrorTo(void *_o, yacmemptr _args            ) {((_Minnie*)_o)->apiCubicMirrorTo(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32);}
void  YAC_CALL Minnie__apiRect      (void *_o, yacmemptr _args               ) {((_Minnie*)_o)->apiRect(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL Minnie__apiRoundRect (void *_o, yacmemptr _args               ) {((_Minnie*)_o)->apiRoundRect(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32);}
void  YAC_CALL Minnie__apiEllipse   (void *_o, yacmemptr _args               ) {((_Minnie*)_o)->apiEllipse(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL Minnie__apiCircle    (void *_o, yacmemptr _args               ) {((_Minnie*)_o)->apiCircle(_args.mem[0].f32);}
sSI   YAC_CALL Minnie__apiBeginPathEx(void *_o, yacmemptr _args              ) {return (sSI)((_Minnie*)_o)->apiBeginPathEx(_args.mem[0].si);}
sSI   YAC_CALL Minnie__apiBeginPathConvex(void *_o                           ) {return (sSI)((_Minnie*)_o)->apiBeginPathConvex();}
sSI   YAC_CALL Minnie__apiBeginPathConcave(void *_o                          ) {return (sSI)((_Minnie*)_o)->apiBeginPathConcave();}
sSI   YAC_CALL Minnie__apiBeginPathHoles(void *_o                            ) {return (sSI)((_Minnie*)_o)->apiBeginPathHoles();}
sSI   YAC_CALL Minnie__apiBeginPathImmediate(void *_o                        ) {return (sSI)((_Minnie*)_o)->apiBeginPathImmediate();}
sSI   YAC_CALL Minnie__apiBeginPath (void *_o                                ) {return (sSI)((_Minnie*)_o)->apiBeginPath();}
void  YAC_CALL Minnie__apiEndPath   (void *_o, yacmemptr _args               ) {((_Minnie*)_o)->apiEndPath(_args.mem[0].si);}
void  YAC_CALL Minnie__apiEndPathOpen(void *_o                               ) {((_Minnie*)_o)->apiEndPathOpen();}
void  YAC_CALL Minnie__apiEndPathClosed(void *_o                             ) {((_Minnie*)_o)->apiEndPathClosed();}
sSI   YAC_CALL Minnie__apiBeginSubEx(void *_o, yacmemptr _args               ) {return (sSI)((_Minnie*)_o)->apiBeginSubEx(_args.mem[0].si);}
sSI   YAC_CALL Minnie__apiBeginSubConvex(void *_o                            ) {return (sSI)((_Minnie*)_o)->apiBeginSubConvex();}
sSI   YAC_CALL Minnie__apiBeginSubConcave(void *_o                           ) {return (sSI)((_Minnie*)_o)->apiBeginSubConcave();}
sSI   YAC_CALL Minnie__apiBeginSubHoles(void *_o                             ) {return (sSI)((_Minnie*)_o)->apiBeginSubHoles();}
sSI   YAC_CALL Minnie__apiBeginSub  (void *_o                                ) {return (sSI)((_Minnie*)_o)->apiBeginSub();}
void  YAC_CALL Minnie__apiEndSub    (void *_o, yacmemptr _args               ) {((_Minnie*)_o)->apiEndSub(_args.mem[0].si);}
void  YAC_CALL Minnie__apiEndSubOpen(void *_o                                ) {((_Minnie*)_o)->apiEndSubOpen();}
void  YAC_CALL Minnie__apiEndSubClosed(void *_o                              ) {((_Minnie*)_o)->apiEndSubClosed();}
void  YAC_CALL Minnie__apiStrokeWidth(void *_o, yacmemptr _args              ) {((_Minnie*)_o)->apiStrokeWidth(_args.mem[0].f32);}
void  YAC_CALL Minnie__apiMiterLimit(void *_o, yacmemptr _args               ) {((_Minnie*)_o)->apiMiterLimit(_args.mem[0].f32);}
void  YAC_CALL Minnie__apiFill      (void *_o                                ) {((_Minnie*)_o)->apiFill();}
void  YAC_CALL Minnie__apiColor     (void *_o, yacmemptr _args               ) {((_Minnie*)_o)->apiColor(_args.mem[0].si);}
void  YAC_CALL Minnie__apiJoinCap   (void *_o, yacmemptr _args               ) {((_Minnie*)_o)->apiJoinCap(_args.mem[0].si);}
void  YAC_CALL Minnie__apiJoin      (void *_o, yacmemptr _args               ) {((_Minnie*)_o)->apiJoin(_args.mem[0].si);}
void  YAC_CALL Minnie__apiJoinNone  (void *_o                                ) {((_Minnie*)_o)->apiJoinNone();}
void  YAC_CALL Minnie__apiJoinMiter (void *_o                                ) {((_Minnie*)_o)->apiJoinMiter();}
void  YAC_CALL Minnie__apiJoinRound (void *_o                                ) {((_Minnie*)_o)->apiJoinRound();}
void  YAC_CALL Minnie__apiJoinBevel (void *_o                                ) {((_Minnie*)_o)->apiJoinBevel();}
void  YAC_CALL Minnie__apiCap       (void *_o, yacmemptr _args               ) {((_Minnie*)_o)->apiCap(_args.mem[0].si);}
void  YAC_CALL Minnie__apiCapNone   (void *_o                                ) {((_Minnie*)_o)->apiCapNone();}
void  YAC_CALL Minnie__apiCapRound  (void *_o                                ) {((_Minnie*)_o)->apiCapRound();}
void  YAC_CALL Minnie__apiCapButt   (void *_o                                ) {((_Minnie*)_o)->apiCapButt();}
void  YAC_CALL Minnie__apiDrawPath  (void *_o, yacmemptr _args               ) {((_Minnie*)_o)->apiDrawPath(_args.mem[0].si);}
void  YAC_CALL Minnie__apiBindTexture(void *_o, yacmemptr _args              ) {((_Minnie*)_o)->apiBindTexture(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
void  YAC_CALL Minnie__apiUnbindTexture(void *_o                             ) {((_Minnie*)_o)->apiUnbindTexture();}
void  YAC_CALL Minnie__apiTextureDecalAlpha(void *_o, yacmemptr _args        ) {((_Minnie*)_o)->apiTextureDecalAlpha(_args.mem[0].f32);}
void  YAC_CALL Minnie__apiTriangleTexUVFlat(void *_o, yacmemptr _args        ) {((_Minnie*)_o)->apiTriangleTexUVFlat(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32, _args.mem[9].f32, _args.mem[10].f32, _args.mem[11].f32);}
void  YAC_CALL Minnie__apiTriangleTexUVFlatDecal(void *_o, yacmemptr _args   ) {((_Minnie*)_o)->apiTriangleTexUVFlatDecal(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32, _args.mem[9].f32, _args.mem[10].f32, _args.mem[11].f32);}
void  YAC_CALL Minnie__apiTriangleTexUVGouraud(void *_o, yacmemptr _args     ) {((_Minnie*)_o)->apiTriangleTexUVGouraud(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].si, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32, _args.mem[9].si, _args.mem[10].f32, _args.mem[11].f32, _args.mem[12].f32, _args.mem[13].f32, _args.mem[14].si);}
void  YAC_CALL Minnie__apiTriangleTexUVGouraudDecal(void *_o, yacmemptr _args) {((_Minnie*)_o)->apiTriangleTexUVGouraudDecal(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].si, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32, _args.mem[9].si, _args.mem[10].f32, _args.mem[11].f32, _args.mem[12].f32, _args.mem[13].f32, _args.mem[14].si);}
void  YAC_CALL Minnie__apiRectTexUVFlat(void *_o, yacmemptr _args            ) {((_Minnie*)_o)->apiRectTexUVFlat(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32);}
void  YAC_CALL Minnie__apiRectTexUVFlatDecal(void *_o, yacmemptr _args       ) {((_Minnie*)_o)->apiRectTexUVFlatDecal(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32);}
void  YAC_CALL Minnie__apiRectTexUVGouraud(void *_o, yacmemptr _args         ) {((_Minnie*)_o)->apiRectTexUVGouraud(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].si, _args.mem[9].si, _args.mem[10].si, _args.mem[11].si);}
void  YAC_CALL Minnie__apiRectTexUVGouraudDecal(void *_o, yacmemptr _args    ) {((_Minnie*)_o)->apiRectTexUVGouraudDecal(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].si, _args.mem[9].si, _args.mem[10].si, _args.mem[11].si);}
#endif // YAC_NO_HOST
