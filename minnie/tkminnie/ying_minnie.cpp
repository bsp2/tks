// ---- auto generated by YInG - the YAC interface generator (Sat, 27/Sep/2025 17:19:08)
#ifndef __YAC__minnie_h__
#define __YAC__minnie_h__

sUI                                          clid_MinnieDrawable;
YAC_Template <_MinnieDrawable>                 *t_MinnieDrawable;

void YAC_CALL YAC_Init_minnie(YAC_Host *_host) {
	// --------------------------------- classes ---------------------------------
	   t_MinnieDrawable           =new YAC_Template <_MinnieDrawable>(_host);
	clid_MinnieDrawable           =                t_MinnieDrawable->ctemplate.class_ID;
	// -------------------------------- functions --------------------------------
	static const sUI   minBegin_arg_types                         []={0,};
	static const sUI   minEnd_arg_types                           []={0,};
	static const sUI   minFreeDynamic_arg_types                   []={0,};
	static const sUI   __APIC__minSetStrokeScale_arg_types        []={2,};
	static const sUI   __APIC__minSetStrokeOffset_arg_types       []={2,};
	static const sUI   minGetWidth_arg_types                      []={0,};
	static const sUI   minGetHeight_arg_types                     []={0,};
	static const sUI   __APIC__minGetColorByIndex_arg_types       []={1,};
	static const sUI   __APIC__minSetFramebufferOverride_arg_types[]={1, 3, 1, 1, 1,};
	static const sUI   __APIC__minInitScratchBuffers_arg_types    []={3, 1, 1, 1, 1, 1,};
	static const sUI   __APIC__minParseBuffer_arg_types           []={3,};
	static const sUI   minDebugPrintAllocStats_arg_types          []={0,};
	static const sUI   minDebugPrintPathStats_arg_types           []={0,};
	static const sUI   minResetAllocStats_arg_types               []={0,};
	static const sUI   minGetTotalNumPoints_arg_types             []={0,};
	static const sUI   minGetTotalNumLines_arg_types              []={0,};
	static const sUI   minGetTotalNumLineStrips_arg_types         []={0,};
	static const sUI   minGetTotalNumTris_arg_types               []={0,};
	static const sUI   minGetTotalNumTrisTex_arg_types            []={0,};
	static const sUI   minGetTotalNumRects_arg_types              []={0,};
	static const sUI   minGetTotalNumEllipses_arg_types           []={0,};
	static const sUI   __APIC__minSetEnableDraw_arg_types         []={1,};
	static const sUI   __APIC__minSetEnableDrawSW_arg_types       []={1,};
	static const sUI   __APIC__minSetEnableRenderStrokes_arg_types[]={1,};
	static const sUI   minGetEnableRenderStrokes_arg_types        []={0,};
	static const sUI   __APIC__minSetEnableRenderJoinCap_arg_types[]={1,};
	static const sUI   minGetEnableRenderJoinCap_arg_types        []={0,};
	static const sUI   __APIC__minSetEnableRenderFillConcave_arg_types[]={1,};
	static const sUI   minGetEnableRenderFillConcave_arg_types    []={0,};
	static const sUI   __APIC__minSetEnableRenderFillEvenOdd_arg_types[]={1,};
	static const sUI   minGetEnableRenderFillEvenOdd_arg_types    []={0,};
	static const sUI   __APIC__minSetEnableEdgeAA_arg_types       []={1,};
	static const sUI   minGetEnableEdgeAA_arg_types               []={0,};
	static const sUI   __APIC__minSetEnableTesselateConcave_arg_types[]={1,};
	static const sUI   minGetEnableTesselateConcave_arg_types     []={0,};
	static const sUI   __APIC__minSetSwTesselateSizeThreshold_arg_types[]={1,};
	static const sUI   minGetSwTesselateSizeThreshold_arg_types   []={0,};
	static const sUI   __APIC__minSetEnableForceConcaveEvenOdd_arg_types[]={1,};
	static const sUI   minGetEnableForceConcaveEvenOdd_arg_types  []={0,};
	static const sUI   __APIC__minSetEnableUniformColors_arg_types[]={1,};
	static const sUI   minGetEnableUniformColors_arg_types        []={0,};
	static const sUI   __APIC__minSetStrokeWLineStripThreshold_arg_types[]={2,};
	static const sUI   minGetStrokeWLineStripThreshold_arg_types  []={0,};
	static const sUI   __APIC__minSetStrokeWLineJoinThreshold_arg_types[]={2,};
	static const sUI   __APIC__minSetVertexBufferExportOFS_arg_types[]={3,};
	static const sUI   __APIC__minSetDrawListExportOFS_arg_types  []={3,};
	static const sUI   minIsEdgeAA_arg_types                      []={0,};
	static const sUI   minIsVertexFix16_arg_types                 []={0,};
	static const sUI   minIsEdgeAAScaleFix16_arg_types            []={0,};
	static const sUI   __APIC__minSeg_arg_types                   []={1,};
	static const sUI   __APIC__minMoveTo_arg_types                []={2, 2,};
	static const sUI   __APIC__minLineTo_arg_types                []={2, 2,};
	static const sUI   __APIC__minCubicTo_arg_types               []={2, 2, 2, 2, 2, 2,};
	static const sUI   __APIC__minCubicMirrorTo_arg_types         []={2, 2, 2, 2,};
	static const sUI   __APIC__minArcTo_arg_types                 []={2, 2, 2, 1, 1, 2, 2,};
	static const sUI   __APIC__minRect_arg_types                  []={2, 2,};
	static const sUI   __APIC__minRoundRect_arg_types             []={2, 2, 2, 2,};
	static const sUI   __APIC__minEllipse_arg_types               []={2, 2,};
	static const sUI   __APIC__minCircle_arg_types                []={2,};
	static const sUI   __APIC__minBeginPathEx_arg_types           []={1,};
	static const sUI   minBeginPath_arg_types                     []={0,};
	static const sUI   minBeginPathConvex_arg_types               []={0,};
	static const sUI   minBeginPathConcave_arg_types              []={0,};
	static const sUI   minBeginPathEvenOdd_arg_types              []={0,};
	static const sUI   minBeginImmediate_arg_types                []={0,};
	static const sUI   minEndImmediate_arg_types                  []={0,};
	static const sUI   __APIC__minEndPath_arg_types               []={1,};
	static const sUI   minEndPathOpen_arg_types                   []={0,};
	static const sUI   minEndPathClosed_arg_types                 []={0,};
	static const sUI   __APIC__minBeginSubEx_arg_types            []={1,};
	static const sUI   minBeginSub_arg_types                      []={0,};
	static const sUI   minBeginSubConvex_arg_types                []={0,};
	static const sUI   minBeginSubConcave_arg_types               []={0,};
	static const sUI   minBeginSubEvenOdd_arg_types               []={0,};
	static const sUI   __APIC__minEndSub_arg_types                []={1,};
	static const sUI   minEndSubOpen_arg_types                    []={0,};
	static const sUI   minEndSubClosed_arg_types                  []={0,};
	static const sUI   __APIC__minStrokeWidth_arg_types           []={2,};
	static const sUI   minFill_arg_types                          []={0,};
	static const sUI   __APIC__minMiterLimit_arg_types            []={2,};
	static const sUI   __APIC__minColor_arg_types                 []={1,};
	static const sUI   __APIC__minJoinCap_arg_types               []={1,};
	static const sUI   __APIC__minJoin_arg_types                  []={1,};
	static const sUI   minJoinNone_arg_types                      []={0,};
	static const sUI   minJoinMiter_arg_types                     []={0,};
	static const sUI   minJoinRound_arg_types                     []={0,};
	static const sUI   minJoinBevel_arg_types                     []={0,};
	static const sUI   __APIC__minCap_arg_types                   []={1,};
	static const sUI   minCapNone_arg_types                       []={0,};
	static const sUI   minCapRound_arg_types                      []={0,};
	static const sUI   minCapButt_arg_types                       []={0,};
	static const sUI   __APIC__minDrawPath_arg_types              []={1,};
	static const sUI   __APIC__minBindTexture_arg_types           []={1, 1, 1,};
	static const sUI   minUnbindTexture_arg_types                 []={0,};
	static const sUI   __APIC__minTextureDecalAlpha_arg_types     []={2,};
	static const sUI   __APIC__minTriangleTexUVFlat_arg_types     []={2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,};
	static const sUI   __APIC__minTriangleTexUVFlatDecal_arg_types[]={2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,};
	static const sUI   __APIC__minTriangleTexUVGouraud_arg_types  []={2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1,};
	static const sUI   __APIC__minTriangleTexUVGouraudDecal_arg_types[]={2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1,};
	static const sUI   __APIC__minRectTexUVFlat_arg_types         []={2, 2, 2, 2, 2, 2, 2, 2,};
	static const sUI   __APIC__minRectTexUVFlatDecal_arg_types    []={2, 2, 2, 2, 2, 2, 2, 2,};
	static const sUI   __APIC__minRectTexUVGouraud_arg_types      []={2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,};
	static const sUI   __APIC__minRectTexUVGouraudDecal_arg_types []={2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1,};
	static const char *minBegin_arg_otypes                        []={0,};
	static const char *minEnd_arg_otypes                          []={0,};
	static const char *minFreeDynamic_arg_otypes                  []={0,};
	static const char *__APIC__minSetStrokeScale_arg_otypes       []={"",};
	static const char *__APIC__minSetStrokeOffset_arg_otypes      []={"",};
	static const char *minGetWidth_arg_otypes                     []={0,};
	static const char *minGetHeight_arg_otypes                    []={0,};
	static const char *__APIC__minGetColorByIndex_arg_otypes      []={"",};
	static const char *__APIC__minSetFramebufferOverride_arg_otypes[]={"", "", "", "", "",};
	static const char *__APIC__minInitScratchBuffers_arg_otypes   []={"", "", "", "", "", "",};
	static const char *__APIC__minParseBuffer_arg_otypes          []={"",};
	static const char *minDebugPrintAllocStats_arg_otypes         []={0,};
	static const char *minDebugPrintPathStats_arg_otypes          []={0,};
	static const char *minResetAllocStats_arg_otypes              []={0,};
	static const char *minGetTotalNumPoints_arg_otypes            []={0,};
	static const char *minGetTotalNumLines_arg_otypes             []={0,};
	static const char *minGetTotalNumLineStrips_arg_otypes        []={0,};
	static const char *minGetTotalNumTris_arg_otypes              []={0,};
	static const char *minGetTotalNumTrisTex_arg_otypes           []={0,};
	static const char *minGetTotalNumRects_arg_otypes             []={0,};
	static const char *minGetTotalNumEllipses_arg_otypes          []={0,};
	static const char *__APIC__minSetEnableDraw_arg_otypes        []={"",};
	static const char *__APIC__minSetEnableDrawSW_arg_otypes      []={"",};
	static const char *__APIC__minSetEnableRenderStrokes_arg_otypes[]={"",};
	static const char *minGetEnableRenderStrokes_arg_otypes       []={0,};
	static const char *__APIC__minSetEnableRenderJoinCap_arg_otypes[]={"",};
	static const char *minGetEnableRenderJoinCap_arg_otypes       []={0,};
	static const char *__APIC__minSetEnableRenderFillConcave_arg_otypes[]={"",};
	static const char *minGetEnableRenderFillConcave_arg_otypes   []={0,};
	static const char *__APIC__minSetEnableRenderFillEvenOdd_arg_otypes[]={"",};
	static const char *minGetEnableRenderFillEvenOdd_arg_otypes   []={0,};
	static const char *__APIC__minSetEnableEdgeAA_arg_otypes      []={"",};
	static const char *minGetEnableEdgeAA_arg_otypes              []={0,};
	static const char *__APIC__minSetEnableTesselateConcave_arg_otypes[]={"",};
	static const char *minGetEnableTesselateConcave_arg_otypes    []={0,};
	static const char *__APIC__minSetSwTesselateSizeThreshold_arg_otypes[]={"",};
	static const char *minGetSwTesselateSizeThreshold_arg_otypes  []={0,};
	static const char *__APIC__minSetEnableForceConcaveEvenOdd_arg_otypes[]={"",};
	static const char *minGetEnableForceConcaveEvenOdd_arg_otypes []={0,};
	static const char *__APIC__minSetEnableUniformColors_arg_otypes[]={"",};
	static const char *minGetEnableUniformColors_arg_otypes       []={0,};
	static const char *__APIC__minSetStrokeWLineStripThreshold_arg_otypes[]={"",};
	static const char *minGetStrokeWLineStripThreshold_arg_otypes []={0,};
	static const char *__APIC__minSetStrokeWLineJoinThreshold_arg_otypes[]={"",};
	static const char *__APIC__minSetVertexBufferExportOFS_arg_otypes[]={"",};
	static const char *__APIC__minSetDrawListExportOFS_arg_otypes []={"",};
	static const char *minIsEdgeAA_arg_otypes                     []={0,};
	static const char *minIsVertexFix16_arg_otypes                []={0,};
	static const char *minIsEdgeAAScaleFix16_arg_otypes           []={0,};
	static const char *__APIC__minSeg_arg_otypes                  []={"",};
	static const char *__APIC__minMoveTo_arg_otypes               []={"", "",};
	static const char *__APIC__minLineTo_arg_otypes               []={"", "",};
	static const char *__APIC__minCubicTo_arg_otypes              []={"", "", "", "", "", "",};
	static const char *__APIC__minCubicMirrorTo_arg_otypes        []={"", "", "", "",};
	static const char *__APIC__minArcTo_arg_otypes                []={"", "", "", "", "", "", "",};
	static const char *__APIC__minRect_arg_otypes                 []={"", "",};
	static const char *__APIC__minRoundRect_arg_otypes            []={"", "", "", "",};
	static const char *__APIC__minEllipse_arg_otypes              []={"", "",};
	static const char *__APIC__minCircle_arg_otypes               []={"",};
	static const char *__APIC__minBeginPathEx_arg_otypes          []={"",};
	static const char *minBeginPath_arg_otypes                    []={0,};
	static const char *minBeginPathConvex_arg_otypes              []={0,};
	static const char *minBeginPathConcave_arg_otypes             []={0,};
	static const char *minBeginPathEvenOdd_arg_otypes             []={0,};
	static const char *minBeginImmediate_arg_otypes               []={0,};
	static const char *minEndImmediate_arg_otypes                 []={0,};
	static const char *__APIC__minEndPath_arg_otypes              []={"",};
	static const char *minEndPathOpen_arg_otypes                  []={0,};
	static const char *minEndPathClosed_arg_otypes                []={0,};
	static const char *__APIC__minBeginSubEx_arg_otypes           []={"",};
	static const char *minBeginSub_arg_otypes                     []={0,};
	static const char *minBeginSubConvex_arg_otypes               []={0,};
	static const char *minBeginSubConcave_arg_otypes              []={0,};
	static const char *minBeginSubEvenOdd_arg_otypes              []={0,};
	static const char *__APIC__minEndSub_arg_otypes               []={"",};
	static const char *minEndSubOpen_arg_otypes                   []={0,};
	static const char *minEndSubClosed_arg_otypes                 []={0,};
	static const char *__APIC__minStrokeWidth_arg_otypes          []={"",};
	static const char *minFill_arg_otypes                         []={0,};
	static const char *__APIC__minMiterLimit_arg_otypes           []={"",};
	static const char *__APIC__minColor_arg_otypes                []={"",};
	static const char *__APIC__minJoinCap_arg_otypes              []={"",};
	static const char *__APIC__minJoin_arg_otypes                 []={"",};
	static const char *minJoinNone_arg_otypes                     []={0,};
	static const char *minJoinMiter_arg_otypes                    []={0,};
	static const char *minJoinRound_arg_otypes                    []={0,};
	static const char *minJoinBevel_arg_otypes                    []={0,};
	static const char *__APIC__minCap_arg_otypes                  []={"",};
	static const char *minCapNone_arg_otypes                      []={0,};
	static const char *minCapRound_arg_otypes                     []={0,};
	static const char *minCapButt_arg_otypes                      []={0,};
	static const char *__APIC__minDrawPath_arg_otypes             []={"",};
	static const char *__APIC__minBindTexture_arg_otypes          []={"", "", "",};
	static const char *minUnbindTexture_arg_otypes                []={0,};
	static const char *__APIC__minTextureDecalAlpha_arg_otypes    []={"",};
	static const char *__APIC__minTriangleTexUVFlat_arg_otypes    []={"", "", "", "", "", "", "", "", "", "", "", "",};
	static const char *__APIC__minTriangleTexUVFlatDecal_arg_otypes[]={"", "", "", "", "", "", "", "", "", "", "", "",};
	static const char *__APIC__minTriangleTexUVGouraud_arg_otypes []={"", "", "", "", "", "", "", "", "", "", "", "", "", "", "",};
	static const char *__APIC__minTriangleTexUVGouraudDecal_arg_otypes[]={"", "", "", "", "", "", "", "", "", "", "", "", "", "", "",};
	static const char *__APIC__minRectTexUVFlat_arg_otypes        []={"", "", "", "", "", "", "", "",};
	static const char *__APIC__minRectTexUVFlatDecal_arg_otypes   []={"", "", "", "", "", "", "", "",};
	static const char *__APIC__minRectTexUVGouraud_arg_otypes     []={"", "", "", "", "", "", "", "", "", "", "", "",};
	static const char *__APIC__minRectTexUVGouraudDecal_arg_otypes[]={"", "", "", "", "", "", "", "", "", "", "", "",};
	_host->yacRegisterFunction((void*)minBegin, "minBegin", 0, "", 0, minBegin_arg_types, minBegin_arg_otypes, 8);
	_host->yacRegisterFunction((void*)minEnd, "minEnd", 0, "", 0, minEnd_arg_types, minEnd_arg_otypes, 8);
	_host->yacRegisterFunction((void*)minFreeDynamic, "minFreeDynamic", 0, "", 0, minFreeDynamic_arg_types, minFreeDynamic_arg_otypes, 8);
	_host->yacRegisterFunction((void*)__APIC__minSetStrokeScale, "minSetStrokeScale", 0, "", 1, __APIC__minSetStrokeScale_arg_types, __APIC__minSetStrokeScale_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minSetStrokeOffset, "minSetStrokeOffset", 0, "", 1, __APIC__minSetStrokeOffset_arg_types, __APIC__minSetStrokeOffset_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minGetWidth, "minGetWidth", 1, "", 0, minGetWidth_arg_types, minGetWidth_arg_otypes, 9);
	_host->yacRegisterFunction((void*)minGetHeight, "minGetHeight", 1, "", 0, minGetHeight_arg_types, minGetHeight_arg_otypes, 9);
	_host->yacRegisterFunction((void*)__APIC__minGetColorByIndex, "minGetColorByIndex", 1, "", 1, __APIC__minGetColorByIndex_arg_types, __APIC__minGetColorByIndex_arg_otypes, 1);
	_host->yacRegisterFunction((void*)__APIC__minSetFramebufferOverride, "minSetFramebufferOverride", 1, "", 5, __APIC__minSetFramebufferOverride_arg_types, __APIC__minSetFramebufferOverride_arg_otypes, 1);
	_host->yacRegisterFunction((void*)__APIC__minInitScratchBuffers, "minInitScratchBuffers", 1, "", 6, __APIC__minInitScratchBuffers_arg_types, __APIC__minInitScratchBuffers_arg_otypes, 1);
	_host->yacRegisterFunction((void*)__APIC__minParseBuffer, "minParseBuffer", 1, "", 1, __APIC__minParseBuffer_arg_types, __APIC__minParseBuffer_arg_otypes, 1);
	_host->yacRegisterFunction((void*)minDebugPrintAllocStats, "minDebugPrintAllocStats", 0, "", 0, minDebugPrintAllocStats_arg_types, minDebugPrintAllocStats_arg_otypes, 8);
	_host->yacRegisterFunction((void*)minDebugPrintPathStats, "minDebugPrintPathStats", 0, "", 0, minDebugPrintPathStats_arg_types, minDebugPrintPathStats_arg_otypes, 8);
	_host->yacRegisterFunction((void*)minResetAllocStats, "minResetAllocStats", 0, "", 0, minResetAllocStats_arg_types, minResetAllocStats_arg_otypes, 8);
	_host->yacRegisterFunction((void*)minGetTotalNumPoints, "minGetTotalNumPoints", 1, "", 0, minGetTotalNumPoints_arg_types, minGetTotalNumPoints_arg_otypes, 9);
	_host->yacRegisterFunction((void*)minGetTotalNumLines, "minGetTotalNumLines", 1, "", 0, minGetTotalNumLines_arg_types, minGetTotalNumLines_arg_otypes, 9);
	_host->yacRegisterFunction((void*)minGetTotalNumLineStrips, "minGetTotalNumLineStrips", 1, "", 0, minGetTotalNumLineStrips_arg_types, minGetTotalNumLineStrips_arg_otypes, 9);
	_host->yacRegisterFunction((void*)minGetTotalNumTris, "minGetTotalNumTris", 1, "", 0, minGetTotalNumTris_arg_types, minGetTotalNumTris_arg_otypes, 9);
	_host->yacRegisterFunction((void*)minGetTotalNumTrisTex, "minGetTotalNumTrisTex", 1, "", 0, minGetTotalNumTrisTex_arg_types, minGetTotalNumTrisTex_arg_otypes, 9);
	_host->yacRegisterFunction((void*)minGetTotalNumRects, "minGetTotalNumRects", 1, "", 0, minGetTotalNumRects_arg_types, minGetTotalNumRects_arg_otypes, 9);
	_host->yacRegisterFunction((void*)minGetTotalNumEllipses, "minGetTotalNumEllipses", 1, "", 0, minGetTotalNumEllipses_arg_types, minGetTotalNumEllipses_arg_otypes, 9);
	_host->yacRegisterFunction((void*)__APIC__minSetEnableDraw, "minSetEnableDraw", 0, "", 1, __APIC__minSetEnableDraw_arg_types, __APIC__minSetEnableDraw_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minSetEnableDrawSW, "minSetEnableDrawSW", 0, "", 1, __APIC__minSetEnableDrawSW_arg_types, __APIC__minSetEnableDrawSW_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minSetEnableRenderStrokes, "minSetEnableRenderStrokes", 0, "", 1, __APIC__minSetEnableRenderStrokes_arg_types, __APIC__minSetEnableRenderStrokes_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minGetEnableRenderStrokes, "minGetEnableRenderStrokes", 1, "", 0, minGetEnableRenderStrokes_arg_types, minGetEnableRenderStrokes_arg_otypes, 9);
	_host->yacRegisterFunction((void*)__APIC__minSetEnableRenderJoinCap, "minSetEnableRenderJoinCap", 0, "", 1, __APIC__minSetEnableRenderJoinCap_arg_types, __APIC__minSetEnableRenderJoinCap_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minGetEnableRenderJoinCap, "minGetEnableRenderJoinCap", 1, "", 0, minGetEnableRenderJoinCap_arg_types, minGetEnableRenderJoinCap_arg_otypes, 9);
	_host->yacRegisterFunction((void*)__APIC__minSetEnableRenderFillConcave, "minSetEnableRenderFillConcave", 0, "", 1, __APIC__minSetEnableRenderFillConcave_arg_types, __APIC__minSetEnableRenderFillConcave_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minGetEnableRenderFillConcave, "minGetEnableRenderFillConcave", 1, "", 0, minGetEnableRenderFillConcave_arg_types, minGetEnableRenderFillConcave_arg_otypes, 9);
	_host->yacRegisterFunction((void*)__APIC__minSetEnableRenderFillEvenOdd, "minSetEnableRenderFillEvenOdd", 0, "", 1, __APIC__minSetEnableRenderFillEvenOdd_arg_types, __APIC__minSetEnableRenderFillEvenOdd_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minGetEnableRenderFillEvenOdd, "minGetEnableRenderFillEvenOdd", 1, "", 0, minGetEnableRenderFillEvenOdd_arg_types, minGetEnableRenderFillEvenOdd_arg_otypes, 9);
	_host->yacRegisterFunction((void*)__APIC__minSetEnableEdgeAA, "minSetEnableEdgeAA", 0, "", 1, __APIC__minSetEnableEdgeAA_arg_types, __APIC__minSetEnableEdgeAA_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minGetEnableEdgeAA, "minGetEnableEdgeAA", 1, "", 0, minGetEnableEdgeAA_arg_types, minGetEnableEdgeAA_arg_otypes, 9);
	_host->yacRegisterFunction((void*)__APIC__minSetEnableTesselateConcave, "minSetEnableTesselateConcave", 0, "", 1, __APIC__minSetEnableTesselateConcave_arg_types, __APIC__minSetEnableTesselateConcave_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minGetEnableTesselateConcave, "minGetEnableTesselateConcave", 1, "", 0, minGetEnableTesselateConcave_arg_types, minGetEnableTesselateConcave_arg_otypes, 9);
	_host->yacRegisterFunction((void*)__APIC__minSetSwTesselateSizeThreshold, "minSetSwTesselateSizeThreshold", 0, "", 1, __APIC__minSetSwTesselateSizeThreshold_arg_types, __APIC__minSetSwTesselateSizeThreshold_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minGetSwTesselateSizeThreshold, "minGetSwTesselateSizeThreshold", 1, "", 0, minGetSwTesselateSizeThreshold_arg_types, minGetSwTesselateSizeThreshold_arg_otypes, 9);
	_host->yacRegisterFunction((void*)__APIC__minSetEnableForceConcaveEvenOdd, "minSetEnableForceConcaveEvenOdd", 0, "", 1, __APIC__minSetEnableForceConcaveEvenOdd_arg_types, __APIC__minSetEnableForceConcaveEvenOdd_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minGetEnableForceConcaveEvenOdd, "minGetEnableForceConcaveEvenOdd", 1, "", 0, minGetEnableForceConcaveEvenOdd_arg_types, minGetEnableForceConcaveEvenOdd_arg_otypes, 9);
	_host->yacRegisterFunction((void*)__APIC__minSetEnableUniformColors, "minSetEnableUniformColors", 0, "", 1, __APIC__minSetEnableUniformColors_arg_types, __APIC__minSetEnableUniformColors_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minGetEnableUniformColors, "minGetEnableUniformColors", 1, "", 0, minGetEnableUniformColors_arg_types, minGetEnableUniformColors_arg_otypes, 9);
	_host->yacRegisterFunction((void*)__APIC__minSetStrokeWLineStripThreshold, "minSetStrokeWLineStripThreshold", 0, "", 1, __APIC__minSetStrokeWLineStripThreshold_arg_types, __APIC__minSetStrokeWLineStripThreshold_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minGetStrokeWLineStripThreshold, "minGetStrokeWLineStripThreshold", 2, "", 0, minGetStrokeWLineStripThreshold_arg_types, minGetStrokeWLineStripThreshold_arg_otypes, 10);
	_host->yacRegisterFunction((void*)__APIC__minSetStrokeWLineJoinThreshold, "minSetStrokeWLineJoinThreshold", 0, "", 1, __APIC__minSetStrokeWLineJoinThreshold_arg_types, __APIC__minSetStrokeWLineJoinThreshold_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minSetVertexBufferExportOFS, "minSetVertexBufferExportOFS", 0, "", 1, __APIC__minSetVertexBufferExportOFS_arg_types, __APIC__minSetVertexBufferExportOFS_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minSetDrawListExportOFS, "minSetDrawListExportOFS", 0, "", 1, __APIC__minSetDrawListExportOFS_arg_types, __APIC__minSetDrawListExportOFS_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minIsEdgeAA, "minIsEdgeAA", 1, "", 0, minIsEdgeAA_arg_types, minIsEdgeAA_arg_otypes, 9);
	_host->yacRegisterFunction((void*)minIsVertexFix16, "minIsVertexFix16", 1, "", 0, minIsVertexFix16_arg_types, minIsVertexFix16_arg_otypes, 9);
	_host->yacRegisterFunction((void*)minIsEdgeAAScaleFix16, "minIsEdgeAAScaleFix16", 1, "", 0, minIsEdgeAAScaleFix16_arg_types, minIsEdgeAAScaleFix16_arg_otypes, 9);
	_host->yacRegisterFunction((void*)__APIC__minSeg, "minSeg", 0, "", 1, __APIC__minSeg_arg_types, __APIC__minSeg_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minMoveTo, "minMoveTo", 0, "", 2, __APIC__minMoveTo_arg_types, __APIC__minMoveTo_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minLineTo, "minLineTo", 0, "", 2, __APIC__minLineTo_arg_types, __APIC__minLineTo_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minCubicTo, "minCubicTo", 0, "", 6, __APIC__minCubicTo_arg_types, __APIC__minCubicTo_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minCubicMirrorTo, "minCubicMirrorTo", 0, "", 4, __APIC__minCubicMirrorTo_arg_types, __APIC__minCubicMirrorTo_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minArcTo, "minArcTo", 0, "", 7, __APIC__minArcTo_arg_types, __APIC__minArcTo_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minRect, "minRect", 0, "", 2, __APIC__minRect_arg_types, __APIC__minRect_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minRoundRect, "minRoundRect", 0, "", 4, __APIC__minRoundRect_arg_types, __APIC__minRoundRect_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minEllipse, "minEllipse", 0, "", 2, __APIC__minEllipse_arg_types, __APIC__minEllipse_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minCircle, "minCircle", 0, "", 1, __APIC__minCircle_arg_types, __APIC__minCircle_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minBeginPathEx, "minBeginPathEx", 1, "", 1, __APIC__minBeginPathEx_arg_types, __APIC__minBeginPathEx_arg_otypes, 1);
	_host->yacRegisterFunction((void*)minBeginPath, "minBeginPath", 1, "", 0, minBeginPath_arg_types, minBeginPath_arg_otypes, 9);
	_host->yacRegisterFunction((void*)minBeginPathConvex, "minBeginPathConvex", 1, "", 0, minBeginPathConvex_arg_types, minBeginPathConvex_arg_otypes, 9);
	_host->yacRegisterFunction((void*)minBeginPathConcave, "minBeginPathConcave", 1, "", 0, minBeginPathConcave_arg_types, minBeginPathConcave_arg_otypes, 9);
	_host->yacRegisterFunction((void*)minBeginPathEvenOdd, "minBeginPathEvenOdd", 1, "", 0, minBeginPathEvenOdd_arg_types, minBeginPathEvenOdd_arg_otypes, 9);
	_host->yacRegisterFunction((void*)minBeginImmediate, "minBeginImmediate", 0, "", 0, minBeginImmediate_arg_types, minBeginImmediate_arg_otypes, 8);
	_host->yacRegisterFunction((void*)minEndImmediate, "minEndImmediate", 0, "", 0, minEndImmediate_arg_types, minEndImmediate_arg_otypes, 8);
	_host->yacRegisterFunction((void*)__APIC__minEndPath, "minEndPath", 0, "", 1, __APIC__minEndPath_arg_types, __APIC__minEndPath_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minEndPathOpen, "minEndPathOpen", 0, "", 0, minEndPathOpen_arg_types, minEndPathOpen_arg_otypes, 8);
	_host->yacRegisterFunction((void*)minEndPathClosed, "minEndPathClosed", 0, "", 0, minEndPathClosed_arg_types, minEndPathClosed_arg_otypes, 8);
	_host->yacRegisterFunction((void*)__APIC__minBeginSubEx, "minBeginSubEx", 1, "", 1, __APIC__minBeginSubEx_arg_types, __APIC__minBeginSubEx_arg_otypes, 1);
	_host->yacRegisterFunction((void*)minBeginSub, "minBeginSub", 1, "", 0, minBeginSub_arg_types, minBeginSub_arg_otypes, 9);
	_host->yacRegisterFunction((void*)minBeginSubConvex, "minBeginSubConvex", 1, "", 0, minBeginSubConvex_arg_types, minBeginSubConvex_arg_otypes, 9);
	_host->yacRegisterFunction((void*)minBeginSubConcave, "minBeginSubConcave", 1, "", 0, minBeginSubConcave_arg_types, minBeginSubConcave_arg_otypes, 9);
	_host->yacRegisterFunction((void*)minBeginSubEvenOdd, "minBeginSubEvenOdd", 1, "", 0, minBeginSubEvenOdd_arg_types, minBeginSubEvenOdd_arg_otypes, 9);
	_host->yacRegisterFunction((void*)__APIC__minEndSub, "minEndSub", 0, "", 1, __APIC__minEndSub_arg_types, __APIC__minEndSub_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minEndSubOpen, "minEndSubOpen", 0, "", 0, minEndSubOpen_arg_types, minEndSubOpen_arg_otypes, 8);
	_host->yacRegisterFunction((void*)minEndSubClosed, "minEndSubClosed", 0, "", 0, minEndSubClosed_arg_types, minEndSubClosed_arg_otypes, 8);
	_host->yacRegisterFunction((void*)__APIC__minStrokeWidth, "minStrokeWidth", 0, "", 1, __APIC__minStrokeWidth_arg_types, __APIC__minStrokeWidth_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minFill, "minFill", 0, "", 0, minFill_arg_types, minFill_arg_otypes, 8);
	_host->yacRegisterFunction((void*)__APIC__minMiterLimit, "minMiterLimit", 0, "", 1, __APIC__minMiterLimit_arg_types, __APIC__minMiterLimit_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minColor, "minColor", 0, "", 1, __APIC__minColor_arg_types, __APIC__minColor_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minJoinCap, "minJoinCap", 0, "", 1, __APIC__minJoinCap_arg_types, __APIC__minJoinCap_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minJoin, "minJoin", 0, "", 1, __APIC__minJoin_arg_types, __APIC__minJoin_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minJoinNone, "minJoinNone", 0, "", 0, minJoinNone_arg_types, minJoinNone_arg_otypes, 8);
	_host->yacRegisterFunction((void*)minJoinMiter, "minJoinMiter", 0, "", 0, minJoinMiter_arg_types, minJoinMiter_arg_otypes, 8);
	_host->yacRegisterFunction((void*)minJoinRound, "minJoinRound", 0, "", 0, minJoinRound_arg_types, minJoinRound_arg_otypes, 8);
	_host->yacRegisterFunction((void*)minJoinBevel, "minJoinBevel", 0, "", 0, minJoinBevel_arg_types, minJoinBevel_arg_otypes, 8);
	_host->yacRegisterFunction((void*)__APIC__minCap, "minCap", 0, "", 1, __APIC__minCap_arg_types, __APIC__minCap_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minCapNone, "minCapNone", 0, "", 0, minCapNone_arg_types, minCapNone_arg_otypes, 8);
	_host->yacRegisterFunction((void*)minCapRound, "minCapRound", 0, "", 0, minCapRound_arg_types, minCapRound_arg_otypes, 8);
	_host->yacRegisterFunction((void*)minCapButt, "minCapButt", 0, "", 0, minCapButt_arg_types, minCapButt_arg_otypes, 8);
	_host->yacRegisterFunction((void*)__APIC__minDrawPath, "minDrawPath", 0, "", 1, __APIC__minDrawPath_arg_types, __APIC__minDrawPath_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minBindTexture, "minBindTexture", 0, "", 3, __APIC__minBindTexture_arg_types, __APIC__minBindTexture_arg_otypes, 0);
	_host->yacRegisterFunction((void*)minUnbindTexture, "minUnbindTexture", 0, "", 0, minUnbindTexture_arg_types, minUnbindTexture_arg_otypes, 8);
	_host->yacRegisterFunction((void*)__APIC__minTextureDecalAlpha, "minTextureDecalAlpha", 0, "", 1, __APIC__minTextureDecalAlpha_arg_types, __APIC__minTextureDecalAlpha_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minTriangleTexUVFlat, "minTriangleTexUVFlat", 0, "", 12, __APIC__minTriangleTexUVFlat_arg_types, __APIC__minTriangleTexUVFlat_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minTriangleTexUVFlatDecal, "minTriangleTexUVFlatDecal", 0, "", 12, __APIC__minTriangleTexUVFlatDecal_arg_types, __APIC__minTriangleTexUVFlatDecal_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minTriangleTexUVGouraud, "minTriangleTexUVGouraud", 0, "", 15, __APIC__minTriangleTexUVGouraud_arg_types, __APIC__minTriangleTexUVGouraud_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minTriangleTexUVGouraudDecal, "minTriangleTexUVGouraudDecal", 0, "", 15, __APIC__minTriangleTexUVGouraudDecal_arg_types, __APIC__minTriangleTexUVGouraudDecal_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minRectTexUVFlat, "minRectTexUVFlat", 0, "", 8, __APIC__minRectTexUVFlat_arg_types, __APIC__minRectTexUVFlat_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minRectTexUVFlatDecal, "minRectTexUVFlatDecal", 0, "", 8, __APIC__minRectTexUVFlatDecal_arg_types, __APIC__minRectTexUVFlatDecal_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minRectTexUVGouraud, "minRectTexUVGouraud", 0, "", 12, __APIC__minRectTexUVGouraud_arg_types, __APIC__minRectTexUVGouraud_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC__minRectTexUVGouraudDecal, "minRectTexUVGouraudDecal", 0, "", 12, __APIC__minRectTexUVGouraudDecal_arg_types, __APIC__minRectTexUVGouraudDecal_arg_otypes, 0);

}
void  YAC_CALL __APIC__minSetStrokeScale(yacmemptr _args                     ) {minSetStrokeScale(_args.mem[0].f32);}
void  YAC_CALL __APIC__minSetStrokeOffset(yacmemptr _args                    ) {minSetStrokeOffset(_args.mem[0].f32);}
sSI   YAC_CALL __APIC__minGetColorByIndex(yacmemptr _args                    ) {return (sSI)minGetColorByIndex(_args.mem[0].si);}
sSI   YAC_CALL __APIC__minSetFramebufferOverride(yacmemptr _args             ) {return (sSI)minSetFramebufferOverride(_args.mem[0].si, _args.mem[1].o, _args.mem[2].si, _args.mem[3].si, _args.mem[4].si);}
sSI   YAC_CALL __APIC__minInitScratchBuffers(yacmemptr _args                 ) {return (sSI)minInitScratchBuffers(_args.mem[0].o, _args.mem[1].si, _args.mem[2].si, _args.mem[3].si, _args.mem[4].si, _args.mem[5].si);}
sSI   YAC_CALL __APIC__minParseBuffer(yacmemptr _args                        ) {return (sSI)minParseBuffer(_args.mem[0].o);}
void  YAC_CALL __APIC__minSetEnableDraw(yacmemptr _args                      ) {minSetEnableDraw(_args.mem[0].si);}
void  YAC_CALL __APIC__minSetEnableDrawSW(yacmemptr _args                    ) {minSetEnableDrawSW(_args.mem[0].si);}
void  YAC_CALL __APIC__minSetEnableRenderStrokes(yacmemptr _args             ) {minSetEnableRenderStrokes(_args.mem[0].si);}
void  YAC_CALL __APIC__minSetEnableRenderJoinCap(yacmemptr _args             ) {minSetEnableRenderJoinCap(_args.mem[0].si);}
void  YAC_CALL __APIC__minSetEnableRenderFillConcave(yacmemptr _args         ) {minSetEnableRenderFillConcave(_args.mem[0].si);}
void  YAC_CALL __APIC__minSetEnableRenderFillEvenOdd(yacmemptr _args         ) {minSetEnableRenderFillEvenOdd(_args.mem[0].si);}
void  YAC_CALL __APIC__minSetEnableEdgeAA(yacmemptr _args                    ) {minSetEnableEdgeAA(_args.mem[0].si);}
void  YAC_CALL __APIC__minSetEnableTesselateConcave(yacmemptr _args          ) {minSetEnableTesselateConcave(_args.mem[0].si);}
void  YAC_CALL __APIC__minSetSwTesselateSizeThreshold(yacmemptr _args        ) {minSetSwTesselateSizeThreshold(_args.mem[0].si);}
void  YAC_CALL __APIC__minSetEnableForceConcaveEvenOdd(yacmemptr _args       ) {minSetEnableForceConcaveEvenOdd(_args.mem[0].si);}
void  YAC_CALL __APIC__minSetEnableUniformColors(yacmemptr _args             ) {minSetEnableUniformColors(_args.mem[0].si);}
void  YAC_CALL __APIC__minSetStrokeWLineStripThreshold(yacmemptr _args       ) {minSetStrokeWLineStripThreshold(_args.mem[0].f32);}
void  YAC_CALL __APIC__minSetStrokeWLineJoinThreshold(yacmemptr _args        ) {minSetStrokeWLineJoinThreshold(_args.mem[0].f32);}
void  YAC_CALL __APIC__minSetVertexBufferExportOFS(yacmemptr _args           ) {minSetVertexBufferExportOFS(_args.mem[0].o);}
void  YAC_CALL __APIC__minSetDrawListExportOFS(yacmemptr _args               ) {minSetDrawListExportOFS(_args.mem[0].o);}
void  YAC_CALL __APIC__minSeg       (yacmemptr _args                         ) {minSeg(_args.mem[0].si);}
void  YAC_CALL __APIC__minMoveTo    (yacmemptr _args                         ) {minMoveTo(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL __APIC__minLineTo    (yacmemptr _args                         ) {minLineTo(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL __APIC__minCubicTo   (yacmemptr _args                         ) {minCubicTo(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32);}
void  YAC_CALL __APIC__minCubicMirrorTo(yacmemptr _args                      ) {minCubicMirrorTo(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32);}
void  YAC_CALL __APIC__minArcTo     (yacmemptr _args                         ) {minArcTo(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].si, _args.mem[4].si, _args.mem[5].f32, _args.mem[6].f32);}
void  YAC_CALL __APIC__minRect      (yacmemptr _args                         ) {minRect(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL __APIC__minRoundRect (yacmemptr _args                         ) {minRoundRect(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32);}
void  YAC_CALL __APIC__minEllipse   (yacmemptr _args                         ) {minEllipse(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL __APIC__minCircle    (yacmemptr _args                         ) {minCircle(_args.mem[0].f32);}
sSI   YAC_CALL __APIC__minBeginPathEx(yacmemptr _args                        ) {return (sSI)minBeginPathEx(_args.mem[0].si);}
void  YAC_CALL __APIC__minEndPath   (yacmemptr _args                         ) {minEndPath(_args.mem[0].si);}
sSI   YAC_CALL __APIC__minBeginSubEx(yacmemptr _args                         ) {return (sSI)minBeginSubEx(_args.mem[0].si);}
void  YAC_CALL __APIC__minEndSub    (yacmemptr _args                         ) {minEndSub(_args.mem[0].si);}
void  YAC_CALL __APIC__minStrokeWidth(yacmemptr _args                        ) {minStrokeWidth(_args.mem[0].f32);}
void  YAC_CALL __APIC__minMiterLimit(yacmemptr _args                         ) {minMiterLimit(_args.mem[0].f32);}
void  YAC_CALL __APIC__minColor     (yacmemptr _args                         ) {minColor(_args.mem[0].si);}
void  YAC_CALL __APIC__minJoinCap   (yacmemptr _args                         ) {minJoinCap(_args.mem[0].si);}
void  YAC_CALL __APIC__minJoin      (yacmemptr _args                         ) {minJoin(_args.mem[0].si);}
void  YAC_CALL __APIC__minCap       (yacmemptr _args                         ) {minCap(_args.mem[0].si);}
void  YAC_CALL __APIC__minDrawPath  (yacmemptr _args                         ) {minDrawPath(_args.mem[0].si);}
void  YAC_CALL __APIC__minBindTexture(yacmemptr _args                        ) {minBindTexture(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
void  YAC_CALL __APIC__minTextureDecalAlpha(yacmemptr _args                  ) {minTextureDecalAlpha(_args.mem[0].f32);}
void  YAC_CALL __APIC__minTriangleTexUVFlat(yacmemptr _args                  ) {minTriangleTexUVFlat(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32, _args.mem[9].f32, _args.mem[10].f32, _args.mem[11].f32);}
void  YAC_CALL __APIC__minTriangleTexUVFlatDecal(yacmemptr _args             ) {minTriangleTexUVFlatDecal(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32, _args.mem[9].f32, _args.mem[10].f32, _args.mem[11].f32);}
void  YAC_CALL __APIC__minTriangleTexUVGouraud(yacmemptr _args               ) {minTriangleTexUVGouraud(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].si, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32, _args.mem[9].si, _args.mem[10].f32, _args.mem[11].f32, _args.mem[12].f32, _args.mem[13].f32, _args.mem[14].si);}
void  YAC_CALL __APIC__minTriangleTexUVGouraudDecal(yacmemptr _args          ) {minTriangleTexUVGouraudDecal(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].si, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32, _args.mem[9].si, _args.mem[10].f32, _args.mem[11].f32, _args.mem[12].f32, _args.mem[13].f32, _args.mem[14].si);}
void  YAC_CALL __APIC__minRectTexUVFlat(yacmemptr _args                      ) {minRectTexUVFlat(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32);}
void  YAC_CALL __APIC__minRectTexUVFlatDecal(yacmemptr _args                 ) {minRectTexUVFlatDecal(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32);}
void  YAC_CALL __APIC__minRectTexUVGouraud(yacmemptr _args                   ) {minRectTexUVGouraud(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].si, _args.mem[9].si, _args.mem[10].si, _args.mem[11].si);}
void  YAC_CALL __APIC__minRectTexUVGouraudDecal(yacmemptr _args              ) {minRectTexUVGouraudDecal(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].si, _args.mem[9].si, _args.mem[10].si, _args.mem[11].si);}

void YAC_CALL YAC_Exit_minnie(YAC_Host *_host) {
	delete t_MinnieDrawable;
}

#endif
