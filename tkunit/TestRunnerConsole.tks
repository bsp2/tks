// ----
// ---- file   : TestRunnerConsole.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2008-2015 by Bastian Spiegel.
// ----          Distributed under terms of the GNU GENERAL PUBLIC LICENSE (GPL). See
// ----          http://www.gnu.org/licenses/licenses.html#GPL or COPYING for further information.
// ----
// ---- info   : This is part of the "tkunit" package.
// ----
// ---- created: 07Feb2008
// ---- changed: 25Sep2025
// ----
// ----
// ----
// ----

module MTestRunnerConsole;


class TestRunnerConsole extends TestRunner {

   protected method onBegin() {
      trace "TestRunnerConsole: Begin tests.";
   }

   protected method onTestCaseBegin(TestCase _testCase) {
      trace "---------------------------------------------------------------";
      trace "TestRunnerConsole: Begin TestCase \""+_testCase.yacMetaClassName()+"\".";

   }

   protected method onTestBegin(TestCase _testCase, String _methodName) {
      stdout "TestRunnerConsole: running test \""+_testCase.yacMetaClassName()+"::"+_methodName+"\"..";
   }

   protected method onTestSucceeded(TestCase _testCase, String _methodName) {
      print "..OK!";
   }

   protected method onTestFailed(TestCase _testCase, String _methodName, String _msg) {
      print "..**FAILED** "+_msg;
   }

   protected method onTestIgnored(TestCase _testCase, String _methodName, String _reason) {
      print "..IGNORED ("+_reason+")";
   }

   protected method onTestCaseEnd(TestCase _testCase) {
      trace "TestRunnerConsole: End TestCase \""+_testCase.yacMetaClassName()+"\".";
   }

   protected method onEnd() {
      trace "---------------------------------------------------------------";
      trace "TestRunnerConsole: All "+total_num_tests+" tests finished.";
      trace "TestRunnerConsole:   Result:";
      trace "TestRunnerConsole:        failed : "+total_num_failed;
      trace "TestRunnerConsole:       ignored : "+total_num_ignored;
      trace "TestRunnerConsole:     succeeded : "+total_num_succeeded+" ("+ (int(10000*float(total_num_succeeded)/(total_num_tests-total_num_ignored))/100)+"%)";

      if(total_num_failed)
      {
         trace "    ##### ##### ##### #     ##### ####        ";
         trace "    #     #   #   #   #     #     #   #       ";
         trace "    ###   #####   #   #     ##### #   #       ";
         trace "    #     #   #   #   #     #     #   #       ";
         trace "    #     #   # ##### ##### ##### ####        ";
      }
      else
      {
         trace "     ###  #   #       #     #                 ";
         trace "    #   # #   #       #     #                 ";
         trace "    #   # ####        #     #                 ";
         trace "    #   # #   #                               ";
         trace "     ###  #   #       #     #                 ";
      }

   }

}
