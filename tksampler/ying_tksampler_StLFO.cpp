// ---- ying_tksampler_StLFO.cpp: auto generated by YInG - the YAC interface generator (Fri, 13/Jun/2025 23:42:34)

#ifndef YAC_NO_HOST
void  YAC_CALL StLFO___setTimebase  (void *, yacmemptr             );
sF32  YAC_CALL StLFO___getTimebase  (void *                        );
void  YAC_CALL StLFO___setType      (void *, yacmemptr             );
sSI   YAC_CALL StLFO___getType      (void *                        );
void  YAC_CALL StLFO___setPhase     (void *, yacmemptr             );
sF32  YAC_CALL StLFO___getPhase     (void *                        );
void  YAC_CALL StLFO___setFreq      (void *, yacmemptr             );
sF32  YAC_CALL StLFO___getFreq      (void *                        );
void  YAC_CALL StLFO___setPulseWidth(void *, yacmemptr             );
sF32  YAC_CALL StLFO___getPulseWidth(void *                        );
void  YAC_CALL StLFO___setDelay     (void *, yacmemptr             );
sF32  YAC_CALL StLFO___getDelay     (void *                        );
void  YAC_CALL StLFO___setFadeInTime(void *, yacmemptr             );
sF32  YAC_CALL StLFO___getFadeInTime(void *                        );
void  YAC_CALL StLFO___setStartLevel(void *, yacmemptr             );
sF32  YAC_CALL StLFO___getStartLevel(void *                        );
void  YAC_CALL StLFO___setFadedLevel(void *, yacmemptr             );
sF32  YAC_CALL StLFO___getFadedLevel(void *                        );
void  YAC_CALL StLFO___setFadedSpeedFactor(void *, yacmemptr       );
sF32  YAC_CALL StLFO___getFadedSpeedFactor(void *                  );
void  YAC_CALL StLFO___setDcOffset  (void *, yacmemptr             );
sF32  YAC_CALL StLFO___getDcOffset  (void *                        );
void  YAC_CALL StLFO___setNoiseMinAmp(void *, yacmemptr            );
sF32  YAC_CALL StLFO___getNoiseMinAmp(void *                       );
void  YAC_CALL StLFO___setNoiseMaxAmp(void *, yacmemptr            );
sF32  YAC_CALL StLFO___getNoiseMaxAmp(void *                       );
void  YAC_CALL StLFO___setNoiseMinSpeed(void *, yacmemptr          );
sF32  YAC_CALL StLFO___getNoiseMinSpeed(void *                     );
void  YAC_CALL StLFO___setNoiseMaxSpeed(void *, yacmemptr          );
sF32  YAC_CALL StLFO___getNoiseMaxSpeed(void *                     );
void  YAC_CALL StLFO___setEnableNoiseInterpol(void *, yacmemptr    );
sSI   YAC_CALL StLFO___getEnableNoiseInterpol(void *               );
void  YAC_CALL StLFO___setEnableModDelay(void *, yacmemptr         );
sSI   YAC_CALL StLFO___getEnableModDelay(void *                    );
void  YAC_CALL StLFO___setEnableOneShot(void *, yacmemptr          );
sSI   YAC_CALL StLFO___getEnableOneShot(void *                     );
void  YAC_CALL StLFO___setEnableGlobal(void *, yacmemptr           );
sSI   YAC_CALL StLFO___getEnableGlobal(void *                      );
void  YAC_CALL StLFO___setEnableReset(void *, yacmemptr            );
sSI   YAC_CALL StLFO___getEnableReset(void *                       );
#endif // YAC_NO_HOST

// ------------------ YAC class "StLFO" reflection map (implementation) ------------------
sUI          YAC_VCALL StLFO::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL StLFO::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL StLFO::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL StLFO::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL StLFO::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL StLFO::yacMethodGetNum                  (void) {return 41;}
const char **YAC_VCALL StLFO::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "setTimebase", "getTimebase", "setType", "getType", "setPhase", "getPhase", "setFreq", "getFreq", "setPulseWidth", "getPulseWidth", "setDelay", "getDelay", "setFadeInTime", "getFadeInTime", "setStartLevel", "getStartLevel", "setFadedLevel", "getFadedLevel", "setFadedSpeedFactor", "getFadedSpeedFactor", "setDcOffset", "getDcOffset", "setNoiseMinAmp", "getNoiseMinAmp", "setNoiseMaxAmp", "getNoiseMaxAmp", "setNoiseMinSpeed", "getNoiseMinSpeed", "setNoiseMaxSpeed", "getNoiseMaxSpeed", "setEnableNoiseInterpol", "getEnableNoiseInterpol", "setEnableModDelay", "getEnableModDelay", "setEnableOneShot", "getEnableOneShot", "setEnableGlobal", "getEnableGlobal", "setEnableReset", "getEnableReset"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StLFO::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL StLFO::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={2,};static const sUI rt2[]={0,};static const sUI rt3[]={1,};static const sUI rt4[]={0,};static const sUI rt5[]={2,};static const sUI rt6[]={0,};static const sUI rt7[]={2,};static const sUI rt8[]={0,};static const sUI rt9[]={2,};static const sUI rt10[]={0,};static const sUI rt11[]={2,};static const sUI rt12[]={0,};static const sUI rt13[]={2,};static const sUI rt14[]={0,};static const sUI rt15[]={2,};static const sUI rt16[]={0,};static const sUI rt17[]={2,};static const sUI rt18[]={0,};static const sUI rt19[]={2,};static const sUI rt20[]={0,};static const sUI rt21[]={2,};static const sUI rt22[]={0,};static const sUI rt23[]={2,};static const sUI rt24[]={0,};static const sUI rt25[]={2,};static const sUI rt26[]={0,};static const sUI rt27[]={2,};static const sUI rt28[]={0,};static const sUI rt29[]={2,};static const sUI rt30[]={0,};static const sUI rt31[]={1,};static const sUI rt32[]={0,};static const sUI rt33[]={1,};static const sUI rt34[]={0,};static const sUI rt35[]={1,};static const sUI rt36[]={0,};static const sUI rt37[]={1,};static const sUI rt38[]={0,};static const sUI rt39[]={1,};static const sUI rt40[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL StLFO::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0,};static const char *rs26[]={(const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0,};static const char *rs31[]={(const char*)0,};static const char *rs32[]={(const char*)0,};static const char *rs33[]={(const char*)0,};static const char *rs34[]={(const char*)0,};static const char *rs35[]={(const char*)0,};static const char *rs36[]={(const char*)0,};static const char *rs37[]={(const char*)0,};static const char *rs38[]={(const char*)0,};static const char *rs39[]={(const char*)0,};static const char *rs40[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StLFO::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 2, 0, 1, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL StLFO::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL StLFO::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)StLFO___setTimebase, (void*)StLFO___getTimebase, (void*)StLFO___setType, (void*)StLFO___getType, (void*)StLFO___setPhase, (void*)StLFO___getPhase, (void*)StLFO___setFreq, (void*)StLFO___getFreq, (void*)StLFO___setPulseWidth, (void*)StLFO___getPulseWidth, (void*)StLFO___setDelay, (void*)StLFO___getDelay, (void*)StLFO___setFadeInTime, (void*)StLFO___getFadeInTime, (void*)StLFO___setStartLevel, (void*)StLFO___getStartLevel, (void*)StLFO___setFadedLevel, (void*)StLFO___getFadedLevel, (void*)StLFO___setFadedSpeedFactor, (void*)StLFO___getFadedSpeedFactor, (void*)StLFO___setDcOffset, (void*)StLFO___getDcOffset, (void*)StLFO___setNoiseMinAmp, (void*)StLFO___getNoiseMinAmp, (void*)StLFO___setNoiseMaxAmp, (void*)StLFO___getNoiseMaxAmp, (void*)StLFO___setNoiseMinSpeed, (void*)StLFO___getNoiseMinSpeed, (void*)StLFO___setNoiseMaxSpeed, (void*)StLFO___getNoiseMaxSpeed, (void*)StLFO___setEnableNoiseInterpol, (void*)StLFO___getEnableNoiseInterpol, (void*)StLFO___setEnableModDelay, (void*)StLFO___getEnableModDelay, (void*)StLFO___setEnableOneShot, (void*)StLFO___getEnableOneShot, (void*)StLFO___setEnableGlobal, (void*)StLFO___getEnableGlobal, (void*)StLFO___setEnableReset, (void*)StLFO___getEnableReset}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL StLFO::yacConstantGetNum                (void) {return 8;}
const char **YAC_VCALL StLFO::yacConstantGetNames              (void) {
#ifndef YAC_NO_HOST
static const char*r[]={"STLFO_TYPE_NONE", "STLFO_TYPE_SIN", "STLFO_TYPE_SAWUP", "STLFO_TYPE_SAWDN", "STLFO_TYPE_TRI", "STLFO_TYPE_PULSE", "STLFO_TYPE_NOISE", "STLFO_NUM_TYPES"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StLFO::yacConstantGetTypes              (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={1, 1, 1, 1, 1, 1, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
yacmemptr    YAC_VCALL StLFO::yacConstantGetValues             (void) {yacmemptr m;
#ifndef YAC_NO_HOST
static sUI r[8]; m.ui=r; m.si[0]=(sSI)0;m.si[1]=(sSI)1;m.si[2]=(sSI)2;m.si[3]=(sSI)3;m.si[4]=(sSI)4;m.si[5]=(sSI)5;m.si[6]=(sSI)6;m.si[7]=(sSI)7;; return m;
#else
m.any = 0; return m;
#endif // YAC_NO_HOST
}

YAC_C(StLFO, "StLFO");

#ifndef YAC_NO_HOST
void  YAC_CALL StLFO___setTimebase  (void *_o, yacmemptr _args               ) {((StLFO*)_o)->_setTimebase(_args.mem[0].f32);}
sF32  YAC_CALL StLFO___getTimebase  (void *_o                                ) {return (sF32)((StLFO*)_o)->_getTimebase();}
void  YAC_CALL StLFO___setType      (void *_o, yacmemptr _args               ) {((StLFO*)_o)->_setType(_args.mem[0].si);}
sSI   YAC_CALL StLFO___getType      (void *_o                                ) {return (sSI)((StLFO*)_o)->_getType();}
void  YAC_CALL StLFO___setPhase     (void *_o, yacmemptr _args               ) {((StLFO*)_o)->_setPhase(_args.mem[0].f32);}
sF32  YAC_CALL StLFO___getPhase     (void *_o                                ) {return (sF32)((StLFO*)_o)->_getPhase();}
void  YAC_CALL StLFO___setFreq      (void *_o, yacmemptr _args               ) {((StLFO*)_o)->_setFreq(_args.mem[0].f32);}
sF32  YAC_CALL StLFO___getFreq      (void *_o                                ) {return (sF32)((StLFO*)_o)->_getFreq();}
void  YAC_CALL StLFO___setPulseWidth(void *_o, yacmemptr _args               ) {((StLFO*)_o)->_setPulseWidth(_args.mem[0].f32);}
sF32  YAC_CALL StLFO___getPulseWidth(void *_o                                ) {return (sF32)((StLFO*)_o)->_getPulseWidth();}
void  YAC_CALL StLFO___setDelay     (void *_o, yacmemptr _args               ) {((StLFO*)_o)->_setDelay(_args.mem[0].f32);}
sF32  YAC_CALL StLFO___getDelay     (void *_o                                ) {return (sF32)((StLFO*)_o)->_getDelay();}
void  YAC_CALL StLFO___setFadeInTime(void *_o, yacmemptr _args               ) {((StLFO*)_o)->_setFadeInTime(_args.mem[0].f32);}
sF32  YAC_CALL StLFO___getFadeInTime(void *_o                                ) {return (sF32)((StLFO*)_o)->_getFadeInTime();}
void  YAC_CALL StLFO___setStartLevel(void *_o, yacmemptr _args               ) {((StLFO*)_o)->_setStartLevel(_args.mem[0].f32);}
sF32  YAC_CALL StLFO___getStartLevel(void *_o                                ) {return (sF32)((StLFO*)_o)->_getStartLevel();}
void  YAC_CALL StLFO___setFadedLevel(void *_o, yacmemptr _args               ) {((StLFO*)_o)->_setFadedLevel(_args.mem[0].f32);}
sF32  YAC_CALL StLFO___getFadedLevel(void *_o                                ) {return (sF32)((StLFO*)_o)->_getFadedLevel();}
void  YAC_CALL StLFO___setFadedSpeedFactor(void *_o, yacmemptr _args         ) {((StLFO*)_o)->_setFadedSpeedFactor(_args.mem[0].f32);}
sF32  YAC_CALL StLFO___getFadedSpeedFactor(void *_o                          ) {return (sF32)((StLFO*)_o)->_getFadedSpeedFactor();}
void  YAC_CALL StLFO___setDcOffset  (void *_o, yacmemptr _args               ) {((StLFO*)_o)->_setDcOffset(_args.mem[0].f32);}
sF32  YAC_CALL StLFO___getDcOffset  (void *_o                                ) {return (sF32)((StLFO*)_o)->_getDcOffset();}
void  YAC_CALL StLFO___setNoiseMinAmp(void *_o, yacmemptr _args              ) {((StLFO*)_o)->_setNoiseMinAmp(_args.mem[0].f32);}
sF32  YAC_CALL StLFO___getNoiseMinAmp(void *_o                               ) {return (sF32)((StLFO*)_o)->_getNoiseMinAmp();}
void  YAC_CALL StLFO___setNoiseMaxAmp(void *_o, yacmemptr _args              ) {((StLFO*)_o)->_setNoiseMaxAmp(_args.mem[0].f32);}
sF32  YAC_CALL StLFO___getNoiseMaxAmp(void *_o                               ) {return (sF32)((StLFO*)_o)->_getNoiseMaxAmp();}
void  YAC_CALL StLFO___setNoiseMinSpeed(void *_o, yacmemptr _args            ) {((StLFO*)_o)->_setNoiseMinSpeed(_args.mem[0].f32);}
sF32  YAC_CALL StLFO___getNoiseMinSpeed(void *_o                             ) {return (sF32)((StLFO*)_o)->_getNoiseMinSpeed();}
void  YAC_CALL StLFO___setNoiseMaxSpeed(void *_o, yacmemptr _args            ) {((StLFO*)_o)->_setNoiseMaxSpeed(_args.mem[0].f32);}
sF32  YAC_CALL StLFO___getNoiseMaxSpeed(void *_o                             ) {return (sF32)((StLFO*)_o)->_getNoiseMaxSpeed();}
void  YAC_CALL StLFO___setEnableNoiseInterpol(void *_o, yacmemptr _args      ) {((StLFO*)_o)->_setEnableNoiseInterpol(_args.mem[0].si);}
sSI   YAC_CALL StLFO___getEnableNoiseInterpol(void *_o                       ) {return (sSI)((StLFO*)_o)->_getEnableNoiseInterpol();}
void  YAC_CALL StLFO___setEnableModDelay(void *_o, yacmemptr _args           ) {((StLFO*)_o)->_setEnableModDelay(_args.mem[0].si);}
sSI   YAC_CALL StLFO___getEnableModDelay(void *_o                            ) {return (sSI)((StLFO*)_o)->_getEnableModDelay();}
void  YAC_CALL StLFO___setEnableOneShot(void *_o, yacmemptr _args            ) {((StLFO*)_o)->_setEnableOneShot(_args.mem[0].si);}
sSI   YAC_CALL StLFO___getEnableOneShot(void *_o                             ) {return (sSI)((StLFO*)_o)->_getEnableOneShot();}
void  YAC_CALL StLFO___setEnableGlobal(void *_o, yacmemptr _args             ) {((StLFO*)_o)->_setEnableGlobal(_args.mem[0].si);}
sSI   YAC_CALL StLFO___getEnableGlobal(void *_o                              ) {return (sSI)((StLFO*)_o)->_getEnableGlobal();}
void  YAC_CALL StLFO___setEnableReset(void *_o, yacmemptr _args              ) {((StLFO*)_o)->_setEnableReset(_args.mem[0].si);}
sSI   YAC_CALL StLFO___getEnableReset(void *_o                               ) {return (sSI)((StLFO*)_o)->_getEnableReset();}
#endif // YAC_NO_HOST
