// ---- ying_tksampler_StSamplePlayer.cpp: auto generated by YInG - the YAC interface generator (Fri, 13/Jun/2025 23:42:34)

#ifndef YAC_NO_HOST
void  YAC_CALL StSamplePlayer__resetModulators(void *              );
sSI   YAC_CALL StSamplePlayer__allocVoices(void *, yacmemptr       );
sSI   YAC_CALL StSamplePlayer__getNumVoices(void *                 );
sSI   YAC_CALL StSamplePlayer__getNumUsedVoices(void *             );
sSI   YAC_CALL StSamplePlayer__getNumActiveVoices(void *           );
sSI   YAC_CALL StSamplePlayer__getNumPlayingVoices(void *          );
sSI   YAC_CALL StSamplePlayer__getNumActiveNotes(void *            );
void* YAC_CALL StSamplePlayer___getVoice(void *, yacmemptr         );
void* YAC_CALL StSamplePlayer___findFirstActiveVoiceBySample(void *, yacmemptr);
void* YAC_CALL StSamplePlayer___findLastStartedVoiceBySample(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__setDefaultMixRate(void *, yacmemptr );
sF32  YAC_CALL StSamplePlayer__getDefaultMixRate(void *            );
void  YAC_CALL StSamplePlayer__setDefaultFreqTable(void *, yacmemptr);
void* YAC_CALL StSamplePlayer__getDefaultFreqTable(void *          );
void  YAC_CALL StSamplePlayer__setVolume(void *, yacmemptr         );
sF32  YAC_CALL StSamplePlayer__getVolume(void *                    );
void  YAC_CALL StSamplePlayer__setPolyMode(void *, yacmemptr       );
sSI   YAC_CALL StSamplePlayer__getPolyMode(void *                  );
void  YAC_CALL StSamplePlayer__allNotesOff(void *                  );
void  YAC_CALL StSamplePlayer__allNotesOffRelease(void *           );
void  YAC_CALL StSamplePlayer__resetVoices(void *                  );
void  YAC_CALL StSamplePlayer__resetVoicesBySample(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__stopVoicesByKey(void *, yacmemptr   );
void  YAC_CALL StSamplePlayer__stopVoicesBySample(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__stopLFOVolBySample(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__stopLFOPanBySample(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__stopLFOFreqBySample(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__stopADSRVolBySample(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__stopADSRPanBySample(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__stopADSRFreqBySample(void *, yacmemptr);
sSI   YAC_CALL StSamplePlayer__noteOff(void *, yacmemptr           );
sSI   YAC_CALL StSamplePlayer__noteOffByKey(void *, yacmemptr      );
sSI   YAC_CALL StSamplePlayer__startSample(void *, yacmemptr       );
sSI   YAC_CALL StSamplePlayer__startSampleBank(void *, yacmemptr   );
sSI   YAC_CALL StSamplePlayer___findVoicesByKey(void *, yacmemptr  );
sSI   YAC_CALL StSamplePlayer___findPreviousGlideNoteByKeyAndHistoryIdx(void *, yacmemptr);
sSI   YAC_CALL StSamplePlayer___removeFromGlideNoteHistory(void *, yacmemptr);
void  YAC_CALL StSamplePlayer___initStartedVoicesByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer___restartVoicesByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer___render(void *, yacmemptr           );
void  YAC_CALL StSamplePlayer___renderWithInputs(void *, yacmemptr );
void  YAC_CALL StSamplePlayer__updateVol(void *, yacmemptr         );
void  YAC_CALL StSamplePlayer__updateVolByKey(void *, yacmemptr    );
void  YAC_CALL StSamplePlayer__updatePan(void *, yacmemptr         );
void  YAC_CALL StSamplePlayer__updatePanByKey(void *, yacmemptr    );
void  YAC_CALL StSamplePlayer__updateFreq(void *, yacmemptr        );
void  YAC_CALL StSamplePlayer__updateFreqByKey(void *, yacmemptr   );
void  YAC_CALL StSamplePlayer__updateFreq2(void *, yacmemptr       );
void  YAC_CALL StSamplePlayer__updateFreq2ByKey(void *, yacmemptr  );
void  YAC_CALL StSamplePlayer__updateMod(void *, yacmemptr         );
void  YAC_CALL StSamplePlayer__updateModByKey(void *, yacmemptr    );
void  YAC_CALL StSamplePlayer__updateTimestretch(void *, yacmemptr );
void  YAC_CALL StSamplePlayer__updateTimestretchByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateTimestretchBend(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateTimestretchBendByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateSampleOff(void *, yacmemptr   );
void  YAC_CALL StSamplePlayer__updateSampleOffByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__setInitialSampleOffsetMsByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateCycleLen(void *, yacmemptr    );
void  YAC_CALL StSamplePlayer__updateCycleLenByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateSampleShift(void *, yacmemptr );
void  YAC_CALL StSamplePlayer__updateSampleShiftByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateSampleShiftEndOfLoop(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateSampleShiftEndOfLoopByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateAltVolume(void *, yacmemptr   );
void  YAC_CALL StSamplePlayer__updateAltVolumeByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateRetrigMask(void *, yacmemptr  );
void  YAC_CALL StSamplePlayer__updateRetrigMaskByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateLFOFreqSpd(void *, yacmemptr  );
void  YAC_CALL StSamplePlayer__updateLFOFreqSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateLFOFreqLvl(void *, yacmemptr  );
void  YAC_CALL StSamplePlayer__updateLFOFreqLvlByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateLFOFreqAmt(void *, yacmemptr  );
void  YAC_CALL StSamplePlayer__updateLFOFreqAmtByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateLFOVolSpd(void *, yacmemptr   );
void  YAC_CALL StSamplePlayer__updateLFOVolSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateLFOVolLvl(void *, yacmemptr   );
void  YAC_CALL StSamplePlayer__updateLFOVolLvlByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateLFOVolAmt(void *, yacmemptr   );
void  YAC_CALL StSamplePlayer__updateLFOVolAmtByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateLFOPanSpd(void *, yacmemptr   );
void  YAC_CALL StSamplePlayer__updateLFOPanSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateLFOPanLvl(void *, yacmemptr   );
void  YAC_CALL StSamplePlayer__updateLFOPanLvlByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateLFOPanAmt(void *, yacmemptr   );
void  YAC_CALL StSamplePlayer__updateLFOPanAmtByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateLFOAuxSpd(void *, yacmemptr   );
void  YAC_CALL StSamplePlayer__updateLFOAuxSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateLFOAuxLvl(void *, yacmemptr   );
void  YAC_CALL StSamplePlayer__updateLFOAuxLvlByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateLFOAuxFltAmt(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateLFOAuxFltAmtByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateADSRFreqSpd(void *, yacmemptr );
void  YAC_CALL StSamplePlayer__updateADSRFreqSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateADSRFreqLvl(void *, yacmemptr );
void  YAC_CALL StSamplePlayer__updateADSRFreqLvlByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateADSRFreqInt(void *, yacmemptr );
void  YAC_CALL StSamplePlayer__updateADSRFreqIntByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateADSRVolSpd(void *, yacmemptr  );
void  YAC_CALL StSamplePlayer__updateADSRVolSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateADSRVolLvl(void *, yacmemptr  );
void  YAC_CALL StSamplePlayer__updateADSRVolLvlByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateADSRVolInt(void *, yacmemptr  );
void  YAC_CALL StSamplePlayer__updateADSRVolIntByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateADSRPanSpd(void *, yacmemptr  );
void  YAC_CALL StSamplePlayer__updateADSRPanSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateADSRPanLvl(void *, yacmemptr  );
void  YAC_CALL StSamplePlayer__updateADSRPanLvlByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateADSRPanInt(void *, yacmemptr  );
void  YAC_CALL StSamplePlayer__updateADSRPanIntByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateADSRAuxSpd(void *, yacmemptr  );
void  YAC_CALL StSamplePlayer__updateADSRAuxSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateADSRAuxLvl(void *, yacmemptr  );
void  YAC_CALL StSamplePlayer__updateADSRAuxLvlByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateADSRAuxInt(void *, yacmemptr  );
void  YAC_CALL StSamplePlayer__updateADSRAuxIntByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateJumpToLoop(void *, yacmemptr  );
void  YAC_CALL StSamplePlayer__updateJumpToLoopByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateJumpToLoopRel(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateJumpToLoopRelByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateWavepathIndex(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateWavepathIndexByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateAFreqSpd(void *, yacmemptr    );
void  YAC_CALL StSamplePlayer__updateAFreqSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateSFreqSpd(void *, yacmemptr    );
void  YAC_CALL StSamplePlayer__updateSFreqSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateRFreqSpd(void *, yacmemptr    );
void  YAC_CALL StSamplePlayer__updateRFreqSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateAVolSpd(void *, yacmemptr     );
void  YAC_CALL StSamplePlayer__updateAVolSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateSVolSpd(void *, yacmemptr     );
void  YAC_CALL StSamplePlayer__updateSVolSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateRVolSpd(void *, yacmemptr     );
void  YAC_CALL StSamplePlayer__updateRVolSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateAPanSpd(void *, yacmemptr     );
void  YAC_CALL StSamplePlayer__updateAPanSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateSPanSpd(void *, yacmemptr     );
void  YAC_CALL StSamplePlayer__updateSPanSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateRPanSpd(void *, yacmemptr     );
void  YAC_CALL StSamplePlayer__updateRPanSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateAAuxSpd(void *, yacmemptr     );
void  YAC_CALL StSamplePlayer__updateAAuxSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateSAuxSpd(void *, yacmemptr     );
void  YAC_CALL StSamplePlayer__updateSAuxSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateRAuxSpd(void *, yacmemptr     );
void  YAC_CALL StSamplePlayer__updateRAuxSpdByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateGlideSwitch(void *, yacmemptr );
void  YAC_CALL StSamplePlayer__updateGlideSwitchByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateGlideSpeed(void *, yacmemptr  );
void  YAC_CALL StSamplePlayer__updateGlideSpeedByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateFltCutOff(void *, yacmemptr   );
void  YAC_CALL StSamplePlayer__updateFltCutOffByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateFltPan(void *, yacmemptr      );
void  YAC_CALL StSamplePlayer__updateFltPanByKey(void *, yacmemptr );
void  YAC_CALL StSamplePlayer__updateFltOffset(void *, yacmemptr   );
void  YAC_CALL StSamplePlayer__updateFltOffsetByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updateFltRes(void *, yacmemptr      );
void  YAC_CALL StSamplePlayer__updateFltResByKey(void *, yacmemptr );
void  YAC_CALL StSamplePlayer__resetLFOFreqPhase(void *            );
void  YAC_CALL StSamplePlayer__resetLFOFreqPhaseByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__resetLFOVolPhase(void *             );
void  YAC_CALL StSamplePlayer__resetLFOVolPhaseByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__resetLFOPanPhase(void *             );
void  YAC_CALL StSamplePlayer__resetLFOPanPhaseByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__resetLFOAuxPhase(void *             );
void  YAC_CALL StSamplePlayer__resetLFOAuxPhaseByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__updatePerfCtl(void *, yacmemptr     );
sF32  YAC_CALL StSamplePlayer__updatePerfCtlMSB7(void *, yacmemptr );
sF32  YAC_CALL StSamplePlayer__updatePerfCtlLSB7(void *, yacmemptr );
void  YAC_CALL StSamplePlayer__updatePerfCtls(void *, yacmemptr    );
void  YAC_CALL StSamplePlayer__updatePerfCtlByKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__setSustainPedal(void *, yacmemptr   );
sSI   YAC_CALL StSamplePlayer__getSustainPedal(void *              );
void  YAC_CALL StSamplePlayer__setSoftPedal(void *, yacmemptr      );
sSI   YAC_CALL StSamplePlayer__getSoftPedal(void *                 );
sSI   YAC_CALL StSamplePlayer__getLastVoiceKey(void *              );
void  YAC_CALL StSamplePlayer__findUniqueSamplesByVoiceKey(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__getNoteHistory(void *, yacmemptr    );
void  YAC_CALL StSamplePlayer__setTempo(void *, yacmemptr          );
void  YAC_CALL StSamplePlayer__startLiveRecording(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__stopLiveRecording(void *, yacmemptr );
void  YAC_CALL StSamplePlayer__setLiveRecLoopShift(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__setLiveRecSampleBank(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__setLiveRecDoubleBufferIndex(void *, yacmemptr);
sSI   YAC_CALL StSamplePlayer__uiCheckResetAnyRedrawFlag(void *    );
void  YAC_CALL StSamplePlayer__unloadVoicePlugins(void *           );
void  YAC_CALL StSamplePlayer__handleReorderVoicePlugins(void *, yacmemptr);
void  YAC_CALL StSamplePlayer__setLastStartedSampleBankHint(void *, yacmemptr);
void* YAC_CALL StSamplePlayer__getLastStartedSampleBankHint(void * );
#endif // YAC_NO_HOST

// ------------------ YAC class "StSamplePlayer" reflection map (implementation) ------------------
sUI          YAC_VCALL StSamplePlayer::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL StSamplePlayer::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL StSamplePlayer::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL StSamplePlayer::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL StSamplePlayer::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL StSamplePlayer::yacMethodGetNum                  (void) {return 190;}
const char **YAC_VCALL StSamplePlayer::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "resetModulators", "allocVoices", "getNumVoices", "getNumUsedVoices", "getNumActiveVoices", "getNumPlayingVoices", "getNumActiveNotes", "getVoice", "findFirstActiveVoiceBySample", "findLastStartedVoiceBySample", "setDefaultMixRate", "getDefaultMixRate", "setDefaultFreqTable", "getDefaultFreqTable", "setVolume", "getVolume", "setPolyMode", "getPolyMode", "allNotesOff", "allNotesOffRelease", "resetVoices", "resetVoicesBySample", "stopVoicesByKey", "stopVoicesBySample", "stopLFOVolBySample", "stopLFOPanBySample", "stopLFOFreqBySample", "stopADSRVolBySample", "stopADSRPanBySample", "stopADSRFreqBySample", "noteOff", "noteOffByKey", "startSample", "startSampleBank", "findVoicesByKey", "findPreviousGlideNoteByKeyAndHistoryIdx", "removeFromGlideNoteHistory", "initStartedVoicesByKey", "restartVoicesByKey", "render", "renderWithInputs", "updateVol", "updateVolByKey", "updatePan", "updatePanByKey", "updateFreq", "updateFreqByKey", "updateFreq2", "updateFreq2ByKey", "updateMod", "updateModByKey", "updateTimestretch", "updateTimestretchByKey", "updateTimestretchBend", "updateTimestretchBendByKey", "updateSampleOff", "updateSampleOffByKey", "setInitialSampleOffsetMsByKey", "updateCycleLen", "updateCycleLenByKey", "updateSampleShift", "updateSampleShiftByKey", "updateSampleShiftEndOfLoop", "updateSampleShiftEndOfLoopByKey", "updateAltVolume", "updateAltVolumeByKey", "updateRetrigMask", "updateRetrigMaskByKey", "updateLFOFreqSpd", "updateLFOFreqSpdByKey", "updateLFOFreqLvl", "updateLFOFreqLvlByKey", "updateLFOFreqAmt", "updateLFOFreqAmtByKey", "updateLFOVolSpd", "updateLFOVolSpdByKey", "updateLFOVolLvl", "updateLFOVolLvlByKey", "updateLFOVolAmt", "updateLFOVolAmtByKey", "updateLFOPanSpd", "updateLFOPanSpdByKey", "updateLFOPanLvl", "updateLFOPanLvlByKey", "updateLFOPanAmt", "updateLFOPanAmtByKey", "updateLFOAuxSpd", "updateLFOAuxSpdByKey", "updateLFOAuxLvl", "updateLFOAuxLvlByKey", "updateLFOAuxFltAmt", "updateLFOAuxFltAmtByKey", "updateADSRFreqSpd", "updateADSRFreqSpdByKey", "updateADSRFreqLvl", "updateADSRFreqLvlByKey", "updateADSRFreqInt", "updateADSRFreqIntByKey", "updateADSRVolSpd", "updateADSRVolSpdByKey", "updateADSRVolLvl", "updateADSRVolLvlByKey", "updateADSRVolInt", "updateADSRVolIntByKey", "updateADSRPanSpd", "updateADSRPanSpdByKey", "updateADSRPanLvl", "updateADSRPanLvlByKey", "updateADSRPanInt", "updateADSRPanIntByKey", "updateADSRAuxSpd", "updateADSRAuxSpdByKey", "updateADSRAuxLvl", "updateADSRAuxLvlByKey", "updateADSRAuxInt", "updateADSRAuxIntByKey", "updateJumpToLoop", "updateJumpToLoopByKey", "updateJumpToLoopRel", "updateJumpToLoopRelByKey", "updateWavepathIndex", "updateWavepathIndexByKey", "updateAFreqSpd", "updateAFreqSpdByKey", "updateSFreqSpd", "updateSFreqSpdByKey", "updateRFreqSpd", "updateRFreqSpdByKey", "updateAVolSpd", "updateAVolSpdByKey", "updateSVolSpd", "updateSVolSpdByKey", "updateRVolSpd", "updateRVolSpdByKey", "updateAPanSpd", "updateAPanSpdByKey", "updateSPanSpd", "updateSPanSpdByKey", "updateRPanSpd", "updateRPanSpdByKey", "updateAAuxSpd", "updateAAuxSpdByKey", "updateSAuxSpd", "updateSAuxSpdByKey", "updateRAuxSpd", "updateRAuxSpdByKey", "updateGlideSwitch", "updateGlideSwitchByKey", "updateGlideSpeed", "updateGlideSpeedByKey", "updateFltCutOff", "updateFltCutOffByKey", "updateFltPan", "updateFltPanByKey", "updateFltOffset", "updateFltOffsetByKey", "updateFltRes", "updateFltResByKey", "resetLFOFreqPhase", "resetLFOFreqPhaseByKey", "resetLFOVolPhase", "resetLFOVolPhaseByKey", "resetLFOPanPhase", "resetLFOPanPhaseByKey", "resetLFOAuxPhase", "resetLFOAuxPhaseByKey", "updatePerfCtl", "updatePerfCtlMSB7", "updatePerfCtlLSB7", "updatePerfCtls", "updatePerfCtlByKey", "setSustainPedal", "getSustainPedal", "setSoftPedal", "getSoftPedal", "getLastVoiceKey", "findUniqueSamplesByVoiceKey", "getNoteHistory", "setTempo", "startLiveRecording", "stopLiveRecording", "setLiveRecLoopShift", "setLiveRecSampleBank", "setLiveRecDoubleBufferIndex", "uiCheckResetAnyRedrawFlag", "unloadVoicePlugins", "handleReorderVoicePlugins", "setLastStartedSampleBankHint", "getLastStartedSampleBankHint"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StSamplePlayer::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 8, 8, 2, 2, 2, 1, 1, 1, 4, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0, 1, 0, 1, 0, 1, 0, 1, 2, 2, 2, 1, 3, 1, 0, 1, 0, 0, 2, 2, 2, 3, 2, 1, 1, 1, 0, 0, 2, 1, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL StSamplePlayer::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={1,};static const sUI rt3[]={0,};static const sUI rt4[]={0,};static const sUI rt5[]={0,};static const sUI rt6[]={0,};static const sUI rt7[]={0,};static const sUI rt8[]={1,};static const sUI rt9[]={3,};static const sUI rt10[]={3,};static const sUI rt11[]={2,};static const sUI rt12[]={0,};static const sUI rt13[]={3,};static const sUI rt14[]={0,};static const sUI rt15[]={2,};static const sUI rt16[]={0,};static const sUI rt17[]={1,};static const sUI rt18[]={0,};static const sUI rt19[]={0,};static const sUI rt20[]={0,};static const sUI rt21[]={0,};static const sUI rt22[]={3,};static const sUI rt23[]={1,};static const sUI rt24[]={3,};static const sUI rt25[]={3,};static const sUI rt26[]={3,};static const sUI rt27[]={3,};static const sUI rt28[]={3,};static const sUI rt29[]={3,};static const sUI rt30[]={3,};static const sUI rt31[]={1, 2,};static const sUI rt32[]={1, 2,};static const sUI rt33[]={3, 3, 1, 2, 2, 2, 2, 2,};static const sUI rt34[]={3, 3, 1, 2, 2, 2, 2, 2,};static const sUI rt35[]={1, 3,};static const sUI rt36[]={1, 1,};static const sUI rt37[]={1, 1,};static const sUI rt38[]={1,};static const sUI rt39[]={1,};static const sUI rt40[]={3,};static const sUI rt41[]={3, 3, 1, 1,};static const sUI rt42[]={2,};static const sUI rt43[]={1, 2,};static const sUI rt44[]={2,};static const sUI rt45[]={1, 2,};static const sUI rt46[]={2,};static const sUI rt47[]={1, 2,};static const sUI rt48[]={2,};static const sUI rt49[]={1, 2,};static const sUI rt50[]={2,};static const sUI rt51[]={1, 2,};static const sUI rt52[]={2,};static const sUI rt53[]={1, 2,};static const sUI rt54[]={2,};static const sUI rt55[]={1, 2,};static const sUI rt56[]={2,};static const sUI rt57[]={1, 2,};static const sUI rt58[]={1, 2,};static const sUI rt59[]={2,};static const sUI rt60[]={1, 2,};static const sUI rt61[]={2,};static const sUI rt62[]={1, 2,};static const sUI rt63[]={2,};static const sUI rt64[]={1, 2,};static const sUI rt65[]={2,};static const sUI rt66[]={1, 2,};static const sUI rt67[]={1,};static const sUI rt68[]={1, 1,};static const sUI rt69[]={2,};static const sUI rt70[]={1, 2,};static const sUI rt71[]={2,};static const sUI rt72[]={1, 2,};static const sUI rt73[]={2,};static const sUI rt74[]={1, 2,};static const sUI rt75[]={2,};static const sUI rt76[]={1, 2,};static const sUI rt77[]={2,};static const sUI rt78[]={1, 2,};static const sUI rt79[]={2,};static const sUI rt80[]={1, 2,};static const sUI rt81[]={2,};static const sUI rt82[]={1, 2,};static const sUI rt83[]={2,};static const sUI rt84[]={1, 2,};static const sUI rt85[]={2,};static const sUI rt86[]={1, 2,};static const sUI rt87[]={2,};static const sUI rt88[]={1, 2,};static const sUI rt89[]={2,};static const sUI rt90[]={1, 2,};static const sUI rt91[]={2,};static const sUI rt92[]={1, 2,};static const sUI rt93[]={2,};static const sUI rt94[]={1, 2,};static const sUI rt95[]={2,};static const sUI rt96[]={1, 2,};static const sUI rt97[]={2,};static const sUI rt98[]={1, 2,};static const sUI rt99[]={2,};static const sUI rt100[]={1, 2,};static const sUI rt101[]={2,};static const sUI rt102[]={1, 2,};static const sUI rt103[]={2,};static const sUI rt104[]={1, 2,};static const sUI rt105[]={2,};static const sUI rt106[]={1, 2,};static const sUI rt107[]={2,};static const sUI rt108[]={1, 2,};static const sUI rt109[]={2,};static const sUI rt110[]={1, 2,};static const sUI rt111[]={2,};static const sUI rt112[]={1, 2,};static const sUI rt113[]={2,};static const sUI rt114[]={1, 2,};static const sUI rt115[]={2,};static const sUI rt116[]={1, 2,};static const sUI rt117[]={1,};static const sUI rt118[]={1, 1,};static const sUI rt119[]={2,};static const sUI rt120[]={1, 2,};static const sUI rt121[]={1,};static const sUI rt122[]={1, 1,};static const sUI rt123[]={2,};static const sUI rt124[]={1, 2,};static const sUI rt125[]={2,};static const sUI rt126[]={1, 2,};static const sUI rt127[]={2,};static const sUI rt128[]={1, 2,};static const sUI rt129[]={2,};static const sUI rt130[]={1, 2,};static const sUI rt131[]={2,};static const sUI rt132[]={1, 2,};static const sUI rt133[]={2,};static const sUI rt134[]={1, 2,};static const sUI rt135[]={2,};static const sUI rt136[]={1, 2,};static const sUI rt137[]={2,};static const sUI rt138[]={1, 2,};static const sUI rt139[]={2,};static const sUI rt140[]={1, 2,};static const sUI rt141[]={2,};static const sUI rt142[]={1, 2,};static const sUI rt143[]={2,};static const sUI rt144[]={1, 2,};static const sUI rt145[]={2,};static const sUI rt146[]={1, 2,};static const sUI rt147[]={1,};static const sUI rt148[]={1, 1,};static const sUI rt149[]={2,};static const sUI rt150[]={1, 2,};static const sUI rt151[]={2,};static const sUI rt152[]={1, 2,};static const sUI rt153[]={2,};static const sUI rt154[]={1, 2,};static const sUI rt155[]={2,};static const sUI rt156[]={1, 2,};static const sUI rt157[]={2,};static const sUI rt158[]={1, 2,};static const sUI rt159[]={0,};static const sUI rt160[]={1,};static const sUI rt161[]={0,};static const sUI rt162[]={1,};static const sUI rt163[]={0,};static const sUI rt164[]={1,};static const sUI rt165[]={0,};static const sUI rt166[]={1,};static const sUI rt167[]={1, 2,};static const sUI rt168[]={1, 1,};static const sUI rt169[]={1, 1,};static const sUI rt170[]={3,};static const sUI rt171[]={1, 1, 2,};static const sUI rt172[]={1,};static const sUI rt173[]={0,};static const sUI rt174[]={1,};static const sUI rt175[]={0,};static const sUI rt176[]={0,};static const sUI rt177[]={3, 1,};static const sUI rt178[]={3, 1,};static const sUI rt179[]={2, 1,};static const sUI rt180[]={1, 1, 1,};static const sUI rt181[]={1, 1,};static const sUI rt182[]={1,};static const sUI rt183[]={3,};static const sUI rt184[]={1,};static const sUI rt185[]={0,};static const sUI rt186[]={0,};static const sUI rt187[]={3, 3,};static const sUI rt188[]={3,};static const sUI rt189[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40, rt41, rt42, rt43, rt44, rt45, rt46, rt47, rt48, rt49, rt50, rt51, rt52, rt53, rt54, rt55, rt56, rt57, rt58, rt59, rt60, rt61, rt62, rt63, rt64, rt65, rt66, rt67, rt68, rt69, rt70, rt71, rt72, rt73, rt74, rt75, rt76, rt77, rt78, rt79, rt80, rt81, rt82, rt83, rt84, rt85, rt86, rt87, rt88, rt89, rt90, rt91, rt92, rt93, rt94, rt95, rt96, rt97, rt98, rt99, rt100, rt101, rt102, rt103, rt104, rt105, rt106, rt107, rt108, rt109, rt110, rt111, rt112, rt113, rt114, rt115, rt116, rt117, rt118, rt119, rt120, rt121, rt122, rt123, rt124, rt125, rt126, rt127, rt128, rt129, rt130, rt131, rt132, rt133, rt134, rt135, rt136, rt137, rt138, rt139, rt140, rt141, rt142, rt143, rt144, rt145, rt146, rt147, rt148, rt149, rt150, rt151, rt152, rt153, rt154, rt155, rt156, rt157, rt158, rt159, rt160, rt161, rt162, rt163, rt164, rt165, rt166, rt167, rt168, rt169, rt170, rt171, rt172, rt173, rt174, rt175, rt176, rt177, rt178, rt179, rt180, rt181, rt182, rt183, rt184, rt185, rt186, rt187, rt188, rt189}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL StSamplePlayer::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0,};static const char *rs26[]={(const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0,};static const char *rs31[]={(const char*)0, (const char*)0,};static const char *rs32[]={(const char*)0, (const char*)0,};static const char *rs33[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs34[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs35[]={(const char*)0, (const char*)0,};static const char *rs36[]={(const char*)0, (const char*)0,};static const char *rs37[]={(const char*)0, (const char*)0,};static const char *rs38[]={(const char*)0,};static const char *rs39[]={(const char*)0,};static const char *rs40[]={(const char*)0,};static const char *rs41[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs42[]={(const char*)0,};static const char *rs43[]={(const char*)0, (const char*)0,};static const char *rs44[]={(const char*)0,};static const char *rs45[]={(const char*)0, (const char*)0,};static const char *rs46[]={(const char*)0,};static const char *rs47[]={(const char*)0, (const char*)0,};static const char *rs48[]={(const char*)0,};static const char *rs49[]={(const char*)0, (const char*)0,};static const char *rs50[]={(const char*)0,};static const char *rs51[]={(const char*)0, (const char*)0,};static const char *rs52[]={(const char*)0,};static const char *rs53[]={(const char*)0, (const char*)0,};static const char *rs54[]={(const char*)0,};static const char *rs55[]={(const char*)0, (const char*)0,};static const char *rs56[]={(const char*)0,};static const char *rs57[]={(const char*)0, (const char*)0,};static const char *rs58[]={(const char*)0, (const char*)0,};static const char *rs59[]={(const char*)0,};static const char *rs60[]={(const char*)0, (const char*)0,};static const char *rs61[]={(const char*)0,};static const char *rs62[]={(const char*)0, (const char*)0,};static const char *rs63[]={(const char*)0,};static const char *rs64[]={(const char*)0, (const char*)0,};static const char *rs65[]={(const char*)0,};static const char *rs66[]={(const char*)0, (const char*)0,};static const char *rs67[]={(const char*)0,};static const char *rs68[]={(const char*)0, (const char*)0,};static const char *rs69[]={(const char*)0,};static const char *rs70[]={(const char*)0, (const char*)0,};static const char *rs71[]={(const char*)0,};static const char *rs72[]={(const char*)0, (const char*)0,};static const char *rs73[]={(const char*)0,};static const char *rs74[]={(const char*)0, (const char*)0,};static const char *rs75[]={(const char*)0,};static const char *rs76[]={(const char*)0, (const char*)0,};static const char *rs77[]={(const char*)0,};static const char *rs78[]={(const char*)0, (const char*)0,};static const char *rs79[]={(const char*)0,};static const char *rs80[]={(const char*)0, (const char*)0,};static const char *rs81[]={(const char*)0,};static const char *rs82[]={(const char*)0, (const char*)0,};static const char *rs83[]={(const char*)0,};static const char *rs84[]={(const char*)0, (const char*)0,};static const char *rs85[]={(const char*)0,};static const char *rs86[]={(const char*)0, (const char*)0,};static const char *rs87[]={(const char*)0,};static const char *rs88[]={(const char*)0, (const char*)0,};static const char *rs89[]={(const char*)0,};static const char *rs90[]={(const char*)0, (const char*)0,};static const char *rs91[]={(const char*)0,};static const char *rs92[]={(const char*)0, (const char*)0,};static const char *rs93[]={(const char*)0,};static const char *rs94[]={(const char*)0, (const char*)0,};static const char *rs95[]={(const char*)0,};static const char *rs96[]={(const char*)0, (const char*)0,};static const char *rs97[]={(const char*)0,};static const char *rs98[]={(const char*)0, (const char*)0,};static const char *rs99[]={(const char*)0,};static const char *rs100[]={(const char*)0, (const char*)0,};static const char *rs101[]={(const char*)0,};static const char *rs102[]={(const char*)0, (const char*)0,};static const char *rs103[]={(const char*)0,};static const char *rs104[]={(const char*)0, (const char*)0,};static const char *rs105[]={(const char*)0,};static const char *rs106[]={(const char*)0, (const char*)0,};static const char *rs107[]={(const char*)0,};static const char *rs108[]={(const char*)0, (const char*)0,};static const char *rs109[]={(const char*)0,};static const char *rs110[]={(const char*)0, (const char*)0,};static const char *rs111[]={(const char*)0,};static const char *rs112[]={(const char*)0, (const char*)0,};static const char *rs113[]={(const char*)0,};static const char *rs114[]={(const char*)0, (const char*)0,};static const char *rs115[]={(const char*)0,};static const char *rs116[]={(const char*)0, (const char*)0,};static const char *rs117[]={(const char*)0,};static const char *rs118[]={(const char*)0, (const char*)0,};static const char *rs119[]={(const char*)0,};static const char *rs120[]={(const char*)0, (const char*)0,};static const char *rs121[]={(const char*)0,};static const char *rs122[]={(const char*)0, (const char*)0,};static const char *rs123[]={(const char*)0,};static const char *rs124[]={(const char*)0, (const char*)0,};static const char *rs125[]={(const char*)0,};static const char *rs126[]={(const char*)0, (const char*)0,};static const char *rs127[]={(const char*)0,};static const char *rs128[]={(const char*)0, (const char*)0,};static const char *rs129[]={(const char*)0,};static const char *rs130[]={(const char*)0, (const char*)0,};static const char *rs131[]={(const char*)0,};static const char *rs132[]={(const char*)0, (const char*)0,};static const char *rs133[]={(const char*)0,};static const char *rs134[]={(const char*)0, (const char*)0,};static const char *rs135[]={(const char*)0,};static const char *rs136[]={(const char*)0, (const char*)0,};static const char *rs137[]={(const char*)0,};static const char *rs138[]={(const char*)0, (const char*)0,};static const char *rs139[]={(const char*)0,};static const char *rs140[]={(const char*)0, (const char*)0,};static const char *rs141[]={(const char*)0,};static const char *rs142[]={(const char*)0, (const char*)0,};static const char *rs143[]={(const char*)0,};static const char *rs144[]={(const char*)0, (const char*)0,};static const char *rs145[]={(const char*)0,};static const char *rs146[]={(const char*)0, (const char*)0,};static const char *rs147[]={(const char*)0,};static const char *rs148[]={(const char*)0, (const char*)0,};static const char *rs149[]={(const char*)0,};static const char *rs150[]={(const char*)0, (const char*)0,};static const char *rs151[]={(const char*)0,};static const char *rs152[]={(const char*)0, (const char*)0,};static const char *rs153[]={(const char*)0,};static const char *rs154[]={(const char*)0, (const char*)0,};static const char *rs155[]={(const char*)0,};static const char *rs156[]={(const char*)0, (const char*)0,};static const char *rs157[]={(const char*)0,};static const char *rs158[]={(const char*)0, (const char*)0,};static const char *rs159[]={(const char*)0,};static const char *rs160[]={(const char*)0,};static const char *rs161[]={(const char*)0,};static const char *rs162[]={(const char*)0,};static const char *rs163[]={(const char*)0,};static const char *rs164[]={(const char*)0,};static const char *rs165[]={(const char*)0,};static const char *rs166[]={(const char*)0,};static const char *rs167[]={(const char*)0, (const char*)0,};static const char *rs168[]={(const char*)0, (const char*)0,};static const char *rs169[]={(const char*)0, (const char*)0,};static const char *rs170[]={(const char*)0,};static const char *rs171[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs172[]={(const char*)0,};static const char *rs173[]={(const char*)0,};static const char *rs174[]={(const char*)0,};static const char *rs175[]={(const char*)0,};static const char *rs176[]={(const char*)0,};static const char *rs177[]={(const char*)0, (const char*)0,};static const char *rs178[]={(const char*)0, (const char*)0,};static const char *rs179[]={(const char*)0, (const char*)0,};static const char *rs180[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs181[]={(const char*)0, (const char*)0,};static const char *rs182[]={(const char*)0,};static const char *rs183[]={(const char*)0,};static const char *rs184[]={(const char*)0,};static const char *rs185[]={(const char*)0,};static const char *rs186[]={(const char*)0,};static const char *rs187[]={(const char*)0, (const char*)0,};static const char *rs188[]={(const char*)0,};static const char *rs189[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40, rs41, rs42, rs43, rs44, rs45, rs46, rs47, rs48, rs49, rs50, rs51, rs52, rs53, rs54, rs55, rs56, rs57, rs58, rs59, rs60, rs61, rs62, rs63, rs64, rs65, rs66, rs67, rs68, rs69, rs70, rs71, rs72, rs73, rs74, rs75, rs76, rs77, rs78, rs79, rs80, rs81, rs82, rs83, rs84, rs85, rs86, rs87, rs88, rs89, rs90, rs91, rs92, rs93, rs94, rs95, rs96, rs97, rs98, rs99, rs100, rs101, rs102, rs103, rs104, rs105, rs106, rs107, rs108, rs109, rs110, rs111, rs112, rs113, rs114, rs115, rs116, rs117, rs118, rs119, rs120, rs121, rs122, rs123, rs124, rs125, rs126, rs127, rs128, rs129, rs130, rs131, rs132, rs133, rs134, rs135, rs136, rs137, rs138, rs139, rs140, rs141, rs142, rs143, rs144, rs145, rs146, rs147, rs148, rs149, rs150, rs151, rs152, rs153, rs154, rs155, rs156, rs157, rs158, rs159, rs160, rs161, rs162, rs163, rs164, rs165, rs166, rs167, rs168, rs169, rs170, rs171, rs172, rs173, rs174, rs175, rs176, rs177, rs178, rs179, rs180, rs181, rs182, rs183, rs184, rs185, rs186, rs187, rs188, rs189}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StSamplePlayer::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 1, 1, 1, 1, 1, 1, 3, 3, 3, 0, 2, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL StSamplePlayer::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL StSamplePlayer::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)StSamplePlayer__resetModulators, (void*)StSamplePlayer__allocVoices, (void*)StSamplePlayer__getNumVoices, (void*)StSamplePlayer__getNumUsedVoices, (void*)StSamplePlayer__getNumActiveVoices, (void*)StSamplePlayer__getNumPlayingVoices, (void*)StSamplePlayer__getNumActiveNotes, (void*)StSamplePlayer___getVoice, (void*)StSamplePlayer___findFirstActiveVoiceBySample, (void*)StSamplePlayer___findLastStartedVoiceBySample, (void*)StSamplePlayer__setDefaultMixRate, (void*)StSamplePlayer__getDefaultMixRate, (void*)StSamplePlayer__setDefaultFreqTable, (void*)StSamplePlayer__getDefaultFreqTable, (void*)StSamplePlayer__setVolume, (void*)StSamplePlayer__getVolume, (void*)StSamplePlayer__setPolyMode, (void*)StSamplePlayer__getPolyMode, (void*)StSamplePlayer__allNotesOff, (void*)StSamplePlayer__allNotesOffRelease, (void*)StSamplePlayer__resetVoices, (void*)StSamplePlayer__resetVoicesBySample, (void*)StSamplePlayer__stopVoicesByKey, (void*)StSamplePlayer__stopVoicesBySample, (void*)StSamplePlayer__stopLFOVolBySample, (void*)StSamplePlayer__stopLFOPanBySample, (void*)StSamplePlayer__stopLFOFreqBySample, (void*)StSamplePlayer__stopADSRVolBySample, (void*)StSamplePlayer__stopADSRPanBySample, (void*)StSamplePlayer__stopADSRFreqBySample, (void*)StSamplePlayer__noteOff, (void*)StSamplePlayer__noteOffByKey, (void*)StSamplePlayer__startSample, (void*)StSamplePlayer__startSampleBank, (void*)StSamplePlayer___findVoicesByKey, (void*)StSamplePlayer___findPreviousGlideNoteByKeyAndHistoryIdx, (void*)StSamplePlayer___removeFromGlideNoteHistory, (void*)StSamplePlayer___initStartedVoicesByKey, (void*)StSamplePlayer___restartVoicesByKey, (void*)StSamplePlayer___render, (void*)StSamplePlayer___renderWithInputs, (void*)StSamplePlayer__updateVol, (void*)StSamplePlayer__updateVolByKey, (void*)StSamplePlayer__updatePan, (void*)StSamplePlayer__updatePanByKey, (void*)StSamplePlayer__updateFreq, (void*)StSamplePlayer__updateFreqByKey, (void*)StSamplePlayer__updateFreq2, (void*)StSamplePlayer__updateFreq2ByKey, (void*)StSamplePlayer__updateMod, (void*)StSamplePlayer__updateModByKey, (void*)StSamplePlayer__updateTimestretch, (void*)StSamplePlayer__updateTimestretchByKey, (void*)StSamplePlayer__updateTimestretchBend, (void*)StSamplePlayer__updateTimestretchBendByKey, (void*)StSamplePlayer__updateSampleOff, (void*)StSamplePlayer__updateSampleOffByKey, (void*)StSamplePlayer__setInitialSampleOffsetMsByKey, (void*)StSamplePlayer__updateCycleLen, (void*)StSamplePlayer__updateCycleLenByKey, (void*)StSamplePlayer__updateSampleShift, (void*)StSamplePlayer__updateSampleShiftByKey, (void*)StSamplePlayer__updateSampleShiftEndOfLoop, (void*)StSamplePlayer__updateSampleShiftEndOfLoopByKey, (void*)StSamplePlayer__updateAltVolume, (void*)StSamplePlayer__updateAltVolumeByKey, (void*)StSamplePlayer__updateRetrigMask, (void*)StSamplePlayer__updateRetrigMaskByKey, (void*)StSamplePlayer__updateLFOFreqSpd, (void*)StSamplePlayer__updateLFOFreqSpdByKey, (void*)StSamplePlayer__updateLFOFreqLvl, (void*)StSamplePlayer__updateLFOFreqLvlByKey, (void*)StSamplePlayer__updateLFOFreqAmt, (void*)StSamplePlayer__updateLFOFreqAmtByKey, (void*)StSamplePlayer__updateLFOVolSpd, (void*)StSamplePlayer__updateLFOVolSpdByKey, (void*)StSamplePlayer__updateLFOVolLvl, (void*)StSamplePlayer__updateLFOVolLvlByKey, (void*)StSamplePlayer__updateLFOVolAmt, (void*)StSamplePlayer__updateLFOVolAmtByKey, (void*)StSamplePlayer__updateLFOPanSpd, (void*)StSamplePlayer__updateLFOPanSpdByKey, (void*)StSamplePlayer__updateLFOPanLvl, (void*)StSamplePlayer__updateLFOPanLvlByKey, (void*)StSamplePlayer__updateLFOPanAmt, (void*)StSamplePlayer__updateLFOPanAmtByKey, (void*)StSamplePlayer__updateLFOAuxSpd, (void*)StSamplePlayer__updateLFOAuxSpdByKey, (void*)StSamplePlayer__updateLFOAuxLvl, (void*)StSamplePlayer__updateLFOAuxLvlByKey, (void*)StSamplePlayer__updateLFOAuxFltAmt, (void*)StSamplePlayer__updateLFOAuxFltAmtByKey, (void*)StSamplePlayer__updateADSRFreqSpd, (void*)StSamplePlayer__updateADSRFreqSpdByKey, (void*)StSamplePlayer__updateADSRFreqLvl, (void*)StSamplePlayer__updateADSRFreqLvlByKey, (void*)StSamplePlayer__updateADSRFreqInt, (void*)StSamplePlayer__updateADSRFreqIntByKey, (void*)StSamplePlayer__updateADSRVolSpd, (void*)StSamplePlayer__updateADSRVolSpdByKey, (void*)StSamplePlayer__updateADSRVolLvl, (void*)StSamplePlayer__updateADSRVolLvlByKey, (void*)StSamplePlayer__updateADSRVolInt, (void*)StSamplePlayer__updateADSRVolIntByKey, (void*)StSamplePlayer__updateADSRPanSpd, (void*)StSamplePlayer__updateADSRPanSpdByKey, (void*)StSamplePlayer__updateADSRPanLvl, (void*)StSamplePlayer__updateADSRPanLvlByKey, (void*)StSamplePlayer__updateADSRPanInt, (void*)StSamplePlayer__updateADSRPanIntByKey, (void*)StSamplePlayer__updateADSRAuxSpd, (void*)StSamplePlayer__updateADSRAuxSpdByKey, (void*)StSamplePlayer__updateADSRAuxLvl, (void*)StSamplePlayer__updateADSRAuxLvlByKey, (void*)StSamplePlayer__updateADSRAuxInt, (void*)StSamplePlayer__updateADSRAuxIntByKey, (void*)StSamplePlayer__updateJumpToLoop, (void*)StSamplePlayer__updateJumpToLoopByKey, (void*)StSamplePlayer__updateJumpToLoopRel, (void*)StSamplePlayer__updateJumpToLoopRelByKey, (void*)StSamplePlayer__updateWavepathIndex, (void*)StSamplePlayer__updateWavepathIndexByKey, (void*)StSamplePlayer__updateAFreqSpd, (void*)StSamplePlayer__updateAFreqSpdByKey, (void*)StSamplePlayer__updateSFreqSpd, (void*)StSamplePlayer__updateSFreqSpdByKey, (void*)StSamplePlayer__updateRFreqSpd, (void*)StSamplePlayer__updateRFreqSpdByKey, (void*)StSamplePlayer__updateAVolSpd, (void*)StSamplePlayer__updateAVolSpdByKey, (void*)StSamplePlayer__updateSVolSpd, (void*)StSamplePlayer__updateSVolSpdByKey, (void*)StSamplePlayer__updateRVolSpd, (void*)StSamplePlayer__updateRVolSpdByKey, (void*)StSamplePlayer__updateAPanSpd, (void*)StSamplePlayer__updateAPanSpdByKey, (void*)StSamplePlayer__updateSPanSpd, (void*)StSamplePlayer__updateSPanSpdByKey, (void*)StSamplePlayer__updateRPanSpd, (void*)StSamplePlayer__updateRPanSpdByKey, (void*)StSamplePlayer__updateAAuxSpd, (void*)StSamplePlayer__updateAAuxSpdByKey, (void*)StSamplePlayer__updateSAuxSpd, (void*)StSamplePlayer__updateSAuxSpdByKey, (void*)StSamplePlayer__updateRAuxSpd, (void*)StSamplePlayer__updateRAuxSpdByKey, (void*)StSamplePlayer__updateGlideSwitch, (void*)StSamplePlayer__updateGlideSwitchByKey, (void*)StSamplePlayer__updateGlideSpeed, (void*)StSamplePlayer__updateGlideSpeedByKey, (void*)StSamplePlayer__updateFltCutOff, (void*)StSamplePlayer__updateFltCutOffByKey, (void*)StSamplePlayer__updateFltPan, (void*)StSamplePlayer__updateFltPanByKey, (void*)StSamplePlayer__updateFltOffset, (void*)StSamplePlayer__updateFltOffsetByKey, (void*)StSamplePlayer__updateFltRes, (void*)StSamplePlayer__updateFltResByKey, (void*)StSamplePlayer__resetLFOFreqPhase, (void*)StSamplePlayer__resetLFOFreqPhaseByKey, (void*)StSamplePlayer__resetLFOVolPhase, (void*)StSamplePlayer__resetLFOVolPhaseByKey, (void*)StSamplePlayer__resetLFOPanPhase, (void*)StSamplePlayer__resetLFOPanPhaseByKey, (void*)StSamplePlayer__resetLFOAuxPhase, (void*)StSamplePlayer__resetLFOAuxPhaseByKey, (void*)StSamplePlayer__updatePerfCtl, (void*)StSamplePlayer__updatePerfCtlMSB7, (void*)StSamplePlayer__updatePerfCtlLSB7, (void*)StSamplePlayer__updatePerfCtls, (void*)StSamplePlayer__updatePerfCtlByKey, (void*)StSamplePlayer__setSustainPedal, (void*)StSamplePlayer__getSustainPedal, (void*)StSamplePlayer__setSoftPedal, (void*)StSamplePlayer__getSoftPedal, (void*)StSamplePlayer__getLastVoiceKey, (void*)StSamplePlayer__findUniqueSamplesByVoiceKey, (void*)StSamplePlayer__getNoteHistory, (void*)StSamplePlayer__setTempo, (void*)StSamplePlayer__startLiveRecording, (void*)StSamplePlayer__stopLiveRecording, (void*)StSamplePlayer__setLiveRecLoopShift, (void*)StSamplePlayer__setLiveRecSampleBank, (void*)StSamplePlayer__setLiveRecDoubleBufferIndex, (void*)StSamplePlayer__uiCheckResetAnyRedrawFlag, (void*)StSamplePlayer__unloadVoicePlugins, (void*)StSamplePlayer__handleReorderVoicePlugins, (void*)StSamplePlayer__setLastStartedSampleBankHint, (void*)StSamplePlayer__getLastStartedSampleBankHint}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL StSamplePlayer::yacConstantGetNum                (void) {return 5;}
const char **YAC_VCALL StSamplePlayer::yacConstantGetNames              (void) {
#ifndef YAC_NO_HOST
static const char*r[]={"STSAMPLEPLAYER_MAXVOICES", "STSAMPLEPLAYER_POLYMODE_OLDEST", "STSAMPLEPLAYER_POLYMODE_LOWEST", "STSAMPLEPLAYER_POLYMODE_HIGHEST", "STSAMPLEPLAYER_NUM_POLYMODES"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StSamplePlayer::yacConstantGetTypes              (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={1, 1, 1, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
yacmemptr    YAC_VCALL StSamplePlayer::yacConstantGetValues             (void) {yacmemptr m;
#ifndef YAC_NO_HOST
static sUI r[5]; m.ui=r; m.si[0]=(sSI)256;m.si[1]=(sSI)0;m.si[2]=(sSI)1;m.si[3]=(sSI)2;m.si[4]=(sSI)3;; return m;
#else
m.any = 0; return m;
#endif // YAC_NO_HOST
}

YAC_C(StSamplePlayer, "StSamplePlayer");

#ifndef YAC_NO_HOST
void  YAC_CALL StSamplePlayer__resetModulators(void *_o                      ) {((StSamplePlayer*)_o)->resetModulators();}
sSI   YAC_CALL StSamplePlayer__allocVoices(void *_o, yacmemptr _args         ) {return (sSI)((StSamplePlayer*)_o)->allocVoices(_args.mem[0].si);}
sSI   YAC_CALL StSamplePlayer__getNumVoices(void *_o                         ) {return (sSI)((StSamplePlayer*)_o)->getNumVoices();}
sSI   YAC_CALL StSamplePlayer__getNumUsedVoices(void *_o                     ) {return (sSI)((StSamplePlayer*)_o)->getNumUsedVoices();}
sSI   YAC_CALL StSamplePlayer__getNumActiveVoices(void *_o                   ) {return (sSI)((StSamplePlayer*)_o)->getNumActiveVoices();}
sSI   YAC_CALL StSamplePlayer__getNumPlayingVoices(void *_o                  ) {return (sSI)((StSamplePlayer*)_o)->getNumPlayingVoices();}
sSI   YAC_CALL StSamplePlayer__getNumActiveNotes(void *_o                    ) {return (sSI)((StSamplePlayer*)_o)->getNumActiveNotes();}
void* YAC_CALL StSamplePlayer___getVoice(void *_o, yacmemptr _args           ) {return (void*)((StSamplePlayer*)_o)->_getVoice(_args.mem[0].si);}
void* YAC_CALL StSamplePlayer___findFirstActiveVoiceBySample(void *_o, yacmemptr _args) {return (void*)((StSamplePlayer*)_o)->_findFirstActiveVoiceBySample(_args.mem[0].o);}
void* YAC_CALL StSamplePlayer___findLastStartedVoiceBySample(void *_o, yacmemptr _args) {return (void*)((StSamplePlayer*)_o)->_findLastStartedVoiceBySample(_args.mem[0].o);}
void  YAC_CALL StSamplePlayer__setDefaultMixRate(void *_o, yacmemptr _args   ) {((StSamplePlayer*)_o)->setDefaultMixRate(_args.mem[0].f32);}
sF32  YAC_CALL StSamplePlayer__getDefaultMixRate(void *_o                    ) {return (sF32)((StSamplePlayer*)_o)->getDefaultMixRate();}
void  YAC_CALL StSamplePlayer__setDefaultFreqTable(void *_o, yacmemptr _args ) {((StSamplePlayer*)_o)->setDefaultFreqTable(_args.mem[0].o);}
void* YAC_CALL StSamplePlayer__getDefaultFreqTable(void *_o                  ) {return (void*)((StSamplePlayer*)_o)->getDefaultFreqTable();}
void  YAC_CALL StSamplePlayer__setVolume(void *_o, yacmemptr _args           ) {((StSamplePlayer*)_o)->setVolume(_args.mem[0].f32);}
sF32  YAC_CALL StSamplePlayer__getVolume(void *_o                            ) {return (sF32)((StSamplePlayer*)_o)->getVolume();}
void  YAC_CALL StSamplePlayer__setPolyMode(void *_o, yacmemptr _args         ) {((StSamplePlayer*)_o)->setPolyMode(_args.mem[0].si);}
sSI   YAC_CALL StSamplePlayer__getPolyMode(void *_o                          ) {return (sSI)((StSamplePlayer*)_o)->getPolyMode();}
void  YAC_CALL StSamplePlayer__allNotesOff(void *_o                          ) {((StSamplePlayer*)_o)->allNotesOff();}
void  YAC_CALL StSamplePlayer__allNotesOffRelease(void *_o                   ) {((StSamplePlayer*)_o)->allNotesOffRelease();}
void  YAC_CALL StSamplePlayer__resetVoices(void *_o                          ) {((StSamplePlayer*)_o)->resetVoices();}
void  YAC_CALL StSamplePlayer__resetVoicesBySample(void *_o, yacmemptr _args ) {((StSamplePlayer*)_o)->resetVoicesBySample(_args.mem[0].o);}
void  YAC_CALL StSamplePlayer__stopVoicesByKey(void *_o, yacmemptr _args     ) {((StSamplePlayer*)_o)->stopVoicesByKey(_args.mem[0].si);}
void  YAC_CALL StSamplePlayer__stopVoicesBySample(void *_o, yacmemptr _args  ) {((StSamplePlayer*)_o)->stopVoicesBySample(_args.mem[0].o);}
void  YAC_CALL StSamplePlayer__stopLFOVolBySample(void *_o, yacmemptr _args  ) {((StSamplePlayer*)_o)->stopLFOVolBySample(_args.mem[0].o);}
void  YAC_CALL StSamplePlayer__stopLFOPanBySample(void *_o, yacmemptr _args  ) {((StSamplePlayer*)_o)->stopLFOPanBySample(_args.mem[0].o);}
void  YAC_CALL StSamplePlayer__stopLFOFreqBySample(void *_o, yacmemptr _args ) {((StSamplePlayer*)_o)->stopLFOFreqBySample(_args.mem[0].o);}
void  YAC_CALL StSamplePlayer__stopADSRVolBySample(void *_o, yacmemptr _args ) {((StSamplePlayer*)_o)->stopADSRVolBySample(_args.mem[0].o);}
void  YAC_CALL StSamplePlayer__stopADSRPanBySample(void *_o, yacmemptr _args ) {((StSamplePlayer*)_o)->stopADSRPanBySample(_args.mem[0].o);}
void  YAC_CALL StSamplePlayer__stopADSRFreqBySample(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->stopADSRFreqBySample(_args.mem[0].o);}
sSI   YAC_CALL StSamplePlayer__noteOff(void *_o, yacmemptr _args             ) {return (sSI)((StSamplePlayer*)_o)->noteOff(_args.mem[0].si, _args.mem[1].f32);}
sSI   YAC_CALL StSamplePlayer__noteOffByKey(void *_o, yacmemptr _args        ) {return (sSI)((StSamplePlayer*)_o)->noteOffByKey(_args.mem[0].si, _args.mem[1].f32);}
sSI   YAC_CALL StSamplePlayer__startSample(void *_o, yacmemptr _args         ) {return (sSI)((StSamplePlayer*)_o)->startSample(_args.mem[0].o, _args.mem[1].o, _args.mem[2].si, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32);}
sSI   YAC_CALL StSamplePlayer__startSampleBank(void *_o, yacmemptr _args     ) {return (sSI)((StSamplePlayer*)_o)->startSampleBank(_args.mem[0].o, _args.mem[1].o, _args.mem[2].si, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32);}
sSI   YAC_CALL StSamplePlayer___findVoicesByKey(void *_o, yacmemptr _args    ) {return (sSI)((StSamplePlayer*)_o)->_findVoicesByKey(_args.mem[0].si, _args.mem[1].o);}
sSI   YAC_CALL StSamplePlayer___findPreviousGlideNoteByKeyAndHistoryIdx(void *_o, yacmemptr _args) {return (sSI)((StSamplePlayer*)_o)->_findPreviousGlideNoteByKeyAndHistoryIdx(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL StSamplePlayer___removeFromGlideNoteHistory(void *_o, yacmemptr _args) {return (sSI)((StSamplePlayer*)_o)->_removeFromGlideNoteHistory(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL StSamplePlayer___initStartedVoicesByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->_initStartedVoicesByKey(_args.mem[0].si);}
void  YAC_CALL StSamplePlayer___restartVoicesByKey(void *_o, yacmemptr _args ) {((StSamplePlayer*)_o)->_restartVoicesByKey(_args.mem[0].si);}
void  YAC_CALL StSamplePlayer___render(void *_o, yacmemptr _args             ) {((StSamplePlayer*)_o)->_render(_args.mem[0].o);}
void  YAC_CALL StSamplePlayer___renderWithInputs(void *_o, yacmemptr _args   ) {((StSamplePlayer*)_o)->_renderWithInputs(_args.mem[0].o, _args.mem[1].o, _args.mem[2].si, _args.mem[3].si);}
void  YAC_CALL StSamplePlayer__updateVol(void *_o, yacmemptr _args           ) {((StSamplePlayer*)_o)->updateVol(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateVolByKey(void *_o, yacmemptr _args      ) {((StSamplePlayer*)_o)->updateVolByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updatePan(void *_o, yacmemptr _args           ) {((StSamplePlayer*)_o)->updatePan(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updatePanByKey(void *_o, yacmemptr _args      ) {((StSamplePlayer*)_o)->updatePanByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateFreq(void *_o, yacmemptr _args          ) {((StSamplePlayer*)_o)->updateFreq(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateFreqByKey(void *_o, yacmemptr _args     ) {((StSamplePlayer*)_o)->updateFreqByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateFreq2(void *_o, yacmemptr _args         ) {((StSamplePlayer*)_o)->updateFreq2(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateFreq2ByKey(void *_o, yacmemptr _args    ) {((StSamplePlayer*)_o)->updateFreq2ByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateMod(void *_o, yacmemptr _args           ) {((StSamplePlayer*)_o)->updateMod(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateModByKey(void *_o, yacmemptr _args      ) {((StSamplePlayer*)_o)->updateModByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateTimestretch(void *_o, yacmemptr _args   ) {((StSamplePlayer*)_o)->updateTimestretch(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateTimestretchByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateTimestretchByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateTimestretchBend(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateTimestretchBend(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateTimestretchBendByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateTimestretchBendByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateSampleOff(void *_o, yacmemptr _args     ) {((StSamplePlayer*)_o)->updateSampleOff(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateSampleOffByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateSampleOffByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__setInitialSampleOffsetMsByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->setInitialSampleOffsetMsByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateCycleLen(void *_o, yacmemptr _args      ) {((StSamplePlayer*)_o)->updateCycleLen(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateCycleLenByKey(void *_o, yacmemptr _args ) {((StSamplePlayer*)_o)->updateCycleLenByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateSampleShift(void *_o, yacmemptr _args   ) {((StSamplePlayer*)_o)->updateSampleShift(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateSampleShiftByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateSampleShiftByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateSampleShiftEndOfLoop(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateSampleShiftEndOfLoop(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateSampleShiftEndOfLoopByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateSampleShiftEndOfLoopByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateAltVolume(void *_o, yacmemptr _args     ) {((StSamplePlayer*)_o)->updateAltVolume(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateAltVolumeByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateAltVolumeByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateRetrigMask(void *_o, yacmemptr _args    ) {((StSamplePlayer*)_o)->updateRetrigMask(_args.mem[0].si);}
void  YAC_CALL StSamplePlayer__updateRetrigMaskByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateRetrigMaskByKey(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL StSamplePlayer__updateLFOFreqSpd(void *_o, yacmemptr _args    ) {((StSamplePlayer*)_o)->updateLFOFreqSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateLFOFreqSpdByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateLFOFreqSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateLFOFreqLvl(void *_o, yacmemptr _args    ) {((StSamplePlayer*)_o)->updateLFOFreqLvl(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateLFOFreqLvlByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateLFOFreqLvlByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateLFOFreqAmt(void *_o, yacmemptr _args    ) {((StSamplePlayer*)_o)->updateLFOFreqAmt(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateLFOFreqAmtByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateLFOFreqAmtByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateLFOVolSpd(void *_o, yacmemptr _args     ) {((StSamplePlayer*)_o)->updateLFOVolSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateLFOVolSpdByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateLFOVolSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateLFOVolLvl(void *_o, yacmemptr _args     ) {((StSamplePlayer*)_o)->updateLFOVolLvl(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateLFOVolLvlByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateLFOVolLvlByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateLFOVolAmt(void *_o, yacmemptr _args     ) {((StSamplePlayer*)_o)->updateLFOVolAmt(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateLFOVolAmtByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateLFOVolAmtByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateLFOPanSpd(void *_o, yacmemptr _args     ) {((StSamplePlayer*)_o)->updateLFOPanSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateLFOPanSpdByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateLFOPanSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateLFOPanLvl(void *_o, yacmemptr _args     ) {((StSamplePlayer*)_o)->updateLFOPanLvl(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateLFOPanLvlByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateLFOPanLvlByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateLFOPanAmt(void *_o, yacmemptr _args     ) {((StSamplePlayer*)_o)->updateLFOPanAmt(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateLFOPanAmtByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateLFOPanAmtByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateLFOAuxSpd(void *_o, yacmemptr _args     ) {((StSamplePlayer*)_o)->updateLFOAuxSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateLFOAuxSpdByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateLFOAuxSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateLFOAuxLvl(void *_o, yacmemptr _args     ) {((StSamplePlayer*)_o)->updateLFOAuxLvl(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateLFOAuxLvlByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateLFOAuxLvlByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateLFOAuxFltAmt(void *_o, yacmemptr _args  ) {((StSamplePlayer*)_o)->updateLFOAuxFltAmt(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateLFOAuxFltAmtByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateLFOAuxFltAmtByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateADSRFreqSpd(void *_o, yacmemptr _args   ) {((StSamplePlayer*)_o)->updateADSRFreqSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateADSRFreqSpdByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateADSRFreqSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateADSRFreqLvl(void *_o, yacmemptr _args   ) {((StSamplePlayer*)_o)->updateADSRFreqLvl(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateADSRFreqLvlByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateADSRFreqLvlByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateADSRFreqInt(void *_o, yacmemptr _args   ) {((StSamplePlayer*)_o)->updateADSRFreqInt(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateADSRFreqIntByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateADSRFreqIntByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateADSRVolSpd(void *_o, yacmemptr _args    ) {((StSamplePlayer*)_o)->updateADSRVolSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateADSRVolSpdByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateADSRVolSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateADSRVolLvl(void *_o, yacmemptr _args    ) {((StSamplePlayer*)_o)->updateADSRVolLvl(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateADSRVolLvlByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateADSRVolLvlByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateADSRVolInt(void *_o, yacmemptr _args    ) {((StSamplePlayer*)_o)->updateADSRVolInt(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateADSRVolIntByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateADSRVolIntByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateADSRPanSpd(void *_o, yacmemptr _args    ) {((StSamplePlayer*)_o)->updateADSRPanSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateADSRPanSpdByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateADSRPanSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateADSRPanLvl(void *_o, yacmemptr _args    ) {((StSamplePlayer*)_o)->updateADSRPanLvl(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateADSRPanLvlByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateADSRPanLvlByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateADSRPanInt(void *_o, yacmemptr _args    ) {((StSamplePlayer*)_o)->updateADSRPanInt(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateADSRPanIntByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateADSRPanIntByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateADSRAuxSpd(void *_o, yacmemptr _args    ) {((StSamplePlayer*)_o)->updateADSRAuxSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateADSRAuxSpdByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateADSRAuxSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateADSRAuxLvl(void *_o, yacmemptr _args    ) {((StSamplePlayer*)_o)->updateADSRAuxLvl(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateADSRAuxLvlByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateADSRAuxLvlByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateADSRAuxInt(void *_o, yacmemptr _args    ) {((StSamplePlayer*)_o)->updateADSRAuxInt(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateADSRAuxIntByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateADSRAuxIntByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateJumpToLoop(void *_o, yacmemptr _args    ) {((StSamplePlayer*)_o)->updateJumpToLoop(_args.mem[0].si);}
void  YAC_CALL StSamplePlayer__updateJumpToLoopByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateJumpToLoopByKey(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL StSamplePlayer__updateJumpToLoopRel(void *_o, yacmemptr _args ) {((StSamplePlayer*)_o)->updateJumpToLoopRel(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateJumpToLoopRelByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateJumpToLoopRelByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateWavepathIndex(void *_o, yacmemptr _args ) {((StSamplePlayer*)_o)->updateWavepathIndex(_args.mem[0].si);}
void  YAC_CALL StSamplePlayer__updateWavepathIndexByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateWavepathIndexByKey(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL StSamplePlayer__updateAFreqSpd(void *_o, yacmemptr _args      ) {((StSamplePlayer*)_o)->updateAFreqSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateAFreqSpdByKey(void *_o, yacmemptr _args ) {((StSamplePlayer*)_o)->updateAFreqSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateSFreqSpd(void *_o, yacmemptr _args      ) {((StSamplePlayer*)_o)->updateSFreqSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateSFreqSpdByKey(void *_o, yacmemptr _args ) {((StSamplePlayer*)_o)->updateSFreqSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateRFreqSpd(void *_o, yacmemptr _args      ) {((StSamplePlayer*)_o)->updateRFreqSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateRFreqSpdByKey(void *_o, yacmemptr _args ) {((StSamplePlayer*)_o)->updateRFreqSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateAVolSpd(void *_o, yacmemptr _args       ) {((StSamplePlayer*)_o)->updateAVolSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateAVolSpdByKey(void *_o, yacmemptr _args  ) {((StSamplePlayer*)_o)->updateAVolSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateSVolSpd(void *_o, yacmemptr _args       ) {((StSamplePlayer*)_o)->updateSVolSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateSVolSpdByKey(void *_o, yacmemptr _args  ) {((StSamplePlayer*)_o)->updateSVolSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateRVolSpd(void *_o, yacmemptr _args       ) {((StSamplePlayer*)_o)->updateRVolSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateRVolSpdByKey(void *_o, yacmemptr _args  ) {((StSamplePlayer*)_o)->updateRVolSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateAPanSpd(void *_o, yacmemptr _args       ) {((StSamplePlayer*)_o)->updateAPanSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateAPanSpdByKey(void *_o, yacmemptr _args  ) {((StSamplePlayer*)_o)->updateAPanSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateSPanSpd(void *_o, yacmemptr _args       ) {((StSamplePlayer*)_o)->updateSPanSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateSPanSpdByKey(void *_o, yacmemptr _args  ) {((StSamplePlayer*)_o)->updateSPanSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateRPanSpd(void *_o, yacmemptr _args       ) {((StSamplePlayer*)_o)->updateRPanSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateRPanSpdByKey(void *_o, yacmemptr _args  ) {((StSamplePlayer*)_o)->updateRPanSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateAAuxSpd(void *_o, yacmemptr _args       ) {((StSamplePlayer*)_o)->updateAAuxSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateAAuxSpdByKey(void *_o, yacmemptr _args  ) {((StSamplePlayer*)_o)->updateAAuxSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateSAuxSpd(void *_o, yacmemptr _args       ) {((StSamplePlayer*)_o)->updateSAuxSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateSAuxSpdByKey(void *_o, yacmemptr _args  ) {((StSamplePlayer*)_o)->updateSAuxSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateRAuxSpd(void *_o, yacmemptr _args       ) {((StSamplePlayer*)_o)->updateRAuxSpd(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateRAuxSpdByKey(void *_o, yacmemptr _args  ) {((StSamplePlayer*)_o)->updateRAuxSpdByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateGlideSwitch(void *_o, yacmemptr _args   ) {((StSamplePlayer*)_o)->updateGlideSwitch(_args.mem[0].si);}
void  YAC_CALL StSamplePlayer__updateGlideSwitchByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateGlideSwitchByKey(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL StSamplePlayer__updateGlideSpeed(void *_o, yacmemptr _args    ) {((StSamplePlayer*)_o)->updateGlideSpeed(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateGlideSpeedByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateGlideSpeedByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateFltCutOff(void *_o, yacmemptr _args     ) {((StSamplePlayer*)_o)->updateFltCutOff(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateFltCutOffByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateFltCutOffByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateFltPan(void *_o, yacmemptr _args        ) {((StSamplePlayer*)_o)->updateFltPan(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateFltPanByKey(void *_o, yacmemptr _args   ) {((StSamplePlayer*)_o)->updateFltPanByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateFltOffset(void *_o, yacmemptr _args     ) {((StSamplePlayer*)_o)->updateFltOffset(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateFltOffsetByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->updateFltOffsetByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__updateFltRes(void *_o, yacmemptr _args        ) {((StSamplePlayer*)_o)->updateFltRes(_args.mem[0].f32);}
void  YAC_CALL StSamplePlayer__updateFltResByKey(void *_o, yacmemptr _args   ) {((StSamplePlayer*)_o)->updateFltResByKey(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSamplePlayer__resetLFOFreqPhase(void *_o                    ) {((StSamplePlayer*)_o)->resetLFOFreqPhase();}
void  YAC_CALL StSamplePlayer__resetLFOFreqPhaseByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->resetLFOFreqPhaseByKey(_args.mem[0].si);}
void  YAC_CALL StSamplePlayer__resetLFOVolPhase(void *_o                     ) {((StSamplePlayer*)_o)->resetLFOVolPhase();}
void  YAC_CALL StSamplePlayer__resetLFOVolPhaseByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->resetLFOVolPhaseByKey(_args.mem[0].si);}
void  YAC_CALL StSamplePlayer__resetLFOPanPhase(void *_o                     ) {((StSamplePlayer*)_o)->resetLFOPanPhase();}
void  YAC_CALL StSamplePlayer__resetLFOPanPhaseByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->resetLFOPanPhaseByKey(_args.mem[0].si);}
void  YAC_CALL StSamplePlayer__resetLFOAuxPhase(void *_o                     ) {((StSamplePlayer*)_o)->resetLFOAuxPhase();}
void  YAC_CALL StSamplePlayer__resetLFOAuxPhaseByKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->resetLFOAuxPhaseByKey(_args.mem[0].si);}
void  YAC_CALL StSamplePlayer__updatePerfCtl(void *_o, yacmemptr _args       ) {((StSamplePlayer*)_o)->updatePerfCtl(_args.mem[0].si, _args.mem[1].f32);}
sF32  YAC_CALL StSamplePlayer__updatePerfCtlMSB7(void *_o, yacmemptr _args   ) {return (sF32)((StSamplePlayer*)_o)->updatePerfCtlMSB7(_args.mem[0].si, _args.mem[1].si);}
sF32  YAC_CALL StSamplePlayer__updatePerfCtlLSB7(void *_o, yacmemptr _args   ) {return (sF32)((StSamplePlayer*)_o)->updatePerfCtlLSB7(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL StSamplePlayer__updatePerfCtls(void *_o, yacmemptr _args      ) {((StSamplePlayer*)_o)->updatePerfCtls(_args.mem[0].o);}
void  YAC_CALL StSamplePlayer__updatePerfCtlByKey(void *_o, yacmemptr _args  ) {((StSamplePlayer*)_o)->updatePerfCtlByKey(_args.mem[0].si, _args.mem[1].si, _args.mem[2].f32);}
void  YAC_CALL StSamplePlayer__setSustainPedal(void *_o, yacmemptr _args     ) {((StSamplePlayer*)_o)->setSustainPedal(_args.mem[0].si);}
sSI   YAC_CALL StSamplePlayer__getSustainPedal(void *_o                      ) {return (sSI)((StSamplePlayer*)_o)->getSustainPedal();}
void  YAC_CALL StSamplePlayer__setSoftPedal(void *_o, yacmemptr _args        ) {((StSamplePlayer*)_o)->setSoftPedal(_args.mem[0].si);}
sSI   YAC_CALL StSamplePlayer__getSoftPedal(void *_o                         ) {return (sSI)((StSamplePlayer*)_o)->getSoftPedal();}
sSI   YAC_CALL StSamplePlayer__getLastVoiceKey(void *_o                      ) {return (sSI)((StSamplePlayer*)_o)->getLastVoiceKey();}
void  YAC_CALL StSamplePlayer__findUniqueSamplesByVoiceKey(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->findUniqueSamplesByVoiceKey(_args.mem[0].o, _args.mem[1].si);}
void  YAC_CALL StSamplePlayer__getNoteHistory(void *_o, yacmemptr _args      ) {((StSamplePlayer*)_o)->getNoteHistory(_args.mem[0].o, _args.mem[1].si);}
void  YAC_CALL StSamplePlayer__setTempo(void *_o, yacmemptr _args            ) {((StSamplePlayer*)_o)->setTempo(_args.mem[0].f32, _args.mem[1].si);}
void  YAC_CALL StSamplePlayer__startLiveRecording(void *_o, yacmemptr _args  ) {((StSamplePlayer*)_o)->startLiveRecording(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
void  YAC_CALL StSamplePlayer__stopLiveRecording(void *_o, yacmemptr _args   ) {((StSamplePlayer*)_o)->stopLiveRecording(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL StSamplePlayer__setLiveRecLoopShift(void *_o, yacmemptr _args ) {((StSamplePlayer*)_o)->setLiveRecLoopShift(_args.mem[0].si);}
void  YAC_CALL StSamplePlayer__setLiveRecSampleBank(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->setLiveRecSampleBank(_args.mem[0].o);}
void  YAC_CALL StSamplePlayer__setLiveRecDoubleBufferIndex(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->setLiveRecDoubleBufferIndex(_args.mem[0].si);}
sSI   YAC_CALL StSamplePlayer__uiCheckResetAnyRedrawFlag(void *_o            ) {return (sSI)((StSamplePlayer*)_o)->uiCheckResetAnyRedrawFlag();}
void  YAC_CALL StSamplePlayer__unloadVoicePlugins(void *_o                   ) {((StSamplePlayer*)_o)->unloadVoicePlugins();}
void  YAC_CALL StSamplePlayer__handleReorderVoicePlugins(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->handleReorderVoicePlugins(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL StSamplePlayer__setLastStartedSampleBankHint(void *_o, yacmemptr _args) {((StSamplePlayer*)_o)->setLastStartedSampleBankHint(_args.mem[0].o);}
void* YAC_CALL StSamplePlayer__getLastStartedSampleBankHint(void *_o         ) {return (void*)((StSamplePlayer*)_o)->getLastStartedSampleBankHint();}
#endif // YAC_NO_HOST
