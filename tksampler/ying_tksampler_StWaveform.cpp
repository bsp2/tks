// ---- ying_tksampler_StWaveform.cpp: auto generated by YInG - the YAC interface generator (Fri, 13/Jun/2025 23:42:34)

#ifndef YAC_NO_HOST
void* YAC_CALL StWaveform___getSampleData(void *                   );
sSI   YAC_CALL StWaveform___getNumFrames(void *                    );
void  YAC_CALL StWaveform___setSampleData(void *, yacmemptr        );
sSI   YAC_CALL StWaveform___getNumChannels(void *                  );
void  YAC_CALL StWaveform___setNumChannels(void *, yacmemptr       );
sSI   YAC_CALL StWaveform___getLoopOffset(void *                   );
void  YAC_CALL StWaveform___setLoopOffset(void *, yacmemptr        );
sSI   YAC_CALL StWaveform___getLoopLen(void *                      );
void  YAC_CALL StWaveform___setLoopLen(void *, yacmemptr           );
sF32  YAC_CALL StWaveform___getBaseFrequency(void *                );
void  YAC_CALL StWaveform___setBaseFrequency(void *, yacmemptr     );
sF32  YAC_CALL StWaveform___getSampleRate(void *                   );
void  YAC_CALL StWaveform___setSampleRate(void *, yacmemptr        );
void  YAC_CALL StWaveform___free    (void *                        );
sSI   YAC_CALL StWaveform___alloc   (void *, yacmemptr             );
void* YAC_CALL StWaveform___getName (void *                        );
void  YAC_CALL StWaveform___setName (void *, yacmemptr             );
sSI   YAC_CALL StWaveform___getRingOffset(void *                   );
void  YAC_CALL StWaveform___setRingOffset(void *, yacmemptr        );
sF32  YAC_CALL StWaveform___uiGetLastPlayedOffset(void *           );
void  YAC_CALL StWaveform___uiInvalidateLastPlayedOffset(void *    );
void  YAC_CALL StWaveform___uiSetOffset(void *, yacmemptr          );
sF32  YAC_CALL StWaveform___uiGetOffset(void *                     );
void  YAC_CALL StWaveform___uiSetZoom(void *, yacmemptr            );
sF32  YAC_CALL StWaveform___uiGetZoom(void *                       );
void  YAC_CALL StWaveform___uiSetType(void *, yacmemptr            );
sSI   YAC_CALL StWaveform___uiGetType(void *                       );
void  YAC_CALL StWaveform___uiSetPathName(void *, yacmemptr        );
void* YAC_CALL StWaveform___uiGetPathName(void *                   );
void  YAC_CALL StWaveform___uiSetId (void *, yacmemptr             );
sSI   YAC_CALL StWaveform___uiGetId (void *                        );
void  YAC_CALL StWaveform___uiSetUndo(void *, yacmemptr            );
void* YAC_CALL StWaveform___uiGetUndo(void *                       );
void* YAC_CALL StWaveform___getBwfDescription(void *               );
void  YAC_CALL StWaveform___setBwfDescription(void *, yacmemptr    );
void* YAC_CALL StWaveform___getBwfOriginator(void *                );
void  YAC_CALL StWaveform___setBwfOriginator(void *, yacmemptr     );
void* YAC_CALL StWaveform___getBwfDate(void *                      );
void  YAC_CALL StWaveform___setBwfDate(void *, yacmemptr           );
void* YAC_CALL StWaveform___getBwfTime(void *                      );
void  YAC_CALL StWaveform___setBwfTime(void *, yacmemptr           );
void* YAC_CALL StWaveform___getCuePoints(void *                    );
void* YAC_CALL StWaveform___getOrCreateCuePoints(void *            );
#endif // YAC_NO_HOST

// ------------------ YAC class "StWaveform" reflection map (implementation) ------------------
sUI          YAC_VCALL StWaveform::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL StWaveform::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL StWaveform::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL StWaveform::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL StWaveform::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL StWaveform::yacMethodGetNum                  (void) {return 44;}
const char **YAC_VCALL StWaveform::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "getSampleData", "getNumFrames", "setSampleData", "getNumChannels", "setNumChannels", "getLoopOffset", "setLoopOffset", "getLoopLen", "setLoopLen", "getBaseFrequency", "setBaseFrequency", "getSampleRate", "setSampleRate", "free", "alloc", "getName", "setName", "getRingOffset", "setRingOffset", "uiGetLastPlayedOffset", "uiInvalidateLastPlayedOffset", "uiSetOffset", "uiGetOffset", "uiSetZoom", "uiGetZoom", "uiSetType", "uiGetType", "uiSetPathName", "uiGetPathName", "uiSetId", "uiGetId", "uiSetUndo", "uiGetUndo", "getBwfDescription", "setBwfDescription", "getBwfOriginator", "setBwfOriginator", "getBwfDate", "setBwfDate", "getBwfTime", "setBwfTime", "getCuePoints", "getOrCreateCuePoints"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StWaveform::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 0, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 2, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL StWaveform::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={0,};static const sUI rt3[]={3, 1,};static const sUI rt4[]={0,};static const sUI rt5[]={1,};static const sUI rt6[]={0,};static const sUI rt7[]={1,};static const sUI rt8[]={0,};static const sUI rt9[]={1,};static const sUI rt10[]={0,};static const sUI rt11[]={2,};static const sUI rt12[]={0,};static const sUI rt13[]={2,};static const sUI rt14[]={0,};static const sUI rt15[]={1, 1,};static const sUI rt16[]={0,};static const sUI rt17[]={3,};static const sUI rt18[]={0,};static const sUI rt19[]={1,};static const sUI rt20[]={0,};static const sUI rt21[]={0,};static const sUI rt22[]={2,};static const sUI rt23[]={0,};static const sUI rt24[]={2,};static const sUI rt25[]={0,};static const sUI rt26[]={1,};static const sUI rt27[]={0,};static const sUI rt28[]={3,};static const sUI rt29[]={0,};static const sUI rt30[]={1,};static const sUI rt31[]={0,};static const sUI rt32[]={3,};static const sUI rt33[]={0,};static const sUI rt34[]={0,};static const sUI rt35[]={3,};static const sUI rt36[]={0,};static const sUI rt37[]={3,};static const sUI rt38[]={0,};static const sUI rt39[]={3,};static const sUI rt40[]={0,};static const sUI rt41[]={3,};static const sUI rt42[]={0,};static const sUI rt43[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40, rt41, rt42, rt43}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL StWaveform::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0, (const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0, (const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0,};static const char *rs26[]={(const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0,};static const char *rs31[]={(const char*)0,};static const char *rs32[]={(const char*)0,};static const char *rs33[]={(const char*)0,};static const char *rs34[]={(const char*)0,};static const char *rs35[]={(const char*)0,};static const char *rs36[]={(const char*)0,};static const char *rs37[]={(const char*)0,};static const char *rs38[]={(const char*)0,};static const char *rs39[]={(const char*)0,};static const char *rs40[]={(const char*)0,};static const char *rs41[]={(const char*)0,};static const char *rs42[]={(const char*)0,};static const char *rs43[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40, rs41, rs42, rs43}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StWaveform::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 3, 1, 0, 1, 0, 1, 0, 1, 0, 2, 0, 2, 0, 0, 1, 3, 0, 1, 0, 2, 0, 0, 2, 0, 2, 0, 1, 0, 3, 0, 1, 0, 3, 3, 0, 3, 0, 3, 0, 3, 0, 3, 3}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL StWaveform::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL StWaveform::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)StWaveform___getSampleData, (void*)StWaveform___getNumFrames, (void*)StWaveform___setSampleData, (void*)StWaveform___getNumChannels, (void*)StWaveform___setNumChannels, (void*)StWaveform___getLoopOffset, (void*)StWaveform___setLoopOffset, (void*)StWaveform___getLoopLen, (void*)StWaveform___setLoopLen, (void*)StWaveform___getBaseFrequency, (void*)StWaveform___setBaseFrequency, (void*)StWaveform___getSampleRate, (void*)StWaveform___setSampleRate, (void*)StWaveform___free, (void*)StWaveform___alloc, (void*)StWaveform___getName, (void*)StWaveform___setName, (void*)StWaveform___getRingOffset, (void*)StWaveform___setRingOffset, (void*)StWaveform___uiGetLastPlayedOffset, (void*)StWaveform___uiInvalidateLastPlayedOffset, (void*)StWaveform___uiSetOffset, (void*)StWaveform___uiGetOffset, (void*)StWaveform___uiSetZoom, (void*)StWaveform___uiGetZoom, (void*)StWaveform___uiSetType, (void*)StWaveform___uiGetType, (void*)StWaveform___uiSetPathName, (void*)StWaveform___uiGetPathName, (void*)StWaveform___uiSetId, (void*)StWaveform___uiGetId, (void*)StWaveform___uiSetUndo, (void*)StWaveform___uiGetUndo, (void*)StWaveform___getBwfDescription, (void*)StWaveform___setBwfDescription, (void*)StWaveform___getBwfOriginator, (void*)StWaveform___setBwfOriginator, (void*)StWaveform___getBwfDate, (void*)StWaveform___setBwfDate, (void*)StWaveform___getBwfTime, (void*)StWaveform___setBwfTime, (void*)StWaveform___getCuePoints, (void*)StWaveform___getOrCreateCuePoints}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL StWaveform::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL StWaveform::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL StWaveform::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL StWaveform::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(StWaveform, "StWaveform");

#ifndef YAC_NO_HOST
void* YAC_CALL StWaveform___getSampleData(void *_o                           ) {return (void*)((StWaveform*)_o)->_getSampleData();}
sSI   YAC_CALL StWaveform___getNumFrames(void *_o                            ) {return (sSI)((StWaveform*)_o)->_getNumFrames();}
void  YAC_CALL StWaveform___setSampleData(void *_o, yacmemptr _args          ) {((StWaveform*)_o)->_setSampleData(_args.mem[0].o, _args.mem[1].si);}
sSI   YAC_CALL StWaveform___getNumChannels(void *_o                          ) {return (sSI)((StWaveform*)_o)->_getNumChannels();}
void  YAC_CALL StWaveform___setNumChannels(void *_o, yacmemptr _args         ) {((StWaveform*)_o)->_setNumChannels(_args.mem[0].si);}
sSI   YAC_CALL StWaveform___getLoopOffset(void *_o                           ) {return (sSI)((StWaveform*)_o)->_getLoopOffset();}
void  YAC_CALL StWaveform___setLoopOffset(void *_o, yacmemptr _args          ) {((StWaveform*)_o)->_setLoopOffset(_args.mem[0].si);}
sSI   YAC_CALL StWaveform___getLoopLen(void *_o                              ) {return (sSI)((StWaveform*)_o)->_getLoopLen();}
void  YAC_CALL StWaveform___setLoopLen(void *_o, yacmemptr _args             ) {((StWaveform*)_o)->_setLoopLen(_args.mem[0].si);}
sF32  YAC_CALL StWaveform___getBaseFrequency(void *_o                        ) {return (sF32)((StWaveform*)_o)->_getBaseFrequency();}
void  YAC_CALL StWaveform___setBaseFrequency(void *_o, yacmemptr _args       ) {((StWaveform*)_o)->_setBaseFrequency(_args.mem[0].f32);}
sF32  YAC_CALL StWaveform___getSampleRate(void *_o                           ) {return (sF32)((StWaveform*)_o)->_getSampleRate();}
void  YAC_CALL StWaveform___setSampleRate(void *_o, yacmemptr _args          ) {((StWaveform*)_o)->_setSampleRate(_args.mem[0].f32);}
void  YAC_CALL StWaveform___free    (void *_o                                ) {((StWaveform*)_o)->_free();}
sSI   YAC_CALL StWaveform___alloc   (void *_o, yacmemptr _args               ) {return (sSI)((StWaveform*)_o)->_alloc(_args.mem[0].si, _args.mem[1].si);}
void* YAC_CALL StWaveform___getName (void *_o                                ) {return (void*)((StWaveform*)_o)->_getName();}
void  YAC_CALL StWaveform___setName (void *_o, yacmemptr _args               ) {((StWaveform*)_o)->_setName(_args.mem[0].o);}
sSI   YAC_CALL StWaveform___getRingOffset(void *_o                           ) {return (sSI)((StWaveform*)_o)->_getRingOffset();}
void  YAC_CALL StWaveform___setRingOffset(void *_o, yacmemptr _args          ) {((StWaveform*)_o)->_setRingOffset(_args.mem[0].si);}
sF32  YAC_CALL StWaveform___uiGetLastPlayedOffset(void *_o                   ) {return (sF32)((StWaveform*)_o)->_uiGetLastPlayedOffset();}
void  YAC_CALL StWaveform___uiInvalidateLastPlayedOffset(void *_o            ) {((StWaveform*)_o)->_uiInvalidateLastPlayedOffset();}
void  YAC_CALL StWaveform___uiSetOffset(void *_o, yacmemptr _args            ) {((StWaveform*)_o)->_uiSetOffset(_args.mem[0].f32);}
sF32  YAC_CALL StWaveform___uiGetOffset(void *_o                             ) {return (sF32)((StWaveform*)_o)->_uiGetOffset();}
void  YAC_CALL StWaveform___uiSetZoom(void *_o, yacmemptr _args              ) {((StWaveform*)_o)->_uiSetZoom(_args.mem[0].f32);}
sF32  YAC_CALL StWaveform___uiGetZoom(void *_o                               ) {return (sF32)((StWaveform*)_o)->_uiGetZoom();}
void  YAC_CALL StWaveform___uiSetType(void *_o, yacmemptr _args              ) {((StWaveform*)_o)->_uiSetType(_args.mem[0].si);}
sSI   YAC_CALL StWaveform___uiGetType(void *_o                               ) {return (sSI)((StWaveform*)_o)->_uiGetType();}
void  YAC_CALL StWaveform___uiSetPathName(void *_o, yacmemptr _args          ) {((StWaveform*)_o)->_uiSetPathName(_args.mem[0].o);}
void* YAC_CALL StWaveform___uiGetPathName(void *_o                           ) {return (void*)((StWaveform*)_o)->_uiGetPathName();}
void  YAC_CALL StWaveform___uiSetId (void *_o, yacmemptr _args               ) {((StWaveform*)_o)->_uiSetId(_args.mem[0].si);}
sSI   YAC_CALL StWaveform___uiGetId (void *_o                                ) {return (sSI)((StWaveform*)_o)->_uiGetId();}
void  YAC_CALL StWaveform___uiSetUndo(void *_o, yacmemptr _args              ) {((StWaveform*)_o)->_uiSetUndo(_args.mem[0].o);}
void* YAC_CALL StWaveform___uiGetUndo(void *_o                               ) {return (void*)((StWaveform*)_o)->_uiGetUndo();}
void* YAC_CALL StWaveform___getBwfDescription(void *_o                       ) {return (void*)((StWaveform*)_o)->_getBwfDescription();}
void  YAC_CALL StWaveform___setBwfDescription(void *_o, yacmemptr _args      ) {((StWaveform*)_o)->_setBwfDescription(_args.mem[0].o);}
void* YAC_CALL StWaveform___getBwfOriginator(void *_o                        ) {return (void*)((StWaveform*)_o)->_getBwfOriginator();}
void  YAC_CALL StWaveform___setBwfOriginator(void *_o, yacmemptr _args       ) {((StWaveform*)_o)->_setBwfOriginator(_args.mem[0].o);}
void* YAC_CALL StWaveform___getBwfDate(void *_o                              ) {return (void*)((StWaveform*)_o)->_getBwfDate();}
void  YAC_CALL StWaveform___setBwfDate(void *_o, yacmemptr _args             ) {((StWaveform*)_o)->_setBwfDate(_args.mem[0].o);}
void* YAC_CALL StWaveform___getBwfTime(void *_o                              ) {return (void*)((StWaveform*)_o)->_getBwfTime();}
void  YAC_CALL StWaveform___setBwfTime(void *_o, yacmemptr _args             ) {((StWaveform*)_o)->_setBwfTime(_args.mem[0].o);}
void* YAC_CALL StWaveform___getCuePoints(void *_o                            ) {return (void*)((StWaveform*)_o)->_getCuePoints();}
void* YAC_CALL StWaveform___getOrCreateCuePoints(void *_o                    ) {return (void*)((StWaveform*)_o)->_getOrCreateCuePoints();}
#endif // YAC_NO_HOST
