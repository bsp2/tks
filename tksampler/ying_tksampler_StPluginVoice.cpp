// ---- ying_tksampler_StPluginVoice.cpp: auto generated by YInG - the YAC interface generator (Fri, 13/Jun/2025 23:42:34)

#ifndef YAC_NO_HOST
void* YAC_CALL StPluginVoice__getShared(void *                     );
void  YAC_CALL StPluginVoice__noteOn(void *, yacmemptr             );
void  YAC_CALL StPluginVoice__setModValue(void *, yacmemptr        );
void  YAC_CALL StPluginVoice__processReplace(void *, yacmemptr     );
void  YAC_CALL StPluginVoice__processReplaceVoiceBus1SideChain(void *, yacmemptr);
#endif // YAC_NO_HOST

// ------------------ YAC class "StPluginVoice" reflection map (implementation) ------------------
sUI          YAC_VCALL StPluginVoice::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL StPluginVoice::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL StPluginVoice::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL StPluginVoice::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL StPluginVoice::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL StPluginVoice::yacMethodGetNum                  (void) {return 6;}
const char **YAC_VCALL StPluginVoice::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "getShared", "noteOn", "setModValue", "processReplace", "processReplaceVoiceBus1SideChain"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StPluginVoice::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 3, 3, 2, 3}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL StPluginVoice::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={1, 1, 2,};static const sUI rt3[]={1, 2, 1,};static const sUI rt4[]={3, 1,};static const sUI rt5[]={3, 3, 1,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL StPluginVoice::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs3[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs4[]={"FloatArray", (const char*)0,};static const char *rs5[]={"FloatArray", "FloatArray", (const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StPluginVoice::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 3, 0, 0, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL StPluginVoice::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL StPluginVoice::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)StPluginVoice__getShared, (void*)StPluginVoice__noteOn, (void*)StPluginVoice__setModValue, (void*)StPluginVoice__processReplace, (void*)StPluginVoice__processReplaceVoiceBus1SideChain}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL StPluginVoice::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL StPluginVoice::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL StPluginVoice::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL StPluginVoice::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(StPluginVoice, "StPluginVoice");

#ifndef YAC_NO_HOST
void* YAC_CALL StPluginVoice__getShared(void *_o                             ) {return (void*)((StPluginVoice*)_o)->getShared();}
void  YAC_CALL StPluginVoice__noteOn(void *_o, yacmemptr _args               ) {((StPluginVoice*)_o)->noteOn(_args.mem[0].si, _args.mem[1].si, _args.mem[2].f32);}
void  YAC_CALL StPluginVoice__setModValue(void *_o, yacmemptr _args          ) {((StPluginVoice*)_o)->setModValue(_args.mem[0].si, _args.mem[1].f32, _args.mem[2].si);}
void  YAC_CALL StPluginVoice__processReplace(void *_o, yacmemptr _args       ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_FLOATARRAY)){ ((StPluginVoice*)_o)->processReplace((YAC_FloatArray*)_args.mem[0].o, _args.mem[1].si);}}
void  YAC_CALL StPluginVoice__processReplaceVoiceBus1SideChain(void *_o, yacmemptr _args) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_FLOATARRAY))if(YAC_BCHK(_args.mem[1].o, YAC_CLID_FLOATARRAY)){ ((StPluginVoice*)_o)->processReplaceVoiceBus1SideChain((YAC_FloatArray*)_args.mem[0].o, (YAC_FloatArray*)_args.mem[1].o, _args.mem[2].si);}}
#endif // YAC_NO_HOST
