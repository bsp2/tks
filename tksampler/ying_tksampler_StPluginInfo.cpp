// ---- ying_tksampler_StPluginInfo.cpp: auto generated by YInG - the YAC interface generator (Fri, 13/Jun/2025 23:42:34)

#ifndef YAC_NO_HOST
sSI   YAC_CALL StPluginInfo__getIndex(void *                       );
void  YAC_CALL StPluginInfo__setIndex(void *, yacmemptr            );
void  YAC_CALL StPluginInfo__getId  (void *, YAC_Value *           );
void  YAC_CALL StPluginInfo__getAuthor(void *, YAC_Value *         );
void  YAC_CALL StPluginInfo__getName(void *, YAC_Value *           );
void  YAC_CALL StPluginInfo__getShortName(void *, YAC_Value *      );
sSI   YAC_CALL StPluginInfo__getFlags(void *                       );
sSI   YAC_CALL StPluginInfo__doVoiceBus(void *                     );
sSI   YAC_CALL StPluginInfo__getCategoryId(void *                  );
void  YAC_CALL StPluginInfo__getCategoryName(void *, YAC_Value *   );
void  YAC_CALL StPluginInfo__getCategoryShortName(void *, YAC_Value *);
sSI   YAC_CALL StPluginInfo__getNumMods(void *                     );
void  YAC_CALL StPluginInfo__getModName(void *, yacmemptr, YAC_Value *);
sSI   YAC_CALL StPluginInfo__getNumParams(void *                   );
void  YAC_CALL StPluginInfo__getParamName(void *, yacmemptr, YAC_Value *);
sF32  YAC_CALL StPluginInfo__getParamReset(void *, yacmemptr       );
void  YAC_CALL StPluginInfo__getParamGroupName(void *, yacmemptr, YAC_Value *);
sSI   YAC_CALL StPluginInfo__getParamGroupIdx(void *, yacmemptr    );
void  YAC_CALL StPluginInfo__getParamSectionName(void *, yacmemptr, YAC_Value *);
sSI   YAC_CALL StPluginInfo__getParamSectionIdx(void *, yacmemptr  );
sSI   YAC_CALL StPluginInfo__getArrayParamSize(void *, yacmemptr   );
sSI   YAC_CALL StPluginInfo__getArrayParamNumVariations(void *, yacmemptr);
sSI   YAC_CALL StPluginInfo__getArrayParamElementValueRange(void *, yacmemptr);
void  YAC_CALL StPluginInfo__getArrayParamElementName(void *, yacmemptr, YAC_Value *);
sF32  YAC_CALL StPluginInfo__getArrayParamElementReset(void *, yacmemptr);
void  YAC_CALL StPluginInfo__updateLUT(void *, yacmemptr           );
void  YAC_CALL StPluginInfo__createSharedInstance(void *, YAC_Value *);
#endif // YAC_NO_HOST

// ------------------ YAC class "StPluginInfo" reflection map (implementation) ------------------
sUI          YAC_VCALL StPluginInfo::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL StPluginInfo::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL StPluginInfo::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL StPluginInfo::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL StPluginInfo::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL StPluginInfo::yacMethodGetNum                  (void) {return 28;}
const char **YAC_VCALL StPluginInfo::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "getIndex", "setIndex", "getId", "getAuthor", "getName", "getShortName", "getFlags", "doVoiceBus", "getCategoryId", "getCategoryName", "getCategoryShortName", "getNumMods", "getModName", "getNumParams", "getParamName", "getParamReset", "getParamGroupName", "getParamGroupIdx", "getParamSectionName", "getParamSectionIdx", "getArrayParamSize", "getArrayParamNumVariations", "getArrayParamElementValueRange", "getArrayParamElementName", "getArrayParamElementReset", "updateLUT", "createSharedInstance"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StPluginInfo::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 7, 2, 2, 2, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL StPluginInfo::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={1,};static const sUI rt3[]={0,};static const sUI rt4[]={0,};static const sUI rt5[]={0,};static const sUI rt6[]={0,};static const sUI rt7[]={0,};static const sUI rt8[]={0,};static const sUI rt9[]={0,};static const sUI rt10[]={0,};static const sUI rt11[]={0,};static const sUI rt12[]={0,};static const sUI rt13[]={1,};static const sUI rt14[]={0,};static const sUI rt15[]={1,};static const sUI rt16[]={1,};static const sUI rt17[]={1,};static const sUI rt18[]={1,};static const sUI rt19[]={1,};static const sUI rt20[]={1,};static const sUI rt21[]={1,};static const sUI rt22[]={1,};static const sUI rt23[]={1, 1, 3, 3, 3, 3, 3,};static const sUI rt24[]={1, 1,};static const sUI rt25[]={1, 1,};static const sUI rt26[]={1, 3,};static const sUI rt27[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL StPluginInfo::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs24[]={(const char*)0, (const char*)0,};static const char *rs25[]={(const char*)0, (const char*)0,};static const char *rs26[]={(const char*)0, (const char*)0,};static const char *rs27[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StPluginInfo::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 1, 0, 4, 4, 4, 4, 1, 1, 1, 4, 4, 1, 4, 1, 4, 2, 4, 1, 4, 1, 1, 1, 1, 4, 2, 0, 4}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL StPluginInfo::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL StPluginInfo::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)StPluginInfo__getIndex, (void*)StPluginInfo__setIndex, (void*)StPluginInfo__getId, (void*)StPluginInfo__getAuthor, (void*)StPluginInfo__getName, (void*)StPluginInfo__getShortName, (void*)StPluginInfo__getFlags, (void*)StPluginInfo__doVoiceBus, (void*)StPluginInfo__getCategoryId, (void*)StPluginInfo__getCategoryName, (void*)StPluginInfo__getCategoryShortName, (void*)StPluginInfo__getNumMods, (void*)StPluginInfo__getModName, (void*)StPluginInfo__getNumParams, (void*)StPluginInfo__getParamName, (void*)StPluginInfo__getParamReset, (void*)StPluginInfo__getParamGroupName, (void*)StPluginInfo__getParamGroupIdx, (void*)StPluginInfo__getParamSectionName, (void*)StPluginInfo__getParamSectionIdx, (void*)StPluginInfo__getArrayParamSize, (void*)StPluginInfo__getArrayParamNumVariations, (void*)StPluginInfo__getArrayParamElementValueRange, (void*)StPluginInfo__getArrayParamElementName, (void*)StPluginInfo__getArrayParamElementReset, (void*)StPluginInfo__updateLUT, (void*)StPluginInfo__createSharedInstance}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL StPluginInfo::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL StPluginInfo::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL StPluginInfo::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL StPluginInfo::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(StPluginInfo, "StPluginInfo");

#ifndef YAC_NO_HOST
sSI   YAC_CALL StPluginInfo__getIndex(void *_o                               ) {return (sSI)((StPluginInfo*)_o)->getIndex();}
void  YAC_CALL StPluginInfo__setIndex(void *_o, yacmemptr _args              ) {((StPluginInfo*)_o)->setIndex(_args.mem[0].si);}
void  YAC_CALL StPluginInfo__getId  (void *_o, YAC_Value *_r                 ) {((StPluginInfo*)_o)->getId(_r);}
void  YAC_CALL StPluginInfo__getAuthor(void *_o, YAC_Value *_r               ) {((StPluginInfo*)_o)->getAuthor(_r);}
void  YAC_CALL StPluginInfo__getName(void *_o, YAC_Value *_r                 ) {((StPluginInfo*)_o)->getName(_r);}
void  YAC_CALL StPluginInfo__getShortName(void *_o, YAC_Value *_r            ) {((StPluginInfo*)_o)->getShortName(_r);}
sSI   YAC_CALL StPluginInfo__getFlags(void *_o                               ) {return (sSI)((StPluginInfo*)_o)->getFlags();}
sSI   YAC_CALL StPluginInfo__doVoiceBus(void *_o                             ) {return (sSI)((StPluginInfo*)_o)->doVoiceBus();}
sSI   YAC_CALL StPluginInfo__getCategoryId(void *_o                          ) {return (sSI)((StPluginInfo*)_o)->getCategoryId();}
void  YAC_CALL StPluginInfo__getCategoryName(void *_o, YAC_Value *_r         ) {((StPluginInfo*)_o)->getCategoryName(_r);}
void  YAC_CALL StPluginInfo__getCategoryShortName(void *_o, YAC_Value *_r    ) {((StPluginInfo*)_o)->getCategoryShortName(_r);}
sSI   YAC_CALL StPluginInfo__getNumMods(void *_o                             ) {return (sSI)((StPluginInfo*)_o)->getNumMods();}
void  YAC_CALL StPluginInfo__getModName(void *_o, yacmemptr _args, YAC_Value *_r) {((StPluginInfo*)_o)->getModName(_args.mem[0].si, _r);}
sSI   YAC_CALL StPluginInfo__getNumParams(void *_o                           ) {return (sSI)((StPluginInfo*)_o)->getNumParams();}
void  YAC_CALL StPluginInfo__getParamName(void *_o, yacmemptr _args, YAC_Value *_r) {((StPluginInfo*)_o)->getParamName(_args.mem[0].si, _r);}
sF32  YAC_CALL StPluginInfo__getParamReset(void *_o, yacmemptr _args         ) {return (sF32)((StPluginInfo*)_o)->getParamReset(_args.mem[0].si);}
void  YAC_CALL StPluginInfo__getParamGroupName(void *_o, yacmemptr _args, YAC_Value *_r) {((StPluginInfo*)_o)->getParamGroupName(_args.mem[0].si, _r);}
sSI   YAC_CALL StPluginInfo__getParamGroupIdx(void *_o, yacmemptr _args      ) {return (sSI)((StPluginInfo*)_o)->getParamGroupIdx(_args.mem[0].si);}
void  YAC_CALL StPluginInfo__getParamSectionName(void *_o, yacmemptr _args, YAC_Value *_r) {((StPluginInfo*)_o)->getParamSectionName(_args.mem[0].si, _r);}
sSI   YAC_CALL StPluginInfo__getParamSectionIdx(void *_o, yacmemptr _args    ) {return (sSI)((StPluginInfo*)_o)->getParamSectionIdx(_args.mem[0].si);}
sSI   YAC_CALL StPluginInfo__getArrayParamSize(void *_o, yacmemptr _args     ) {return (sSI)((StPluginInfo*)_o)->getArrayParamSize(_args.mem[0].si);}
sSI   YAC_CALL StPluginInfo__getArrayParamNumVariations(void *_o, yacmemptr _args) {return (sSI)((StPluginInfo*)_o)->getArrayParamNumVariations(_args.mem[0].si);}
sSI   YAC_CALL StPluginInfo__getArrayParamElementValueRange(void *_o, yacmemptr _args) {return (sSI)((StPluginInfo*)_o)->getArrayParamElementValueRange(_args.mem[0].si, _args.mem[1].si, _args.mem[2].o, _args.mem[3].o, _args.mem[4].o, _args.mem[5].o, _args.mem[6].o);}
void  YAC_CALL StPluginInfo__getArrayParamElementName(void *_o, yacmemptr _args, YAC_Value *_r) {((StPluginInfo*)_o)->getArrayParamElementName(_args.mem[0].si, _args.mem[1].si, _r);}
sF32  YAC_CALL StPluginInfo__getArrayParamElementReset(void *_o, yacmemptr _args) {return (sF32)((StPluginInfo*)_o)->getArrayParamElementReset(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL StPluginInfo__updateLUT(void *_o, yacmemptr _args             ) {((StPluginInfo*)_o)->updateLUT(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL StPluginInfo__createSharedInstance(void *_o, YAC_Value *_r    ) {((StPluginInfo*)_o)->createSharedInstance(_r);}
#endif // YAC_NO_HOST
