// autogenerated by gen_plugin_alg_int.tks on 5-Aug-2024 17:26:47
//  ($FXN methods, $TBL table entries)

#include "../tksampler.h"

#define Dpro(a,m,i,o) plugin_cache_entries[(a)]->voice->voice_bus_read_offset = render_buf_sample_offset; sample->plugins[(a)].shared->info->info->process_replace(plugin_cache_entries[(a)]->voice, (m), (i), (o), 1u)

void StSampleVoice::process_algint_10405(void) {  // fxn_5119 (mono)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10405

void StSampleVoice::process_algint_10406(void) {  // fxn_5120 (stereo)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10406

void StSampleVoice::process_algint_10407(void) {  // fxn_5121 (mono)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10407

void StSampleVoice::process_algint_10408(void) {  // fxn_5122 (stereo)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10408

void StSampleVoice::process_algint_10409(void) {  // fxn_5123 (mono)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10409

void StSampleVoice::process_algint_10410(void) {  // fxn_5124 (stereo)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10410

void StSampleVoice::process_algint_10411(void) {  // fxn_5125 (mono)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10411

void StSampleVoice::process_algint_10412(void) {  // fxn_5126 (stereo)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10412

void StSampleVoice::process_algint_10413(void) {  // fxn_5127 (mono)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10413

void StSampleVoice::process_algint_10414(void) {  // fxn_5128 (stereo)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10414

void StSampleVoice::process_algint_10415(void) {  // fxn_5129 (mono)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10415

void StSampleVoice::process_algint_10416(void) {  // fxn_5130 (stereo)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10416

void StSampleVoice::process_algint_10417(void) {  // fxn_5131 (mono)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10417

void StSampleVoice::process_algint_10418(void) {  // fxn_5132 (stereo)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10418

void StSampleVoice::process_algint_10419(void) {  // fxn_5133 (mono)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10419

void StSampleVoice::process_algint_10420(void) {  // fxn_5134 (stereo)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10420

void StSampleVoice::process_algint_10421(void) {  // fxn_5135 (mono)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10421

void StSampleVoice::process_algint_10422(void) {  // fxn_5136 (stereo)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10422

void StSampleVoice::process_algint_10423(void) {  // fxn_5137 (mono)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10423

void StSampleVoice::process_algint_10424(void) {  // fxn_5138 (stereo)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10424

void StSampleVoice::process_algint_10425(void) {  // fxn_5139 (mono)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10425

void StSampleVoice::process_algint_10426(void) {  // fxn_5140 (stereo)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10426

void StSampleVoice::process_algint_10427(void) {  // fxn_5141 (mono)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10427

void StSampleVoice::process_algint_10428(void) {  // fxn_5142 (stereo)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10428

void StSampleVoice::process_algint_10429(void) {  // fxn_5143 (mono)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10429

void StSampleVoice::process_algint_10430(void) {  // fxn_5144 (stereo)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10430

void StSampleVoice::process_algint_10431(void) {  // fxn_5145 (mono)
   // ****** alg=11 fltAll=0 fltPos=5 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   filter(tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10431

void StSampleVoice::process_algint_10432(void) {  // fxn_5146 (stereo)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10432

void StSampleVoice::process_algint_10433(void) {  // fxn_5147 (mono)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10433

void StSampleVoice::process_algint_10434(void) {  // fxn_5148 (stereo)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10434

void StSampleVoice::process_algint_10435(void) {  // fxn_5149 (mono)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10435

void StSampleVoice::process_algint_10436(void) {  // fxn_5150 (stereo)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10436

void StSampleVoice::process_algint_10437(void) {  // fxn_5151 (mono)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10437

void StSampleVoice::process_algint_10438(void) {  // fxn_5152 (stereo)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10438

void StSampleVoice::process_algint_10439(void) {  // fxn_5153 (mono)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10439

void StSampleVoice::process_algint_10440(void) {  // fxn_5154 (stereo)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10440

void StSampleVoice::process_algint_10441(void) {  // fxn_5155 (mono)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10441

void StSampleVoice::process_algint_10442(void) {  // fxn_5156 (stereo)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10442

void StSampleVoice::process_algint_10443(void) {  // fxn_5157 (mono)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10443

void StSampleVoice::process_algint_10444(void) {  // fxn_5158 (stereo)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10444

void StSampleVoice::process_algint_10445(void) {  // fxn_5159 (mono)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10445

void StSampleVoice::process_algint_10446(void) {  // fxn_5160 (stereo)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10446

void StSampleVoice::process_algint_10447(void) {  // fxn_5161 (mono)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10447

void StSampleVoice::process_algint_10448(void) {  // fxn_5162 (stereo)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10448

void StSampleVoice::process_algint_10449(void) {  // fxn_5163 (mono)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10449

void StSampleVoice::process_algint_10450(void) {  // fxn_5164 (stereo)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10450

void StSampleVoice::process_algint_10451(void) {  // fxn_5165 (mono)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10451

void StSampleVoice::process_algint_10452(void) {  // fxn_5166 (stereo)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10452

void StSampleVoice::process_algint_10453(void) {  // fxn_5167 (mono)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10453

void StSampleVoice::process_algint_10454(void) {  // fxn_5168 (stereo)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10454

void StSampleVoice::process_algint_10455(void) {  // fxn_5169 (mono)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10455

void StSampleVoice::process_algint_10456(void) {  // fxn_5170 (stereo)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10456

void StSampleVoice::process_algint_10457(void) {  // fxn_5171 (mono)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10457

void StSampleVoice::process_algint_10458(void) {  // fxn_5172 (stereo)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10458

void StSampleVoice::process_algint_10459(void) {  // fxn_5173 (mono)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10459

void StSampleVoice::process_algint_10460(void) {  // fxn_5174 (stereo)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10460

void StSampleVoice::process_algint_10461(void) {  // fxn_5175 (mono)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10461

void StSampleVoice::process_algint_10462(void) {  // fxn_5176 (stereo)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10462

void StSampleVoice::process_algint_10463(void) {  // fxn_5177 (mono)
   // ****** alg=11 fltAll=0 fltPos=6 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10463

void StSampleVoice::process_algint_10464(void) {  // fxn_5178 (stereo)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10464

void StSampleVoice::process_algint_10465(void) {  // fxn_5179 (mono)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10465

void StSampleVoice::process_algint_10466(void) {  // fxn_5180 (stereo)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10466

void StSampleVoice::process_algint_10467(void) {  // fxn_5181 (mono)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10467

void StSampleVoice::process_algint_10468(void) {  // fxn_5182 (stereo)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10468

void StSampleVoice::process_algint_10469(void) {  // fxn_5183 (mono)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10469

void StSampleVoice::process_algint_10470(void) {  // fxn_5184 (stereo)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10470

void StSampleVoice::process_algint_10471(void) {  // fxn_5185 (mono)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10471

void StSampleVoice::process_algint_10472(void) {  // fxn_5186 (stereo)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10472

void StSampleVoice::process_algint_10473(void) {  // fxn_5187 (mono)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10473

void StSampleVoice::process_algint_10474(void) {  // fxn_5188 (stereo)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10474

void StSampleVoice::process_algint_10475(void) {  // fxn_5189 (mono)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10475

void StSampleVoice::process_algint_10476(void) {  // fxn_5190 (stereo)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10476

void StSampleVoice::process_algint_10477(void) {  // fxn_5191 (mono)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10477

void StSampleVoice::process_algint_10478(void) {  // fxn_5192 (stereo)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10478

void StSampleVoice::process_algint_10479(void) {  // fxn_5193 (mono)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10479

void StSampleVoice::process_algint_10480(void) {  // fxn_5194 (stereo)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10480

void StSampleVoice::process_algint_10481(void) {  // fxn_5195 (mono)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10481

void StSampleVoice::process_algint_10482(void) {  // fxn_5196 (stereo)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10482

void StSampleVoice::process_algint_10483(void) {  // fxn_5197 (mono)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10483

void StSampleVoice::process_algint_10484(void) {  // fxn_5198 (stereo)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10484

void StSampleVoice::process_algint_10485(void) {  // fxn_5199 (mono)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10485

void StSampleVoice::process_algint_10486(void) {  // fxn_5200 (stereo)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10486

void StSampleVoice::process_algint_10487(void) {  // fxn_5201 (mono)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10487

void StSampleVoice::process_algint_10488(void) {  // fxn_5202 (stereo)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10488

void StSampleVoice::process_algint_10489(void) {  // fxn_5203 (mono)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10489

void StSampleVoice::process_algint_10490(void) {  // fxn_5204 (stereo)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10490

void StSampleVoice::process_algint_10491(void) {  // fxn_5205 (mono)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10491

void StSampleVoice::process_algint_10492(void) {  // fxn_5206 (stereo)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10492

void StSampleVoice::process_algint_10493(void) {  // fxn_5207 (mono)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10493

void StSampleVoice::process_algint_10494(void) {  // fxn_5208 (stereo)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10494

void StSampleVoice::process_algint_10495(void) {  // fxn_5209 (mono)
   // ****** alg=11 fltAll=0 fltPos=7 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10495

void StSampleVoice::process_algint_10496(void) {  // fxn_5210 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10496

void StSampleVoice::process_algint_10497(void) {  // fxn_5211 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10497

void StSampleVoice::process_algint_10498(void) {  // fxn_5212 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10498

void StSampleVoice::process_algint_10499(void) {  // fxn_5213 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10499

void StSampleVoice::process_algint_10500(void) {  // fxn_5214 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10500

void StSampleVoice::process_algint_10501(void) {  // fxn_5215 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10501

void StSampleVoice::process_algint_10502(void) {  // fxn_5216 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10502

void StSampleVoice::process_algint_10503(void) {  // fxn_5217 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10503

void StSampleVoice::process_algint_10504(void) {  // fxn_5218 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10504

void StSampleVoice::process_algint_10505(void) {  // fxn_5219 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10505

void StSampleVoice::process_algint_10506(void) {  // fxn_5220 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10506

void StSampleVoice::process_algint_10507(void) {  // fxn_5221 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10507

void StSampleVoice::process_algint_10508(void) {  // fxn_5222 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10508

void StSampleVoice::process_algint_10509(void) {  // fxn_5223 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10509

void StSampleVoice::process_algint_10510(void) {  // fxn_5224 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10510

void StSampleVoice::process_algint_10511(void) {  // fxn_5225 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10511

void StSampleVoice::process_algint_10512(void) {  // fxn_5226 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10512

void StSampleVoice::process_algint_10513(void) {  // fxn_5227 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10513

void StSampleVoice::process_algint_10514(void) {  // fxn_5228 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10514

void StSampleVoice::process_algint_10515(void) {  // fxn_5229 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10515

void StSampleVoice::process_algint_10516(void) {  // fxn_5230 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10516

void StSampleVoice::process_algint_10517(void) {  // fxn_5231 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10517

void StSampleVoice::process_algint_10518(void) {  // fxn_5232 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10518

void StSampleVoice::process_algint_10519(void) {  // fxn_5233 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10519

void StSampleVoice::process_algint_10520(void) {  // fxn_5234 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10520

void StSampleVoice::process_algint_10521(void) {  // fxn_5235 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10521

void StSampleVoice::process_algint_10522(void) {  // fxn_5236 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10522

void StSampleVoice::process_algint_10523(void) {  // fxn_5237 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10523

void StSampleVoice::process_algint_10524(void) {  // fxn_5238 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10524

void StSampleVoice::process_algint_10525(void) {  // fxn_5239 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10525

void StSampleVoice::process_algint_10526(void) {  // fxn_5240 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10526

void StSampleVoice::process_algint_10527(void) {  // fxn_5241 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10527

void StSampleVoice::process_algint_10528(void) {  // fxn_5242 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10528

void StSampleVoice::process_algint_10529(void) {  // fxn_5243 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10529

void StSampleVoice::process_algint_10530(void) {  // fxn_5244 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10530

void StSampleVoice::process_algint_10531(void) {  // fxn_5245 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10531

void StSampleVoice::process_algint_10532(void) {  // fxn_5246 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10532

void StSampleVoice::process_algint_10533(void) {  // fxn_5247 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10533

void StSampleVoice::process_algint_10534(void) {  // fxn_5248 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10534

void StSampleVoice::process_algint_10535(void) {  // fxn_5249 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10535

void StSampleVoice::process_algint_10536(void) {  // fxn_5250 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10536

void StSampleVoice::process_algint_10537(void) {  // fxn_5251 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10537

void StSampleVoice::process_algint_10538(void) {  // fxn_5252 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10538

void StSampleVoice::process_algint_10539(void) {  // fxn_5253 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10539

void StSampleVoice::process_algint_10540(void) {  // fxn_5254 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10540

void StSampleVoice::process_algint_10541(void) {  // fxn_5255 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10541

void StSampleVoice::process_algint_10542(void) {  // fxn_5256 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10542

void StSampleVoice::process_algint_10543(void) {  // fxn_5257 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10543

void StSampleVoice::process_algint_10544(void) {  // fxn_5258 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10544

void StSampleVoice::process_algint_10545(void) {  // fxn_5259 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10545

void StSampleVoice::process_algint_10546(void) {  // fxn_5260 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10546

void StSampleVoice::process_algint_10547(void) {  // fxn_5261 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10547

void StSampleVoice::process_algint_10548(void) {  // fxn_5262 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10548

void StSampleVoice::process_algint_10549(void) {  // fxn_5263 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10549

void StSampleVoice::process_algint_10550(void) {  // fxn_5264 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10550

void StSampleVoice::process_algint_10551(void) {  // fxn_5265 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10551

void StSampleVoice::process_algint_10552(void) {  // fxn_5266 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10552

void StSampleVoice::process_algint_10553(void) {  // fxn_5267 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10553

void StSampleVoice::process_algint_10554(void) {  // fxn_5268 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10554

void StSampleVoice::process_algint_10555(void) {  // fxn_5269 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10555

void StSampleVoice::process_algint_10556(void) {  // fxn_5270 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10556

void StSampleVoice::process_algint_10557(void) {  // fxn_5271 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10557

void StSampleVoice::process_algint_10558(void) {  // fxn_5272 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10558

void StSampleVoice::process_algint_10559(void) {  // fxn_5273 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   filter(tb);
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10559

void StSampleVoice::process_algint_10560(void) {  // fxn_5274 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10560

void StSampleVoice::process_algint_10561(void) {  // fxn_5275 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10561

void StSampleVoice::process_algint_10562(void) {  // fxn_5276 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10562

void StSampleVoice::process_algint_10563(void) {  // fxn_5277 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10563

void StSampleVoice::process_algint_10564(void) {  // fxn_5278 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10564

void StSampleVoice::process_algint_10565(void) {  // fxn_5279 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10565

void StSampleVoice::process_algint_10566(void) {  // fxn_5280 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10566

void StSampleVoice::process_algint_10567(void) {  // fxn_5281 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10567

void StSampleVoice::process_algint_10568(void) {  // fxn_5282 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10568

void StSampleVoice::process_algint_10569(void) {  // fxn_5283 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10569

void StSampleVoice::process_algint_10570(void) {  // fxn_5284 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10570

void StSampleVoice::process_algint_10571(void) {  // fxn_5285 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10571

void StSampleVoice::process_algint_10572(void) {  // fxn_5286 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10572

void StSampleVoice::process_algint_10573(void) {  // fxn_5287 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10573

void StSampleVoice::process_algint_10574(void) {  // fxn_5288 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10574

void StSampleVoice::process_algint_10575(void) {  // fxn_5289 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10575

void StSampleVoice::process_algint_10576(void) {  // fxn_5290 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10576

void StSampleVoice::process_algint_10577(void) {  // fxn_5291 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10577

void StSampleVoice::process_algint_10578(void) {  // fxn_5292 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10578

void StSampleVoice::process_algint_10579(void) {  // fxn_5293 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10579

void StSampleVoice::process_algint_10580(void) {  // fxn_5294 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10580

void StSampleVoice::process_algint_10581(void) {  // fxn_5295 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10581

void StSampleVoice::process_algint_10582(void) {  // fxn_5296 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10582

void StSampleVoice::process_algint_10583(void) {  // fxn_5297 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10583

void StSampleVoice::process_algint_10584(void) {  // fxn_5298 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10584

void StSampleVoice::process_algint_10585(void) {  // fxn_5299 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10585

void StSampleVoice::process_algint_10586(void) {  // fxn_5300 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10586

void StSampleVoice::process_algint_10587(void) {  // fxn_5301 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10587

void StSampleVoice::process_algint_10588(void) {  // fxn_5302 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10588

void StSampleVoice::process_algint_10589(void) {  // fxn_5303 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10589

void StSampleVoice::process_algint_10590(void) {  // fxn_5304 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10590

void StSampleVoice::process_algint_10591(void) {  // fxn_5305 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10591

void StSampleVoice::process_algint_10624(void) {  // fxn_5306 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10624

void StSampleVoice::process_algint_10625(void) {  // fxn_5307 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10625

void StSampleVoice::process_algint_10626(void) {  // fxn_5308 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10626

void StSampleVoice::process_algint_10627(void) {  // fxn_5309 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10627

void StSampleVoice::process_algint_10628(void) {  // fxn_5310 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10628

void StSampleVoice::process_algint_10629(void) {  // fxn_5311 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10629

void StSampleVoice::process_algint_10630(void) {  // fxn_5312 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10630

void StSampleVoice::process_algint_10631(void) {  // fxn_5313 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10631

void StSampleVoice::process_algint_10632(void) {  // fxn_5314 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10632

void StSampleVoice::process_algint_10633(void) {  // fxn_5315 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10633

void StSampleVoice::process_algint_10634(void) {  // fxn_5316 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10634

void StSampleVoice::process_algint_10635(void) {  // fxn_5317 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10635

void StSampleVoice::process_algint_10636(void) {  // fxn_5318 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10636

void StSampleVoice::process_algint_10637(void) {  // fxn_5319 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10637

void StSampleVoice::process_algint_10638(void) {  // fxn_5320 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10638

void StSampleVoice::process_algint_10639(void) {  // fxn_5321 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10639

void StSampleVoice::process_algint_10640(void) {  // fxn_5322 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10640

void StSampleVoice::process_algint_10641(void) {  // fxn_5323 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10641

void StSampleVoice::process_algint_10642(void) {  // fxn_5324 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10642

void StSampleVoice::process_algint_10643(void) {  // fxn_5325 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10643

void StSampleVoice::process_algint_10644(void) {  // fxn_5326 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10644

void StSampleVoice::process_algint_10645(void) {  // fxn_5327 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10645

void StSampleVoice::process_algint_10646(void) {  // fxn_5328 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10646

void StSampleVoice::process_algint_10647(void) {  // fxn_5329 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10647

void StSampleVoice::process_algint_10648(void) {  // fxn_5330 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10648

void StSampleVoice::process_algint_10649(void) {  // fxn_5331 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10649

void StSampleVoice::process_algint_10650(void) {  // fxn_5332 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10650

void StSampleVoice::process_algint_10651(void) {  // fxn_5333 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10651

void StSampleVoice::process_algint_10652(void) {  // fxn_5334 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10652

void StSampleVoice::process_algint_10653(void) {  // fxn_5335 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10653

void StSampleVoice::process_algint_10654(void) {  // fxn_5336 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=10654

void StSampleVoice::process_algint_10655(void) {  // fxn_5337 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=10655

void StSampleVoice::process_algint_10656(void) {  // fxn_5338 (stereo)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10656

void StSampleVoice::process_algint_10657(void) {  // fxn_5339 (mono)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10657

void StSampleVoice::process_algint_10658(void) {  // fxn_5340 (stereo)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10658

void StSampleVoice::process_algint_10659(void) {  // fxn_5341 (mono)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10659

void StSampleVoice::process_algint_10660(void) {  // fxn_5342 (stereo)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10660

void StSampleVoice::process_algint_10661(void) {  // fxn_5343 (mono)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10661

void StSampleVoice::process_algint_10662(void) {  // fxn_5344 (stereo)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10662

void StSampleVoice::process_algint_10663(void) {  // fxn_5345 (mono)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10663

void StSampleVoice::process_algint_10664(void) {  // fxn_5346 (stereo)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10664

void StSampleVoice::process_algint_10665(void) {  // fxn_5347 (mono)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10665

void StSampleVoice::process_algint_10666(void) {  // fxn_5348 (stereo)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10666

void StSampleVoice::process_algint_10667(void) {  // fxn_5349 (mono)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10667

void StSampleVoice::process_algint_10668(void) {  // fxn_5350 (stereo)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10668

void StSampleVoice::process_algint_10669(void) {  // fxn_5351 (mono)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10669

void StSampleVoice::process_algint_10670(void) {  // fxn_5352 (stereo)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10670

void StSampleVoice::process_algint_10671(void) {  // fxn_5353 (mono)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=10671

void StSampleVoice::process_algint_10672(void) {  // fxn_5354 (stereo)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10672

void StSampleVoice::process_algint_10673(void) {  // fxn_5355 (mono)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10673

void StSampleVoice::process_algint_10674(void) {  // fxn_5356 (stereo)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10674

void StSampleVoice::process_algint_10675(void) {  // fxn_5357 (mono)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10675

void StSampleVoice::process_algint_10676(void) {  // fxn_5358 (stereo)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10676

void StSampleVoice::process_algint_10677(void) {  // fxn_5359 (mono)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10677

void StSampleVoice::process_algint_10678(void) {  // fxn_5360 (stereo)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10678

void StSampleVoice::process_algint_10679(void) {  // fxn_5361 (mono)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10679

void StSampleVoice::process_algint_10680(void) {  // fxn_5362 (stereo)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10680

void StSampleVoice::process_algint_10681(void) {  // fxn_5363 (mono)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10681

void StSampleVoice::process_algint_10682(void) {  // fxn_5364 (stereo)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10682

void StSampleVoice::process_algint_10683(void) {  // fxn_5365 (mono)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10683

void StSampleVoice::process_algint_10684(void) {  // fxn_5366 (stereo)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10684

void StSampleVoice::process_algint_10685(void) {  // fxn_5367 (mono)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10685

void StSampleVoice::process_algint_10686(void) {  // fxn_5368 (stereo)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10686

void StSampleVoice::process_algint_10687(void) {  // fxn_5369 (mono)
   // ****** alg=11 fltAll=2 fltPos=0 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=10687

void StSampleVoice::process_algint_10688(void) {  // fxn_5370 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10688

void StSampleVoice::process_algint_10689(void) {  // fxn_5371 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10689

void StSampleVoice::process_algint_10690(void) {  // fxn_5372 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10690

void StSampleVoice::process_algint_10691(void) {  // fxn_5373 (mono)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10691

void StSampleVoice::process_algint_10692(void) {  // fxn_5374 (stereo)
   // ****** alg=11 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=last_sample out=tb
   tb[0] = last_sample[0] * plugin_levels[1][0];
   tb[1] = last_sample[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   tb[0] = ta[0] + tb[0];
   tb[1] = ta[1] + tb[1];
   // process #3 in=tb out=tc
   tc[0] = tb[0] * plugin_levels[2][0];
   tc[1] = tb[1] * plugin_levels[2][1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=10692

