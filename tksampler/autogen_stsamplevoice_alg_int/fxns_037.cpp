// autogenerated by gen_plugin_alg_int.tks on 5-Aug-2024 17:26:47
//  ($FXN methods, $TBL table entries)

#include "../tksampler.h"

#define Dpro(a,m,i,o) plugin_cache_entries[(a)]->voice->voice_bus_read_offset = render_buf_sample_offset; sample->plugins[(a)].shared->info->info->process_replace(plugin_cache_entries[(a)]->voice, (m), (i), (o), 1u)

void StSampleVoice::process_algint_18728(void) {  // fxn_9471 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18728

void StSampleVoice::process_algint_18729(void) {  // fxn_9472 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18729

void StSampleVoice::process_algint_18730(void) {  // fxn_9473 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18730

void StSampleVoice::process_algint_18731(void) {  // fxn_9474 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18731

void StSampleVoice::process_algint_18732(void) {  // fxn_9475 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18732

void StSampleVoice::process_algint_18733(void) {  // fxn_9476 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18733

void StSampleVoice::process_algint_18734(void) {  // fxn_9477 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18734

void StSampleVoice::process_algint_18735(void) {  // fxn_9478 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18735

void StSampleVoice::process_algint_18736(void) {  // fxn_9479 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18736

void StSampleVoice::process_algint_18737(void) {  // fxn_9480 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18737

void StSampleVoice::process_algint_18738(void) {  // fxn_9481 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18738

void StSampleVoice::process_algint_18739(void) {  // fxn_9482 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18739

void StSampleVoice::process_algint_18740(void) {  // fxn_9483 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18740

void StSampleVoice::process_algint_18741(void) {  // fxn_9484 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18741

void StSampleVoice::process_algint_18742(void) {  // fxn_9485 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18742

void StSampleVoice::process_algint_18743(void) {  // fxn_9486 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18743

void StSampleVoice::process_algint_18744(void) {  // fxn_9487 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18744

void StSampleVoice::process_algint_18745(void) {  // fxn_9488 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18745

void StSampleVoice::process_algint_18746(void) {  // fxn_9489 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18746

void StSampleVoice::process_algint_18747(void) {  // fxn_9490 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18747

void StSampleVoice::process_algint_18748(void) {  // fxn_9491 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18748

void StSampleVoice::process_algint_18749(void) {  // fxn_9492 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18749

void StSampleVoice::process_algint_18750(void) {  // fxn_9493 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18750

void StSampleVoice::process_algint_18751(void) {  // fxn_9494 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18751

void StSampleVoice::process_algint_18752(void) {  // fxn_9495 (stereo)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18752

void StSampleVoice::process_algint_18753(void) {  // fxn_9496 (mono)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18753

void StSampleVoice::process_algint_18754(void) {  // fxn_9497 (stereo)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18754

void StSampleVoice::process_algint_18755(void) {  // fxn_9498 (mono)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18755

void StSampleVoice::process_algint_18756(void) {  // fxn_9499 (stereo)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18756

void StSampleVoice::process_algint_18757(void) {  // fxn_9500 (mono)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18757

void StSampleVoice::process_algint_18758(void) {  // fxn_9501 (stereo)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18758

void StSampleVoice::process_algint_18759(void) {  // fxn_9502 (mono)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18759

void StSampleVoice::process_algint_18760(void) {  // fxn_9503 (stereo)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18760

void StSampleVoice::process_algint_18761(void) {  // fxn_9504 (mono)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18761

void StSampleVoice::process_algint_18762(void) {  // fxn_9505 (stereo)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18762

void StSampleVoice::process_algint_18763(void) {  // fxn_9506 (mono)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18763

void StSampleVoice::process_algint_18764(void) {  // fxn_9507 (stereo)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18764

void StSampleVoice::process_algint_18765(void) {  // fxn_9508 (mono)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18765

void StSampleVoice::process_algint_18766(void) {  // fxn_9509 (stereo)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18766

void StSampleVoice::process_algint_18767(void) {  // fxn_9510 (mono)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18767

void StSampleVoice::process_algint_18768(void) {  // fxn_9511 (stereo)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18768

void StSampleVoice::process_algint_18769(void) {  // fxn_9512 (mono)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18769

void StSampleVoice::process_algint_18770(void) {  // fxn_9513 (stereo)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18770

void StSampleVoice::process_algint_18771(void) {  // fxn_9514 (mono)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18771

void StSampleVoice::process_algint_18772(void) {  // fxn_9515 (stereo)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18772

void StSampleVoice::process_algint_18773(void) {  // fxn_9516 (mono)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18773

void StSampleVoice::process_algint_18774(void) {  // fxn_9517 (stereo)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18774

void StSampleVoice::process_algint_18775(void) {  // fxn_9518 (mono)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18775

void StSampleVoice::process_algint_18776(void) {  // fxn_9519 (stereo)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18776

void StSampleVoice::process_algint_18777(void) {  // fxn_9520 (mono)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18777

void StSampleVoice::process_algint_18778(void) {  // fxn_9521 (stereo)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18778

void StSampleVoice::process_algint_18779(void) {  // fxn_9522 (mono)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18779

void StSampleVoice::process_algint_18780(void) {  // fxn_9523 (stereo)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18780

void StSampleVoice::process_algint_18781(void) {  // fxn_9524 (mono)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18781

void StSampleVoice::process_algint_18782(void) {  // fxn_9525 (stereo)
   // ****** alg=19 fltAll=0 fltPos=0 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18782

void StSampleVoice::process_algint_18784(void) {  // fxn_9526 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18784

void StSampleVoice::process_algint_18785(void) {  // fxn_9527 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18785

void StSampleVoice::process_algint_18786(void) {  // fxn_9528 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18786

void StSampleVoice::process_algint_18787(void) {  // fxn_9529 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18787

void StSampleVoice::process_algint_18788(void) {  // fxn_9530 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18788

void StSampleVoice::process_algint_18789(void) {  // fxn_9531 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18789

void StSampleVoice::process_algint_18790(void) {  // fxn_9532 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18790

void StSampleVoice::process_algint_18791(void) {  // fxn_9533 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18791

void StSampleVoice::process_algint_18792(void) {  // fxn_9534 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18792

void StSampleVoice::process_algint_18793(void) {  // fxn_9535 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18793

void StSampleVoice::process_algint_18794(void) {  // fxn_9536 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18794

void StSampleVoice::process_algint_18795(void) {  // fxn_9537 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18795

void StSampleVoice::process_algint_18796(void) {  // fxn_9538 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18796

void StSampleVoice::process_algint_18797(void) {  // fxn_9539 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18797

void StSampleVoice::process_algint_18798(void) {  // fxn_9540 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18798

void StSampleVoice::process_algint_18799(void) {  // fxn_9541 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18799

void StSampleVoice::process_algint_18800(void) {  // fxn_9542 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18800

void StSampleVoice::process_algint_18801(void) {  // fxn_9543 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18801

void StSampleVoice::process_algint_18802(void) {  // fxn_9544 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18802

void StSampleVoice::process_algint_18803(void) {  // fxn_9545 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18803

void StSampleVoice::process_algint_18804(void) {  // fxn_9546 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18804

void StSampleVoice::process_algint_18805(void) {  // fxn_9547 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18805

void StSampleVoice::process_algint_18806(void) {  // fxn_9548 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18806

void StSampleVoice::process_algint_18807(void) {  // fxn_9549 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18807

void StSampleVoice::process_algint_18808(void) {  // fxn_9550 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18808

void StSampleVoice::process_algint_18809(void) {  // fxn_9551 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18809

void StSampleVoice::process_algint_18810(void) {  // fxn_9552 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18810

void StSampleVoice::process_algint_18811(void) {  // fxn_9553 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18811

void StSampleVoice::process_algint_18812(void) {  // fxn_9554 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18812

void StSampleVoice::process_algint_18813(void) {  // fxn_9555 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18813

void StSampleVoice::process_algint_18814(void) {  // fxn_9556 (stereo)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18814

void StSampleVoice::process_algint_18815(void) {  // fxn_9557 (mono)
   // ****** alg=19 fltAll=0 fltPos=3 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18815

void StSampleVoice::process_algint_18816(void) {  // fxn_9558 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18816

void StSampleVoice::process_algint_18817(void) {  // fxn_9559 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18817

void StSampleVoice::process_algint_18818(void) {  // fxn_9560 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18818

void StSampleVoice::process_algint_18819(void) {  // fxn_9561 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18819

void StSampleVoice::process_algint_18820(void) {  // fxn_9562 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18820

void StSampleVoice::process_algint_18821(void) {  // fxn_9563 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18821

void StSampleVoice::process_algint_18822(void) {  // fxn_9564 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18822

void StSampleVoice::process_algint_18823(void) {  // fxn_9565 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18823

void StSampleVoice::process_algint_18824(void) {  // fxn_9566 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18824

void StSampleVoice::process_algint_18825(void) {  // fxn_9567 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18825

void StSampleVoice::process_algint_18826(void) {  // fxn_9568 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18826

void StSampleVoice::process_algint_18827(void) {  // fxn_9569 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18827

void StSampleVoice::process_algint_18828(void) {  // fxn_9570 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18828

void StSampleVoice::process_algint_18829(void) {  // fxn_9571 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18829

void StSampleVoice::process_algint_18830(void) {  // fxn_9572 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18830

void StSampleVoice::process_algint_18831(void) {  // fxn_9573 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18831

void StSampleVoice::process_algint_18832(void) {  // fxn_9574 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18832

void StSampleVoice::process_algint_18833(void) {  // fxn_9575 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18833

void StSampleVoice::process_algint_18834(void) {  // fxn_9576 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18834

void StSampleVoice::process_algint_18835(void) {  // fxn_9577 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18835

void StSampleVoice::process_algint_18836(void) {  // fxn_9578 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18836

void StSampleVoice::process_algint_18837(void) {  // fxn_9579 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18837

void StSampleVoice::process_algint_18838(void) {  // fxn_9580 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18838

void StSampleVoice::process_algint_18839(void) {  // fxn_9581 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18839

void StSampleVoice::process_algint_18840(void) {  // fxn_9582 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18840

void StSampleVoice::process_algint_18841(void) {  // fxn_9583 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18841

void StSampleVoice::process_algint_18842(void) {  // fxn_9584 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18842

void StSampleVoice::process_algint_18843(void) {  // fxn_9585 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18843

void StSampleVoice::process_algint_18844(void) {  // fxn_9586 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18844

void StSampleVoice::process_algint_18845(void) {  // fxn_9587 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18845

void StSampleVoice::process_algint_18846(void) {  // fxn_9588 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18846

void StSampleVoice::process_algint_18847(void) {  // fxn_9589 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18847

void StSampleVoice::process_algint_18848(void) {  // fxn_9590 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18848

void StSampleVoice::process_algint_18849(void) {  // fxn_9591 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18849

void StSampleVoice::process_algint_18850(void) {  // fxn_9592 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18850

void StSampleVoice::process_algint_18851(void) {  // fxn_9593 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18851

void StSampleVoice::process_algint_18852(void) {  // fxn_9594 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18852

void StSampleVoice::process_algint_18853(void) {  // fxn_9595 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18853

void StSampleVoice::process_algint_18854(void) {  // fxn_9596 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18854

void StSampleVoice::process_algint_18855(void) {  // fxn_9597 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18855

void StSampleVoice::process_algint_18856(void) {  // fxn_9598 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18856

void StSampleVoice::process_algint_18857(void) {  // fxn_9599 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18857

void StSampleVoice::process_algint_18858(void) {  // fxn_9600 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18858

void StSampleVoice::process_algint_18859(void) {  // fxn_9601 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18859

void StSampleVoice::process_algint_18860(void) {  // fxn_9602 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18860

void StSampleVoice::process_algint_18861(void) {  // fxn_9603 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18861

void StSampleVoice::process_algint_18862(void) {  // fxn_9604 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18862

void StSampleVoice::process_algint_18863(void) {  // fxn_9605 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18863

void StSampleVoice::process_algint_18864(void) {  // fxn_9606 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18864

void StSampleVoice::process_algint_18865(void) {  // fxn_9607 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18865

void StSampleVoice::process_algint_18866(void) {  // fxn_9608 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18866

void StSampleVoice::process_algint_18867(void) {  // fxn_9609 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18867

void StSampleVoice::process_algint_18868(void) {  // fxn_9610 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18868

void StSampleVoice::process_algint_18869(void) {  // fxn_9611 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18869

void StSampleVoice::process_algint_18870(void) {  // fxn_9612 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18870

void StSampleVoice::process_algint_18871(void) {  // fxn_9613 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18871

void StSampleVoice::process_algint_18872(void) {  // fxn_9614 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18872

void StSampleVoice::process_algint_18873(void) {  // fxn_9615 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18873

void StSampleVoice::process_algint_18874(void) {  // fxn_9616 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18874

void StSampleVoice::process_algint_18875(void) {  // fxn_9617 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18875

void StSampleVoice::process_algint_18876(void) {  // fxn_9618 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18876

void StSampleVoice::process_algint_18877(void) {  // fxn_9619 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18877

void StSampleVoice::process_algint_18878(void) {  // fxn_9620 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18878

void StSampleVoice::process_algint_18879(void) {  // fxn_9621 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18879

void StSampleVoice::process_algint_18880(void) {  // fxn_9622 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18880

void StSampleVoice::process_algint_18881(void) {  // fxn_9623 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18881

void StSampleVoice::process_algint_18882(void) {  // fxn_9624 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18882

void StSampleVoice::process_algint_18883(void) {  // fxn_9625 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18883

void StSampleVoice::process_algint_18884(void) {  // fxn_9626 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18884

void StSampleVoice::process_algint_18885(void) {  // fxn_9627 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18885

void StSampleVoice::process_algint_18886(void) {  // fxn_9628 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18886

void StSampleVoice::process_algint_18887(void) {  // fxn_9629 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18887

void StSampleVoice::process_algint_18888(void) {  // fxn_9630 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18888

void StSampleVoice::process_algint_18889(void) {  // fxn_9631 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18889

void StSampleVoice::process_algint_18890(void) {  // fxn_9632 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18890

void StSampleVoice::process_algint_18891(void) {  // fxn_9633 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18891

void StSampleVoice::process_algint_18892(void) {  // fxn_9634 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18892

void StSampleVoice::process_algint_18893(void) {  // fxn_9635 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18893

void StSampleVoice::process_algint_18894(void) {  // fxn_9636 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18894

void StSampleVoice::process_algint_18895(void) {  // fxn_9637 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18895

void StSampleVoice::process_algint_18896(void) {  // fxn_9638 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18896

void StSampleVoice::process_algint_18897(void) {  // fxn_9639 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18897

void StSampleVoice::process_algint_18898(void) {  // fxn_9640 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18898

void StSampleVoice::process_algint_18899(void) {  // fxn_9641 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18899

void StSampleVoice::process_algint_18900(void) {  // fxn_9642 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18900

void StSampleVoice::process_algint_18901(void) {  // fxn_9643 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18901

void StSampleVoice::process_algint_18902(void) {  // fxn_9644 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18902

void StSampleVoice::process_algint_18903(void) {  // fxn_9645 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18903

void StSampleVoice::process_algint_18904(void) {  // fxn_9646 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18904

void StSampleVoice::process_algint_18905(void) {  // fxn_9647 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18905

void StSampleVoice::process_algint_18906(void) {  // fxn_9648 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18906

void StSampleVoice::process_algint_18907(void) {  // fxn_9649 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18907

void StSampleVoice::process_algint_18908(void) {  // fxn_9650 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18908

void StSampleVoice::process_algint_18909(void) {  // fxn_9651 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18909

void StSampleVoice::process_algint_18910(void) {  // fxn_9652 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18910

void StSampleVoice::process_algint_18911(void) {  // fxn_9653 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18911

void StSampleVoice::process_algint_18912(void) {  // fxn_9654 (stereo)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18912

void StSampleVoice::process_algint_18913(void) {  // fxn_9655 (mono)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18913

void StSampleVoice::process_algint_18914(void) {  // fxn_9656 (stereo)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18914

void StSampleVoice::process_algint_18915(void) {  // fxn_9657 (mono)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18915

void StSampleVoice::process_algint_18916(void) {  // fxn_9658 (stereo)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18916

void StSampleVoice::process_algint_18917(void) {  // fxn_9659 (mono)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18917

void StSampleVoice::process_algint_18918(void) {  // fxn_9660 (stereo)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18918

void StSampleVoice::process_algint_18919(void) {  // fxn_9661 (mono)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18919

void StSampleVoice::process_algint_18920(void) {  // fxn_9662 (stereo)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18920

void StSampleVoice::process_algint_18921(void) {  // fxn_9663 (mono)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18921

void StSampleVoice::process_algint_18922(void) {  // fxn_9664 (stereo)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18922

void StSampleVoice::process_algint_18923(void) {  // fxn_9665 (mono)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18923

void StSampleVoice::process_algint_18924(void) {  // fxn_9666 (stereo)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18924

void StSampleVoice::process_algint_18925(void) {  // fxn_9667 (mono)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18925

void StSampleVoice::process_algint_18926(void) {  // fxn_9668 (stereo)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18926

void StSampleVoice::process_algint_18927(void) {  // fxn_9669 (mono)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18927

void StSampleVoice::process_algint_18928(void) {  // fxn_9670 (stereo)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=18928

void StSampleVoice::process_algint_18929(void) {  // fxn_9671 (mono)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=18929

void StSampleVoice::process_algint_18930(void) {  // fxn_9672 (stereo)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=18930

void StSampleVoice::process_algint_18931(void) {  // fxn_9673 (mono)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=18931

void StSampleVoice::process_algint_18932(void) {  // fxn_9674 (stereo)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=18932

void StSampleVoice::process_algint_18933(void) {  // fxn_9675 (mono)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=18933

void StSampleVoice::process_algint_18934(void) {  // fxn_9676 (stereo)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=18934

void StSampleVoice::process_algint_18935(void) {  // fxn_9677 (mono)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=18935

void StSampleVoice::process_algint_18936(void) {  // fxn_9678 (stereo)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=18936

void StSampleVoice::process_algint_18937(void) {  // fxn_9679 (mono)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=18937

void StSampleVoice::process_algint_18938(void) {  // fxn_9680 (stereo)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=18938

void StSampleVoice::process_algint_18939(void) {  // fxn_9681 (mono)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=18939

void StSampleVoice::process_algint_18940(void) {  // fxn_9682 (stereo)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=18940

void StSampleVoice::process_algint_18941(void) {  // fxn_9683 (mono)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=18941

void StSampleVoice::process_algint_18942(void) {  // fxn_9684 (stereo)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=18942

void StSampleVoice::process_algint_18943(void) {  // fxn_9685 (mono)
   // ****** alg=19 fltAll=2 fltPos=0 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
   filter(last_sample);
}  // end algInt=18943

void StSampleVoice::process_algint_18944(void) {  // fxn_9686 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18944

void StSampleVoice::process_algint_18945(void) {  // fxn_9687 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18945

void StSampleVoice::process_algint_18946(void) {  // fxn_9688 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18946

void StSampleVoice::process_algint_18947(void) {  // fxn_9689 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18947

void StSampleVoice::process_algint_18948(void) {  // fxn_9690 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18948

void StSampleVoice::process_algint_18949(void) {  // fxn_9691 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18949

void StSampleVoice::process_algint_18950(void) {  // fxn_9692 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18950

void StSampleVoice::process_algint_18951(void) {  // fxn_9693 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18951

void StSampleVoice::process_algint_18952(void) {  // fxn_9694 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18952

void StSampleVoice::process_algint_18953(void) {  // fxn_9695 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18953

void StSampleVoice::process_algint_18954(void) {  // fxn_9696 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18954

void StSampleVoice::process_algint_18955(void) {  // fxn_9697 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18955

void StSampleVoice::process_algint_18956(void) {  // fxn_9698 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18956

void StSampleVoice::process_algint_18957(void) {  // fxn_9699 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18957

void StSampleVoice::process_algint_18958(void) {  // fxn_9700 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18958

void StSampleVoice::process_algint_18959(void) {  // fxn_9701 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
}  // end algInt=18959

void StSampleVoice::process_algint_18960(void) {  // fxn_9702 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18960

void StSampleVoice::process_algint_18961(void) {  // fxn_9703 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18961

void StSampleVoice::process_algint_18962(void) {  // fxn_9704 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18962

void StSampleVoice::process_algint_18963(void) {  // fxn_9705 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18963

void StSampleVoice::process_algint_18964(void) {  // fxn_9706 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18964

void StSampleVoice::process_algint_18965(void) {  // fxn_9707 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18965

void StSampleVoice::process_algint_18966(void) {  // fxn_9708 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18966

void StSampleVoice::process_algint_18967(void) {  // fxn_9709 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18967

void StSampleVoice::process_algint_18968(void) {  // fxn_9710 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18968

void StSampleVoice::process_algint_18969(void) {  // fxn_9711 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18969

void StSampleVoice::process_algint_18970(void) {  // fxn_9712 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18970

void StSampleVoice::process_algint_18971(void) {  // fxn_9713 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18971

void StSampleVoice::process_algint_18972(void) {  // fxn_9714 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18972

void StSampleVoice::process_algint_18973(void) {  // fxn_9715 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18973

void StSampleVoice::process_algint_18974(void) {  // fxn_9716 (stereo)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, last_sample, last_sample);
}  // end algInt=18974

void StSampleVoice::process_algint_18975(void) {  // fxn_9717 (mono)
   // ****** alg=19 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, last_sample, last_sample);
}  // end algInt=18975

void StSampleVoice::process_algint_18976(void) {  // fxn_9718 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18976

void StSampleVoice::process_algint_18977(void) {  // fxn_9719 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18977

void StSampleVoice::process_algint_18978(void) {  // fxn_9720 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18978

void StSampleVoice::process_algint_18979(void) {  // fxn_9721 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18979

void StSampleVoice::process_algint_18980(void) {  // fxn_9722 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18980

void StSampleVoice::process_algint_18981(void) {  // fxn_9723 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18981

void StSampleVoice::process_algint_18982(void) {  // fxn_9724 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18982

void StSampleVoice::process_algint_18983(void) {  // fxn_9725 (mono)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18983

void StSampleVoice::process_algint_18984(void) {  // fxn_9726 (stereo)
   // ****** alg=19 fltAll=0 fltPos=6 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=last_sample out=tc
   tc[0] = last_sample[0] * plugin_levels[2][0];
   tc[1] = last_sample[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=tc out=last_sample
   last_sample[0] = tc[0] * plugin_levels[3][0];
   last_sample[1] = tc[1] * plugin_levels[3][1];
   filter(last_sample);
}  // end algInt=18984

