// autogenerated by gen_plugin_alg_int.tks on 5-Aug-2024 17:26:47
//  ($FXN methods, $TBL table entries)

#include "../tksampler.h"

#define Dpro(a,m,i,o) plugin_cache_entries[(a)]->voice->voice_bus_read_offset = render_buf_sample_offset; sample->plugins[(a)].shared->info->info->process_replace(plugin_cache_entries[(a)]->voice, (m), (i), (o), 1u)

void StSampleVoice::process_algint_22890(void) {  // fxn_12287 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22890

void StSampleVoice::process_algint_22891(void) {  // fxn_12288 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22891

void StSampleVoice::process_algint_22892(void) {  // fxn_12289 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22892

void StSampleVoice::process_algint_22893(void) {  // fxn_12290 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22893

void StSampleVoice::process_algint_22894(void) {  // fxn_12291 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22894

void StSampleVoice::process_algint_22895(void) {  // fxn_12292 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22895

void StSampleVoice::process_algint_22896(void) {  // fxn_12293 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22896

void StSampleVoice::process_algint_22897(void) {  // fxn_12294 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22897

void StSampleVoice::process_algint_22898(void) {  // fxn_12295 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22898

void StSampleVoice::process_algint_22899(void) {  // fxn_12296 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22899

void StSampleVoice::process_algint_22900(void) {  // fxn_12297 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22900

void StSampleVoice::process_algint_22901(void) {  // fxn_12298 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22901

void StSampleVoice::process_algint_22902(void) {  // fxn_12299 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22902

void StSampleVoice::process_algint_22903(void) {  // fxn_12300 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22903

void StSampleVoice::process_algint_22904(void) {  // fxn_12301 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22904

void StSampleVoice::process_algint_22905(void) {  // fxn_12302 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22905

void StSampleVoice::process_algint_22906(void) {  // fxn_12303 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22906

void StSampleVoice::process_algint_22907(void) {  // fxn_12304 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22907

void StSampleVoice::process_algint_22908(void) {  // fxn_12305 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22908

void StSampleVoice::process_algint_22909(void) {  // fxn_12306 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22909

void StSampleVoice::process_algint_22910(void) {  // fxn_12307 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22910

void StSampleVoice::process_algint_22911(void) {  // fxn_12308 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=22911

void StSampleVoice::process_algint_22912(void) {  // fxn_12309 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22912

void StSampleVoice::process_algint_22913(void) {  // fxn_12310 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22913

void StSampleVoice::process_algint_22914(void) {  // fxn_12311 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22914

void StSampleVoice::process_algint_22915(void) {  // fxn_12312 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22915

void StSampleVoice::process_algint_22916(void) {  // fxn_12313 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22916

void StSampleVoice::process_algint_22917(void) {  // fxn_12314 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22917

void StSampleVoice::process_algint_22918(void) {  // fxn_12315 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22918

void StSampleVoice::process_algint_22919(void) {  // fxn_12316 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22919

void StSampleVoice::process_algint_22920(void) {  // fxn_12317 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22920

void StSampleVoice::process_algint_22921(void) {  // fxn_12318 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22921

void StSampleVoice::process_algint_22922(void) {  // fxn_12319 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22922

void StSampleVoice::process_algint_22923(void) {  // fxn_12320 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22923

void StSampleVoice::process_algint_22924(void) {  // fxn_12321 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22924

void StSampleVoice::process_algint_22925(void) {  // fxn_12322 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22925

void StSampleVoice::process_algint_22926(void) {  // fxn_12323 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22926

void StSampleVoice::process_algint_22927(void) {  // fxn_12324 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22927

void StSampleVoice::process_algint_22928(void) {  // fxn_12325 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22928

void StSampleVoice::process_algint_22929(void) {  // fxn_12326 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22929

void StSampleVoice::process_algint_22930(void) {  // fxn_12327 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22930

void StSampleVoice::process_algint_22931(void) {  // fxn_12328 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22931

void StSampleVoice::process_algint_22932(void) {  // fxn_12329 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22932

void StSampleVoice::process_algint_22933(void) {  // fxn_12330 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22933

void StSampleVoice::process_algint_22934(void) {  // fxn_12331 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22934

void StSampleVoice::process_algint_22935(void) {  // fxn_12332 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22935

void StSampleVoice::process_algint_22936(void) {  // fxn_12333 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22936

void StSampleVoice::process_algint_22937(void) {  // fxn_12334 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22937

void StSampleVoice::process_algint_22938(void) {  // fxn_12335 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22938

void StSampleVoice::process_algint_22939(void) {  // fxn_12336 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22939

void StSampleVoice::process_algint_22940(void) {  // fxn_12337 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22940

void StSampleVoice::process_algint_22941(void) {  // fxn_12338 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22941

void StSampleVoice::process_algint_22942(void) {  // fxn_12339 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22942

void StSampleVoice::process_algint_22943(void) {  // fxn_12340 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22943

void StSampleVoice::process_algint_22944(void) {  // fxn_12341 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22944

void StSampleVoice::process_algint_22945(void) {  // fxn_12342 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22945

void StSampleVoice::process_algint_22946(void) {  // fxn_12343 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22946

void StSampleVoice::process_algint_22947(void) {  // fxn_12344 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22947

void StSampleVoice::process_algint_22948(void) {  // fxn_12345 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22948

void StSampleVoice::process_algint_22949(void) {  // fxn_12346 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22949

void StSampleVoice::process_algint_22950(void) {  // fxn_12347 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22950

void StSampleVoice::process_algint_22951(void) {  // fxn_12348 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22951

void StSampleVoice::process_algint_22952(void) {  // fxn_12349 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22952

void StSampleVoice::process_algint_22953(void) {  // fxn_12350 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22953

void StSampleVoice::process_algint_22954(void) {  // fxn_12351 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22954

void StSampleVoice::process_algint_22955(void) {  // fxn_12352 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22955

void StSampleVoice::process_algint_22956(void) {  // fxn_12353 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22956

void StSampleVoice::process_algint_22957(void) {  // fxn_12354 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22957

void StSampleVoice::process_algint_22958(void) {  // fxn_12355 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22958

void StSampleVoice::process_algint_22959(void) {  // fxn_12356 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22959

void StSampleVoice::process_algint_22960(void) {  // fxn_12357 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22960

void StSampleVoice::process_algint_22961(void) {  // fxn_12358 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22961

void StSampleVoice::process_algint_22962(void) {  // fxn_12359 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22962

void StSampleVoice::process_algint_22963(void) {  // fxn_12360 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22963

void StSampleVoice::process_algint_22964(void) {  // fxn_12361 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22964

void StSampleVoice::process_algint_22965(void) {  // fxn_12362 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22965

void StSampleVoice::process_algint_22966(void) {  // fxn_12363 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22966

void StSampleVoice::process_algint_22967(void) {  // fxn_12364 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22967

void StSampleVoice::process_algint_22968(void) {  // fxn_12365 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22968

void StSampleVoice::process_algint_22969(void) {  // fxn_12366 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22969

void StSampleVoice::process_algint_22970(void) {  // fxn_12367 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22970

void StSampleVoice::process_algint_22971(void) {  // fxn_12368 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22971

void StSampleVoice::process_algint_22972(void) {  // fxn_12369 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22972

void StSampleVoice::process_algint_22973(void) {  // fxn_12370 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22973

void StSampleVoice::process_algint_22974(void) {  // fxn_12371 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22974

void StSampleVoice::process_algint_22975(void) {  // fxn_12372 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22975

void StSampleVoice::process_algint_22976(void) {  // fxn_12373 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22976

void StSampleVoice::process_algint_22977(void) {  // fxn_12374 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22977

void StSampleVoice::process_algint_22978(void) {  // fxn_12375 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22978

void StSampleVoice::process_algint_22979(void) {  // fxn_12376 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22979

void StSampleVoice::process_algint_22980(void) {  // fxn_12377 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22980

void StSampleVoice::process_algint_22981(void) {  // fxn_12378 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22981

void StSampleVoice::process_algint_22982(void) {  // fxn_12379 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22982

void StSampleVoice::process_algint_22983(void) {  // fxn_12380 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22983

void StSampleVoice::process_algint_22984(void) {  // fxn_12381 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22984

void StSampleVoice::process_algint_22985(void) {  // fxn_12382 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22985

void StSampleVoice::process_algint_22986(void) {  // fxn_12383 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22986

void StSampleVoice::process_algint_22987(void) {  // fxn_12384 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22987

void StSampleVoice::process_algint_22988(void) {  // fxn_12385 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22988

void StSampleVoice::process_algint_22989(void) {  // fxn_12386 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22989

void StSampleVoice::process_algint_22990(void) {  // fxn_12387 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22990

void StSampleVoice::process_algint_22991(void) {  // fxn_12388 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22991

void StSampleVoice::process_algint_22992(void) {  // fxn_12389 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22992

void StSampleVoice::process_algint_22993(void) {  // fxn_12390 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22993

void StSampleVoice::process_algint_22994(void) {  // fxn_12391 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22994

void StSampleVoice::process_algint_22995(void) {  // fxn_12392 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22995

void StSampleVoice::process_algint_22996(void) {  // fxn_12393 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22996

void StSampleVoice::process_algint_22997(void) {  // fxn_12394 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22997

void StSampleVoice::process_algint_22998(void) {  // fxn_12395 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22998

void StSampleVoice::process_algint_22999(void) {  // fxn_12396 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=22999

void StSampleVoice::process_algint_23000(void) {  // fxn_12397 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23000

void StSampleVoice::process_algint_23001(void) {  // fxn_12398 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23001

void StSampleVoice::process_algint_23002(void) {  // fxn_12399 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23002

void StSampleVoice::process_algint_23003(void) {  // fxn_12400 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23003

void StSampleVoice::process_algint_23004(void) {  // fxn_12401 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23004

void StSampleVoice::process_algint_23005(void) {  // fxn_12402 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23005

void StSampleVoice::process_algint_23006(void) {  // fxn_12403 (stereo)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23006

void StSampleVoice::process_algint_23007(void) {  // fxn_12404 (mono)
   // ****** alg=23 fltAll=0 fltPos=4 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23007

void StSampleVoice::process_algint_23008(void) {  // fxn_12405 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23008

void StSampleVoice::process_algint_23009(void) {  // fxn_12406 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23009

void StSampleVoice::process_algint_23010(void) {  // fxn_12407 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23010

void StSampleVoice::process_algint_23011(void) {  // fxn_12408 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23011

void StSampleVoice::process_algint_23012(void) {  // fxn_12409 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23012

void StSampleVoice::process_algint_23013(void) {  // fxn_12410 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23013

void StSampleVoice::process_algint_23014(void) {  // fxn_12411 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23014

void StSampleVoice::process_algint_23015(void) {  // fxn_12412 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23015

void StSampleVoice::process_algint_23016(void) {  // fxn_12413 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23016

void StSampleVoice::process_algint_23017(void) {  // fxn_12414 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23017

void StSampleVoice::process_algint_23018(void) {  // fxn_12415 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23018

void StSampleVoice::process_algint_23019(void) {  // fxn_12416 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23019

void StSampleVoice::process_algint_23020(void) {  // fxn_12417 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23020

void StSampleVoice::process_algint_23021(void) {  // fxn_12418 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23021

void StSampleVoice::process_algint_23022(void) {  // fxn_12419 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23022

void StSampleVoice::process_algint_23023(void) {  // fxn_12420 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23023

void StSampleVoice::process_algint_23024(void) {  // fxn_12421 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23024

void StSampleVoice::process_algint_23025(void) {  // fxn_12422 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23025

void StSampleVoice::process_algint_23026(void) {  // fxn_12423 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23026

void StSampleVoice::process_algint_23027(void) {  // fxn_12424 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23027

void StSampleVoice::process_algint_23028(void) {  // fxn_12425 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23028

void StSampleVoice::process_algint_23029(void) {  // fxn_12426 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23029

void StSampleVoice::process_algint_23030(void) {  // fxn_12427 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23030

void StSampleVoice::process_algint_23031(void) {  // fxn_12428 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23031

void StSampleVoice::process_algint_23032(void) {  // fxn_12429 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23032

void StSampleVoice::process_algint_23033(void) {  // fxn_12430 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23033

void StSampleVoice::process_algint_23034(void) {  // fxn_12431 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23034

void StSampleVoice::process_algint_23035(void) {  // fxn_12432 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23035

void StSampleVoice::process_algint_23036(void) {  // fxn_12433 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23036

void StSampleVoice::process_algint_23037(void) {  // fxn_12434 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23037

void StSampleVoice::process_algint_23038(void) {  // fxn_12435 (stereo)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23038

void StSampleVoice::process_algint_23039(void) {  // fxn_12436 (mono)
   // ****** alg=23 fltAll=0 fltPos=7 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23039

void StSampleVoice::process_algint_23040(void) {  // fxn_12437 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23040

void StSampleVoice::process_algint_23041(void) {  // fxn_12438 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23041

void StSampleVoice::process_algint_23042(void) {  // fxn_12439 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23042

void StSampleVoice::process_algint_23043(void) {  // fxn_12440 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23043

void StSampleVoice::process_algint_23044(void) {  // fxn_12441 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23044

void StSampleVoice::process_algint_23045(void) {  // fxn_12442 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23045

void StSampleVoice::process_algint_23046(void) {  // fxn_12443 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23046

void StSampleVoice::process_algint_23047(void) {  // fxn_12444 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23047

void StSampleVoice::process_algint_23048(void) {  // fxn_12445 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23048

void StSampleVoice::process_algint_23049(void) {  // fxn_12446 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23049

void StSampleVoice::process_algint_23050(void) {  // fxn_12447 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23050

void StSampleVoice::process_algint_23051(void) {  // fxn_12448 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23051

void StSampleVoice::process_algint_23052(void) {  // fxn_12449 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23052

void StSampleVoice::process_algint_23053(void) {  // fxn_12450 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23053

void StSampleVoice::process_algint_23054(void) {  // fxn_12451 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23054

void StSampleVoice::process_algint_23055(void) {  // fxn_12452 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23055

void StSampleVoice::process_algint_23056(void) {  // fxn_12453 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23056

void StSampleVoice::process_algint_23057(void) {  // fxn_12454 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23057

void StSampleVoice::process_algint_23058(void) {  // fxn_12455 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23058

void StSampleVoice::process_algint_23059(void) {  // fxn_12456 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23059

void StSampleVoice::process_algint_23060(void) {  // fxn_12457 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23060

void StSampleVoice::process_algint_23061(void) {  // fxn_12458 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23061

void StSampleVoice::process_algint_23062(void) {  // fxn_12459 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23062

void StSampleVoice::process_algint_23063(void) {  // fxn_12460 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23063

void StSampleVoice::process_algint_23064(void) {  // fxn_12461 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23064

void StSampleVoice::process_algint_23065(void) {  // fxn_12462 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23065

void StSampleVoice::process_algint_23066(void) {  // fxn_12463 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23066

void StSampleVoice::process_algint_23067(void) {  // fxn_12464 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23067

void StSampleVoice::process_algint_23068(void) {  // fxn_12465 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23068

void StSampleVoice::process_algint_23069(void) {  // fxn_12466 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23069

void StSampleVoice::process_algint_23070(void) {  // fxn_12467 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23070

void StSampleVoice::process_algint_23071(void) {  // fxn_12468 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23071

void StSampleVoice::process_algint_23072(void) {  // fxn_12469 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23072

void StSampleVoice::process_algint_23073(void) {  // fxn_12470 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23073

void StSampleVoice::process_algint_23074(void) {  // fxn_12471 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23074

void StSampleVoice::process_algint_23075(void) {  // fxn_12472 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23075

void StSampleVoice::process_algint_23076(void) {  // fxn_12473 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23076

void StSampleVoice::process_algint_23077(void) {  // fxn_12474 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23077

void StSampleVoice::process_algint_23078(void) {  // fxn_12475 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23078

void StSampleVoice::process_algint_23079(void) {  // fxn_12476 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23079

void StSampleVoice::process_algint_23080(void) {  // fxn_12477 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23080

void StSampleVoice::process_algint_23081(void) {  // fxn_12478 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23081

void StSampleVoice::process_algint_23082(void) {  // fxn_12479 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23082

void StSampleVoice::process_algint_23083(void) {  // fxn_12480 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23083

void StSampleVoice::process_algint_23084(void) {  // fxn_12481 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23084

void StSampleVoice::process_algint_23085(void) {  // fxn_12482 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23085

void StSampleVoice::process_algint_23086(void) {  // fxn_12483 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23086

void StSampleVoice::process_algint_23087(void) {  // fxn_12484 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23087

void StSampleVoice::process_algint_23088(void) {  // fxn_12485 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23088

void StSampleVoice::process_algint_23089(void) {  // fxn_12486 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23089

void StSampleVoice::process_algint_23090(void) {  // fxn_12487 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23090

void StSampleVoice::process_algint_23091(void) {  // fxn_12488 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23091

void StSampleVoice::process_algint_23092(void) {  // fxn_12489 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23092

void StSampleVoice::process_algint_23093(void) {  // fxn_12490 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23093

void StSampleVoice::process_algint_23094(void) {  // fxn_12491 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23094

void StSampleVoice::process_algint_23095(void) {  // fxn_12492 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23095

void StSampleVoice::process_algint_23096(void) {  // fxn_12493 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23096

void StSampleVoice::process_algint_23097(void) {  // fxn_12494 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23097

void StSampleVoice::process_algint_23098(void) {  // fxn_12495 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23098

void StSampleVoice::process_algint_23099(void) {  // fxn_12496 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23099

void StSampleVoice::process_algint_23100(void) {  // fxn_12497 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23100

void StSampleVoice::process_algint_23101(void) {  // fxn_12498 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23101

void StSampleVoice::process_algint_23102(void) {  // fxn_12499 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23102

void StSampleVoice::process_algint_23103(void) {  // fxn_12500 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23103

void StSampleVoice::process_algint_23104(void) {  // fxn_12501 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23104

void StSampleVoice::process_algint_23105(void) {  // fxn_12502 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23105

void StSampleVoice::process_algint_23106(void) {  // fxn_12503 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23106

void StSampleVoice::process_algint_23107(void) {  // fxn_12504 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23107

void StSampleVoice::process_algint_23108(void) {  // fxn_12505 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23108

void StSampleVoice::process_algint_23109(void) {  // fxn_12506 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23109

void StSampleVoice::process_algint_23110(void) {  // fxn_12507 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23110

void StSampleVoice::process_algint_23111(void) {  // fxn_12508 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23111

void StSampleVoice::process_algint_23112(void) {  // fxn_12509 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23112

void StSampleVoice::process_algint_23113(void) {  // fxn_12510 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23113

void StSampleVoice::process_algint_23114(void) {  // fxn_12511 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23114

void StSampleVoice::process_algint_23115(void) {  // fxn_12512 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23115

void StSampleVoice::process_algint_23116(void) {  // fxn_12513 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23116

void StSampleVoice::process_algint_23117(void) {  // fxn_12514 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23117

void StSampleVoice::process_algint_23118(void) {  // fxn_12515 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23118

void StSampleVoice::process_algint_23119(void) {  // fxn_12516 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23119

void StSampleVoice::process_algint_23120(void) {  // fxn_12517 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23120

void StSampleVoice::process_algint_23121(void) {  // fxn_12518 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23121

void StSampleVoice::process_algint_23122(void) {  // fxn_12519 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23122

void StSampleVoice::process_algint_23123(void) {  // fxn_12520 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23123

void StSampleVoice::process_algint_23124(void) {  // fxn_12521 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23124

void StSampleVoice::process_algint_23125(void) {  // fxn_12522 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23125

void StSampleVoice::process_algint_23126(void) {  // fxn_12523 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23126

void StSampleVoice::process_algint_23127(void) {  // fxn_12524 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23127

void StSampleVoice::process_algint_23128(void) {  // fxn_12525 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23128

void StSampleVoice::process_algint_23129(void) {  // fxn_12526 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23129

void StSampleVoice::process_algint_23130(void) {  // fxn_12527 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23130

void StSampleVoice::process_algint_23131(void) {  // fxn_12528 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23131

void StSampleVoice::process_algint_23132(void) {  // fxn_12529 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23132

void StSampleVoice::process_algint_23133(void) {  // fxn_12530 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23133

void StSampleVoice::process_algint_23134(void) {  // fxn_12531 (stereo)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23134

void StSampleVoice::process_algint_23135(void) {  // fxn_12532 (mono)
   // ****** alg=23 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
}  // end algInt=23135

void StSampleVoice::process_algint_23136(void) {  // fxn_12533 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23136

void StSampleVoice::process_algint_23137(void) {  // fxn_12534 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23137

void StSampleVoice::process_algint_23138(void) {  // fxn_12535 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23138

void StSampleVoice::process_algint_23139(void) {  // fxn_12536 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23139

void StSampleVoice::process_algint_23140(void) {  // fxn_12537 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23140

void StSampleVoice::process_algint_23141(void) {  // fxn_12538 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23141

void StSampleVoice::process_algint_23142(void) {  // fxn_12539 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23142

void StSampleVoice::process_algint_23143(void) {  // fxn_12540 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23143

void StSampleVoice::process_algint_23144(void) {  // fxn_12541 (stereo)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23144

void StSampleVoice::process_algint_23145(void) {  // fxn_12542 (mono)
   // ****** alg=23 fltAll=2 fltPos=0 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   // process #4 in=tc out=td
   td[0] = tc[0] * plugin_levels[3][0];
   td[1] = tc[1] * plugin_levels[3][1];
   last_sample[0] = tb[0] + td[0];
   last_sample[1] = tb[1] + td[1];
   filter(last_sample);
}  // end algInt=23145

