// autogenerated by gen_plugin_alg_int.tks on 5-Aug-2024 17:26:47
//  ($FXN methods, $TBL table entries)

#include "../tksampler.h"

#define Dpro(a,m,i,o) plugin_cache_entries[(a)]->voice->voice_bus_read_offset = render_buf_sample_offset; sample->plugins[(a)].shared->info->info->process_replace(plugin_cache_entries[(a)]->voice, (m), (i), (o), 1u)

void StSampleVoice::process_algint_17509(void) {  // fxn_8703 (mono)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17509

void StSampleVoice::process_algint_17510(void) {  // fxn_8704 (stereo)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17510

void StSampleVoice::process_algint_17511(void) {  // fxn_8705 (mono)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17511

void StSampleVoice::process_algint_17512(void) {  // fxn_8706 (stereo)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17512

void StSampleVoice::process_algint_17513(void) {  // fxn_8707 (mono)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17513

void StSampleVoice::process_algint_17514(void) {  // fxn_8708 (stereo)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17514

void StSampleVoice::process_algint_17515(void) {  // fxn_8709 (mono)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17515

void StSampleVoice::process_algint_17516(void) {  // fxn_8710 (stereo)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17516

void StSampleVoice::process_algint_17517(void) {  // fxn_8711 (mono)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17517

void StSampleVoice::process_algint_17518(void) {  // fxn_8712 (stereo)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17518

void StSampleVoice::process_algint_17519(void) {  // fxn_8713 (mono)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17519

void StSampleVoice::process_algint_17520(void) {  // fxn_8714 (stereo)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17520

void StSampleVoice::process_algint_17521(void) {  // fxn_8715 (mono)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17521

void StSampleVoice::process_algint_17522(void) {  // fxn_8716 (stereo)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17522

void StSampleVoice::process_algint_17523(void) {  // fxn_8717 (mono)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17523

void StSampleVoice::process_algint_17524(void) {  // fxn_8718 (stereo)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17524

void StSampleVoice::process_algint_17525(void) {  // fxn_8719 (mono)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17525

void StSampleVoice::process_algint_17526(void) {  // fxn_8720 (stereo)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17526

void StSampleVoice::process_algint_17527(void) {  // fxn_8721 (mono)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17527

void StSampleVoice::process_algint_17528(void) {  // fxn_8722 (stereo)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17528

void StSampleVoice::process_algint_17529(void) {  // fxn_8723 (mono)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17529

void StSampleVoice::process_algint_17530(void) {  // fxn_8724 (stereo)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17530

void StSampleVoice::process_algint_17531(void) {  // fxn_8725 (mono)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17531

void StSampleVoice::process_algint_17532(void) {  // fxn_8726 (stereo)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17532

void StSampleVoice::process_algint_17533(void) {  // fxn_8727 (mono)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17533

void StSampleVoice::process_algint_17534(void) {  // fxn_8728 (stereo)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17534

void StSampleVoice::process_algint_17535(void) {  // fxn_8729 (mono)
   // ****** alg=18 fltAll=0 fltPos=3 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   filter(tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17535

void StSampleVoice::process_algint_17536(void) {  // fxn_8730 (stereo)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17536

void StSampleVoice::process_algint_17537(void) {  // fxn_8731 (mono)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17537

void StSampleVoice::process_algint_17538(void) {  // fxn_8732 (stereo)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17538

void StSampleVoice::process_algint_17539(void) {  // fxn_8733 (mono)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17539

void StSampleVoice::process_algint_17540(void) {  // fxn_8734 (stereo)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17540

void StSampleVoice::process_algint_17541(void) {  // fxn_8735 (mono)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17541

void StSampleVoice::process_algint_17542(void) {  // fxn_8736 (stereo)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17542

void StSampleVoice::process_algint_17543(void) {  // fxn_8737 (mono)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17543

void StSampleVoice::process_algint_17544(void) {  // fxn_8738 (stereo)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17544

void StSampleVoice::process_algint_17545(void) {  // fxn_8739 (mono)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17545

void StSampleVoice::process_algint_17546(void) {  // fxn_8740 (stereo)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17546

void StSampleVoice::process_algint_17547(void) {  // fxn_8741 (mono)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17547

void StSampleVoice::process_algint_17548(void) {  // fxn_8742 (stereo)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17548

void StSampleVoice::process_algint_17549(void) {  // fxn_8743 (mono)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17549

void StSampleVoice::process_algint_17550(void) {  // fxn_8744 (stereo)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17550

void StSampleVoice::process_algint_17551(void) {  // fxn_8745 (mono)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17551

void StSampleVoice::process_algint_17552(void) {  // fxn_8746 (stereo)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17552

void StSampleVoice::process_algint_17553(void) {  // fxn_8747 (mono)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17553

void StSampleVoice::process_algint_17554(void) {  // fxn_8748 (stereo)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17554

void StSampleVoice::process_algint_17555(void) {  // fxn_8749 (mono)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17555

void StSampleVoice::process_algint_17556(void) {  // fxn_8750 (stereo)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17556

void StSampleVoice::process_algint_17557(void) {  // fxn_8751 (mono)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17557

void StSampleVoice::process_algint_17558(void) {  // fxn_8752 (stereo)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17558

void StSampleVoice::process_algint_17559(void) {  // fxn_8753 (mono)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17559

void StSampleVoice::process_algint_17560(void) {  // fxn_8754 (stereo)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17560

void StSampleVoice::process_algint_17561(void) {  // fxn_8755 (mono)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17561

void StSampleVoice::process_algint_17562(void) {  // fxn_8756 (stereo)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17562

void StSampleVoice::process_algint_17563(void) {  // fxn_8757 (mono)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17563

void StSampleVoice::process_algint_17564(void) {  // fxn_8758 (stereo)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17564

void StSampleVoice::process_algint_17565(void) {  // fxn_8759 (mono)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17565

void StSampleVoice::process_algint_17566(void) {  // fxn_8760 (stereo)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17566

void StSampleVoice::process_algint_17567(void) {  // fxn_8761 (mono)
   // ****** alg=18 fltAll=0 fltPos=4 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17567

void StSampleVoice::process_algint_17568(void) {  // fxn_8762 (stereo)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17568

void StSampleVoice::process_algint_17569(void) {  // fxn_8763 (mono)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17569

void StSampleVoice::process_algint_17570(void) {  // fxn_8764 (stereo)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17570

void StSampleVoice::process_algint_17571(void) {  // fxn_8765 (mono)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17571

void StSampleVoice::process_algint_17572(void) {  // fxn_8766 (stereo)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17572

void StSampleVoice::process_algint_17573(void) {  // fxn_8767 (mono)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17573

void StSampleVoice::process_algint_17574(void) {  // fxn_8768 (stereo)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17574

void StSampleVoice::process_algint_17575(void) {  // fxn_8769 (mono)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17575

void StSampleVoice::process_algint_17576(void) {  // fxn_8770 (stereo)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17576

void StSampleVoice::process_algint_17577(void) {  // fxn_8771 (mono)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17577

void StSampleVoice::process_algint_17578(void) {  // fxn_8772 (stereo)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17578

void StSampleVoice::process_algint_17579(void) {  // fxn_8773 (mono)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17579

void StSampleVoice::process_algint_17580(void) {  // fxn_8774 (stereo)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17580

void StSampleVoice::process_algint_17581(void) {  // fxn_8775 (mono)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17581

void StSampleVoice::process_algint_17582(void) {  // fxn_8776 (stereo)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17582

void StSampleVoice::process_algint_17583(void) {  // fxn_8777 (mono)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17583

void StSampleVoice::process_algint_17584(void) {  // fxn_8778 (stereo)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17584

void StSampleVoice::process_algint_17585(void) {  // fxn_8779 (mono)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17585

void StSampleVoice::process_algint_17586(void) {  // fxn_8780 (stereo)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17586

void StSampleVoice::process_algint_17587(void) {  // fxn_8781 (mono)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17587

void StSampleVoice::process_algint_17588(void) {  // fxn_8782 (stereo)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17588

void StSampleVoice::process_algint_17589(void) {  // fxn_8783 (mono)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17589

void StSampleVoice::process_algint_17590(void) {  // fxn_8784 (stereo)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17590

void StSampleVoice::process_algint_17591(void) {  // fxn_8785 (mono)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17591

void StSampleVoice::process_algint_17592(void) {  // fxn_8786 (stereo)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17592

void StSampleVoice::process_algint_17593(void) {  // fxn_8787 (mono)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17593

void StSampleVoice::process_algint_17594(void) {  // fxn_8788 (stereo)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17594

void StSampleVoice::process_algint_17595(void) {  // fxn_8789 (mono)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17595

void StSampleVoice::process_algint_17596(void) {  // fxn_8790 (stereo)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17596

void StSampleVoice::process_algint_17597(void) {  // fxn_8791 (mono)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17597

void StSampleVoice::process_algint_17598(void) {  // fxn_8792 (stereo)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17598

void StSampleVoice::process_algint_17599(void) {  // fxn_8793 (mono)
   // ****** alg=18 fltAll=0 fltPos=5 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   filter(tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17599

void StSampleVoice::process_algint_17600(void) {  // fxn_8794 (stereo)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17600

void StSampleVoice::process_algint_17601(void) {  // fxn_8795 (mono)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17601

void StSampleVoice::process_algint_17602(void) {  // fxn_8796 (stereo)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17602

void StSampleVoice::process_algint_17603(void) {  // fxn_8797 (mono)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17603

void StSampleVoice::process_algint_17604(void) {  // fxn_8798 (stereo)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17604

void StSampleVoice::process_algint_17605(void) {  // fxn_8799 (mono)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17605

void StSampleVoice::process_algint_17606(void) {  // fxn_8800 (stereo)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17606

void StSampleVoice::process_algint_17607(void) {  // fxn_8801 (mono)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17607

void StSampleVoice::process_algint_17608(void) {  // fxn_8802 (stereo)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17608

void StSampleVoice::process_algint_17609(void) {  // fxn_8803 (mono)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17609

void StSampleVoice::process_algint_17610(void) {  // fxn_8804 (stereo)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17610

void StSampleVoice::process_algint_17611(void) {  // fxn_8805 (mono)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17611

void StSampleVoice::process_algint_17612(void) {  // fxn_8806 (stereo)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17612

void StSampleVoice::process_algint_17613(void) {  // fxn_8807 (mono)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17613

void StSampleVoice::process_algint_17614(void) {  // fxn_8808 (stereo)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17614

void StSampleVoice::process_algint_17615(void) {  // fxn_8809 (mono)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17615

void StSampleVoice::process_algint_17616(void) {  // fxn_8810 (stereo)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17616

void StSampleVoice::process_algint_17617(void) {  // fxn_8811 (mono)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17617

void StSampleVoice::process_algint_17618(void) {  // fxn_8812 (stereo)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17618

void StSampleVoice::process_algint_17619(void) {  // fxn_8813 (mono)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17619

void StSampleVoice::process_algint_17620(void) {  // fxn_8814 (stereo)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17620

void StSampleVoice::process_algint_17621(void) {  // fxn_8815 (mono)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17621

void StSampleVoice::process_algint_17622(void) {  // fxn_8816 (stereo)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17622

void StSampleVoice::process_algint_17623(void) {  // fxn_8817 (mono)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17623

void StSampleVoice::process_algint_17624(void) {  // fxn_8818 (stereo)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17624

void StSampleVoice::process_algint_17625(void) {  // fxn_8819 (mono)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17625

void StSampleVoice::process_algint_17626(void) {  // fxn_8820 (stereo)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17626

void StSampleVoice::process_algint_17627(void) {  // fxn_8821 (mono)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17627

void StSampleVoice::process_algint_17628(void) {  // fxn_8822 (stereo)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17628

void StSampleVoice::process_algint_17629(void) {  // fxn_8823 (mono)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17629

void StSampleVoice::process_algint_17630(void) {  // fxn_8824 (stereo)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17630

void StSampleVoice::process_algint_17631(void) {  // fxn_8825 (mono)
   // ****** alg=18 fltAll=0 fltPos=6 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17631

void StSampleVoice::process_algint_17632(void) {  // fxn_8826 (stereo)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17632

void StSampleVoice::process_algint_17633(void) {  // fxn_8827 (mono)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17633

void StSampleVoice::process_algint_17634(void) {  // fxn_8828 (stereo)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17634

void StSampleVoice::process_algint_17635(void) {  // fxn_8829 (mono)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17635

void StSampleVoice::process_algint_17636(void) {  // fxn_8830 (stereo)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17636

void StSampleVoice::process_algint_17637(void) {  // fxn_8831 (mono)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17637

void StSampleVoice::process_algint_17638(void) {  // fxn_8832 (stereo)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17638

void StSampleVoice::process_algint_17639(void) {  // fxn_8833 (mono)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17639

void StSampleVoice::process_algint_17640(void) {  // fxn_8834 (stereo)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17640

void StSampleVoice::process_algint_17641(void) {  // fxn_8835 (mono)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17641

void StSampleVoice::process_algint_17642(void) {  // fxn_8836 (stereo)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17642

void StSampleVoice::process_algint_17643(void) {  // fxn_8837 (mono)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17643

void StSampleVoice::process_algint_17644(void) {  // fxn_8838 (stereo)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17644

void StSampleVoice::process_algint_17645(void) {  // fxn_8839 (mono)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17645

void StSampleVoice::process_algint_17646(void) {  // fxn_8840 (stereo)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17646

void StSampleVoice::process_algint_17647(void) {  // fxn_8841 (mono)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17647

void StSampleVoice::process_algint_17648(void) {  // fxn_8842 (stereo)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17648

void StSampleVoice::process_algint_17649(void) {  // fxn_8843 (mono)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17649

void StSampleVoice::process_algint_17650(void) {  // fxn_8844 (stereo)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17650

void StSampleVoice::process_algint_17651(void) {  // fxn_8845 (mono)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17651

void StSampleVoice::process_algint_17652(void) {  // fxn_8846 (stereo)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17652

void StSampleVoice::process_algint_17653(void) {  // fxn_8847 (mono)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17653

void StSampleVoice::process_algint_17654(void) {  // fxn_8848 (stereo)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17654

void StSampleVoice::process_algint_17655(void) {  // fxn_8849 (mono)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17655

void StSampleVoice::process_algint_17656(void) {  // fxn_8850 (stereo)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17656

void StSampleVoice::process_algint_17657(void) {  // fxn_8851 (mono)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17657

void StSampleVoice::process_algint_17658(void) {  // fxn_8852 (stereo)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17658

void StSampleVoice::process_algint_17659(void) {  // fxn_8853 (mono)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17659

void StSampleVoice::process_algint_17660(void) {  // fxn_8854 (stereo)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17660

void StSampleVoice::process_algint_17661(void) {  // fxn_8855 (mono)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17661

void StSampleVoice::process_algint_17662(void) {  // fxn_8856 (stereo)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17662

void StSampleVoice::process_algint_17663(void) {  // fxn_8857 (mono)
   // ****** alg=18 fltAll=0 fltPos=7 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   filter(td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17663

void StSampleVoice::process_algint_17664(void) {  // fxn_8858 (stereo)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17664

void StSampleVoice::process_algint_17665(void) {  // fxn_8859 (mono)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=---- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17665

void StSampleVoice::process_algint_17666(void) {  // fxn_8860 (stereo)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17666

void StSampleVoice::process_algint_17667(void) {  // fxn_8861 (mono)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=---1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17667

void StSampleVoice::process_algint_17668(void) {  // fxn_8862 (stereo)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17668

void StSampleVoice::process_algint_17669(void) {  // fxn_8863 (mono)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=--2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17669

void StSampleVoice::process_algint_17670(void) {  // fxn_8864 (stereo)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17670

void StSampleVoice::process_algint_17671(void) {  // fxn_8865 (mono)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=--21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17671

void StSampleVoice::process_algint_17672(void) {  // fxn_8866 (stereo)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17672

void StSampleVoice::process_algint_17673(void) {  // fxn_8867 (mono)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=-3-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17673

void StSampleVoice::process_algint_17674(void) {  // fxn_8868 (stereo)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17674

void StSampleVoice::process_algint_17675(void) {  // fxn_8869 (mono)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=-3-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17675

void StSampleVoice::process_algint_17676(void) {  // fxn_8870 (stereo)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17676

void StSampleVoice::process_algint_17677(void) {  // fxn_8871 (mono)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=-32- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17677

void StSampleVoice::process_algint_17678(void) {  // fxn_8872 (stereo)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17678

void StSampleVoice::process_algint_17679(void) {  // fxn_8873 (mono)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=-321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17679

void StSampleVoice::process_algint_17680(void) {  // fxn_8874 (stereo)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17680

void StSampleVoice::process_algint_17681(void) {  // fxn_8875 (mono)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=4--- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17681

void StSampleVoice::process_algint_17682(void) {  // fxn_8876 (stereo)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17682

void StSampleVoice::process_algint_17683(void) {  // fxn_8877 (mono)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=4--1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17683

void StSampleVoice::process_algint_17684(void) {  // fxn_8878 (stereo)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17684

void StSampleVoice::process_algint_17685(void) {  // fxn_8879 (mono)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=4-2- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17685

void StSampleVoice::process_algint_17686(void) {  // fxn_8880 (stereo)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17686

void StSampleVoice::process_algint_17687(void) {  // fxn_8881 (mono)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=4-21 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17687

void StSampleVoice::process_algint_17688(void) {  // fxn_8882 (stereo)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17688

void StSampleVoice::process_algint_17689(void) {  // fxn_8883 (mono)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=43-- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17689

void StSampleVoice::process_algint_17690(void) {  // fxn_8884 (stereo)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17690

void StSampleVoice::process_algint_17691(void) {  // fxn_8885 (mono)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=43-1 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17691

void StSampleVoice::process_algint_17692(void) {  // fxn_8886 (stereo)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17692

void StSampleVoice::process_algint_17693(void) {  // fxn_8887 (mono)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=432- ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17693

void StSampleVoice::process_algint_17694(void) {  // fxn_8888 (stereo)
   // ****** alg=18 fltAll=0 fltPos=0 pluginMask=4321 ******
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   filter(ta);
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17694

void StSampleVoice::process_algint_17696(void) {  // fxn_8889 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17696

void StSampleVoice::process_algint_17697(void) {  // fxn_8890 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17697

void StSampleVoice::process_algint_17698(void) {  // fxn_8891 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17698

void StSampleVoice::process_algint_17699(void) {  // fxn_8892 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17699

void StSampleVoice::process_algint_17700(void) {  // fxn_8893 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17700

void StSampleVoice::process_algint_17701(void) {  // fxn_8894 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17701

void StSampleVoice::process_algint_17702(void) {  // fxn_8895 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17702

void StSampleVoice::process_algint_17703(void) {  // fxn_8896 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17703

void StSampleVoice::process_algint_17704(void) {  // fxn_8897 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17704

void StSampleVoice::process_algint_17705(void) {  // fxn_8898 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17705

void StSampleVoice::process_algint_17706(void) {  // fxn_8899 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17706

void StSampleVoice::process_algint_17707(void) {  // fxn_8900 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17707

void StSampleVoice::process_algint_17708(void) {  // fxn_8901 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17708

void StSampleVoice::process_algint_17709(void) {  // fxn_8902 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17709

void StSampleVoice::process_algint_17710(void) {  // fxn_8903 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17710

void StSampleVoice::process_algint_17711(void) {  // fxn_8904 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17711

void StSampleVoice::process_algint_17712(void) {  // fxn_8905 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17712

void StSampleVoice::process_algint_17713(void) {  // fxn_8906 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17713

void StSampleVoice::process_algint_17714(void) {  // fxn_8907 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17714

void StSampleVoice::process_algint_17715(void) {  // fxn_8908 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17715

void StSampleVoice::process_algint_17716(void) {  // fxn_8909 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17716

void StSampleVoice::process_algint_17717(void) {  // fxn_8910 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17717

void StSampleVoice::process_algint_17718(void) {  // fxn_8911 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17718

void StSampleVoice::process_algint_17719(void) {  // fxn_8912 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17719

void StSampleVoice::process_algint_17720(void) {  // fxn_8913 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17720

void StSampleVoice::process_algint_17721(void) {  // fxn_8914 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17721

void StSampleVoice::process_algint_17722(void) {  // fxn_8915 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17722

void StSampleVoice::process_algint_17723(void) {  // fxn_8916 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17723

void StSampleVoice::process_algint_17724(void) {  // fxn_8917 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17724

void StSampleVoice::process_algint_17725(void) {  // fxn_8918 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17725

void StSampleVoice::process_algint_17726(void) {  // fxn_8919 (stereo)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17726

void StSampleVoice::process_algint_17727(void) {  // fxn_8920 (mono)
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   filter(tc);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17727

void StSampleVoice::process_algint_17856(void) {  // fxn_8921 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17856

void StSampleVoice::process_algint_17857(void) {  // fxn_8922 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17857

void StSampleVoice::process_algint_17858(void) {  // fxn_8923 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17858

void StSampleVoice::process_algint_17859(void) {  // fxn_8924 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17859

void StSampleVoice::process_algint_17860(void) {  // fxn_8925 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17860

void StSampleVoice::process_algint_17861(void) {  // fxn_8926 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17861

void StSampleVoice::process_algint_17862(void) {  // fxn_8927 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17862

void StSampleVoice::process_algint_17863(void) {  // fxn_8928 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=--21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17863

void StSampleVoice::process_algint_17864(void) {  // fxn_8929 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17864

void StSampleVoice::process_algint_17865(void) {  // fxn_8930 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=-3-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17865

void StSampleVoice::process_algint_17866(void) {  // fxn_8931 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17866

void StSampleVoice::process_algint_17867(void) {  // fxn_8932 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=-3-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17867

void StSampleVoice::process_algint_17868(void) {  // fxn_8933 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17868

void StSampleVoice::process_algint_17869(void) {  // fxn_8934 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=-32- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17869

void StSampleVoice::process_algint_17870(void) {  // fxn_8935 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17870

void StSampleVoice::process_algint_17871(void) {  // fxn_8936 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=-321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17871

void StSampleVoice::process_algint_17872(void) {  // fxn_8937 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17872

void StSampleVoice::process_algint_17873(void) {  // fxn_8938 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=4--- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17873

void StSampleVoice::process_algint_17874(void) {  // fxn_8939 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17874

void StSampleVoice::process_algint_17875(void) {  // fxn_8940 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=4--1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17875

void StSampleVoice::process_algint_17876(void) {  // fxn_8941 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17876

void StSampleVoice::process_algint_17877(void) {  // fxn_8942 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=4-2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17877

void StSampleVoice::process_algint_17878(void) {  // fxn_8943 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17878

void StSampleVoice::process_algint_17879(void) {  // fxn_8944 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=4-21 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17879

void StSampleVoice::process_algint_17880(void) {  // fxn_8945 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17880

void StSampleVoice::process_algint_17881(void) {  // fxn_8946 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=43-- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17881

void StSampleVoice::process_algint_17882(void) {  // fxn_8947 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17882

void StSampleVoice::process_algint_17883(void) {  // fxn_8948 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=43-1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17883

void StSampleVoice::process_algint_17884(void) {  // fxn_8949 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17884

void StSampleVoice::process_algint_17885(void) {  // fxn_8950 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=432- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17885

void StSampleVoice::process_algint_17886(void) {  // fxn_8951 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 0, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 0, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17886

void StSampleVoice::process_algint_17887(void) {  // fxn_8952 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=4321 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   Dpro(2, 1, tc, tc);
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   Dpro(3, 1, td, td);
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17887

void StSampleVoice::process_algint_17888(void) {  // fxn_8953 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17888

void StSampleVoice::process_algint_17889(void) {  // fxn_8954 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=---- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17889

void StSampleVoice::process_algint_17890(void) {  // fxn_8955 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 0, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17890

void StSampleVoice::process_algint_17891(void) {  // fxn_8956 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=---1 ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   Dpro(0, 1, ta, ta);
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17891

void StSampleVoice::process_algint_17892(void) {  // fxn_8957 (stereo)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 0, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17892

void StSampleVoice::process_algint_17893(void) {  // fxn_8958 (mono)
   // ****** alg=18 fltAll=1 fltPos=0 pluginMask=--2- ******
   filter(last_sample);
   sF32 ta[2];
   sF32 tb[2];
   sF32 tc[2];
   sF32 td[2];
   // process #1 in=last_sample out=ta
   ta[0] = last_sample[0] * plugin_levels[0][0];
   ta[1] = last_sample[1] * plugin_levels[0][1];
   // process #2 in=ta out=tb
   tb[0] = ta[0] * plugin_levels[1][0];
   tb[1] = ta[1] * plugin_levels[1][1];
   Dpro(1, 1, tb, tb);
   // process #3 in=ta out=tc
   tc[0] = ta[0] * plugin_levels[2][0];
   tc[1] = ta[1] * plugin_levels[2][1];
   tc[0] = tb[0] + tc[0];
   tc[1] = tb[1] + tc[1];
   // process #4 in=last_sample out=td
   td[0] = last_sample[0] * plugin_levels[3][0];
   td[1] = last_sample[1] * plugin_levels[3][1];
   last_sample[0] = tc[0] + td[0];
   last_sample[1] = tc[1] + td[1];
}  // end algInt=17893

