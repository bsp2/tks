// ---- ying_tksampler_StSampleVoice.cpp: auto generated by YInG - the YAC interface generator (Fri, 13/Jun/2025 23:42:34)

#ifndef YAC_NO_HOST
void  YAC_CALL StSampleVoice___resetVoice(void *                   );
sSI   YAC_CALL StSampleVoice__getVoiceIndex(void *                 );
void  YAC_CALL StSampleVoice___startVoice(void *, yacmemptr        );
void  YAC_CALL StSampleVoice___restartVoice(void *                 );
void  YAC_CALL StSampleVoice__stopVoice(void *                     );
void  YAC_CALL StSampleVoice__softStopVoice(void *                 );
void  YAC_CALL StSampleVoice__noteOff(void *, yacmemptr            );
sF32  YAC_CALL StSampleVoice__noteToFreq(void *, yacmemptr         );
void  YAC_CALL StSampleVoice___setVol(void *, yacmemptr            );
sF32  YAC_CALL StSampleVoice___getVol(void *                       );
void  YAC_CALL StSampleVoice___setVol2(void *, yacmemptr           );
sF32  YAC_CALL StSampleVoice___getVol2(void *                      );
void  YAC_CALL StSampleVoice___setPan(void *, yacmemptr            );
sF32  YAC_CALL StSampleVoice___getPan(void *                       );
void  YAC_CALL StSampleVoice___setPan2(void *, yacmemptr           );
sF32  YAC_CALL StSampleVoice___getPan2(void *                      );
void  YAC_CALL StSampleVoice___setFreq(void *, yacmemptr           );
sF32  YAC_CALL StSampleVoice___getFreq(void *                      );
void  YAC_CALL StSampleVoice___setFreq2(void *, yacmemptr          );
sF32  YAC_CALL StSampleVoice___getFreq2(void *                     );
void  YAC_CALL StSampleVoice___setMod(void *, yacmemptr            );
sF32  YAC_CALL StSampleVoice___getMod(void *                       );
void  YAC_CALL StSampleVoice___setTimestretch(void *, yacmemptr    );
sF32  YAC_CALL StSampleVoice___getTimestretch(void *               );
void  YAC_CALL StSampleVoice___setTimestretchBend(void *, yacmemptr);
sF32  YAC_CALL StSampleVoice___getTimestretchBend(void *           );
void  YAC_CALL StSampleVoice___setSampleOff(void *, yacmemptr      );
void  YAC_CALL StSampleVoice___setSampleOffMs(void *, yacmemptr    );
sF32  YAC_CALL StSampleVoice___getSampleOff(void *                 );
void  YAC_CALL StSampleVoice___setSampleOff2(void *, yacmemptr     );
sF32  YAC_CALL StSampleVoice___getSampleOff2(void *                );
void  YAC_CALL StSampleVoice___setCycleLen(void *, yacmemptr       );
sF32  YAC_CALL StSampleVoice___getCycleLen(void *                  );
void  YAC_CALL StSampleVoice___setSampleShift(void *, yacmemptr    );
sF32  YAC_CALL StSampleVoice___getSampleShift(void *               );
void  YAC_CALL StSampleVoice___setSampleShiftEndOfLoop(void *, yacmemptr);
sF32  YAC_CALL StSampleVoice___getSampleShiftEndOfLoop(void *      );
void  YAC_CALL StSampleVoice___setAltVolume(void *, yacmemptr      );
sF32  YAC_CALL StSampleVoice___getAltVolume(void *                 );
void  YAC_CALL StSampleVoice___setRetrigMask(void *, yacmemptr     );
void  YAC_CALL StSampleVoice___setTimedLoopBase(void *, yacmemptr  );
sF32  YAC_CALL StSampleVoice___getTimedLoopBase(void *             );
void  YAC_CALL StSampleVoice___setLFOFreqSpd(void *, yacmemptr     );
void  YAC_CALL StSampleVoice___setLFOFreqLvl(void *, yacmemptr     );
void  YAC_CALL StSampleVoice___setLFOFreqAmt(void *, yacmemptr     );
void  YAC_CALL StSampleVoice___setLFOVolSpd(void *, yacmemptr      );
void  YAC_CALL StSampleVoice___setLFOVolLvl(void *, yacmemptr      );
void  YAC_CALL StSampleVoice___setLFOVolAmt(void *, yacmemptr      );
void  YAC_CALL StSampleVoice___setLFOPanSpd(void *, yacmemptr      );
void  YAC_CALL StSampleVoice___setLFOPanLvl(void *, yacmemptr      );
void  YAC_CALL StSampleVoice___setLFOPanAmt(void *, yacmemptr      );
void  YAC_CALL StSampleVoice___setLFOAuxSpd(void *, yacmemptr      );
void  YAC_CALL StSampleVoice___setLFOAuxLvl(void *, yacmemptr      );
void  YAC_CALL StSampleVoice___setLFOAuxFltAmt(void *, yacmemptr   );
void  YAC_CALL StSampleVoice___setADSRFreqSpd(void *, yacmemptr    );
void  YAC_CALL StSampleVoice___setADSRFreqLvl(void *, yacmemptr    );
void  YAC_CALL StSampleVoice___setADSRFreqInt(void *, yacmemptr    );
void  YAC_CALL StSampleVoice___setADSRVolSpd(void *, yacmemptr     );
void  YAC_CALL StSampleVoice___setADSRVolLvl(void *, yacmemptr     );
void  YAC_CALL StSampleVoice___setADSRVolInt(void *, yacmemptr     );
void  YAC_CALL StSampleVoice___setADSRPanSpd(void *, yacmemptr     );
void  YAC_CALL StSampleVoice___setADSRPanLvl(void *, yacmemptr     );
void  YAC_CALL StSampleVoice___setADSRPanInt(void *, yacmemptr     );
void  YAC_CALL StSampleVoice___setADSRAuxSpd(void *, yacmemptr     );
void  YAC_CALL StSampleVoice___setADSRAuxLvl(void *, yacmemptr     );
void  YAC_CALL StSampleVoice___setADSRAuxInt(void *, yacmemptr     );
void  YAC_CALL StSampleVoice___setAFreqSpd(void *, yacmemptr       );
void  YAC_CALL StSampleVoice___setSFreqSpd(void *, yacmemptr       );
void  YAC_CALL StSampleVoice___setRFreqSpd(void *, yacmemptr       );
void  YAC_CALL StSampleVoice___setAVolSpd(void *, yacmemptr        );
void  YAC_CALL StSampleVoice___setSVolSpd(void *, yacmemptr        );
void  YAC_CALL StSampleVoice___setRVolSpd(void *, yacmemptr        );
void  YAC_CALL StSampleVoice___setAPanSpd(void *, yacmemptr        );
void  YAC_CALL StSampleVoice___setSPanSpd(void *, yacmemptr        );
void  YAC_CALL StSampleVoice___setRPanSpd(void *, yacmemptr        );
void  YAC_CALL StSampleVoice___setAAuxSpd(void *, yacmemptr        );
void  YAC_CALL StSampleVoice___setSAuxSpd(void *, yacmemptr        );
void  YAC_CALL StSampleVoice___setRAuxSpd(void *, yacmemptr        );
void  YAC_CALL StSampleVoice___setJumpToLoop(void *, yacmemptr     );
void  YAC_CALL StSampleVoice___setJumpToLoopRel(void *, yacmemptr  );
void  YAC_CALL StSampleVoice___setWavepathIndex(void *, yacmemptr  );
void  YAC_CALL StSampleVoice___setModSeqRetrigMask(void *, yacmemptr);
void  YAC_CALL StSampleVoice___setModSeqSpeed(void *, yacmemptr    );
void  YAC_CALL StSampleVoice___setModSeqLevel(void *, yacmemptr    );
void  YAC_CALL StSampleVoice___setModSeqNumStepsRel(void *, yacmemptr);
void  YAC_CALL StSampleVoice___setModSeqAdvance(void *, yacmemptr  );
void  YAC_CALL StSampleVoice___render(void *, yacmemptr            );
void  YAC_CALL StSampleVoice___PrintDebugStats(void *              );
sF32  YAC_CALL StSampleVoice___FreqToNote(void *, yacmemptr        );
void  YAC_CALL StSampleVoice___allocOverrideSampleLoops(void *     );
void* YAC_CALL StSampleVoice___getOrCreateOverrideSampleLoops(void *);
void* YAC_CALL StSampleVoice___getOverrideSampleLoops(void *       );
void  YAC_CALL StSampleVoice___freeOverrideSampleLoops(void *      );
sSI   YAC_CALL StSampleVoice___verifyOverrideSampleAreas(void *    );
sSI   YAC_CALL StSampleVoice___liveRecGetOverrideLoopOffset(void * );
sSI   YAC_CALL StSampleVoice___liveRecGetOverrideLoopLen(void *    );
sSI   YAC_CALL StSampleVoice___liveRecGetOverridePlayBufIdx(void * );
sSI   YAC_CALL StSampleVoice___liveRecGetOverrideSmpDatSz(void *   );
sSI   YAC_CALL StSampleVoice__copyOverrideBufferToWaveform(void *  );
sSI   YAC_CALL StSampleVoice__copyOverrideBufferToFloatArray(void *, yacmemptr);
void  YAC_CALL StSampleVoice___setFilterCutOff(void *, yacmemptr   );
void  YAC_CALL StSampleVoice___setFilterPan(void *, yacmemptr      );
void  YAC_CALL StSampleVoice___setFilterOffset(void *, yacmemptr   );
void  YAC_CALL StSampleVoice___setFilterResonance(void *, yacmemptr);
void  YAC_CALL StSampleVoice___setGlideSwitch(void *, yacmemptr    );
void  YAC_CALL StSampleVoice___setGlideSpeed(void *, yacmemptr     );
void  YAC_CALL StSampleVoice___resetLFOFreqPhase(void *            );
void  YAC_CALL StSampleVoice___resetLFOVolPhase(void *             );
void  YAC_CALL StSampleVoice___resetLFOPanPhase(void *             );
void  YAC_CALL StSampleVoice___resetLFOAuxPhase(void *             );
void  YAC_CALL StSampleVoice___updatePerfCtlPolyPressure(void *, yacmemptr);
sSI   YAC_CALL StSampleVoice___mmVarGetLastSeenIdx(void *          );
#endif // YAC_NO_HOST

// ------------------ YAC class "StSampleVoice" reflection map (implementation) ------------------
sUI          YAC_VCALL StSampleVoice::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL StSampleVoice::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL StSampleVoice::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL StSampleVoice::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL StSampleVoice::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL StSampleVoice::yacMethodGetNum                  (void) {return 113;}
const char **YAC_VCALL StSampleVoice::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "resetVoice", "getVoiceIndex", "startVoice", "restartVoice", "stopVoice", "softStopVoice", "noteOff", "noteToFreq", "setVol", "getVol", "setVol2", "getVol2", "setPan", "getPan", "setPan2", "getPan2", "setFreq", "getFreq", "setFreq2", "getFreq2", "setMod", "getMod", "setTimestretch", "getTimestretch", "setTimestretchBend", "getTimestretchBend", "setSampleOff", "setSampleOffMs", "getSampleOff", "setSampleOff2", "getSampleOff2", "setCycleLen", "getCycleLen", "setSampleShift", "getSampleShift", "setSampleShiftEndOfLoop", "getSampleShiftEndOfLoop", "setAltVolume", "getAltVolume", "setRetrigMask", "setTimedLoopBase", "getTimedLoopBase", "setLFOFreqSpd", "setLFOFreqLvl", "setLFOFreqAmt", "setLFOVolSpd", "setLFOVolLvl", "setLFOVolAmt", "setLFOPanSpd", "setLFOPanLvl", "setLFOPanAmt", "setLFOAuxSpd", "setLFOAuxLvl", "setLFOAuxFltAmt", "setADSRFreqSpd", "setADSRFreqLvl", "setADSRFreqInt", "setADSRVolSpd", "setADSRVolLvl", "setADSRVolInt", "setADSRPanSpd", "setADSRPanLvl", "setADSRPanInt", "setADSRAuxSpd", "setADSRAuxLvl", "setADSRAuxInt", "setAFreqSpd", "setSFreqSpd", "setRFreqSpd", "setAVolSpd", "setSVolSpd", "setRVolSpd", "setAPanSpd", "setSPanSpd", "setRPanSpd", "setAAuxSpd", "setSAuxSpd", "setRAuxSpd", "setJumpToLoop", "setJumpToLoopRel", "setWavepathIndex", "setModSeqRetrigMask", "setModSeqSpeed", "setModSeqLevel", "setModSeqNumStepsRel", "setModSeqAdvance", "render", "PrintDebugStats", "FreqToNote", "allocOverrideSampleLoops", "getOrCreateOverrideSampleLoops", "getOverrideSampleLoops", "freeOverrideSampleLoops", "verifyOverrideSampleAreas", "liveRecGetOverrideLoopOffset", "liveRecGetOverrideLoopLen", "liveRecGetOverridePlayBufIdx", "liveRecGetOverrideSmpDatSz", "copyOverrideBufferToWaveform", "copyOverrideBufferToFloatArray", "setFilterCutOff", "setFilterPan", "setFilterOffset", "setFilterResonance", "setGlideSwitch", "setGlideSpeed", "resetLFOFreqPhase", "resetLFOVolPhase", "resetLFOPanPhase", "resetLFOAuxPhase", "updatePerfCtlPolyPressure", "mmVarGetLastSeenIdx"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StSampleVoice::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 0, 9, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL StSampleVoice::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={0,};static const sUI rt3[]={3, 3, 2, 1, 2, 2, 2, 2, 2,};static const sUI rt4[]={0,};static const sUI rt5[]={0,};static const sUI rt6[]={0,};static const sUI rt7[]={2,};static const sUI rt8[]={2,};static const sUI rt9[]={2,};static const sUI rt10[]={0,};static const sUI rt11[]={2,};static const sUI rt12[]={0,};static const sUI rt13[]={2,};static const sUI rt14[]={0,};static const sUI rt15[]={2,};static const sUI rt16[]={0,};static const sUI rt17[]={2,};static const sUI rt18[]={0,};static const sUI rt19[]={2,};static const sUI rt20[]={0,};static const sUI rt21[]={2,};static const sUI rt22[]={0,};static const sUI rt23[]={2,};static const sUI rt24[]={0,};static const sUI rt25[]={2,};static const sUI rt26[]={0,};static const sUI rt27[]={2,};static const sUI rt28[]={2,};static const sUI rt29[]={0,};static const sUI rt30[]={2,};static const sUI rt31[]={0,};static const sUI rt32[]={2,};static const sUI rt33[]={0,};static const sUI rt34[]={2,};static const sUI rt35[]={0,};static const sUI rt36[]={2,};static const sUI rt37[]={0,};static const sUI rt38[]={2,};static const sUI rt39[]={0,};static const sUI rt40[]={1,};static const sUI rt41[]={2,};static const sUI rt42[]={0,};static const sUI rt43[]={2,};static const sUI rt44[]={2,};static const sUI rt45[]={2,};static const sUI rt46[]={2,};static const sUI rt47[]={2,};static const sUI rt48[]={2,};static const sUI rt49[]={2,};static const sUI rt50[]={2,};static const sUI rt51[]={2,};static const sUI rt52[]={2,};static const sUI rt53[]={2,};static const sUI rt54[]={2,};static const sUI rt55[]={2,};static const sUI rt56[]={2,};static const sUI rt57[]={2,};static const sUI rt58[]={2,};static const sUI rt59[]={2,};static const sUI rt60[]={2,};static const sUI rt61[]={2,};static const sUI rt62[]={2,};static const sUI rt63[]={2,};static const sUI rt64[]={2,};static const sUI rt65[]={2,};static const sUI rt66[]={2,};static const sUI rt67[]={2,};static const sUI rt68[]={2,};static const sUI rt69[]={2,};static const sUI rt70[]={2,};static const sUI rt71[]={2,};static const sUI rt72[]={2,};static const sUI rt73[]={2,};static const sUI rt74[]={2,};static const sUI rt75[]={2,};static const sUI rt76[]={2,};static const sUI rt77[]={2,};static const sUI rt78[]={2,};static const sUI rt79[]={1,};static const sUI rt80[]={2,};static const sUI rt81[]={1,};static const sUI rt82[]={1,};static const sUI rt83[]={1, 2,};static const sUI rt84[]={1, 2,};static const sUI rt85[]={1, 2,};static const sUI rt86[]={1, 2,};static const sUI rt87[]={3, 2,};static const sUI rt88[]={0,};static const sUI rt89[]={2, 3,};static const sUI rt90[]={0,};static const sUI rt91[]={0,};static const sUI rt92[]={0,};static const sUI rt93[]={0,};static const sUI rt94[]={0,};static const sUI rt95[]={0,};static const sUI rt96[]={0,};static const sUI rt97[]={0,};static const sUI rt98[]={0,};static const sUI rt99[]={0,};static const sUI rt100[]={3,};static const sUI rt101[]={2,};static const sUI rt102[]={2,};static const sUI rt103[]={2,};static const sUI rt104[]={2,};static const sUI rt105[]={1,};static const sUI rt106[]={2,};static const sUI rt107[]={0,};static const sUI rt108[]={0,};static const sUI rt109[]={0,};static const sUI rt110[]={0,};static const sUI rt111[]={2,};static const sUI rt112[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40, rt41, rt42, rt43, rt44, rt45, rt46, rt47, rt48, rt49, rt50, rt51, rt52, rt53, rt54, rt55, rt56, rt57, rt58, rt59, rt60, rt61, rt62, rt63, rt64, rt65, rt66, rt67, rt68, rt69, rt70, rt71, rt72, rt73, rt74, rt75, rt76, rt77, rt78, rt79, rt80, rt81, rt82, rt83, rt84, rt85, rt86, rt87, rt88, rt89, rt90, rt91, rt92, rt93, rt94, rt95, rt96, rt97, rt98, rt99, rt100, rt101, rt102, rt103, rt104, rt105, rt106, rt107, rt108, rt109, rt110, rt111, rt112}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL StSampleVoice::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0,};static const char *rs26[]={(const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0,};static const char *rs31[]={(const char*)0,};static const char *rs32[]={(const char*)0,};static const char *rs33[]={(const char*)0,};static const char *rs34[]={(const char*)0,};static const char *rs35[]={(const char*)0,};static const char *rs36[]={(const char*)0,};static const char *rs37[]={(const char*)0,};static const char *rs38[]={(const char*)0,};static const char *rs39[]={(const char*)0,};static const char *rs40[]={(const char*)0,};static const char *rs41[]={(const char*)0,};static const char *rs42[]={(const char*)0,};static const char *rs43[]={(const char*)0,};static const char *rs44[]={(const char*)0,};static const char *rs45[]={(const char*)0,};static const char *rs46[]={(const char*)0,};static const char *rs47[]={(const char*)0,};static const char *rs48[]={(const char*)0,};static const char *rs49[]={(const char*)0,};static const char *rs50[]={(const char*)0,};static const char *rs51[]={(const char*)0,};static const char *rs52[]={(const char*)0,};static const char *rs53[]={(const char*)0,};static const char *rs54[]={(const char*)0,};static const char *rs55[]={(const char*)0,};static const char *rs56[]={(const char*)0,};static const char *rs57[]={(const char*)0,};static const char *rs58[]={(const char*)0,};static const char *rs59[]={(const char*)0,};static const char *rs60[]={(const char*)0,};static const char *rs61[]={(const char*)0,};static const char *rs62[]={(const char*)0,};static const char *rs63[]={(const char*)0,};static const char *rs64[]={(const char*)0,};static const char *rs65[]={(const char*)0,};static const char *rs66[]={(const char*)0,};static const char *rs67[]={(const char*)0,};static const char *rs68[]={(const char*)0,};static const char *rs69[]={(const char*)0,};static const char *rs70[]={(const char*)0,};static const char *rs71[]={(const char*)0,};static const char *rs72[]={(const char*)0,};static const char *rs73[]={(const char*)0,};static const char *rs74[]={(const char*)0,};static const char *rs75[]={(const char*)0,};static const char *rs76[]={(const char*)0,};static const char *rs77[]={(const char*)0,};static const char *rs78[]={(const char*)0,};static const char *rs79[]={(const char*)0,};static const char *rs80[]={(const char*)0,};static const char *rs81[]={(const char*)0,};static const char *rs82[]={(const char*)0,};static const char *rs83[]={(const char*)0, (const char*)0,};static const char *rs84[]={(const char*)0, (const char*)0,};static const char *rs85[]={(const char*)0, (const char*)0,};static const char *rs86[]={(const char*)0, (const char*)0,};static const char *rs87[]={(const char*)0, (const char*)0,};static const char *rs88[]={(const char*)0,};static const char *rs89[]={(const char*)0, (const char*)0,};static const char *rs90[]={(const char*)0,};static const char *rs91[]={(const char*)0,};static const char *rs92[]={(const char*)0,};static const char *rs93[]={(const char*)0,};static const char *rs94[]={(const char*)0,};static const char *rs95[]={(const char*)0,};static const char *rs96[]={(const char*)0,};static const char *rs97[]={(const char*)0,};static const char *rs98[]={(const char*)0,};static const char *rs99[]={(const char*)0,};static const char *rs100[]={(const char*)0,};static const char *rs101[]={(const char*)0,};static const char *rs102[]={(const char*)0,};static const char *rs103[]={(const char*)0,};static const char *rs104[]={(const char*)0,};static const char *rs105[]={(const char*)0,};static const char *rs106[]={(const char*)0,};static const char *rs107[]={(const char*)0,};static const char *rs108[]={(const char*)0,};static const char *rs109[]={(const char*)0,};static const char *rs110[]={(const char*)0,};static const char *rs111[]={(const char*)0,};static const char *rs112[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40, rs41, rs42, rs43, rs44, rs45, rs46, rs47, rs48, rs49, rs50, rs51, rs52, rs53, rs54, rs55, rs56, rs57, rs58, rs59, rs60, rs61, rs62, rs63, rs64, rs65, rs66, rs67, rs68, rs69, rs70, rs71, rs72, rs73, rs74, rs75, rs76, rs77, rs78, rs79, rs80, rs81, rs82, rs83, rs84, rs85, rs86, rs87, rs88, rs89, rs90, rs91, rs92, rs93, rs94, rs95, rs96, rs97, rs98, rs99, rs100, rs101, rs102, rs103, rs104, rs105, rs106, rs107, rs108, rs109, rs110, rs111, rs112}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StSampleVoice::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 1, 0, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL StSampleVoice::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL StSampleVoice::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)StSampleVoice___resetVoice, (void*)StSampleVoice__getVoiceIndex, (void*)StSampleVoice___startVoice, (void*)StSampleVoice___restartVoice, (void*)StSampleVoice__stopVoice, (void*)StSampleVoice__softStopVoice, (void*)StSampleVoice__noteOff, (void*)StSampleVoice__noteToFreq, (void*)StSampleVoice___setVol, (void*)StSampleVoice___getVol, (void*)StSampleVoice___setVol2, (void*)StSampleVoice___getVol2, (void*)StSampleVoice___setPan, (void*)StSampleVoice___getPan, (void*)StSampleVoice___setPan2, (void*)StSampleVoice___getPan2, (void*)StSampleVoice___setFreq, (void*)StSampleVoice___getFreq, (void*)StSampleVoice___setFreq2, (void*)StSampleVoice___getFreq2, (void*)StSampleVoice___setMod, (void*)StSampleVoice___getMod, (void*)StSampleVoice___setTimestretch, (void*)StSampleVoice___getTimestretch, (void*)StSampleVoice___setTimestretchBend, (void*)StSampleVoice___getTimestretchBend, (void*)StSampleVoice___setSampleOff, (void*)StSampleVoice___setSampleOffMs, (void*)StSampleVoice___getSampleOff, (void*)StSampleVoice___setSampleOff2, (void*)StSampleVoice___getSampleOff2, (void*)StSampleVoice___setCycleLen, (void*)StSampleVoice___getCycleLen, (void*)StSampleVoice___setSampleShift, (void*)StSampleVoice___getSampleShift, (void*)StSampleVoice___setSampleShiftEndOfLoop, (void*)StSampleVoice___getSampleShiftEndOfLoop, (void*)StSampleVoice___setAltVolume, (void*)StSampleVoice___getAltVolume, (void*)StSampleVoice___setRetrigMask, (void*)StSampleVoice___setTimedLoopBase, (void*)StSampleVoice___getTimedLoopBase, (void*)StSampleVoice___setLFOFreqSpd, (void*)StSampleVoice___setLFOFreqLvl, (void*)StSampleVoice___setLFOFreqAmt, (void*)StSampleVoice___setLFOVolSpd, (void*)StSampleVoice___setLFOVolLvl, (void*)StSampleVoice___setLFOVolAmt, (void*)StSampleVoice___setLFOPanSpd, (void*)StSampleVoice___setLFOPanLvl, (void*)StSampleVoice___setLFOPanAmt, (void*)StSampleVoice___setLFOAuxSpd, (void*)StSampleVoice___setLFOAuxLvl, (void*)StSampleVoice___setLFOAuxFltAmt, (void*)StSampleVoice___setADSRFreqSpd, (void*)StSampleVoice___setADSRFreqLvl, (void*)StSampleVoice___setADSRFreqInt, (void*)StSampleVoice___setADSRVolSpd, (void*)StSampleVoice___setADSRVolLvl, (void*)StSampleVoice___setADSRVolInt, (void*)StSampleVoice___setADSRPanSpd, (void*)StSampleVoice___setADSRPanLvl, (void*)StSampleVoice___setADSRPanInt, (void*)StSampleVoice___setADSRAuxSpd, (void*)StSampleVoice___setADSRAuxLvl, (void*)StSampleVoice___setADSRAuxInt, (void*)StSampleVoice___setAFreqSpd, (void*)StSampleVoice___setSFreqSpd, (void*)StSampleVoice___setRFreqSpd, (void*)StSampleVoice___setAVolSpd, (void*)StSampleVoice___setSVolSpd, (void*)StSampleVoice___setRVolSpd, (void*)StSampleVoice___setAPanSpd, (void*)StSampleVoice___setSPanSpd, (void*)StSampleVoice___setRPanSpd, (void*)StSampleVoice___setAAuxSpd, (void*)StSampleVoice___setSAuxSpd, (void*)StSampleVoice___setRAuxSpd, (void*)StSampleVoice___setJumpToLoop, (void*)StSampleVoice___setJumpToLoopRel, (void*)StSampleVoice___setWavepathIndex, (void*)StSampleVoice___setModSeqRetrigMask, (void*)StSampleVoice___setModSeqSpeed, (void*)StSampleVoice___setModSeqLevel, (void*)StSampleVoice___setModSeqNumStepsRel, (void*)StSampleVoice___setModSeqAdvance, (void*)StSampleVoice___render, (void*)StSampleVoice___PrintDebugStats, (void*)StSampleVoice___FreqToNote, (void*)StSampleVoice___allocOverrideSampleLoops, (void*)StSampleVoice___getOrCreateOverrideSampleLoops, (void*)StSampleVoice___getOverrideSampleLoops, (void*)StSampleVoice___freeOverrideSampleLoops, (void*)StSampleVoice___verifyOverrideSampleAreas, (void*)StSampleVoice___liveRecGetOverrideLoopOffset, (void*)StSampleVoice___liveRecGetOverrideLoopLen, (void*)StSampleVoice___liveRecGetOverridePlayBufIdx, (void*)StSampleVoice___liveRecGetOverrideSmpDatSz, (void*)StSampleVoice__copyOverrideBufferToWaveform, (void*)StSampleVoice__copyOverrideBufferToFloatArray, (void*)StSampleVoice___setFilterCutOff, (void*)StSampleVoice___setFilterPan, (void*)StSampleVoice___setFilterOffset, (void*)StSampleVoice___setFilterResonance, (void*)StSampleVoice___setGlideSwitch, (void*)StSampleVoice___setGlideSpeed, (void*)StSampleVoice___resetLFOFreqPhase, (void*)StSampleVoice___resetLFOVolPhase, (void*)StSampleVoice___resetLFOPanPhase, (void*)StSampleVoice___resetLFOAuxPhase, (void*)StSampleVoice___updatePerfCtlPolyPressure, (void*)StSampleVoice___mmVarGetLastSeenIdx}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL StSampleVoice::yacConstantGetNum                (void) {return 22;}
const char **YAC_VCALL StSampleVoice::yacConstantGetNames              (void) {
#ifndef YAC_NO_HOST
static const char*r[]={"STSAMPLEVOICE_TICKSPERSEC", "STSAMPLEVOICE_BLOCK_LEN", "STSAMPLEPLAYER_PERFCTL_PITCHBEND", "STSAMPLEPLAYER_PERFCTL_PRESSURE", "STSAMPLEPLAYER_PERFCTL_CC1_MODWHEEL", "STSAMPLEPLAYER_PERFCTL_CC2_BREATHCTL", "STSAMPLEPLAYER_PERFCTL_CC4_FOOTCTL", "STSAMPLEPLAYER_PERFCTL_CC7_VOLUME", "STSAMPLEPLAYER_PERFCTL_CC8_BALANCE", "STSAMPLEPLAYER_PERFCTL_CC10_PAN", "STSAMPLEPLAYER_PERFCTL_CC11_EXPRESSION", "STSAMPLEPLAYER_PERFCTL_CC16_GENERAL_1", "STSAMPLEPLAYER_PERFCTL_CC17_GENERAL_2", "STSAMPLEPLAYER_PERFCTL_CC18_GENERAL_3", "STSAMPLEPLAYER_PERFCTL_CC19_GENERAL_4", "STSAMPLEPLAYER_PERFCTL_CC74_BRIGHTNESS", "STSAMPLEPLAYER_PERFCTL_CC80_GENERAL_5", "STSAMPLEPLAYER_PERFCTL_CC81_GENERAL_6", "STSAMPLEPLAYER_PERFCTL_CC82_GENERAL_7", "STSAMPLEPLAYER_PERFCTL_CC83_GENERAL_8", "STSAMPLEPLAYER_NUM_PERFCTL", "STSAMPLEVOICE_NUM_REGS"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StSampleVoice::yacConstantGetTypes              (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
yacmemptr    YAC_VCALL StSampleVoice::yacConstantGetValues             (void) {yacmemptr m;
#ifndef YAC_NO_HOST
static sUI r[22]; m.ui=r; m.f32[0]=(sF32)1000.0f;m.f32[1]=(sF32)(1.0f/STSAMPLEVOICE_TICKSPERSEC);m.si[2]=(sSI)0;m.si[3]=(sSI)1;m.si[4]=(sSI)2;m.si[5]=(sSI)3;m.si[6]=(sSI)4;m.si[7]=(sSI)5;m.si[8]=(sSI)6;m.si[9]=(sSI)7;m.si[10]=(sSI)8;m.si[11]=(sSI)9;m.si[12]=(sSI)10;m.si[13]=(sSI)11;m.si[14]=(sSI)12;m.si[15]=(sSI)13;m.si[16]=(sSI)14;m.si[17]=(sSI)15;m.si[18]=(sSI)16;m.si[19]=(sSI)17;m.si[20]=(sSI)18;m.si[21]=(sSI)4;; return m;
#else
m.any = 0; return m;
#endif // YAC_NO_HOST
}

YAC_C(StSampleVoice, "StSampleVoice");

#ifndef YAC_NO_HOST
void  YAC_CALL StSampleVoice___resetVoice(void *_o                           ) {((StSampleVoice*)_o)->_resetVoice();}
sSI   YAC_CALL StSampleVoice__getVoiceIndex(void *_o                         ) {return (sSI)((StSampleVoice*)_o)->getVoiceIndex();}
void  YAC_CALL StSampleVoice___startVoice(void *_o, yacmemptr _args          ) {((StSampleVoice*)_o)->_startVoice(_args.mem[0].o, _args.mem[1].o, _args.mem[2].f32, _args.mem[3].si, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32);}
void  YAC_CALL StSampleVoice___restartVoice(void *_o                         ) {((StSampleVoice*)_o)->_restartVoice();}
void  YAC_CALL StSampleVoice__stopVoice(void *_o                             ) {((StSampleVoice*)_o)->stopVoice();}
void  YAC_CALL StSampleVoice__softStopVoice(void *_o                         ) {((StSampleVoice*)_o)->softStopVoice();}
void  YAC_CALL StSampleVoice__noteOff(void *_o, yacmemptr _args              ) {((StSampleVoice*)_o)->noteOff(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice__noteToFreq(void *_o, yacmemptr _args           ) {return (sF32)((StSampleVoice*)_o)->noteToFreq(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setVol(void *_o, yacmemptr _args              ) {((StSampleVoice*)_o)->_setVol(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice___getVol(void *_o                               ) {return (sF32)((StSampleVoice*)_o)->_getVol();}
void  YAC_CALL StSampleVoice___setVol2(void *_o, yacmemptr _args             ) {((StSampleVoice*)_o)->_setVol2(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice___getVol2(void *_o                              ) {return (sF32)((StSampleVoice*)_o)->_getVol2();}
void  YAC_CALL StSampleVoice___setPan(void *_o, yacmemptr _args              ) {((StSampleVoice*)_o)->_setPan(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice___getPan(void *_o                               ) {return (sF32)((StSampleVoice*)_o)->_getPan();}
void  YAC_CALL StSampleVoice___setPan2(void *_o, yacmemptr _args             ) {((StSampleVoice*)_o)->_setPan2(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice___getPan2(void *_o                              ) {return (sF32)((StSampleVoice*)_o)->_getPan2();}
void  YAC_CALL StSampleVoice___setFreq(void *_o, yacmemptr _args             ) {((StSampleVoice*)_o)->_setFreq(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice___getFreq(void *_o                              ) {return (sF32)((StSampleVoice*)_o)->_getFreq();}
void  YAC_CALL StSampleVoice___setFreq2(void *_o, yacmemptr _args            ) {((StSampleVoice*)_o)->_setFreq2(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice___getFreq2(void *_o                             ) {return (sF32)((StSampleVoice*)_o)->_getFreq2();}
void  YAC_CALL StSampleVoice___setMod(void *_o, yacmemptr _args              ) {((StSampleVoice*)_o)->_setMod(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice___getMod(void *_o                               ) {return (sF32)((StSampleVoice*)_o)->_getMod();}
void  YAC_CALL StSampleVoice___setTimestretch(void *_o, yacmemptr _args      ) {((StSampleVoice*)_o)->_setTimestretch(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice___getTimestretch(void *_o                       ) {return (sF32)((StSampleVoice*)_o)->_getTimestretch();}
void  YAC_CALL StSampleVoice___setTimestretchBend(void *_o, yacmemptr _args  ) {((StSampleVoice*)_o)->_setTimestretchBend(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice___getTimestretchBend(void *_o                   ) {return (sF32)((StSampleVoice*)_o)->_getTimestretchBend();}
void  YAC_CALL StSampleVoice___setSampleOff(void *_o, yacmemptr _args        ) {((StSampleVoice*)_o)->_setSampleOff(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setSampleOffMs(void *_o, yacmemptr _args      ) {((StSampleVoice*)_o)->_setSampleOffMs(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice___getSampleOff(void *_o                         ) {return (sF32)((StSampleVoice*)_o)->_getSampleOff();}
void  YAC_CALL StSampleVoice___setSampleOff2(void *_o, yacmemptr _args       ) {((StSampleVoice*)_o)->_setSampleOff2(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice___getSampleOff2(void *_o                        ) {return (sF32)((StSampleVoice*)_o)->_getSampleOff2();}
void  YAC_CALL StSampleVoice___setCycleLen(void *_o, yacmemptr _args         ) {((StSampleVoice*)_o)->_setCycleLen(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice___getCycleLen(void *_o                          ) {return (sF32)((StSampleVoice*)_o)->_getCycleLen();}
void  YAC_CALL StSampleVoice___setSampleShift(void *_o, yacmemptr _args      ) {((StSampleVoice*)_o)->_setSampleShift(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice___getSampleShift(void *_o                       ) {return (sF32)((StSampleVoice*)_o)->_getSampleShift();}
void  YAC_CALL StSampleVoice___setSampleShiftEndOfLoop(void *_o, yacmemptr _args) {((StSampleVoice*)_o)->_setSampleShiftEndOfLoop(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice___getSampleShiftEndOfLoop(void *_o              ) {return (sF32)((StSampleVoice*)_o)->_getSampleShiftEndOfLoop();}
void  YAC_CALL StSampleVoice___setAltVolume(void *_o, yacmemptr _args        ) {((StSampleVoice*)_o)->_setAltVolume(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice___getAltVolume(void *_o                         ) {return (sF32)((StSampleVoice*)_o)->_getAltVolume();}
void  YAC_CALL StSampleVoice___setRetrigMask(void *_o, yacmemptr _args       ) {((StSampleVoice*)_o)->_setRetrigMask(_args.mem[0].si);}
void  YAC_CALL StSampleVoice___setTimedLoopBase(void *_o, yacmemptr _args    ) {((StSampleVoice*)_o)->_setTimedLoopBase(_args.mem[0].f32);}
sF32  YAC_CALL StSampleVoice___getTimedLoopBase(void *_o                     ) {return (sF32)((StSampleVoice*)_o)->_getTimedLoopBase();}
void  YAC_CALL StSampleVoice___setLFOFreqSpd(void *_o, yacmemptr _args       ) {((StSampleVoice*)_o)->_setLFOFreqSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setLFOFreqLvl(void *_o, yacmemptr _args       ) {((StSampleVoice*)_o)->_setLFOFreqLvl(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setLFOFreqAmt(void *_o, yacmemptr _args       ) {((StSampleVoice*)_o)->_setLFOFreqAmt(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setLFOVolSpd(void *_o, yacmemptr _args        ) {((StSampleVoice*)_o)->_setLFOVolSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setLFOVolLvl(void *_o, yacmemptr _args        ) {((StSampleVoice*)_o)->_setLFOVolLvl(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setLFOVolAmt(void *_o, yacmemptr _args        ) {((StSampleVoice*)_o)->_setLFOVolAmt(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setLFOPanSpd(void *_o, yacmemptr _args        ) {((StSampleVoice*)_o)->_setLFOPanSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setLFOPanLvl(void *_o, yacmemptr _args        ) {((StSampleVoice*)_o)->_setLFOPanLvl(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setLFOPanAmt(void *_o, yacmemptr _args        ) {((StSampleVoice*)_o)->_setLFOPanAmt(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setLFOAuxSpd(void *_o, yacmemptr _args        ) {((StSampleVoice*)_o)->_setLFOAuxSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setLFOAuxLvl(void *_o, yacmemptr _args        ) {((StSampleVoice*)_o)->_setLFOAuxLvl(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setLFOAuxFltAmt(void *_o, yacmemptr _args     ) {((StSampleVoice*)_o)->_setLFOAuxFltAmt(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setADSRFreqSpd(void *_o, yacmemptr _args      ) {((StSampleVoice*)_o)->_setADSRFreqSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setADSRFreqLvl(void *_o, yacmemptr _args      ) {((StSampleVoice*)_o)->_setADSRFreqLvl(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setADSRFreqInt(void *_o, yacmemptr _args      ) {((StSampleVoice*)_o)->_setADSRFreqInt(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setADSRVolSpd(void *_o, yacmemptr _args       ) {((StSampleVoice*)_o)->_setADSRVolSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setADSRVolLvl(void *_o, yacmemptr _args       ) {((StSampleVoice*)_o)->_setADSRVolLvl(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setADSRVolInt(void *_o, yacmemptr _args       ) {((StSampleVoice*)_o)->_setADSRVolInt(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setADSRPanSpd(void *_o, yacmemptr _args       ) {((StSampleVoice*)_o)->_setADSRPanSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setADSRPanLvl(void *_o, yacmemptr _args       ) {((StSampleVoice*)_o)->_setADSRPanLvl(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setADSRPanInt(void *_o, yacmemptr _args       ) {((StSampleVoice*)_o)->_setADSRPanInt(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setADSRAuxSpd(void *_o, yacmemptr _args       ) {((StSampleVoice*)_o)->_setADSRAuxSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setADSRAuxLvl(void *_o, yacmemptr _args       ) {((StSampleVoice*)_o)->_setADSRAuxLvl(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setADSRAuxInt(void *_o, yacmemptr _args       ) {((StSampleVoice*)_o)->_setADSRAuxInt(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setAFreqSpd(void *_o, yacmemptr _args         ) {((StSampleVoice*)_o)->_setAFreqSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setSFreqSpd(void *_o, yacmemptr _args         ) {((StSampleVoice*)_o)->_setSFreqSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setRFreqSpd(void *_o, yacmemptr _args         ) {((StSampleVoice*)_o)->_setRFreqSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setAVolSpd(void *_o, yacmemptr _args          ) {((StSampleVoice*)_o)->_setAVolSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setSVolSpd(void *_o, yacmemptr _args          ) {((StSampleVoice*)_o)->_setSVolSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setRVolSpd(void *_o, yacmemptr _args          ) {((StSampleVoice*)_o)->_setRVolSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setAPanSpd(void *_o, yacmemptr _args          ) {((StSampleVoice*)_o)->_setAPanSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setSPanSpd(void *_o, yacmemptr _args          ) {((StSampleVoice*)_o)->_setSPanSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setRPanSpd(void *_o, yacmemptr _args          ) {((StSampleVoice*)_o)->_setRPanSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setAAuxSpd(void *_o, yacmemptr _args          ) {((StSampleVoice*)_o)->_setAAuxSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setSAuxSpd(void *_o, yacmemptr _args          ) {((StSampleVoice*)_o)->_setSAuxSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setRAuxSpd(void *_o, yacmemptr _args          ) {((StSampleVoice*)_o)->_setRAuxSpd(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setJumpToLoop(void *_o, yacmemptr _args       ) {((StSampleVoice*)_o)->_setJumpToLoop(_args.mem[0].si);}
void  YAC_CALL StSampleVoice___setJumpToLoopRel(void *_o, yacmemptr _args    ) {((StSampleVoice*)_o)->_setJumpToLoopRel(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setWavepathIndex(void *_o, yacmemptr _args    ) {((StSampleVoice*)_o)->_setWavepathIndex(_args.mem[0].si);}
void  YAC_CALL StSampleVoice___setModSeqRetrigMask(void *_o, yacmemptr _args ) {((StSampleVoice*)_o)->_setModSeqRetrigMask(_args.mem[0].si);}
void  YAC_CALL StSampleVoice___setModSeqSpeed(void *_o, yacmemptr _args      ) {((StSampleVoice*)_o)->_setModSeqSpeed(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSampleVoice___setModSeqLevel(void *_o, yacmemptr _args      ) {((StSampleVoice*)_o)->_setModSeqLevel(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSampleVoice___setModSeqNumStepsRel(void *_o, yacmemptr _args) {((StSampleVoice*)_o)->_setModSeqNumStepsRel(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSampleVoice___setModSeqAdvance(void *_o, yacmemptr _args    ) {((StSampleVoice*)_o)->_setModSeqAdvance(_args.mem[0].si, _args.mem[1].f32);}
void  YAC_CALL StSampleVoice___render(void *_o, yacmemptr _args              ) {((StSampleVoice*)_o)->_render(_args.mem[0].o, _args.mem[1].f32);}
void  YAC_CALL StSampleVoice___PrintDebugStats(void *_o                      ) {((StSampleVoice*)_o)->_PrintDebugStats();}
sF32  YAC_CALL StSampleVoice___FreqToNote(void *_o, yacmemptr _args          ) {return (sF32)((StSampleVoice*)_o)->_FreqToNote(_args.mem[0].f32, _args.mem[1].o);}
void  YAC_CALL StSampleVoice___allocOverrideSampleLoops(void *_o             ) {((StSampleVoice*)_o)->_allocOverrideSampleLoops();}
void* YAC_CALL StSampleVoice___getOrCreateOverrideSampleLoops(void *_o       ) {return (void*)((StSampleVoice*)_o)->_getOrCreateOverrideSampleLoops();}
void* YAC_CALL StSampleVoice___getOverrideSampleLoops(void *_o               ) {return (void*)((StSampleVoice*)_o)->_getOverrideSampleLoops();}
void  YAC_CALL StSampleVoice___freeOverrideSampleLoops(void *_o              ) {((StSampleVoice*)_o)->_freeOverrideSampleLoops();}
sSI   YAC_CALL StSampleVoice___verifyOverrideSampleAreas(void *_o            ) {return (sSI)((StSampleVoice*)_o)->_verifyOverrideSampleAreas();}
sSI   YAC_CALL StSampleVoice___liveRecGetOverrideLoopOffset(void *_o         ) {return (sSI)((StSampleVoice*)_o)->_liveRecGetOverrideLoopOffset();}
sSI   YAC_CALL StSampleVoice___liveRecGetOverrideLoopLen(void *_o            ) {return (sSI)((StSampleVoice*)_o)->_liveRecGetOverrideLoopLen();}
sSI   YAC_CALL StSampleVoice___liveRecGetOverridePlayBufIdx(void *_o         ) {return (sSI)((StSampleVoice*)_o)->_liveRecGetOverridePlayBufIdx();}
sSI   YAC_CALL StSampleVoice___liveRecGetOverrideSmpDatSz(void *_o           ) {return (sSI)((StSampleVoice*)_o)->_liveRecGetOverrideSmpDatSz();}
sSI   YAC_CALL StSampleVoice__copyOverrideBufferToWaveform(void *_o          ) {return (sSI)((StSampleVoice*)_o)->copyOverrideBufferToWaveform();}
sSI   YAC_CALL StSampleVoice__copyOverrideBufferToFloatArray(void *_o, yacmemptr _args) {return (sSI)((StSampleVoice*)_o)->copyOverrideBufferToFloatArray(_args.mem[0].o);}
void  YAC_CALL StSampleVoice___setFilterCutOff(void *_o, yacmemptr _args     ) {((StSampleVoice*)_o)->_setFilterCutOff(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setFilterPan(void *_o, yacmemptr _args        ) {((StSampleVoice*)_o)->_setFilterPan(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setFilterOffset(void *_o, yacmemptr _args     ) {((StSampleVoice*)_o)->_setFilterOffset(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setFilterResonance(void *_o, yacmemptr _args  ) {((StSampleVoice*)_o)->_setFilterResonance(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___setGlideSwitch(void *_o, yacmemptr _args      ) {((StSampleVoice*)_o)->_setGlideSwitch(_args.mem[0].si);}
void  YAC_CALL StSampleVoice___setGlideSpeed(void *_o, yacmemptr _args       ) {((StSampleVoice*)_o)->_setGlideSpeed(_args.mem[0].f32);}
void  YAC_CALL StSampleVoice___resetLFOFreqPhase(void *_o                    ) {((StSampleVoice*)_o)->_resetLFOFreqPhase();}
void  YAC_CALL StSampleVoice___resetLFOVolPhase(void *_o                     ) {((StSampleVoice*)_o)->_resetLFOVolPhase();}
void  YAC_CALL StSampleVoice___resetLFOPanPhase(void *_o                     ) {((StSampleVoice*)_o)->_resetLFOPanPhase();}
void  YAC_CALL StSampleVoice___resetLFOAuxPhase(void *_o                     ) {((StSampleVoice*)_o)->_resetLFOAuxPhase();}
void  YAC_CALL StSampleVoice___updatePerfCtlPolyPressure(void *_o, yacmemptr _args) {((StSampleVoice*)_o)->_updatePerfCtlPolyPressure(_args.mem[0].f32);}
sSI   YAC_CALL StSampleVoice___mmVarGetLastSeenIdx(void *_o                  ) {return (sSI)((StSampleVoice*)_o)->_mmVarGetLastSeenIdx();}
#endif // YAC_NO_HOST
