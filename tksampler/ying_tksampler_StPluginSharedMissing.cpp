// ---- ying_tksampler_StPluginSharedMissing.cpp: auto generated by YInG - the YAC interface generator (Fri, 13/Jun/2025 23:42:34)

#ifndef YAC_NO_HOST
void  YAC_CALL StPluginSharedMissing__setPluginId(void *, yacmemptr);
void* YAC_CALL StPluginSharedMissing__getPluginId(void *           );
void  YAC_CALL StPluginSharedMissing__setNumParams(void *, yacmemptr);
sSI   YAC_CALL StPluginSharedMissing__getNumParams(void *          );
sF32  YAC_CALL StPluginSharedMissing__getParamValue(void *, yacmemptr);
void  YAC_CALL StPluginSharedMissing__setParamValue(void *, yacmemptr);
sSI   YAC_CALL StPluginSharedMissing__allocArrayParam(void *, yacmemptr);
sSI   YAC_CALL StPluginSharedMissing__getArrayParamSize(void *, yacmemptr);
sSI   YAC_CALL StPluginSharedMissing__getArrayParamNumVariations(void *, yacmemptr);
void  YAC_CALL StPluginSharedMissing__getArrayParamVariationPtr(void *, yacmemptr, YAC_Value *);
sSI   YAC_CALL StPluginSharedMissing__getNumArrayParams(void *     );
#endif // YAC_NO_HOST

// ------------------ YAC class "StPluginSharedMissing" reflection map (implementation) ------------------
sUI          YAC_VCALL StPluginSharedMissing::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL StPluginSharedMissing::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL StPluginSharedMissing::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL StPluginSharedMissing::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL StPluginSharedMissing::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL StPluginSharedMissing::yacMethodGetNum                  (void) {return 12;}
const char **YAC_VCALL StPluginSharedMissing::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "setPluginId", "getPluginId", "setNumParams", "getNumParams", "getParamValue", "setParamValue", "allocArrayParam", "getArrayParamSize", "getArrayParamNumVariations", "getArrayParamVariationPtr", "getNumArrayParams"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StPluginSharedMissing::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 1, 0, 1, 0, 1, 2, 3, 1, 1, 2, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL StPluginSharedMissing::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={3,};static const sUI rt2[]={0,};static const sUI rt3[]={1,};static const sUI rt4[]={0,};static const sUI rt5[]={1,};static const sUI rt6[]={1, 2,};static const sUI rt7[]={1, 1, 1,};static const sUI rt8[]={1,};static const sUI rt9[]={1,};static const sUI rt10[]={1, 1,};static const sUI rt11[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL StPluginSharedMissing::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={"String",};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0, (const char*)0,};static const char *rs7[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0, (const char*)0,};static const char *rs11[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL StPluginSharedMissing::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 3, 0, 1, 2, 0, 1, 1, 1, 4, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL StPluginSharedMissing::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, "String", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL StPluginSharedMissing::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)StPluginSharedMissing__setPluginId, (void*)StPluginSharedMissing__getPluginId, (void*)StPluginSharedMissing__setNumParams, (void*)StPluginSharedMissing__getNumParams, (void*)StPluginSharedMissing__getParamValue, (void*)StPluginSharedMissing__setParamValue, (void*)StPluginSharedMissing__allocArrayParam, (void*)StPluginSharedMissing__getArrayParamSize, (void*)StPluginSharedMissing__getArrayParamNumVariations, (void*)StPluginSharedMissing__getArrayParamVariationPtr, (void*)StPluginSharedMissing__getNumArrayParams}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL StPluginSharedMissing::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL StPluginSharedMissing::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL StPluginSharedMissing::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL StPluginSharedMissing::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(StPluginSharedMissing, "StPluginSharedMissing");

#ifndef YAC_NO_HOST
void  YAC_CALL StPluginSharedMissing__setPluginId(void *_o, yacmemptr _args  ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ ((StPluginSharedMissing*)_o)->setPluginId((YAC_String*)_args.mem[0].o);}}
void* YAC_CALL StPluginSharedMissing__getPluginId(void *_o                   ) {return (void*)((StPluginSharedMissing*)_o)->getPluginId();}
void  YAC_CALL StPluginSharedMissing__setNumParams(void *_o, yacmemptr _args ) {((StPluginSharedMissing*)_o)->setNumParams(_args.mem[0].si);}
sSI   YAC_CALL StPluginSharedMissing__getNumParams(void *_o                  ) {return (sSI)((StPluginSharedMissing*)_o)->getNumParams();}
sF32  YAC_CALL StPluginSharedMissing__getParamValue(void *_o, yacmemptr _args) {return (sF32)((StPluginSharedMissing*)_o)->getParamValue(_args.mem[0].si);}
void  YAC_CALL StPluginSharedMissing__setParamValue(void *_o, yacmemptr _args) {((StPluginSharedMissing*)_o)->setParamValue(_args.mem[0].si, _args.mem[1].f32);}
sSI   YAC_CALL StPluginSharedMissing__allocArrayParam(void *_o, yacmemptr _args) {return (sSI)((StPluginSharedMissing*)_o)->allocArrayParam(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL StPluginSharedMissing__getArrayParamSize(void *_o, yacmemptr _args) {return (sSI)((StPluginSharedMissing*)_o)->getArrayParamSize(_args.mem[0].si);}
sSI   YAC_CALL StPluginSharedMissing__getArrayParamNumVariations(void *_o, yacmemptr _args) {return (sSI)((StPluginSharedMissing*)_o)->getArrayParamNumVariations(_args.mem[0].si);}
void  YAC_CALL StPluginSharedMissing__getArrayParamVariationPtr(void *_o, yacmemptr _args, YAC_Value *_r) {((StPluginSharedMissing*)_o)->getArrayParamVariationPtr(_args.mem[0].si, _args.mem[1].si, _r);}
sSI   YAC_CALL StPluginSharedMissing__getNumArrayParams(void *_o             ) {return (sSI)((StPluginSharedMissing*)_o)->getNumArrayParams();}
#endif // YAC_NO_HOST
