// ---- ying_vst2_VST2ParameterProperties.cpp: auto generated by YInG - the YAC interface generator (Mon, 1/Jul/2024 21:10:03)

#ifndef YAC_NO_HOST
void  YAC_CALL VST2ParameterProperties__getLabel(void *, YAC_Value *);
void  YAC_CALL VST2ParameterProperties__getShortLabel(void *, YAC_Value *);
sSI   YAC_CALL VST2ParameterProperties__getFlags(void *            );
sSI   YAC_CALL VST2ParameterProperties__isSwitch(void *            );
sSI   YAC_CALL VST2ParameterProperties__usesIntegerMinMax(void *   );
sSI   YAC_CALL VST2ParameterProperties__usesFloatStep(void *       );
sSI   YAC_CALL VST2ParameterProperties__usesIntStep(void *         );
sSI   YAC_CALL VST2ParameterProperties__supportsDisplayIndex(void *);
sSI   YAC_CALL VST2ParameterProperties__supportsDisplayCategory(void *);
sSI   YAC_CALL VST2ParameterProperties__canRamp(void *             );
sF32  YAC_CALL VST2ParameterProperties__getStepFloat(void *        );
sF32  YAC_CALL VST2ParameterProperties__getSmallStepFloat(void *   );
sF32  YAC_CALL VST2ParameterProperties__getLargeStepFloat(void *   );
sSI   YAC_CALL VST2ParameterProperties__getMinInteger(void *       );
sSI   YAC_CALL VST2ParameterProperties__getMaxInteger(void *       );
sSI   YAC_CALL VST2ParameterProperties__getStepInteger(void *      );
sSI   YAC_CALL VST2ParameterProperties__getLargeStepInteger(void * );
sSI   YAC_CALL VST2ParameterProperties__getDisplayIndex(void *     );
sSI   YAC_CALL VST2ParameterProperties__getCategory(void *         );
sSI   YAC_CALL VST2ParameterProperties__getNumParametersInCategory(void *);
void  YAC_CALL VST2ParameterProperties__getCategoryLabel(void *, YAC_Value *);
sF32  YAC_CALL VST2ParameterProperties__convertNormalizedValue(void *, yacmemptr);
#endif // YAC_NO_HOST

// ------------------ YAC class "VST2ParameterProperties" reflection map (implementation) ------------------
sUI          YAC_VCALL VST2ParameterProperties::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL VST2ParameterProperties::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL VST2ParameterProperties::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL VST2ParameterProperties::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL VST2ParameterProperties::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL VST2ParameterProperties::yacMethodGetNum                  (void) {return 23;}
const char **YAC_VCALL VST2ParameterProperties::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "getLabel", "getShortLabel", "getFlags", "isSwitch", "usesIntegerMinMax", "usesFloatStep", "usesIntStep", "supportsDisplayIndex", "supportsDisplayCategory", "canRamp", "getStepFloat", "getSmallStepFloat", "getLargeStepFloat", "getMinInteger", "getMaxInteger", "getStepInteger", "getLargeStepInteger", "getDisplayIndex", "getCategory", "getNumParametersInCategory", "getCategoryLabel", "convertNormalizedValue"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL VST2ParameterProperties::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL VST2ParameterProperties::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={0,};static const sUI rt3[]={0,};static const sUI rt4[]={0,};static const sUI rt5[]={0,};static const sUI rt6[]={0,};static const sUI rt7[]={0,};static const sUI rt8[]={0,};static const sUI rt9[]={0,};static const sUI rt10[]={0,};static const sUI rt11[]={0,};static const sUI rt12[]={0,};static const sUI rt13[]={0,};static const sUI rt14[]={0,};static const sUI rt15[]={0,};static const sUI rt16[]={0,};static const sUI rt17[]={0,};static const sUI rt18[]={0,};static const sUI rt19[]={0,};static const sUI rt20[]={0,};static const sUI rt21[]={0,};static const sUI rt22[]={2,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL VST2ParameterProperties::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL VST2ParameterProperties::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 4, 2}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL VST2ParameterProperties::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL VST2ParameterProperties::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)VST2ParameterProperties__getLabel, (void*)VST2ParameterProperties__getShortLabel, (void*)VST2ParameterProperties__getFlags, (void*)VST2ParameterProperties__isSwitch, (void*)VST2ParameterProperties__usesIntegerMinMax, (void*)VST2ParameterProperties__usesFloatStep, (void*)VST2ParameterProperties__usesIntStep, (void*)VST2ParameterProperties__supportsDisplayIndex, (void*)VST2ParameterProperties__supportsDisplayCategory, (void*)VST2ParameterProperties__canRamp, (void*)VST2ParameterProperties__getStepFloat, (void*)VST2ParameterProperties__getSmallStepFloat, (void*)VST2ParameterProperties__getLargeStepFloat, (void*)VST2ParameterProperties__getMinInteger, (void*)VST2ParameterProperties__getMaxInteger, (void*)VST2ParameterProperties__getStepInteger, (void*)VST2ParameterProperties__getLargeStepInteger, (void*)VST2ParameterProperties__getDisplayIndex, (void*)VST2ParameterProperties__getCategory, (void*)VST2ParameterProperties__getNumParametersInCategory, (void*)VST2ParameterProperties__getCategoryLabel, (void*)VST2ParameterProperties__convertNormalizedValue}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL VST2ParameterProperties::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL VST2ParameterProperties::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL VST2ParameterProperties::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL VST2ParameterProperties::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(VST2ParameterProperties, "VST2ParameterProperties");

#ifndef YAC_NO_HOST
void  YAC_CALL VST2ParameterProperties__getLabel(void *_o, YAC_Value *_r     ) {((VST2ParameterProperties*)_o)->getLabel(_r);}
void  YAC_CALL VST2ParameterProperties__getShortLabel(void *_o, YAC_Value *_r) {((VST2ParameterProperties*)_o)->getShortLabel(_r);}
sSI   YAC_CALL VST2ParameterProperties__getFlags(void *_o                    ) {return (sSI)((VST2ParameterProperties*)_o)->getFlags();}
sSI   YAC_CALL VST2ParameterProperties__isSwitch(void *_o                    ) {return (sSI)((VST2ParameterProperties*)_o)->isSwitch();}
sSI   YAC_CALL VST2ParameterProperties__usesIntegerMinMax(void *_o           ) {return (sSI)((VST2ParameterProperties*)_o)->usesIntegerMinMax();}
sSI   YAC_CALL VST2ParameterProperties__usesFloatStep(void *_o               ) {return (sSI)((VST2ParameterProperties*)_o)->usesFloatStep();}
sSI   YAC_CALL VST2ParameterProperties__usesIntStep(void *_o                 ) {return (sSI)((VST2ParameterProperties*)_o)->usesIntStep();}
sSI   YAC_CALL VST2ParameterProperties__supportsDisplayIndex(void *_o        ) {return (sSI)((VST2ParameterProperties*)_o)->supportsDisplayIndex();}
sSI   YAC_CALL VST2ParameterProperties__supportsDisplayCategory(void *_o     ) {return (sSI)((VST2ParameterProperties*)_o)->supportsDisplayCategory();}
sSI   YAC_CALL VST2ParameterProperties__canRamp(void *_o                     ) {return (sSI)((VST2ParameterProperties*)_o)->canRamp();}
sF32  YAC_CALL VST2ParameterProperties__getStepFloat(void *_o                ) {return (sF32)((VST2ParameterProperties*)_o)->getStepFloat();}
sF32  YAC_CALL VST2ParameterProperties__getSmallStepFloat(void *_o           ) {return (sF32)((VST2ParameterProperties*)_o)->getSmallStepFloat();}
sF32  YAC_CALL VST2ParameterProperties__getLargeStepFloat(void *_o           ) {return (sF32)((VST2ParameterProperties*)_o)->getLargeStepFloat();}
sSI   YAC_CALL VST2ParameterProperties__getMinInteger(void *_o               ) {return (sSI)((VST2ParameterProperties*)_o)->getMinInteger();}
sSI   YAC_CALL VST2ParameterProperties__getMaxInteger(void *_o               ) {return (sSI)((VST2ParameterProperties*)_o)->getMaxInteger();}
sSI   YAC_CALL VST2ParameterProperties__getStepInteger(void *_o              ) {return (sSI)((VST2ParameterProperties*)_o)->getStepInteger();}
sSI   YAC_CALL VST2ParameterProperties__getLargeStepInteger(void *_o         ) {return (sSI)((VST2ParameterProperties*)_o)->getLargeStepInteger();}
sSI   YAC_CALL VST2ParameterProperties__getDisplayIndex(void *_o             ) {return (sSI)((VST2ParameterProperties*)_o)->getDisplayIndex();}
sSI   YAC_CALL VST2ParameterProperties__getCategory(void *_o                 ) {return (sSI)((VST2ParameterProperties*)_o)->getCategory();}
sSI   YAC_CALL VST2ParameterProperties__getNumParametersInCategory(void *_o  ) {return (sSI)((VST2ParameterProperties*)_o)->getNumParametersInCategory();}
void  YAC_CALL VST2ParameterProperties__getCategoryLabel(void *_o, YAC_Value *_r) {((VST2ParameterProperties*)_o)->getCategoryLabel(_r);}
sF32  YAC_CALL VST2ParameterProperties__convertNormalizedValue(void *_o, yacmemptr _args) {return (sF32)((VST2ParameterProperties*)_o)->convertNormalizedValue(_args.mem[0].f32);}
#endif // YAC_NO_HOST
