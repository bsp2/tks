// ---- ying_midi_RecordedMIDIEvent.cpp: auto generated by YInG - the YAC interface generator (Tue, 1/Aug/2023 23:06:51)

sSI   YAC_CALL RecordedMIDIEvent__getMillisec(void *               );
sSI   YAC_CALL RecordedMIDIEvent__isLongMessage(void *             );
sSI   YAC_CALL RecordedMIDIEvent__getShortMessage(void *           );
sSI   YAC_CALL RecordedMIDIEvent__getSize(void *                   );
void  YAC_CALL RecordedMIDIEvent__copyToStream(void *, yacmemptr   );
sSI   YAC_CALL RecordedMIDIEvent__getMidiMapEventType(void *       );
sSI   YAC_CALL RecordedMIDIEvent__getNrpnId(void *                 );
sSI   YAC_CALL RecordedMIDIEvent__getDataEntry(void *              );

// ------------------ YAC class "RecordedMIDIEvent" reflection map (implementation) ------------------
sUI          YAC_VCALL RecordedMIDIEvent::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL RecordedMIDIEvent::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL RecordedMIDIEvent::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL RecordedMIDIEvent::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL RecordedMIDIEvent::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL RecordedMIDIEvent::yacMethodGetNum                  (void) {return 9;}
const char **YAC_VCALL RecordedMIDIEvent::yacMethodGetNames                (void) {static const char *r[]={"operator", "getMillisec", "isLongMessage", "getShortMessage", "getSize", "copyToStream", "getMidiMapEventType", "getNrpnId", "getDataEntry"}; return r;}
const sUI   *YAC_VCALL RecordedMIDIEvent::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 0, 0, 0, 0, 1, 0, 0, 0}; return r;}
const sUI  **YAC_VCALL RecordedMIDIEvent::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={0,};static const sUI rt3[]={0,};static const sUI rt4[]={0,};static const sUI rt5[]={3,};static const sUI rt6[]={0,};static const sUI rt7[]={0,};static const sUI rt8[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8}; return r;}
const char***YAC_VCALL RecordedMIDIEvent::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8}; return r;}
const sUI   *YAC_VCALL RecordedMIDIEvent::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 1, 1, 1, 1, 0, 1, 1, 1}; return r;}
const char **YAC_VCALL RecordedMIDIEvent::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL RecordedMIDIEvent::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)RecordedMIDIEvent__getMillisec, (void*)RecordedMIDIEvent__isLongMessage, (void*)RecordedMIDIEvent__getShortMessage, (void*)RecordedMIDIEvent__getSize, (void*)RecordedMIDIEvent__copyToStream, (void*)RecordedMIDIEvent__getMidiMapEventType, (void*)RecordedMIDIEvent__getNrpnId, (void*)RecordedMIDIEvent__getDataEntry}; return r;}
sUI          YAC_VCALL RecordedMIDIEvent::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL RecordedMIDIEvent::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL RecordedMIDIEvent::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL RecordedMIDIEvent::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(RecordedMIDIEvent, "RecordedMIDIEvent");

sSI   YAC_CALL RecordedMIDIEvent__getMillisec(void *_o                       ) {return (sSI)((RecordedMIDIEvent*)_o)->getMillisec();}
sSI   YAC_CALL RecordedMIDIEvent__isLongMessage(void *_o                     ) {return (sSI)((RecordedMIDIEvent*)_o)->isLongMessage();}
sSI   YAC_CALL RecordedMIDIEvent__getShortMessage(void *_o                   ) {return (sSI)((RecordedMIDIEvent*)_o)->getShortMessage();}
sSI   YAC_CALL RecordedMIDIEvent__getSize(void *_o                           ) {return (sSI)((RecordedMIDIEvent*)_o)->getSize();}
void  YAC_CALL RecordedMIDIEvent__copyToStream(void *_o, yacmemptr _args     ) {((RecordedMIDIEvent*)_o)->copyToStream(_args.mem[0].o);}
sSI   YAC_CALL RecordedMIDIEvent__getMidiMapEventType(void *_o               ) {return (sSI)((RecordedMIDIEvent*)_o)->getMidiMapEventType();}
sSI   YAC_CALL RecordedMIDIEvent__getNrpnId(void *_o                         ) {return (sSI)((RecordedMIDIEvent*)_o)->getNrpnId();}
sSI   YAC_CALL RecordedMIDIEvent__getDataEntry(void *_o                      ) {return (sSI)((RecordedMIDIEvent*)_o)->getDataEntry();}
