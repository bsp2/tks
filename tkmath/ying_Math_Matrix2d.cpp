// ---- ying_Math_Matrix2d.cpp: auto generated by YInG - the YAC interface generator (Fri, 12/Sep/2025 13:19:00)

#ifndef YAC_NO_HOST
void  YAC_CALL Matrix2d___setA      (void *, yacmemptr             );
void  YAC_CALL Matrix2d___setB      (void *, yacmemptr             );
void  YAC_CALL Matrix2d___setC      (void *, yacmemptr             );
void  YAC_CALL Matrix2d___setD      (void *, yacmemptr             );
void  YAC_CALL Matrix2d___getA_YAC_RVAL(void *, YAC_Value *        );
void  YAC_CALL Matrix2d___getA_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Matrix2d___getB_YAC_RVAL(void *, YAC_Value *        );
void  YAC_CALL Matrix2d___getB_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Matrix2d___getC_YAC_RVAL(void *, YAC_Value *        );
void  YAC_CALL Matrix2d___getC_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Matrix2d___getD_YAC_RVAL(void *, YAC_Value *        );
void  YAC_CALL Matrix2d___getD_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Matrix2d___getString (void *, YAC_Value *           );
void  YAC_CALL Matrix2d___add_YAC_RSELF(void *, yacmemptr          );
void  YAC_CALL Matrix2d___add_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix2d___add_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL Matrix2d___sub_YAC_RSELF(void *, yacmemptr          );
void  YAC_CALL Matrix2d___sub_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix2d___sub_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL Matrix2d___muld_YAC_RSELF(void *, yacmemptr         );
void  YAC_CALL Matrix2d___muld_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix2d___muld_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Matrix2d___mul_YAC_RSELF(void *, yacmemptr          );
void  YAC_CALL Matrix2d___mul_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix2d___mul_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL Matrix2d___mulRev_YAC_RSELF(void *, yacmemptr       );
void  YAC_CALL Matrix2d___mulRev_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix2d___mulRev_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix2d___mulv_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix2d___mulv_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Matrix2d___getAbs_YAC_RVAL(void *, YAC_Value *      );
void  YAC_CALL Matrix2d___getAbs_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix2d___getAbsSqr_YAC_RVAL(void *, YAC_Value *   );
void  YAC_CALL Matrix2d___getAbsSqr_YAC_RARG(void *, yacmemptr     );
void  YAC_CALL Matrix2d___unit_YAC_RSELF(void *                    );
void  YAC_CALL Matrix2d___unit_YAC_RVAL(void *, YAC_Value *        );
void  YAC_CALL Matrix2d___unit_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Matrix2d___unitScale_YAC_RSELF(void *, yacmemptr    );
void  YAC_CALL Matrix2d___unitScale_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix2d___unitScale_YAC_RARG(void *, yacmemptr     );
void  YAC_CALL Matrix2d___det_YAC_RVAL(void *, YAC_Value *         );
void  YAC_CALL Matrix2d___det_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL Matrix2d___invert_YAC_RSELF(void *                  );
void  YAC_CALL Matrix2d___invert_YAC_RVAL(void *, YAC_Value *      );
void  YAC_CALL Matrix2d___invert_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix2d___transpose_YAC_RSELF(void *               );
void  YAC_CALL Matrix2d___transpose_YAC_RVAL(void *, YAC_Value *   );
void  YAC_CALL Matrix2d___transpose_YAC_RARG(void *, yacmemptr     );
void  YAC_CALL Matrix2d___setRow    (void *, yacmemptr             );
void  YAC_CALL Matrix2d___getRow_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix2d___getRow_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix2d___setCol    (void *, yacmemptr             );
void  YAC_CALL Matrix2d___getCol_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix2d___getCol_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix2d___init      (void *, yacmemptr             );
void  YAC_CALL Matrix2d___initf     (void *, yacmemptr             );
void  YAC_CALL Matrix2d___initRow   (void *, yacmemptr             );
void  YAC_CALL Matrix2d___initCol   (void *, yacmemptr             );
void  YAC_CALL Matrix2d___initRowV  (void *, yacmemptr             );
void  YAC_CALL Matrix2d___initColV  (void *, yacmemptr             );
void  YAC_CALL Matrix2d___New       (void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix2d___initIdentity(void *                      );
void  YAC_CALL Matrix2d___initScalef(void *, yacmemptr             );
void  YAC_CALL Matrix2d___initRotatef(void *, yacmemptr            );
#endif // YAC_NO_HOST

// ------------------ YAC class "_Matrix2d" reflection map (implementation) ------------------
sUI          YAC_VCALL _Matrix2d::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Matrix2d::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Matrix2d::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Matrix2d::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Matrix2d::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Matrix2d::yacMethodGetNum                  (void) {return 65;}
const char **YAC_VCALL _Matrix2d::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "setA", "setB", "setC", "setD", "getA_YAC_RVAL", "getA_YAC_RARG", "getB_YAC_RVAL", "getB_YAC_RARG", "getC_YAC_RVAL", "getC_YAC_RARG", "getD_YAC_RVAL", "getD_YAC_RARG", "getString", "add_YAC_RSELF", "add_YAC_RVAL", "add_YAC_RARG", "sub_YAC_RSELF", "sub_YAC_RVAL", "sub_YAC_RARG", "muld_YAC_RSELF", "muld_YAC_RVAL", "muld_YAC_RARG", "mul_YAC_RSELF", "mul_YAC_RVAL", "mul_YAC_RARG", "mulRev_YAC_RSELF", "mulRev_YAC_RVAL", "mulRev_YAC_RARG", "mulv_YAC_RVAL", "mulv_YAC_RARG", "getAbs_YAC_RVAL", "getAbs_YAC_RARG", "getAbsSqr_YAC_RVAL", "getAbsSqr_YAC_RARG", "unit_YAC_RSELF", "unit_YAC_RVAL", "unit_YAC_RARG", "unitScale_YAC_RSELF", "unitScale_YAC_RVAL", "unitScale_YAC_RARG", "det_YAC_RVAL", "det_YAC_RARG", "invert_YAC_RSELF", "invert_YAC_RVAL", "invert_YAC_RARG", "transpose_YAC_RSELF", "transpose_YAC_RVAL", "transpose_YAC_RARG", "setRow", "getRow_YAC_RVAL", "getRow_YAC_RARG", "setCol", "getCol_YAC_RVAL", "getCol_YAC_RARG", "init", "initf", "initRow", "initCol", "initRowV", "initColV", "New", "initIdentity", "initScalef", "initRotatef"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Matrix2d::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 0, 1, 0, 1, 0, 0, 1, 1, 1, 2, 0, 1, 0, 0, 1, 0, 0, 1, 2, 1, 2, 2, 1, 2, 4, 4, 3, 3, 2, 2, 4, 0, 2, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _Matrix2d::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={3,};static const sUI rt2[]={3,};static const sUI rt3[]={3,};static const sUI rt4[]={3,};static const sUI rt5[]={0,};static const sUI rt6[]={3,};static const sUI rt7[]={0,};static const sUI rt8[]={3,};static const sUI rt9[]={0,};static const sUI rt10[]={3,};static const sUI rt11[]={0,};static const sUI rt12[]={3,};static const sUI rt13[]={0,};static const sUI rt14[]={3,};static const sUI rt15[]={3,};static const sUI rt16[]={3, 3,};static const sUI rt17[]={3,};static const sUI rt18[]={3,};static const sUI rt19[]={3, 3,};static const sUI rt20[]={3,};static const sUI rt21[]={3,};static const sUI rt22[]={3, 3,};static const sUI rt23[]={3,};static const sUI rt24[]={3,};static const sUI rt25[]={3, 3,};static const sUI rt26[]={3,};static const sUI rt27[]={3,};static const sUI rt28[]={3, 3,};static const sUI rt29[]={3,};static const sUI rt30[]={3, 3,};static const sUI rt31[]={0,};static const sUI rt32[]={3,};static const sUI rt33[]={0,};static const sUI rt34[]={3,};static const sUI rt35[]={0,};static const sUI rt36[]={0,};static const sUI rt37[]={3,};static const sUI rt38[]={3,};static const sUI rt39[]={3,};static const sUI rt40[]={3, 3,};static const sUI rt41[]={0,};static const sUI rt42[]={3,};static const sUI rt43[]={0,};static const sUI rt44[]={0,};static const sUI rt45[]={3,};static const sUI rt46[]={0,};static const sUI rt47[]={0,};static const sUI rt48[]={3,};static const sUI rt49[]={1, 3,};static const sUI rt50[]={1,};static const sUI rt51[]={1, 3,};static const sUI rt52[]={1, 3,};static const sUI rt53[]={1,};static const sUI rt54[]={1, 3,};static const sUI rt55[]={3, 3, 3, 3,};static const sUI rt56[]={2, 2, 2, 2,};static const sUI rt57[]={1, 3, 3,};static const sUI rt58[]={1, 3, 3,};static const sUI rt59[]={1, 3,};static const sUI rt60[]={1, 3,};static const sUI rt61[]={3, 3, 3, 3,};static const sUI rt62[]={0,};static const sUI rt63[]={2, 2,};static const sUI rt64[]={2,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40, rt41, rt42, rt43, rt44, rt45, rt46, rt47, rt48, rt49, rt50, rt51, rt52, rt53, rt54, rt55, rt56, rt57, rt58, rt59, rt60, rt61, rt62, rt63, rt64}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _Matrix2d::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0, (const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0, (const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0, (const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0, (const char*)0,};static const char *rs26[]={(const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0, (const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0, (const char*)0,};static const char *rs31[]={(const char*)0,};static const char *rs32[]={(const char*)0,};static const char *rs33[]={(const char*)0,};static const char *rs34[]={(const char*)0,};static const char *rs35[]={(const char*)0,};static const char *rs36[]={(const char*)0,};static const char *rs37[]={(const char*)0,};static const char *rs38[]={(const char*)0,};static const char *rs39[]={(const char*)0,};static const char *rs40[]={(const char*)0, (const char*)0,};static const char *rs41[]={(const char*)0,};static const char *rs42[]={(const char*)0,};static const char *rs43[]={(const char*)0,};static const char *rs44[]={(const char*)0,};static const char *rs45[]={(const char*)0,};static const char *rs46[]={(const char*)0,};static const char *rs47[]={(const char*)0,};static const char *rs48[]={(const char*)0,};static const char *rs49[]={(const char*)0, (const char*)0,};static const char *rs50[]={(const char*)0,};static const char *rs51[]={(const char*)0, (const char*)0,};static const char *rs52[]={(const char*)0, (const char*)0,};static const char *rs53[]={(const char*)0,};static const char *rs54[]={(const char*)0, (const char*)0,};static const char *rs55[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs56[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs57[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs58[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs59[]={(const char*)0, (const char*)0,};static const char *rs60[]={(const char*)0, (const char*)0,};static const char *rs61[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs62[]={(const char*)0,};static const char *rs63[]={(const char*)0, (const char*)0,};static const char *rs64[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40, rs41, rs42, rs43, rs44, rs45, rs46, rs47, rs48, rs49, rs50, rs51, rs52, rs53, rs54, rs55, rs56, rs57, rs58, rs59, rs60, rs61, rs62, rs63, rs64}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Matrix2d::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 0, 0, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 4, 0, 4, 0, 4, 0, 0, 4, 0, 0, 4, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _Matrix2d::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _Matrix2d::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)Matrix2d___setA, (void*)Matrix2d___setB, (void*)Matrix2d___setC, (void*)Matrix2d___setD, (void*)Matrix2d___getA_YAC_RVAL, (void*)Matrix2d___getA_YAC_RARG, (void*)Matrix2d___getB_YAC_RVAL, (void*)Matrix2d___getB_YAC_RARG, (void*)Matrix2d___getC_YAC_RVAL, (void*)Matrix2d___getC_YAC_RARG, (void*)Matrix2d___getD_YAC_RVAL, (void*)Matrix2d___getD_YAC_RARG, (void*)Matrix2d___getString, (void*)Matrix2d___add_YAC_RSELF, (void*)Matrix2d___add_YAC_RVAL, (void*)Matrix2d___add_YAC_RARG, (void*)Matrix2d___sub_YAC_RSELF, (void*)Matrix2d___sub_YAC_RVAL, (void*)Matrix2d___sub_YAC_RARG, (void*)Matrix2d___muld_YAC_RSELF, (void*)Matrix2d___muld_YAC_RVAL, (void*)Matrix2d___muld_YAC_RARG, (void*)Matrix2d___mul_YAC_RSELF, (void*)Matrix2d___mul_YAC_RVAL, (void*)Matrix2d___mul_YAC_RARG, (void*)Matrix2d___mulRev_YAC_RSELF, (void*)Matrix2d___mulRev_YAC_RVAL, (void*)Matrix2d___mulRev_YAC_RARG, (void*)Matrix2d___mulv_YAC_RVAL, (void*)Matrix2d___mulv_YAC_RARG, (void*)Matrix2d___getAbs_YAC_RVAL, (void*)Matrix2d___getAbs_YAC_RARG, (void*)Matrix2d___getAbsSqr_YAC_RVAL, (void*)Matrix2d___getAbsSqr_YAC_RARG, (void*)Matrix2d___unit_YAC_RSELF, (void*)Matrix2d___unit_YAC_RVAL, (void*)Matrix2d___unit_YAC_RARG, (void*)Matrix2d___unitScale_YAC_RSELF, (void*)Matrix2d___unitScale_YAC_RVAL, (void*)Matrix2d___unitScale_YAC_RARG, (void*)Matrix2d___det_YAC_RVAL, (void*)Matrix2d___det_YAC_RARG, (void*)Matrix2d___invert_YAC_RSELF, (void*)Matrix2d___invert_YAC_RVAL, (void*)Matrix2d___invert_YAC_RARG, (void*)Matrix2d___transpose_YAC_RSELF, (void*)Matrix2d___transpose_YAC_RVAL, (void*)Matrix2d___transpose_YAC_RARG, (void*)Matrix2d___setRow, (void*)Matrix2d___getRow_YAC_RVAL, (void*)Matrix2d___getRow_YAC_RARG, (void*)Matrix2d___setCol, (void*)Matrix2d___getCol_YAC_RVAL, (void*)Matrix2d___getCol_YAC_RARG, (void*)Matrix2d___init, (void*)Matrix2d___initf, (void*)Matrix2d___initRow, (void*)Matrix2d___initCol, (void*)Matrix2d___initRowV, (void*)Matrix2d___initColV, (void*)Matrix2d___New, (void*)Matrix2d___initIdentity, (void*)Matrix2d___initScalef, (void*)Matrix2d___initRotatef}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _Matrix2d::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Matrix2d::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Matrix2d::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Matrix2d::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C_POOLED(_Matrix2d, "Matrix2d");

#ifndef YAC_NO_HOST
void  YAC_CALL Matrix2d___setA      (void *_o, yacmemptr _args               ) {((_Matrix2d*)_o)->_setA(_args.mem[0].o);}
void  YAC_CALL Matrix2d___setB      (void *_o, yacmemptr _args               ) {((_Matrix2d*)_o)->_setB(_args.mem[0].o);}
void  YAC_CALL Matrix2d___setC      (void *_o, yacmemptr _args               ) {((_Matrix2d*)_o)->_setC(_args.mem[0].o);}
void  YAC_CALL Matrix2d___setD      (void *_o, yacmemptr _args               ) {((_Matrix2d*)_o)->_setD(_args.mem[0].o);}
void  YAC_CALL Matrix2d___getA_YAC_RVAL(void *_o, YAC_Value *_r              ) {((_Matrix2d*)_o)->_getA_YAC_RVAL(_r);}
void  YAC_CALL Matrix2d___getA_YAC_RARG(void *_o, yacmemptr _args            ) {((_Matrix2d*)_o)->_getA_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix2d___getB_YAC_RVAL(void *_o, YAC_Value *_r              ) {((_Matrix2d*)_o)->_getB_YAC_RVAL(_r);}
void  YAC_CALL Matrix2d___getB_YAC_RARG(void *_o, yacmemptr _args            ) {((_Matrix2d*)_o)->_getB_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix2d___getC_YAC_RVAL(void *_o, YAC_Value *_r              ) {((_Matrix2d*)_o)->_getC_YAC_RVAL(_r);}
void  YAC_CALL Matrix2d___getC_YAC_RARG(void *_o, yacmemptr _args            ) {((_Matrix2d*)_o)->_getC_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix2d___getD_YAC_RVAL(void *_o, YAC_Value *_r              ) {((_Matrix2d*)_o)->_getD_YAC_RVAL(_r);}
void  YAC_CALL Matrix2d___getD_YAC_RARG(void *_o, yacmemptr _args            ) {((_Matrix2d*)_o)->_getD_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix2d___getString (void *_o, YAC_Value *_r                 ) {((_Matrix2d*)_o)->_getString(_r);}
void  YAC_CALL Matrix2d___add_YAC_RSELF(void *_o, yacmemptr _args            ) {((_Matrix2d*)_o)->_add_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix2d___add_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix2d*)_o)->_add_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix2d___add_YAC_RARG(void *_o, yacmemptr _args             ) {((_Matrix2d*)_o)->_add_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix2d___sub_YAC_RSELF(void *_o, yacmemptr _args            ) {((_Matrix2d*)_o)->_sub_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix2d___sub_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix2d*)_o)->_sub_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix2d___sub_YAC_RARG(void *_o, yacmemptr _args             ) {((_Matrix2d*)_o)->_sub_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix2d___muld_YAC_RSELF(void *_o, yacmemptr _args           ) {((_Matrix2d*)_o)->_muld_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix2d___muld_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix2d*)_o)->_muld_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix2d___muld_YAC_RARG(void *_o, yacmemptr _args            ) {((_Matrix2d*)_o)->_muld_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix2d___mul_YAC_RSELF(void *_o, yacmemptr _args            ) {((_Matrix2d*)_o)->_mul_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix2d___mul_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix2d*)_o)->_mul_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix2d___mul_YAC_RARG(void *_o, yacmemptr _args             ) {((_Matrix2d*)_o)->_mul_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix2d___mulRev_YAC_RSELF(void *_o, yacmemptr _args         ) {((_Matrix2d*)_o)->_mulRev_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix2d___mulRev_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix2d*)_o)->_mulRev_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix2d___mulRev_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix2d*)_o)->_mulRev_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix2d___mulv_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix2d*)_o)->_mulv_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix2d___mulv_YAC_RARG(void *_o, yacmemptr _args            ) {((_Matrix2d*)_o)->_mulv_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix2d___getAbs_YAC_RVAL(void *_o, YAC_Value *_r            ) {((_Matrix2d*)_o)->_getAbs_YAC_RVAL(_r);}
void  YAC_CALL Matrix2d___getAbs_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix2d*)_o)->_getAbs_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix2d___getAbsSqr_YAC_RVAL(void *_o, YAC_Value *_r         ) {((_Matrix2d*)_o)->_getAbsSqr_YAC_RVAL(_r);}
void  YAC_CALL Matrix2d___getAbsSqr_YAC_RARG(void *_o, yacmemptr _args       ) {((_Matrix2d*)_o)->_getAbsSqr_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix2d___unit_YAC_RSELF(void *_o                            ) {((_Matrix2d*)_o)->_unit_YAC_RSELF();}
void  YAC_CALL Matrix2d___unit_YAC_RVAL(void *_o, YAC_Value *_r              ) {((_Matrix2d*)_o)->_unit_YAC_RVAL(_r);}
void  YAC_CALL Matrix2d___unit_YAC_RARG(void *_o, yacmemptr _args            ) {((_Matrix2d*)_o)->_unit_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix2d___unitScale_YAC_RSELF(void *_o, yacmemptr _args      ) {((_Matrix2d*)_o)->_unitScale_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix2d___unitScale_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix2d*)_o)->_unitScale_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix2d___unitScale_YAC_RARG(void *_o, yacmemptr _args       ) {((_Matrix2d*)_o)->_unitScale_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix2d___det_YAC_RVAL(void *_o, YAC_Value *_r               ) {((_Matrix2d*)_o)->_det_YAC_RVAL(_r);}
void  YAC_CALL Matrix2d___det_YAC_RARG(void *_o, yacmemptr _args             ) {((_Matrix2d*)_o)->_det_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix2d___invert_YAC_RSELF(void *_o                          ) {((_Matrix2d*)_o)->_invert_YAC_RSELF();}
void  YAC_CALL Matrix2d___invert_YAC_RVAL(void *_o, YAC_Value *_r            ) {((_Matrix2d*)_o)->_invert_YAC_RVAL(_r);}
void  YAC_CALL Matrix2d___invert_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix2d*)_o)->_invert_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix2d___transpose_YAC_RSELF(void *_o                       ) {((_Matrix2d*)_o)->_transpose_YAC_RSELF();}
void  YAC_CALL Matrix2d___transpose_YAC_RVAL(void *_o, YAC_Value *_r         ) {((_Matrix2d*)_o)->_transpose_YAC_RVAL(_r);}
void  YAC_CALL Matrix2d___transpose_YAC_RARG(void *_o, yacmemptr _args       ) {((_Matrix2d*)_o)->_transpose_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix2d___setRow    (void *_o, yacmemptr _args               ) {((_Matrix2d*)_o)->_setRow(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix2d___getRow_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix2d*)_o)->_getRow_YAC_RVAL(_args.mem[0].si, _r);}
void  YAC_CALL Matrix2d___getRow_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix2d*)_o)->_getRow_YAC_RARG(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix2d___setCol    (void *_o, yacmemptr _args               ) {((_Matrix2d*)_o)->_setCol(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix2d___getCol_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix2d*)_o)->_getCol_YAC_RVAL(_args.mem[0].si, _r);}
void  YAC_CALL Matrix2d___getCol_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix2d*)_o)->_getCol_YAC_RARG(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix2d___init      (void *_o, yacmemptr _args               ) {((_Matrix2d*)_o)->_init(_args.mem[0].o, _args.mem[1].o, _args.mem[2].o, _args.mem[3].o);}
void  YAC_CALL Matrix2d___initf     (void *_o, yacmemptr _args               ) {((_Matrix2d*)_o)->_initf(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32);}
void  YAC_CALL Matrix2d___initRow   (void *_o, yacmemptr _args               ) {((_Matrix2d*)_o)->_initRow(_args.mem[0].si, _args.mem[1].o, _args.mem[2].o);}
void  YAC_CALL Matrix2d___initCol   (void *_o, yacmemptr _args               ) {((_Matrix2d*)_o)->_initCol(_args.mem[0].si, _args.mem[1].o, _args.mem[2].o);}
void  YAC_CALL Matrix2d___initRowV  (void *_o, yacmemptr _args               ) {((_Matrix2d*)_o)->_initRowV(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix2d___initColV  (void *_o, yacmemptr _args               ) {((_Matrix2d*)_o)->_initColV(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix2d___New       (void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix2d*)_o)->_New(_args.mem[0].o, _args.mem[1].o, _args.mem[2].o, _args.mem[3].o, _r);}
void  YAC_CALL Matrix2d___initIdentity(void *_o                              ) {((_Matrix2d*)_o)->_initIdentity();}
void  YAC_CALL Matrix2d___initScalef(void *_o, yacmemptr _args               ) {((_Matrix2d*)_o)->_initScalef(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL Matrix2d___initRotatef(void *_o, yacmemptr _args              ) {((_Matrix2d*)_o)->_initRotatef(_args.mem[0].f32);}
#endif // YAC_NO_HOST
