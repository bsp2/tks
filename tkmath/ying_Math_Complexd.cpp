// ---- ying_Math_Complexd.cpp: auto generated by YInG - the YAC interface generator (Fri, 12/Sep/2025 13:19:00)

#ifndef YAC_NO_HOST
void  YAC_CALL Complexd___setX      (void *, yacmemptr             );
void  YAC_CALL Complexd___setY      (void *, yacmemptr             );
void  YAC_CALL Complexd___getX_YAC_RVAL(void *, YAC_Value *        );
void  YAC_CALL Complexd___getX_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Complexd___getY_YAC_RVAL(void *, YAC_Value *        );
void  YAC_CALL Complexd___getY_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Complexd___setR      (void *, yacmemptr             );
void  YAC_CALL Complexd___setA      (void *, yacmemptr             );
void  YAC_CALL Complexd___getR_YAC_RVAL(void *, YAC_Value *        );
void  YAC_CALL Complexd___getR_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Complexd___getA_YAC_RVAL(void *, YAC_Value *        );
void  YAC_CALL Complexd___getA_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Complexd___getString (void *, YAC_Value *           );
void  YAC_CALL Complexd___getPolarString(void *, YAC_Value *       );
void  YAC_CALL Complexd___add_YAC_RSELF(void *, yacmemptr          );
void  YAC_CALL Complexd___add_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Complexd___add_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL Complexd___sub_YAC_RSELF(void *, yacmemptr          );
void  YAC_CALL Complexd___sub_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Complexd___sub_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL Complexd___muld_YAC_RSELF(void *, yacmemptr         );
void  YAC_CALL Complexd___muld_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Complexd___muld_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Complexd___mul_YAC_RSELF(void *, yacmemptr          );
void  YAC_CALL Complexd___mul_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Complexd___mul_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL Complexd___mulConj_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Complexd___mulConj_YAC_RARG(void *, yacmemptr       );
void  YAC_CALL Complexd___div_YAC_RSELF(void *, yacmemptr          );
void  YAC_CALL Complexd___div_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Complexd___div_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL Complexd___invert_YAC_RSELF(void *                  );
void  YAC_CALL Complexd___invert_YAC_RVAL(void *, YAC_Value *      );
void  YAC_CALL Complexd___invert_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Complexd___getAbs_YAC_RVAL(void *, YAC_Value *      );
void  YAC_CALL Complexd___getAbs_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Complexd___getAbsSqr_YAC_RVAL(void *, YAC_Value *   );
void  YAC_CALL Complexd___getAbsSqr_YAC_RARG(void *, yacmemptr     );
void  YAC_CALL Complexd___unit_YAC_RSELF(void *                    );
void  YAC_CALL Complexd___unit_YAC_RVAL(void *, YAC_Value *        );
void  YAC_CALL Complexd___unit_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Complexd___unitScale_YAC_RSELF(void *, yacmemptr    );
void  YAC_CALL Complexd___unitScale_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Complexd___unitScale_YAC_RARG(void *, yacmemptr     );
void  YAC_CALL Complexd___init      (void *, yacmemptr             );
void  YAC_CALL Complexd___initf     (void *, yacmemptr             );
void  YAC_CALL Complexd___initPolar (void *, yacmemptr             );
void  YAC_CALL Complexd___initPolarf(void *, yacmemptr             );
void  YAC_CALL Complexd___New       (void *, yacmemptr, YAC_Value *);
void  YAC_CALL Complexd___NewPolar  (void *, yacmemptr, YAC_Value *);
#endif // YAC_NO_HOST

// ------------------ YAC class "_Complexd" reflection map (implementation) ------------------
sUI          YAC_VCALL _Complexd::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Complexd::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Complexd::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Complexd::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Complexd::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Complexd::yacMethodGetNum                  (void) {return 51;}
const char **YAC_VCALL _Complexd::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "setX", "setY", "getX_YAC_RVAL", "getX_YAC_RARG", "getY_YAC_RVAL", "getY_YAC_RARG", "setR", "setA", "getR_YAC_RVAL", "getR_YAC_RARG", "getA_YAC_RVAL", "getA_YAC_RARG", "getString", "getPolarString", "add_YAC_RSELF", "add_YAC_RVAL", "add_YAC_RARG", "sub_YAC_RSELF", "sub_YAC_RVAL", "sub_YAC_RARG", "muld_YAC_RSELF", "muld_YAC_RVAL", "muld_YAC_RARG", "mul_YAC_RSELF", "mul_YAC_RVAL", "mul_YAC_RARG", "mulConj_YAC_RVAL", "mulConj_YAC_RARG", "div_YAC_RSELF", "div_YAC_RVAL", "div_YAC_RARG", "invert_YAC_RSELF", "invert_YAC_RVAL", "invert_YAC_RARG", "getAbs_YAC_RVAL", "getAbs_YAC_RARG", "getAbsSqr_YAC_RVAL", "getAbsSqr_YAC_RARG", "unit_YAC_RSELF", "unit_YAC_RVAL", "unit_YAC_RARG", "unitScale_YAC_RSELF", "unitScale_YAC_RVAL", "unitScale_YAC_RARG", "init", "initf", "initPolar", "initPolarf", "New", "NewPolar"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Complexd::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _Complexd::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={3,};static const sUI rt2[]={3,};static const sUI rt3[]={0,};static const sUI rt4[]={3,};static const sUI rt5[]={0,};static const sUI rt6[]={3,};static const sUI rt7[]={3,};static const sUI rt8[]={3,};static const sUI rt9[]={0,};static const sUI rt10[]={3,};static const sUI rt11[]={0,};static const sUI rt12[]={3,};static const sUI rt13[]={0,};static const sUI rt14[]={0,};static const sUI rt15[]={3,};static const sUI rt16[]={3,};static const sUI rt17[]={3, 3,};static const sUI rt18[]={3,};static const sUI rt19[]={3,};static const sUI rt20[]={3, 3,};static const sUI rt21[]={3,};static const sUI rt22[]={3,};static const sUI rt23[]={3, 3,};static const sUI rt24[]={3,};static const sUI rt25[]={3,};static const sUI rt26[]={3, 3,};static const sUI rt27[]={3,};static const sUI rt28[]={3, 3,};static const sUI rt29[]={3,};static const sUI rt30[]={3,};static const sUI rt31[]={3, 3,};static const sUI rt32[]={0,};static const sUI rt33[]={0,};static const sUI rt34[]={3,};static const sUI rt35[]={0,};static const sUI rt36[]={3,};static const sUI rt37[]={0,};static const sUI rt38[]={3,};static const sUI rt39[]={0,};static const sUI rt40[]={0,};static const sUI rt41[]={3,};static const sUI rt42[]={3,};static const sUI rt43[]={3,};static const sUI rt44[]={3, 3,};static const sUI rt45[]={3, 3,};static const sUI rt46[]={2, 2,};static const sUI rt47[]={3, 3,};static const sUI rt48[]={2, 2,};static const sUI rt49[]={3, 3,};static const sUI rt50[]={3, 3,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40, rt41, rt42, rt43, rt44, rt45, rt46, rt47, rt48, rt49, rt50}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _Complexd::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0, (const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0, (const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0, (const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0,};static const char *rs26[]={(const char*)0, (const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0, (const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0,};static const char *rs31[]={(const char*)0, (const char*)0,};static const char *rs32[]={(const char*)0,};static const char *rs33[]={(const char*)0,};static const char *rs34[]={(const char*)0,};static const char *rs35[]={(const char*)0,};static const char *rs36[]={(const char*)0,};static const char *rs37[]={(const char*)0,};static const char *rs38[]={(const char*)0,};static const char *rs39[]={(const char*)0,};static const char *rs40[]={(const char*)0,};static const char *rs41[]={(const char*)0,};static const char *rs42[]={(const char*)0,};static const char *rs43[]={(const char*)0,};static const char *rs44[]={(const char*)0, (const char*)0,};static const char *rs45[]={(const char*)0, (const char*)0,};static const char *rs46[]={(const char*)0, (const char*)0,};static const char *rs47[]={(const char*)0, (const char*)0,};static const char *rs48[]={(const char*)0, (const char*)0,};static const char *rs49[]={(const char*)0, (const char*)0,};static const char *rs50[]={(const char*)0, (const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40, rs41, rs42, rs43, rs44, rs45, rs46, rs47, rs48, rs49, rs50}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Complexd::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 0, 4, 0, 4, 0, 0, 0, 4, 0, 4, 0, 4, 4, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 4, 0, 0, 4, 0, 0, 4, 0, 4, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 0, 0, 0, 4, 4}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _Complexd::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _Complexd::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)Complexd___setX, (void*)Complexd___setY, (void*)Complexd___getX_YAC_RVAL, (void*)Complexd___getX_YAC_RARG, (void*)Complexd___getY_YAC_RVAL, (void*)Complexd___getY_YAC_RARG, (void*)Complexd___setR, (void*)Complexd___setA, (void*)Complexd___getR_YAC_RVAL, (void*)Complexd___getR_YAC_RARG, (void*)Complexd___getA_YAC_RVAL, (void*)Complexd___getA_YAC_RARG, (void*)Complexd___getString, (void*)Complexd___getPolarString, (void*)Complexd___add_YAC_RSELF, (void*)Complexd___add_YAC_RVAL, (void*)Complexd___add_YAC_RARG, (void*)Complexd___sub_YAC_RSELF, (void*)Complexd___sub_YAC_RVAL, (void*)Complexd___sub_YAC_RARG, (void*)Complexd___muld_YAC_RSELF, (void*)Complexd___muld_YAC_RVAL, (void*)Complexd___muld_YAC_RARG, (void*)Complexd___mul_YAC_RSELF, (void*)Complexd___mul_YAC_RVAL, (void*)Complexd___mul_YAC_RARG, (void*)Complexd___mulConj_YAC_RVAL, (void*)Complexd___mulConj_YAC_RARG, (void*)Complexd___div_YAC_RSELF, (void*)Complexd___div_YAC_RVAL, (void*)Complexd___div_YAC_RARG, (void*)Complexd___invert_YAC_RSELF, (void*)Complexd___invert_YAC_RVAL, (void*)Complexd___invert_YAC_RARG, (void*)Complexd___getAbs_YAC_RVAL, (void*)Complexd___getAbs_YAC_RARG, (void*)Complexd___getAbsSqr_YAC_RVAL, (void*)Complexd___getAbsSqr_YAC_RARG, (void*)Complexd___unit_YAC_RSELF, (void*)Complexd___unit_YAC_RVAL, (void*)Complexd___unit_YAC_RARG, (void*)Complexd___unitScale_YAC_RSELF, (void*)Complexd___unitScale_YAC_RVAL, (void*)Complexd___unitScale_YAC_RARG, (void*)Complexd___init, (void*)Complexd___initf, (void*)Complexd___initPolar, (void*)Complexd___initPolarf, (void*)Complexd___New, (void*)Complexd___NewPolar}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _Complexd::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Complexd::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Complexd::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Complexd::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C_POOLED(_Complexd, "Complexd");

#ifndef YAC_NO_HOST
void  YAC_CALL Complexd___setX      (void *_o, yacmemptr _args               ) {((_Complexd*)_o)->_setX(_args.mem[0].o);}
void  YAC_CALL Complexd___setY      (void *_o, yacmemptr _args               ) {((_Complexd*)_o)->_setY(_args.mem[0].o);}
void  YAC_CALL Complexd___getX_YAC_RVAL(void *_o, YAC_Value *_r              ) {((_Complexd*)_o)->_getX_YAC_RVAL(_r);}
void  YAC_CALL Complexd___getX_YAC_RARG(void *_o, yacmemptr _args            ) {((_Complexd*)_o)->_getX_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Complexd___getY_YAC_RVAL(void *_o, YAC_Value *_r              ) {((_Complexd*)_o)->_getY_YAC_RVAL(_r);}
void  YAC_CALL Complexd___getY_YAC_RARG(void *_o, yacmemptr _args            ) {((_Complexd*)_o)->_getY_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Complexd___setR      (void *_o, yacmemptr _args               ) {((_Complexd*)_o)->_setR(_args.mem[0].o);}
void  YAC_CALL Complexd___setA      (void *_o, yacmemptr _args               ) {((_Complexd*)_o)->_setA(_args.mem[0].o);}
void  YAC_CALL Complexd___getR_YAC_RVAL(void *_o, YAC_Value *_r              ) {((_Complexd*)_o)->_getR_YAC_RVAL(_r);}
void  YAC_CALL Complexd___getR_YAC_RARG(void *_o, yacmemptr _args            ) {((_Complexd*)_o)->_getR_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Complexd___getA_YAC_RVAL(void *_o, YAC_Value *_r              ) {((_Complexd*)_o)->_getA_YAC_RVAL(_r);}
void  YAC_CALL Complexd___getA_YAC_RARG(void *_o, yacmemptr _args            ) {((_Complexd*)_o)->_getA_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Complexd___getString (void *_o, YAC_Value *_r                 ) {((_Complexd*)_o)->_getString(_r);}
void  YAC_CALL Complexd___getPolarString(void *_o, YAC_Value *_r             ) {((_Complexd*)_o)->_getPolarString(_r);}
void  YAC_CALL Complexd___add_YAC_RSELF(void *_o, yacmemptr _args            ) {((_Complexd*)_o)->_add_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Complexd___add_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Complexd*)_o)->_add_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Complexd___add_YAC_RARG(void *_o, yacmemptr _args             ) {((_Complexd*)_o)->_add_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Complexd___sub_YAC_RSELF(void *_o, yacmemptr _args            ) {((_Complexd*)_o)->_sub_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Complexd___sub_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Complexd*)_o)->_sub_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Complexd___sub_YAC_RARG(void *_o, yacmemptr _args             ) {((_Complexd*)_o)->_sub_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Complexd___muld_YAC_RSELF(void *_o, yacmemptr _args           ) {((_Complexd*)_o)->_muld_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Complexd___muld_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Complexd*)_o)->_muld_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Complexd___muld_YAC_RARG(void *_o, yacmemptr _args            ) {((_Complexd*)_o)->_muld_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Complexd___mul_YAC_RSELF(void *_o, yacmemptr _args            ) {((_Complexd*)_o)->_mul_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Complexd___mul_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Complexd*)_o)->_mul_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Complexd___mul_YAC_RARG(void *_o, yacmemptr _args             ) {((_Complexd*)_o)->_mul_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Complexd___mulConj_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Complexd*)_o)->_mulConj_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Complexd___mulConj_YAC_RARG(void *_o, yacmemptr _args         ) {((_Complexd*)_o)->_mulConj_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Complexd___div_YAC_RSELF(void *_o, yacmemptr _args            ) {((_Complexd*)_o)->_div_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Complexd___div_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Complexd*)_o)->_div_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Complexd___div_YAC_RARG(void *_o, yacmemptr _args             ) {((_Complexd*)_o)->_div_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Complexd___invert_YAC_RSELF(void *_o                          ) {((_Complexd*)_o)->_invert_YAC_RSELF();}
void  YAC_CALL Complexd___invert_YAC_RVAL(void *_o, YAC_Value *_r            ) {((_Complexd*)_o)->_invert_YAC_RVAL(_r);}
void  YAC_CALL Complexd___invert_YAC_RARG(void *_o, yacmemptr _args          ) {((_Complexd*)_o)->_invert_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Complexd___getAbs_YAC_RVAL(void *_o, YAC_Value *_r            ) {((_Complexd*)_o)->_getAbs_YAC_RVAL(_r);}
void  YAC_CALL Complexd___getAbs_YAC_RARG(void *_o, yacmemptr _args          ) {((_Complexd*)_o)->_getAbs_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Complexd___getAbsSqr_YAC_RVAL(void *_o, YAC_Value *_r         ) {((_Complexd*)_o)->_getAbsSqr_YAC_RVAL(_r);}
void  YAC_CALL Complexd___getAbsSqr_YAC_RARG(void *_o, yacmemptr _args       ) {((_Complexd*)_o)->_getAbsSqr_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Complexd___unit_YAC_RSELF(void *_o                            ) {((_Complexd*)_o)->_unit_YAC_RSELF();}
void  YAC_CALL Complexd___unit_YAC_RVAL(void *_o, YAC_Value *_r              ) {((_Complexd*)_o)->_unit_YAC_RVAL(_r);}
void  YAC_CALL Complexd___unit_YAC_RARG(void *_o, yacmemptr _args            ) {((_Complexd*)_o)->_unit_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Complexd___unitScale_YAC_RSELF(void *_o, yacmemptr _args      ) {((_Complexd*)_o)->_unitScale_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Complexd___unitScale_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Complexd*)_o)->_unitScale_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Complexd___unitScale_YAC_RARG(void *_o, yacmemptr _args       ) {((_Complexd*)_o)->_unitScale_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Complexd___init      (void *_o, yacmemptr _args               ) {((_Complexd*)_o)->_init(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Complexd___initf     (void *_o, yacmemptr _args               ) {((_Complexd*)_o)->_initf(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL Complexd___initPolar (void *_o, yacmemptr _args               ) {((_Complexd*)_o)->_initPolar(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Complexd___initPolarf(void *_o, yacmemptr _args               ) {((_Complexd*)_o)->_initPolarf(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL Complexd___New       (void *_o, yacmemptr _args, YAC_Value *_r) {((_Complexd*)_o)->_New(_args.mem[0].o, _args.mem[1].o, _r);}
void  YAC_CALL Complexd___NewPolar  (void *_o, yacmemptr _args, YAC_Value *_r) {((_Complexd*)_o)->_NewPolar(_args.mem[0].o, _args.mem[1].o, _r);}
#endif // YAC_NO_HOST
