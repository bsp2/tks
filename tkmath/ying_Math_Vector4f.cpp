// ---- ying_Math_Vector4f.cpp: auto generated by YInG - the YAC interface generator (Fri, 12/Sep/2025 13:19:00)

#ifndef YAC_NO_HOST
void  YAC_CALL Vector4f___New       (void *, yacmemptr, YAC_Value *);
void  YAC_CALL Vector4f___init      (void *, yacmemptr             );
void  YAC_CALL Vector4f___setX      (void *, yacmemptr             );
void  YAC_CALL Vector4f___setY      (void *, yacmemptr             );
void  YAC_CALL Vector4f___setZ      (void *, yacmemptr             );
void  YAC_CALL Vector4f___setW      (void *, yacmemptr             );
sF32  YAC_CALL Vector4f___getX      (void *                        );
sF32  YAC_CALL Vector4f___getY      (void *                        );
sF32  YAC_CALL Vector4f___getZ      (void *                        );
sF32  YAC_CALL Vector4f___getW      (void *                        );
void  YAC_CALL Vector4f___getXy_YAC_RVAL(void *, YAC_Value *       );
void  YAC_CALL Vector4f___getXy_YAC_RARG(void *, yacmemptr         );
void  YAC_CALL Vector4f___getXz_YAC_RVAL(void *, YAC_Value *       );
void  YAC_CALL Vector4f___getXz_YAC_RARG(void *, yacmemptr         );
void  YAC_CALL Vector4f___getYz_YAC_RVAL(void *, YAC_Value *       );
void  YAC_CALL Vector4f___getYz_YAC_RARG(void *, yacmemptr         );
void  YAC_CALL Vector4f___getXyz_YAC_RVAL(void *, YAC_Value *      );
void  YAC_CALL Vector4f___getXyz_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Vector4f___getString (void *, YAC_Value *           );
void  YAC_CALL Vector4f___add_YAC_RSELF(void *, yacmemptr          );
void  YAC_CALL Vector4f___add_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Vector4f___add_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL Vector4f___sub_YAC_RSELF(void *, yacmemptr          );
void  YAC_CALL Vector4f___sub_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Vector4f___sub_YAC_RARG(void *, yacmemptr           );
sF32  YAC_CALL Vector4f___dot       (void *, yacmemptr             );
void  YAC_CALL Vector4f___tensor_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Vector4f___tensor_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Vector4f___addf_YAC_RSELF(void *, yacmemptr         );
void  YAC_CALL Vector4f___addf_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Vector4f___addf_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Vector4f___mulf_YAC_RSELF(void *, yacmemptr         );
void  YAC_CALL Vector4f___mulf_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Vector4f___mulf_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Vector4f___mul_YAC_RSELF(void *, yacmemptr          );
void  YAC_CALL Vector4f___mul_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Vector4f___mul_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL Vector4f___transform_YAC_RSELF(void *, yacmemptr    );
void  YAC_CALL Vector4f___transform_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Vector4f___transform_YAC_RARG(void *, yacmemptr     );
sF32  YAC_CALL Vector4f___getAbs    (void *                        );
sF32  YAC_CALL Vector4f___getAbsSqr (void *                        );
void  YAC_CALL Vector4f___unit_YAC_RSELF(void *                    );
void  YAC_CALL Vector4f___unit_YAC_RVAL(void *, YAC_Value *        );
void  YAC_CALL Vector4f___unit_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Vector4f___unitScale_YAC_RSELF(void *, yacmemptr    );
void  YAC_CALL Vector4f___unitScale_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Vector4f___unitScale_YAC_RARG(void *, yacmemptr     );
void  YAC_CALL Vector4f___initScalef(void *, yacmemptr             );
void  YAC_CALL Vector4f___rotate    (void *, yacmemptr             );
sF32  YAC_CALL Vector4f___distanceToPlane(void *, yacmemptr        );
sSI   YAC_CALL Vector4f___intersectPlane(void *, yacmemptr         );
void  YAC_CALL Vector4f___divz_YAC_RSELF(void *                    );
void  YAC_CALL Vector4f___divz_YAC_RVAL(void *, YAC_Value *        );
void  YAC_CALL Vector4f___divz_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Vector4f___divw_YAC_RSELF(void *                    );
void  YAC_CALL Vector4f___divw_YAC_RVAL(void *, YAC_Value *        );
void  YAC_CALL Vector4f___divw_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Vector4f___bilinearQuadPos(void *, yacmemptr        );
void  YAC_CALL Vector4f___project   (void *, yacmemptr             );
#endif // YAC_NO_HOST

// ------------------ YAC class "_Vector4f" reflection map (implementation) ------------------
sUI          YAC_VCALL _Vector4f::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Vector4f::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Vector4f::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Vector4f::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Vector4f::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Vector4f::yacMethodGetNum                  (void) {return 61;}
const char **YAC_VCALL _Vector4f::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "New", "init", "setX", "setY", "setZ", "setW", "getX", "getY", "getZ", "getW", "getXy_YAC_RVAL", "getXy_YAC_RARG", "getXz_YAC_RVAL", "getXz_YAC_RARG", "getYz_YAC_RVAL", "getYz_YAC_RARG", "getXyz_YAC_RVAL", "getXyz_YAC_RARG", "getString", "add_YAC_RSELF", "add_YAC_RVAL", "add_YAC_RARG", "sub_YAC_RSELF", "sub_YAC_RVAL", "sub_YAC_RARG", "dot", "tensor_YAC_RVAL", "tensor_YAC_RARG", "addf_YAC_RSELF", "addf_YAC_RVAL", "addf_YAC_RARG", "mulf_YAC_RSELF", "mulf_YAC_RVAL", "mulf_YAC_RARG", "mul_YAC_RSELF", "mul_YAC_RVAL", "mul_YAC_RARG", "transform_YAC_RSELF", "transform_YAC_RVAL", "transform_YAC_RARG", "getAbs", "getAbsSqr", "unit_YAC_RSELF", "unit_YAC_RVAL", "unit_YAC_RARG", "unitScale_YAC_RSELF", "unitScale_YAC_RVAL", "unitScale_YAC_RARG", "initScalef", "rotate", "distanceToPlane", "intersectPlane", "divz_YAC_RSELF", "divz_YAC_RVAL", "divz_YAC_RARG", "divw_YAC_RSELF", "divw_YAC_RVAL", "divw_YAC_RARG", "bilinearQuadPos", "project"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Vector4f::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 4, 4, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 0, 0, 0, 0, 1, 1, 1, 2, 2, 1, 2, 4, 0, 0, 1, 0, 0, 1, 6, 7}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _Vector4f::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={2, 2, 2, 2,};static const sUI rt2[]={2, 2, 2, 2,};static const sUI rt3[]={2,};static const sUI rt4[]={2,};static const sUI rt5[]={2,};static const sUI rt6[]={2,};static const sUI rt7[]={0,};static const sUI rt8[]={0,};static const sUI rt9[]={0,};static const sUI rt10[]={0,};static const sUI rt11[]={0,};static const sUI rt12[]={3,};static const sUI rt13[]={0,};static const sUI rt14[]={3,};static const sUI rt15[]={0,};static const sUI rt16[]={3,};static const sUI rt17[]={0,};static const sUI rt18[]={3,};static const sUI rt19[]={0,};static const sUI rt20[]={3,};static const sUI rt21[]={3,};static const sUI rt22[]={3, 3,};static const sUI rt23[]={3,};static const sUI rt24[]={3,};static const sUI rt25[]={3, 3,};static const sUI rt26[]={3,};static const sUI rt27[]={3,};static const sUI rt28[]={3, 3,};static const sUI rt29[]={2,};static const sUI rt30[]={2,};static const sUI rt31[]={2, 3,};static const sUI rt32[]={2,};static const sUI rt33[]={2,};static const sUI rt34[]={2, 3,};static const sUI rt35[]={3,};static const sUI rt36[]={3,};static const sUI rt37[]={3, 3,};static const sUI rt38[]={3,};static const sUI rt39[]={3,};static const sUI rt40[]={3, 3,};static const sUI rt41[]={0,};static const sUI rt42[]={0,};static const sUI rt43[]={0,};static const sUI rt44[]={0,};static const sUI rt45[]={3,};static const sUI rt46[]={2,};static const sUI rt47[]={2,};static const sUI rt48[]={2, 3,};static const sUI rt49[]={3, 2,};static const sUI rt50[]={3,};static const sUI rt51[]={3, 3,};static const sUI rt52[]={3, 3, 3, 3,};static const sUI rt53[]={0,};static const sUI rt54[]={0,};static const sUI rt55[]={3,};static const sUI rt56[]={0,};static const sUI rt57[]={0,};static const sUI rt58[]={3,};static const sUI rt59[]={3, 3, 3, 3, 2, 2,};static const sUI rt60[]={3, 2, 2, 2, 2, 2, 2,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40, rt41, rt42, rt43, rt44, rt45, rt46, rt47, rt48, rt49, rt50, rt51, rt52, rt53, rt54, rt55, rt56, rt57, rt58, rt59, rt60}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _Vector4f::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs2[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0, (const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0, (const char*)0,};static const char *rs26[]={(const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0, (const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0,};static const char *rs31[]={(const char*)0, (const char*)0,};static const char *rs32[]={(const char*)0,};static const char *rs33[]={(const char*)0,};static const char *rs34[]={(const char*)0, (const char*)0,};static const char *rs35[]={(const char*)0,};static const char *rs36[]={(const char*)0,};static const char *rs37[]={(const char*)0, (const char*)0,};static const char *rs38[]={(const char*)0,};static const char *rs39[]={(const char*)0,};static const char *rs40[]={(const char*)0, (const char*)0,};static const char *rs41[]={(const char*)0,};static const char *rs42[]={(const char*)0,};static const char *rs43[]={(const char*)0,};static const char *rs44[]={(const char*)0,};static const char *rs45[]={(const char*)0,};static const char *rs46[]={(const char*)0,};static const char *rs47[]={(const char*)0,};static const char *rs48[]={(const char*)0, (const char*)0,};static const char *rs49[]={(const char*)0, (const char*)0,};static const char *rs50[]={(const char*)0,};static const char *rs51[]={(const char*)0, (const char*)0,};static const char *rs52[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs53[]={(const char*)0,};static const char *rs54[]={(const char*)0,};static const char *rs55[]={(const char*)0,};static const char *rs56[]={(const char*)0,};static const char *rs57[]={(const char*)0,};static const char *rs58[]={(const char*)0,};static const char *rs59[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs60[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40, rs41, rs42, rs43, rs44, rs45, rs46, rs47, rs48, rs49, rs50, rs51, rs52, rs53, rs54, rs55, rs56, rs57, rs58, rs59, rs60}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Vector4f::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 4, 0, 0, 0, 0, 0, 2, 2, 2, 2, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 0, 4, 0, 2, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 2, 2, 0, 4, 0, 0, 4, 0, 0, 0, 2, 1, 0, 4, 0, 0, 4, 0, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _Vector4f::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _Vector4f::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)Vector4f___New, (void*)Vector4f___init, (void*)Vector4f___setX, (void*)Vector4f___setY, (void*)Vector4f___setZ, (void*)Vector4f___setW, (void*)Vector4f___getX, (void*)Vector4f___getY, (void*)Vector4f___getZ, (void*)Vector4f___getW, (void*)Vector4f___getXy_YAC_RVAL, (void*)Vector4f___getXy_YAC_RARG, (void*)Vector4f___getXz_YAC_RVAL, (void*)Vector4f___getXz_YAC_RARG, (void*)Vector4f___getYz_YAC_RVAL, (void*)Vector4f___getYz_YAC_RARG, (void*)Vector4f___getXyz_YAC_RVAL, (void*)Vector4f___getXyz_YAC_RARG, (void*)Vector4f___getString, (void*)Vector4f___add_YAC_RSELF, (void*)Vector4f___add_YAC_RVAL, (void*)Vector4f___add_YAC_RARG, (void*)Vector4f___sub_YAC_RSELF, (void*)Vector4f___sub_YAC_RVAL, (void*)Vector4f___sub_YAC_RARG, (void*)Vector4f___dot, (void*)Vector4f___tensor_YAC_RVAL, (void*)Vector4f___tensor_YAC_RARG, (void*)Vector4f___addf_YAC_RSELF, (void*)Vector4f___addf_YAC_RVAL, (void*)Vector4f___addf_YAC_RARG, (void*)Vector4f___mulf_YAC_RSELF, (void*)Vector4f___mulf_YAC_RVAL, (void*)Vector4f___mulf_YAC_RARG, (void*)Vector4f___mul_YAC_RSELF, (void*)Vector4f___mul_YAC_RVAL, (void*)Vector4f___mul_YAC_RARG, (void*)Vector4f___transform_YAC_RSELF, (void*)Vector4f___transform_YAC_RVAL, (void*)Vector4f___transform_YAC_RARG, (void*)Vector4f___getAbs, (void*)Vector4f___getAbsSqr, (void*)Vector4f___unit_YAC_RSELF, (void*)Vector4f___unit_YAC_RVAL, (void*)Vector4f___unit_YAC_RARG, (void*)Vector4f___unitScale_YAC_RSELF, (void*)Vector4f___unitScale_YAC_RVAL, (void*)Vector4f___unitScale_YAC_RARG, (void*)Vector4f___initScalef, (void*)Vector4f___rotate, (void*)Vector4f___distanceToPlane, (void*)Vector4f___intersectPlane, (void*)Vector4f___divz_YAC_RSELF, (void*)Vector4f___divz_YAC_RVAL, (void*)Vector4f___divz_YAC_RARG, (void*)Vector4f___divw_YAC_RSELF, (void*)Vector4f___divw_YAC_RVAL, (void*)Vector4f___divw_YAC_RARG, (void*)Vector4f___bilinearQuadPos, (void*)Vector4f___project}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _Vector4f::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Vector4f::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Vector4f::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Vector4f::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C_POOLED(_Vector4f, "Vector4f");

#ifndef YAC_NO_HOST
void  YAC_CALL Vector4f___New       (void *_o, yacmemptr _args, YAC_Value *_r) {((_Vector4f*)_o)->_New(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _r);}
void  YAC_CALL Vector4f___init      (void *_o, yacmemptr _args               ) {((_Vector4f*)_o)->_init(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32);}
void  YAC_CALL Vector4f___setX      (void *_o, yacmemptr _args               ) {((_Vector4f*)_o)->_setX(_args.mem[0].f32);}
void  YAC_CALL Vector4f___setY      (void *_o, yacmemptr _args               ) {((_Vector4f*)_o)->_setY(_args.mem[0].f32);}
void  YAC_CALL Vector4f___setZ      (void *_o, yacmemptr _args               ) {((_Vector4f*)_o)->_setZ(_args.mem[0].f32);}
void  YAC_CALL Vector4f___setW      (void *_o, yacmemptr _args               ) {((_Vector4f*)_o)->_setW(_args.mem[0].f32);}
sF32  YAC_CALL Vector4f___getX      (void *_o                                ) {return (sF32)((_Vector4f*)_o)->_getX();}
sF32  YAC_CALL Vector4f___getY      (void *_o                                ) {return (sF32)((_Vector4f*)_o)->_getY();}
sF32  YAC_CALL Vector4f___getZ      (void *_o                                ) {return (sF32)((_Vector4f*)_o)->_getZ();}
sF32  YAC_CALL Vector4f___getW      (void *_o                                ) {return (sF32)((_Vector4f*)_o)->_getW();}
void  YAC_CALL Vector4f___getXy_YAC_RVAL(void *_o, YAC_Value *_r             ) {((_Vector4f*)_o)->_getXy_YAC_RVAL(_r);}
void  YAC_CALL Vector4f___getXy_YAC_RARG(void *_o, yacmemptr _args           ) {((_Vector4f*)_o)->_getXy_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Vector4f___getXz_YAC_RVAL(void *_o, YAC_Value *_r             ) {((_Vector4f*)_o)->_getXz_YAC_RVAL(_r);}
void  YAC_CALL Vector4f___getXz_YAC_RARG(void *_o, yacmemptr _args           ) {((_Vector4f*)_o)->_getXz_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Vector4f___getYz_YAC_RVAL(void *_o, YAC_Value *_r             ) {((_Vector4f*)_o)->_getYz_YAC_RVAL(_r);}
void  YAC_CALL Vector4f___getYz_YAC_RARG(void *_o, yacmemptr _args           ) {((_Vector4f*)_o)->_getYz_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Vector4f___getXyz_YAC_RVAL(void *_o, YAC_Value *_r            ) {((_Vector4f*)_o)->_getXyz_YAC_RVAL(_r);}
void  YAC_CALL Vector4f___getXyz_YAC_RARG(void *_o, yacmemptr _args          ) {((_Vector4f*)_o)->_getXyz_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Vector4f___getString (void *_o, YAC_Value *_r                 ) {((_Vector4f*)_o)->_getString(_r);}
void  YAC_CALL Vector4f___add_YAC_RSELF(void *_o, yacmemptr _args            ) {((_Vector4f*)_o)->_add_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Vector4f___add_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Vector4f*)_o)->_add_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Vector4f___add_YAC_RARG(void *_o, yacmemptr _args             ) {((_Vector4f*)_o)->_add_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Vector4f___sub_YAC_RSELF(void *_o, yacmemptr _args            ) {((_Vector4f*)_o)->_sub_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Vector4f___sub_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Vector4f*)_o)->_sub_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Vector4f___sub_YAC_RARG(void *_o, yacmemptr _args             ) {((_Vector4f*)_o)->_sub_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
sF32  YAC_CALL Vector4f___dot       (void *_o, yacmemptr _args               ) {return (sF32)((_Vector4f*)_o)->_dot(_args.mem[0].o);}
void  YAC_CALL Vector4f___tensor_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Vector4f*)_o)->_tensor_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Vector4f___tensor_YAC_RARG(void *_o, yacmemptr _args          ) {((_Vector4f*)_o)->_tensor_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Vector4f___addf_YAC_RSELF(void *_o, yacmemptr _args           ) {((_Vector4f*)_o)->_addf_YAC_RSELF(_args.mem[0].f32);}
void  YAC_CALL Vector4f___addf_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Vector4f*)_o)->_addf_YAC_RVAL(_args.mem[0].f32, _r);}
void  YAC_CALL Vector4f___addf_YAC_RARG(void *_o, yacmemptr _args            ) {((_Vector4f*)_o)->_addf_YAC_RARG(_args.mem[0].f32, _args.mem[1].o);}
void  YAC_CALL Vector4f___mulf_YAC_RSELF(void *_o, yacmemptr _args           ) {((_Vector4f*)_o)->_mulf_YAC_RSELF(_args.mem[0].f32);}
void  YAC_CALL Vector4f___mulf_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Vector4f*)_o)->_mulf_YAC_RVAL(_args.mem[0].f32, _r);}
void  YAC_CALL Vector4f___mulf_YAC_RARG(void *_o, yacmemptr _args            ) {((_Vector4f*)_o)->_mulf_YAC_RARG(_args.mem[0].f32, _args.mem[1].o);}
void  YAC_CALL Vector4f___mul_YAC_RSELF(void *_o, yacmemptr _args            ) {((_Vector4f*)_o)->_mul_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Vector4f___mul_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Vector4f*)_o)->_mul_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Vector4f___mul_YAC_RARG(void *_o, yacmemptr _args             ) {((_Vector4f*)_o)->_mul_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Vector4f___transform_YAC_RSELF(void *_o, yacmemptr _args      ) {((_Vector4f*)_o)->_transform_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Vector4f___transform_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Vector4f*)_o)->_transform_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Vector4f___transform_YAC_RARG(void *_o, yacmemptr _args       ) {((_Vector4f*)_o)->_transform_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
sF32  YAC_CALL Vector4f___getAbs    (void *_o                                ) {return (sF32)((_Vector4f*)_o)->_getAbs();}
sF32  YAC_CALL Vector4f___getAbsSqr (void *_o                                ) {return (sF32)((_Vector4f*)_o)->_getAbsSqr();}
void  YAC_CALL Vector4f___unit_YAC_RSELF(void *_o                            ) {((_Vector4f*)_o)->_unit_YAC_RSELF();}
void  YAC_CALL Vector4f___unit_YAC_RVAL(void *_o, YAC_Value *_r              ) {((_Vector4f*)_o)->_unit_YAC_RVAL(_r);}
void  YAC_CALL Vector4f___unit_YAC_RARG(void *_o, yacmemptr _args            ) {((_Vector4f*)_o)->_unit_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Vector4f___unitScale_YAC_RSELF(void *_o, yacmemptr _args      ) {((_Vector4f*)_o)->_unitScale_YAC_RSELF(_args.mem[0].f32);}
void  YAC_CALL Vector4f___unitScale_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Vector4f*)_o)->_unitScale_YAC_RVAL(_args.mem[0].f32, _r);}
void  YAC_CALL Vector4f___unitScale_YAC_RARG(void *_o, yacmemptr _args       ) {((_Vector4f*)_o)->_unitScale_YAC_RARG(_args.mem[0].f32, _args.mem[1].o);}
void  YAC_CALL Vector4f___initScalef(void *_o, yacmemptr _args               ) {((_Vector4f*)_o)->_initScalef(_args.mem[0].o, _args.mem[1].f32);}
void  YAC_CALL Vector4f___rotate    (void *_o, yacmemptr _args               ) {((_Vector4f*)_o)->_rotate(_args.mem[0].o);}
sF32  YAC_CALL Vector4f___distanceToPlane(void *_o, yacmemptr _args          ) {return (sF32)((_Vector4f*)_o)->_distanceToPlane(_args.mem[0].o, _args.mem[1].o);}
sSI   YAC_CALL Vector4f___intersectPlane(void *_o, yacmemptr _args           ) {return (sSI)((_Vector4f*)_o)->_intersectPlane(_args.mem[0].o, _args.mem[1].o, _args.mem[2].o, _args.mem[3].o);}
void  YAC_CALL Vector4f___divz_YAC_RSELF(void *_o                            ) {((_Vector4f*)_o)->_divz_YAC_RSELF();}
void  YAC_CALL Vector4f___divz_YAC_RVAL(void *_o, YAC_Value *_r              ) {((_Vector4f*)_o)->_divz_YAC_RVAL(_r);}
void  YAC_CALL Vector4f___divz_YAC_RARG(void *_o, yacmemptr _args            ) {((_Vector4f*)_o)->_divz_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Vector4f___divw_YAC_RSELF(void *_o                            ) {((_Vector4f*)_o)->_divw_YAC_RSELF();}
void  YAC_CALL Vector4f___divw_YAC_RVAL(void *_o, YAC_Value *_r              ) {((_Vector4f*)_o)->_divw_YAC_RVAL(_r);}
void  YAC_CALL Vector4f___divw_YAC_RARG(void *_o, yacmemptr _args            ) {((_Vector4f*)_o)->_divw_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Vector4f___bilinearQuadPos(void *_o, yacmemptr _args          ) {((_Vector4f*)_o)->_bilinearQuadPos(_args.mem[0].o, _args.mem[1].o, _args.mem[2].o, _args.mem[3].o, _args.mem[4].f32, _args.mem[5].f32);}
void  YAC_CALL Vector4f___project   (void *_o, yacmemptr _args               ) {((_Vector4f*)_o)->_project(_args.mem[0].o, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32);}
#endif // YAC_NO_HOST
