// ---- ying_Math_Matrix3f.cpp: auto generated by YInG - the YAC interface generator (Fri, 12/Sep/2025 13:19:00)

#ifndef YAC_NO_HOST
void  YAC_CALL Matrix3f___New       (void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix3f___setA      (void *, yacmemptr             );
void  YAC_CALL Matrix3f___setB      (void *, yacmemptr             );
void  YAC_CALL Matrix3f___setC      (void *, yacmemptr             );
void  YAC_CALL Matrix3f___setD      (void *, yacmemptr             );
void  YAC_CALL Matrix3f___setE      (void *, yacmemptr             );
void  YAC_CALL Matrix3f___setF      (void *, yacmemptr             );
void  YAC_CALL Matrix3f___setG      (void *, yacmemptr             );
void  YAC_CALL Matrix3f___setH      (void *, yacmemptr             );
void  YAC_CALL Matrix3f___setI      (void *, yacmemptr             );
sF32  YAC_CALL Matrix3f___getA      (void *                        );
sF32  YAC_CALL Matrix3f___getB      (void *                        );
sF32  YAC_CALL Matrix3f___getC      (void *                        );
sF32  YAC_CALL Matrix3f___getD      (void *                        );
sF32  YAC_CALL Matrix3f___getE      (void *                        );
sF32  YAC_CALL Matrix3f___getF      (void *                        );
sF32  YAC_CALL Matrix3f___getG      (void *                        );
sF32  YAC_CALL Matrix3f___getH      (void *                        );
sF32  YAC_CALL Matrix3f___getI      (void *                        );
void  YAC_CALL Matrix3f___getString (void *, YAC_Value *           );
void  YAC_CALL Matrix3f___setRow    (void *, yacmemptr             );
void  YAC_CALL Matrix3f___getRow_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix3f___getRow_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix3f___setCol    (void *, yacmemptr             );
void  YAC_CALL Matrix3f___getCol_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix3f___getCol_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix3f___initIdentity(void *                      );
sSI   YAC_CALL Matrix3f___isIdentity(void *                        );
void  YAC_CALL Matrix3f___init      (void *, yacmemptr             );
void  YAC_CALL Matrix3f___initRowMajor(void *, yacmemptr           );
void  YAC_CALL Matrix3f___initColumnMajor(void *, yacmemptr        );
void  YAC_CALL Matrix3f___initTranspose(void *, yacmemptr          );
void  YAC_CALL Matrix3f___initRowf  (void *, yacmemptr             );
void  YAC_CALL Matrix3f___initRowv  (void *, yacmemptr             );
void  YAC_CALL Matrix3f___initColf  (void *, yacmemptr             );
void  YAC_CALL Matrix3f___initColv  (void *, yacmemptr             );
void  YAC_CALL Matrix3f___initScalef(void *, yacmemptr             );
void  YAC_CALL Matrix3f___initScalev(void *, yacmemptr             );
void  YAC_CALL Matrix3f___initTranslatef(void *, yacmemptr         );
void  YAC_CALL Matrix3f___initTranslatev(void *, yacmemptr         );
void  YAC_CALL Matrix3f___initRotatef(void *, yacmemptr            );
void  YAC_CALL Matrix3f___initRotatev(void *, yacmemptr            );
void  YAC_CALL Matrix3f___initEulerXYX(void *, yacmemptr           );
void  YAC_CALL Matrix3f___initEulerXZX(void *, yacmemptr           );
void  YAC_CALL Matrix3f___initEulerYXY(void *, yacmemptr           );
void  YAC_CALL Matrix3f___initEulerYZY(void *, yacmemptr           );
void  YAC_CALL Matrix3f___initEulerZXZ(void *, yacmemptr           );
void  YAC_CALL Matrix3f___initEulerZYZ(void *, yacmemptr           );
void  YAC_CALL Matrix3f___initEulerXYZ(void *, yacmemptr           );
void  YAC_CALL Matrix3f___initEulerXZY(void *, yacmemptr           );
void  YAC_CALL Matrix3f___initEulerYXZ(void *, yacmemptr           );
void  YAC_CALL Matrix3f___initEulerYZX(void *, yacmemptr           );
void  YAC_CALL Matrix3f___initEulerZXY(void *, yacmemptr           );
void  YAC_CALL Matrix3f___initEulerZYX(void *, yacmemptr           );
void  YAC_CALL Matrix3f___add_YAC_RSELF(void *, yacmemptr          );
void  YAC_CALL Matrix3f___add_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix3f___add_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL Matrix3f___sub_YAC_RSELF(void *, yacmemptr          );
void  YAC_CALL Matrix3f___sub_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix3f___sub_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL Matrix3f___mulf_YAC_RSELF(void *, yacmemptr         );
void  YAC_CALL Matrix3f___mulf_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix3f___mulf_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Matrix3f___mul_YAC_RSELF(void *, yacmemptr          );
void  YAC_CALL Matrix3f___mul_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix3f___mul_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL Matrix3f___mulv_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix3f___mulv_YAC_RARG(void *, yacmemptr          );
sF32  YAC_CALL Matrix3f___getAbs    (void *                        );
sF32  YAC_CALL Matrix3f___getAbsSqr (void *                        );
void  YAC_CALL Matrix3f___unit_YAC_RSELF(void *                    );
void  YAC_CALL Matrix3f___unit_YAC_RVAL(void *, YAC_Value *        );
void  YAC_CALL Matrix3f___unit_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Matrix3f___unitScale_YAC_RSELF(void *, yacmemptr    );
void  YAC_CALL Matrix3f___unitScale_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix3f___unitScale_YAC_RARG(void *, yacmemptr     );
sF32  YAC_CALL Matrix3f___det       (void *                        );
void  YAC_CALL Matrix3f___invert_YAC_RSELF(void *                  );
void  YAC_CALL Matrix3f___invert_YAC_RVAL(void *, YAC_Value *      );
void  YAC_CALL Matrix3f___invert_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix3f___transpose_YAC_RSELF(void *               );
void  YAC_CALL Matrix3f___transpose_YAC_RVAL(void *, YAC_Value *   );
void  YAC_CALL Matrix3f___transpose_YAC_RARG(void *, yacmemptr     );
void  YAC_CALL Matrix3f___translatef_YAC_RSELF(void *, yacmemptr   );
void  YAC_CALL Matrix3f___translatef_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix3f___translatef_YAC_RARG(void *, yacmemptr    );
void  YAC_CALL Matrix3f___translatev_YAC_RSELF(void *, yacmemptr   );
void  YAC_CALL Matrix3f___translatev_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix3f___translatev_YAC_RARG(void *, yacmemptr    );
void  YAC_CALL Matrix3f___scalef_YAC_RSELF(void *, yacmemptr       );
void  YAC_CALL Matrix3f___scalef_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix3f___scalef_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix3f___scalev_YAC_RSELF(void *, yacmemptr       );
void  YAC_CALL Matrix3f___scalev_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix3f___scalev_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix3f___rotatef_YAC_RSELF(void *, yacmemptr      );
void  YAC_CALL Matrix3f___rotatef_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix3f___rotatef_YAC_RARG(void *, yacmemptr       );
void  YAC_CALL Matrix3f___rotatev_YAC_RSELF(void *, yacmemptr      );
void  YAC_CALL Matrix3f___rotatev_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix3f___rotatev_YAC_RARG(void *, yacmemptr       );
#endif // YAC_NO_HOST

// ------------------ YAC class "_Matrix3f" reflection map (implementation) ------------------
sUI          YAC_VCALL _Matrix3f::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Matrix3f::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Matrix3f::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Matrix3f::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Matrix3f::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Matrix3f::yacMethodGetNum                  (void) {return 102;}
const char **YAC_VCALL _Matrix3f::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "New", "setA", "setB", "setC", "setD", "setE", "setF", "setG", "setH", "setI", "getA", "getB", "getC", "getD", "getE", "getF", "getG", "getH", "getI", "getString", "setRow", "getRow_YAC_RVAL", "getRow_YAC_RARG", "setCol", "getCol_YAC_RVAL", "getCol_YAC_RARG", "initIdentity", "isIdentity", "init", "initRowMajor", "initColumnMajor", "initTranspose", "initRowf", "initRowv", "initColf", "initColv", "initScalef", "initScalev", "initTranslatef", "initTranslatev", "initRotatef", "initRotatev", "initEulerXYX", "initEulerXZX", "initEulerYXY", "initEulerYZY", "initEulerZXZ", "initEulerZYZ", "initEulerXYZ", "initEulerXZY", "initEulerYXZ", "initEulerYZX", "initEulerZXY", "initEulerZYX", "add_YAC_RSELF", "add_YAC_RVAL", "add_YAC_RARG", "sub_YAC_RSELF", "sub_YAC_RVAL", "sub_YAC_RARG", "mulf_YAC_RSELF", "mulf_YAC_RVAL", "mulf_YAC_RARG", "mul_YAC_RSELF", "mul_YAC_RVAL", "mul_YAC_RARG", "mulv_YAC_RVAL", "mulv_YAC_RARG", "getAbs", "getAbsSqr", "unit_YAC_RSELF", "unit_YAC_RVAL", "unit_YAC_RARG", "unitScale_YAC_RSELF", "unitScale_YAC_RVAL", "unitScale_YAC_RARG", "det", "invert_YAC_RSELF", "invert_YAC_RVAL", "invert_YAC_RARG", "transpose_YAC_RSELF", "transpose_YAC_RVAL", "transpose_YAC_RARG", "translatef_YAC_RSELF", "translatef_YAC_RVAL", "translatef_YAC_RARG", "translatev_YAC_RSELF", "translatev_YAC_RVAL", "translatev_YAC_RARG", "scalef_YAC_RSELF", "scalef_YAC_RVAL", "scalef_YAC_RARG", "scalev_YAC_RSELF", "scalev_YAC_RVAL", "scalev_YAC_RARG", "rotatef_YAC_RSELF", "rotatef_YAC_RVAL", "rotatef_YAC_RARG", "rotatev_YAC_RSELF", "rotatev_YAC_RVAL", "rotatev_YAC_RARG"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Matrix3f::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 2, 1, 2, 0, 0, 9, 9, 9, 9, 4, 2, 4, 2, 3, 1, 2, 1, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 0, 0, 0, 0, 1, 1, 1, 2, 0, 0, 0, 1, 0, 0, 1, 2, 2, 3, 1, 1, 2, 3, 3, 4, 1, 1, 2, 3, 3, 4, 1, 1, 2}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _Matrix3f::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={2, 2, 2, 2, 2, 2, 2, 2, 2,};static const sUI rt2[]={2,};static const sUI rt3[]={2,};static const sUI rt4[]={2,};static const sUI rt5[]={2,};static const sUI rt6[]={2,};static const sUI rt7[]={2,};static const sUI rt8[]={2,};static const sUI rt9[]={2,};static const sUI rt10[]={2,};static const sUI rt11[]={0,};static const sUI rt12[]={0,};static const sUI rt13[]={0,};static const sUI rt14[]={0,};static const sUI rt15[]={0,};static const sUI rt16[]={0,};static const sUI rt17[]={0,};static const sUI rt18[]={0,};static const sUI rt19[]={0,};static const sUI rt20[]={0,};static const sUI rt21[]={1, 3,};static const sUI rt22[]={1,};static const sUI rt23[]={1, 3,};static const sUI rt24[]={1, 3,};static const sUI rt25[]={1,};static const sUI rt26[]={1, 3,};static const sUI rt27[]={0,};static const sUI rt28[]={0,};static const sUI rt29[]={2, 2, 2, 2, 2, 2, 2, 2, 2,};static const sUI rt30[]={2, 2, 2, 2, 2, 2, 2, 2, 2,};static const sUI rt31[]={2, 2, 2, 2, 2, 2, 2, 2, 2,};static const sUI rt32[]={2, 2, 2, 2, 2, 2, 2, 2, 2,};static const sUI rt33[]={1, 2, 2, 2,};static const sUI rt34[]={1, 3,};static const sUI rt35[]={1, 2, 2, 2,};static const sUI rt36[]={1, 3,};static const sUI rt37[]={2, 2, 2,};static const sUI rt38[]={3,};static const sUI rt39[]={2, 2,};static const sUI rt40[]={3,};static const sUI rt41[]={2, 2, 2,};static const sUI rt42[]={3,};static const sUI rt43[]={2, 2, 2,};static const sUI rt44[]={2, 2, 2,};static const sUI rt45[]={2, 2, 2,};static const sUI rt46[]={2, 2, 2,};static const sUI rt47[]={2, 2, 2,};static const sUI rt48[]={2, 2, 2,};static const sUI rt49[]={2, 2, 2,};static const sUI rt50[]={2, 2, 2,};static const sUI rt51[]={2, 2, 2,};static const sUI rt52[]={2, 2, 2,};static const sUI rt53[]={2, 2, 2,};static const sUI rt54[]={2, 2, 2,};static const sUI rt55[]={3,};static const sUI rt56[]={3,};static const sUI rt57[]={3, 3,};static const sUI rt58[]={3,};static const sUI rt59[]={3,};static const sUI rt60[]={3, 3,};static const sUI rt61[]={2,};static const sUI rt62[]={2,};static const sUI rt63[]={2, 3,};static const sUI rt64[]={3,};static const sUI rt65[]={3,};static const sUI rt66[]={3, 3,};static const sUI rt67[]={3,};static const sUI rt68[]={3, 3,};static const sUI rt69[]={0,};static const sUI rt70[]={0,};static const sUI rt71[]={0,};static const sUI rt72[]={0,};static const sUI rt73[]={3,};static const sUI rt74[]={2,};static const sUI rt75[]={2,};static const sUI rt76[]={2, 3,};static const sUI rt77[]={0,};static const sUI rt78[]={0,};static const sUI rt79[]={0,};static const sUI rt80[]={3,};static const sUI rt81[]={0,};static const sUI rt82[]={0,};static const sUI rt83[]={3,};static const sUI rt84[]={2, 2,};static const sUI rt85[]={2, 2,};static const sUI rt86[]={2, 2, 3,};static const sUI rt87[]={3,};static const sUI rt88[]={3,};static const sUI rt89[]={3, 3,};static const sUI rt90[]={2, 2, 2,};static const sUI rt91[]={2, 2, 2,};static const sUI rt92[]={2, 2, 2, 3,};static const sUI rt93[]={3,};static const sUI rt94[]={3,};static const sUI rt95[]={3, 3,};static const sUI rt96[]={2, 2, 2,};static const sUI rt97[]={2, 2, 2,};static const sUI rt98[]={2, 2, 2, 3,};static const sUI rt99[]={3,};static const sUI rt100[]={3,};static const sUI rt101[]={3, 3,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40, rt41, rt42, rt43, rt44, rt45, rt46, rt47, rt48, rt49, rt50, rt51, rt52, rt53, rt54, rt55, rt56, rt57, rt58, rt59, rt60, rt61, rt62, rt63, rt64, rt65, rt66, rt67, rt68, rt69, rt70, rt71, rt72, rt73, rt74, rt75, rt76, rt77, rt78, rt79, rt80, rt81, rt82, rt83, rt84, rt85, rt86, rt87, rt88, rt89, rt90, rt91, rt92, rt93, rt94, rt95, rt96, rt97, rt98, rt99, rt100, rt101}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _Matrix3f::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0, (const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0, (const char*)0,};static const char *rs24[]={(const char*)0, (const char*)0,};static const char *rs25[]={(const char*)0,};static const char *rs26[]={(const char*)0, (const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0,};static const char *rs29[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs30[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs31[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs32[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs33[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs34[]={(const char*)0, (const char*)0,};static const char *rs35[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs36[]={(const char*)0, (const char*)0,};static const char *rs37[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs38[]={(const char*)0,};static const char *rs39[]={(const char*)0, (const char*)0,};static const char *rs40[]={(const char*)0,};static const char *rs41[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs42[]={(const char*)0,};static const char *rs43[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs44[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs45[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs46[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs47[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs48[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs49[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs50[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs51[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs52[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs53[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs54[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs55[]={(const char*)0,};static const char *rs56[]={(const char*)0,};static const char *rs57[]={(const char*)0, (const char*)0,};static const char *rs58[]={(const char*)0,};static const char *rs59[]={(const char*)0,};static const char *rs60[]={(const char*)0, (const char*)0,};static const char *rs61[]={(const char*)0,};static const char *rs62[]={(const char*)0,};static const char *rs63[]={(const char*)0, (const char*)0,};static const char *rs64[]={(const char*)0,};static const char *rs65[]={(const char*)0,};static const char *rs66[]={(const char*)0, (const char*)0,};static const char *rs67[]={(const char*)0,};static const char *rs68[]={(const char*)0, (const char*)0,};static const char *rs69[]={(const char*)0,};static const char *rs70[]={(const char*)0,};static const char *rs71[]={(const char*)0,};static const char *rs72[]={(const char*)0,};static const char *rs73[]={(const char*)0,};static const char *rs74[]={(const char*)0,};static const char *rs75[]={(const char*)0,};static const char *rs76[]={(const char*)0, (const char*)0,};static const char *rs77[]={(const char*)0,};static const char *rs78[]={(const char*)0,};static const char *rs79[]={(const char*)0,};static const char *rs80[]={(const char*)0,};static const char *rs81[]={(const char*)0,};static const char *rs82[]={(const char*)0,};static const char *rs83[]={(const char*)0,};static const char *rs84[]={(const char*)0, (const char*)0,};static const char *rs85[]={(const char*)0, (const char*)0,};static const char *rs86[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs87[]={(const char*)0,};static const char *rs88[]={(const char*)0,};static const char *rs89[]={(const char*)0, (const char*)0,};static const char *rs90[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs91[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs92[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs93[]={(const char*)0,};static const char *rs94[]={(const char*)0,};static const char *rs95[]={(const char*)0, (const char*)0,};static const char *rs96[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs97[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs98[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs99[]={(const char*)0,};static const char *rs100[]={(const char*)0,};static const char *rs101[]={(const char*)0, (const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40, rs41, rs42, rs43, rs44, rs45, rs46, rs47, rs48, rs49, rs50, rs51, rs52, rs53, rs54, rs55, rs56, rs57, rs58, rs59, rs60, rs61, rs62, rs63, rs64, rs65, rs66, rs67, rs68, rs69, rs70, rs71, rs72, rs73, rs74, rs75, rs76, rs77, rs78, rs79, rs80, rs81, rs82, rs83, rs84, rs85, rs86, rs87, rs88, rs89, rs90, rs91, rs92, rs93, rs94, rs95, rs96, rs97, rs98, rs99, rs100, rs101}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Matrix3f::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 0, 4, 0, 0, 4, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 4, 0, 2, 2, 0, 4, 0, 0, 4, 0, 2, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _Matrix3f::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _Matrix3f::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)Matrix3f___New, (void*)Matrix3f___setA, (void*)Matrix3f___setB, (void*)Matrix3f___setC, (void*)Matrix3f___setD, (void*)Matrix3f___setE, (void*)Matrix3f___setF, (void*)Matrix3f___setG, (void*)Matrix3f___setH, (void*)Matrix3f___setI, (void*)Matrix3f___getA, (void*)Matrix3f___getB, (void*)Matrix3f___getC, (void*)Matrix3f___getD, (void*)Matrix3f___getE, (void*)Matrix3f___getF, (void*)Matrix3f___getG, (void*)Matrix3f___getH, (void*)Matrix3f___getI, (void*)Matrix3f___getString, (void*)Matrix3f___setRow, (void*)Matrix3f___getRow_YAC_RVAL, (void*)Matrix3f___getRow_YAC_RARG, (void*)Matrix3f___setCol, (void*)Matrix3f___getCol_YAC_RVAL, (void*)Matrix3f___getCol_YAC_RARG, (void*)Matrix3f___initIdentity, (void*)Matrix3f___isIdentity, (void*)Matrix3f___init, (void*)Matrix3f___initRowMajor, (void*)Matrix3f___initColumnMajor, (void*)Matrix3f___initTranspose, (void*)Matrix3f___initRowf, (void*)Matrix3f___initRowv, (void*)Matrix3f___initColf, (void*)Matrix3f___initColv, (void*)Matrix3f___initScalef, (void*)Matrix3f___initScalev, (void*)Matrix3f___initTranslatef, (void*)Matrix3f___initTranslatev, (void*)Matrix3f___initRotatef, (void*)Matrix3f___initRotatev, (void*)Matrix3f___initEulerXYX, (void*)Matrix3f___initEulerXZX, (void*)Matrix3f___initEulerYXY, (void*)Matrix3f___initEulerYZY, (void*)Matrix3f___initEulerZXZ, (void*)Matrix3f___initEulerZYZ, (void*)Matrix3f___initEulerXYZ, (void*)Matrix3f___initEulerXZY, (void*)Matrix3f___initEulerYXZ, (void*)Matrix3f___initEulerYZX, (void*)Matrix3f___initEulerZXY, (void*)Matrix3f___initEulerZYX, (void*)Matrix3f___add_YAC_RSELF, (void*)Matrix3f___add_YAC_RVAL, (void*)Matrix3f___add_YAC_RARG, (void*)Matrix3f___sub_YAC_RSELF, (void*)Matrix3f___sub_YAC_RVAL, (void*)Matrix3f___sub_YAC_RARG, (void*)Matrix3f___mulf_YAC_RSELF, (void*)Matrix3f___mulf_YAC_RVAL, (void*)Matrix3f___mulf_YAC_RARG, (void*)Matrix3f___mul_YAC_RSELF, (void*)Matrix3f___mul_YAC_RVAL, (void*)Matrix3f___mul_YAC_RARG, (void*)Matrix3f___mulv_YAC_RVAL, (void*)Matrix3f___mulv_YAC_RARG, (void*)Matrix3f___getAbs, (void*)Matrix3f___getAbsSqr, (void*)Matrix3f___unit_YAC_RSELF, (void*)Matrix3f___unit_YAC_RVAL, (void*)Matrix3f___unit_YAC_RARG, (void*)Matrix3f___unitScale_YAC_RSELF, (void*)Matrix3f___unitScale_YAC_RVAL, (void*)Matrix3f___unitScale_YAC_RARG, (void*)Matrix3f___det, (void*)Matrix3f___invert_YAC_RSELF, (void*)Matrix3f___invert_YAC_RVAL, (void*)Matrix3f___invert_YAC_RARG, (void*)Matrix3f___transpose_YAC_RSELF, (void*)Matrix3f___transpose_YAC_RVAL, (void*)Matrix3f___transpose_YAC_RARG, (void*)Matrix3f___translatef_YAC_RSELF, (void*)Matrix3f___translatef_YAC_RVAL, (void*)Matrix3f___translatef_YAC_RARG, (void*)Matrix3f___translatev_YAC_RSELF, (void*)Matrix3f___translatev_YAC_RVAL, (void*)Matrix3f___translatev_YAC_RARG, (void*)Matrix3f___scalef_YAC_RSELF, (void*)Matrix3f___scalef_YAC_RVAL, (void*)Matrix3f___scalef_YAC_RARG, (void*)Matrix3f___scalev_YAC_RSELF, (void*)Matrix3f___scalev_YAC_RVAL, (void*)Matrix3f___scalev_YAC_RARG, (void*)Matrix3f___rotatef_YAC_RSELF, (void*)Matrix3f___rotatef_YAC_RVAL, (void*)Matrix3f___rotatef_YAC_RARG, (void*)Matrix3f___rotatev_YAC_RSELF, (void*)Matrix3f___rotatev_YAC_RVAL, (void*)Matrix3f___rotatev_YAC_RARG}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _Matrix3f::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Matrix3f::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Matrix3f::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Matrix3f::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C_POOLED(_Matrix3f, "Matrix3f");

#ifndef YAC_NO_HOST
void  YAC_CALL Matrix3f___New       (void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix3f*)_o)->_New(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32, _r);}
void  YAC_CALL Matrix3f___setA      (void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_setA(_args.mem[0].f32);}
void  YAC_CALL Matrix3f___setB      (void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_setB(_args.mem[0].f32);}
void  YAC_CALL Matrix3f___setC      (void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_setC(_args.mem[0].f32);}
void  YAC_CALL Matrix3f___setD      (void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_setD(_args.mem[0].f32);}
void  YAC_CALL Matrix3f___setE      (void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_setE(_args.mem[0].f32);}
void  YAC_CALL Matrix3f___setF      (void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_setF(_args.mem[0].f32);}
void  YAC_CALL Matrix3f___setG      (void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_setG(_args.mem[0].f32);}
void  YAC_CALL Matrix3f___setH      (void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_setH(_args.mem[0].f32);}
void  YAC_CALL Matrix3f___setI      (void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_setI(_args.mem[0].f32);}
sF32  YAC_CALL Matrix3f___getA      (void *_o                                ) {return (sF32)((_Matrix3f*)_o)->_getA();}
sF32  YAC_CALL Matrix3f___getB      (void *_o                                ) {return (sF32)((_Matrix3f*)_o)->_getB();}
sF32  YAC_CALL Matrix3f___getC      (void *_o                                ) {return (sF32)((_Matrix3f*)_o)->_getC();}
sF32  YAC_CALL Matrix3f___getD      (void *_o                                ) {return (sF32)((_Matrix3f*)_o)->_getD();}
sF32  YAC_CALL Matrix3f___getE      (void *_o                                ) {return (sF32)((_Matrix3f*)_o)->_getE();}
sF32  YAC_CALL Matrix3f___getF      (void *_o                                ) {return (sF32)((_Matrix3f*)_o)->_getF();}
sF32  YAC_CALL Matrix3f___getG      (void *_o                                ) {return (sF32)((_Matrix3f*)_o)->_getG();}
sF32  YAC_CALL Matrix3f___getH      (void *_o                                ) {return (sF32)((_Matrix3f*)_o)->_getH();}
sF32  YAC_CALL Matrix3f___getI      (void *_o                                ) {return (sF32)((_Matrix3f*)_o)->_getI();}
void  YAC_CALL Matrix3f___getString (void *_o, YAC_Value *_r                 ) {((_Matrix3f*)_o)->_getString(_r);}
void  YAC_CALL Matrix3f___setRow    (void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_setRow(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix3f___getRow_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix3f*)_o)->_getRow_YAC_RVAL(_args.mem[0].si, _r);}
void  YAC_CALL Matrix3f___getRow_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix3f*)_o)->_getRow_YAC_RARG(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix3f___setCol    (void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_setCol(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix3f___getCol_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix3f*)_o)->_getCol_YAC_RVAL(_args.mem[0].si, _r);}
void  YAC_CALL Matrix3f___getCol_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix3f*)_o)->_getCol_YAC_RARG(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix3f___initIdentity(void *_o                              ) {((_Matrix3f*)_o)->_initIdentity();}
sSI   YAC_CALL Matrix3f___isIdentity(void *_o                                ) {return (sSI)((_Matrix3f*)_o)->_isIdentity();}
void  YAC_CALL Matrix3f___init      (void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_init(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32);}
void  YAC_CALL Matrix3f___initRowMajor(void *_o, yacmemptr _args             ) {((_Matrix3f*)_o)->_initRowMajor(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32);}
void  YAC_CALL Matrix3f___initColumnMajor(void *_o, yacmemptr _args          ) {((_Matrix3f*)_o)->_initColumnMajor(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32);}
void  YAC_CALL Matrix3f___initTranspose(void *_o, yacmemptr _args            ) {((_Matrix3f*)_o)->_initTranspose(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32);}
void  YAC_CALL Matrix3f___initRowf  (void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_initRowf(_args.mem[0].si, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32);}
void  YAC_CALL Matrix3f___initRowv  (void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_initRowv(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix3f___initColf  (void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_initColf(_args.mem[0].si, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32);}
void  YAC_CALL Matrix3f___initColv  (void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_initColv(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix3f___initScalef(void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_initScalef(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix3f___initScalev(void *_o, yacmemptr _args               ) {((_Matrix3f*)_o)->_initScalev(_args.mem[0].o);}
void  YAC_CALL Matrix3f___initTranslatef(void *_o, yacmemptr _args           ) {((_Matrix3f*)_o)->_initTranslatef(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL Matrix3f___initTranslatev(void *_o, yacmemptr _args           ) {((_Matrix3f*)_o)->_initTranslatev(_args.mem[0].o);}
void  YAC_CALL Matrix3f___initRotatef(void *_o, yacmemptr _args              ) {((_Matrix3f*)_o)->_initRotatef(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix3f___initRotatev(void *_o, yacmemptr _args              ) {((_Matrix3f*)_o)->_initRotatev(_args.mem[0].o);}
void  YAC_CALL Matrix3f___initEulerXYX(void *_o, yacmemptr _args             ) {((_Matrix3f*)_o)->_initEulerXYX(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix3f___initEulerXZX(void *_o, yacmemptr _args             ) {((_Matrix3f*)_o)->_initEulerXZX(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix3f___initEulerYXY(void *_o, yacmemptr _args             ) {((_Matrix3f*)_o)->_initEulerYXY(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix3f___initEulerYZY(void *_o, yacmemptr _args             ) {((_Matrix3f*)_o)->_initEulerYZY(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix3f___initEulerZXZ(void *_o, yacmemptr _args             ) {((_Matrix3f*)_o)->_initEulerZXZ(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix3f___initEulerZYZ(void *_o, yacmemptr _args             ) {((_Matrix3f*)_o)->_initEulerZYZ(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix3f___initEulerXYZ(void *_o, yacmemptr _args             ) {((_Matrix3f*)_o)->_initEulerXYZ(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix3f___initEulerXZY(void *_o, yacmemptr _args             ) {((_Matrix3f*)_o)->_initEulerXZY(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix3f___initEulerYXZ(void *_o, yacmemptr _args             ) {((_Matrix3f*)_o)->_initEulerYXZ(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix3f___initEulerYZX(void *_o, yacmemptr _args             ) {((_Matrix3f*)_o)->_initEulerYZX(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix3f___initEulerZXY(void *_o, yacmemptr _args             ) {((_Matrix3f*)_o)->_initEulerZXY(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix3f___initEulerZYX(void *_o, yacmemptr _args             ) {((_Matrix3f*)_o)->_initEulerZYX(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix3f___add_YAC_RSELF(void *_o, yacmemptr _args            ) {((_Matrix3f*)_o)->_add_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix3f___add_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix3f*)_o)->_add_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix3f___add_YAC_RARG(void *_o, yacmemptr _args             ) {((_Matrix3f*)_o)->_add_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix3f___sub_YAC_RSELF(void *_o, yacmemptr _args            ) {((_Matrix3f*)_o)->_sub_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix3f___sub_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix3f*)_o)->_sub_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix3f___sub_YAC_RARG(void *_o, yacmemptr _args             ) {((_Matrix3f*)_o)->_sub_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix3f___mulf_YAC_RSELF(void *_o, yacmemptr _args           ) {((_Matrix3f*)_o)->_mulf_YAC_RSELF(_args.mem[0].f32);}
void  YAC_CALL Matrix3f___mulf_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix3f*)_o)->_mulf_YAC_RVAL(_args.mem[0].f32, _r);}
void  YAC_CALL Matrix3f___mulf_YAC_RARG(void *_o, yacmemptr _args            ) {((_Matrix3f*)_o)->_mulf_YAC_RARG(_args.mem[0].f32, _args.mem[1].o);}
void  YAC_CALL Matrix3f___mul_YAC_RSELF(void *_o, yacmemptr _args            ) {((_Matrix3f*)_o)->_mul_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix3f___mul_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix3f*)_o)->_mul_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix3f___mul_YAC_RARG(void *_o, yacmemptr _args             ) {((_Matrix3f*)_o)->_mul_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix3f___mulv_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix3f*)_o)->_mulv_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix3f___mulv_YAC_RARG(void *_o, yacmemptr _args            ) {((_Matrix3f*)_o)->_mulv_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
sF32  YAC_CALL Matrix3f___getAbs    (void *_o                                ) {return (sF32)((_Matrix3f*)_o)->_getAbs();}
sF32  YAC_CALL Matrix3f___getAbsSqr (void *_o                                ) {return (sF32)((_Matrix3f*)_o)->_getAbsSqr();}
void  YAC_CALL Matrix3f___unit_YAC_RSELF(void *_o                            ) {((_Matrix3f*)_o)->_unit_YAC_RSELF();}
void  YAC_CALL Matrix3f___unit_YAC_RVAL(void *_o, YAC_Value *_r              ) {((_Matrix3f*)_o)->_unit_YAC_RVAL(_r);}
void  YAC_CALL Matrix3f___unit_YAC_RARG(void *_o, yacmemptr _args            ) {((_Matrix3f*)_o)->_unit_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix3f___unitScale_YAC_RSELF(void *_o, yacmemptr _args      ) {((_Matrix3f*)_o)->_unitScale_YAC_RSELF(_args.mem[0].f32);}
void  YAC_CALL Matrix3f___unitScale_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix3f*)_o)->_unitScale_YAC_RVAL(_args.mem[0].f32, _r);}
void  YAC_CALL Matrix3f___unitScale_YAC_RARG(void *_o, yacmemptr _args       ) {((_Matrix3f*)_o)->_unitScale_YAC_RARG(_args.mem[0].f32, _args.mem[1].o);}
sF32  YAC_CALL Matrix3f___det       (void *_o                                ) {return (sF32)((_Matrix3f*)_o)->_det();}
void  YAC_CALL Matrix3f___invert_YAC_RSELF(void *_o                          ) {((_Matrix3f*)_o)->_invert_YAC_RSELF();}
void  YAC_CALL Matrix3f___invert_YAC_RVAL(void *_o, YAC_Value *_r            ) {((_Matrix3f*)_o)->_invert_YAC_RVAL(_r);}
void  YAC_CALL Matrix3f___invert_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix3f*)_o)->_invert_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix3f___transpose_YAC_RSELF(void *_o                       ) {((_Matrix3f*)_o)->_transpose_YAC_RSELF();}
void  YAC_CALL Matrix3f___transpose_YAC_RVAL(void *_o, YAC_Value *_r         ) {((_Matrix3f*)_o)->_transpose_YAC_RVAL(_r);}
void  YAC_CALL Matrix3f___transpose_YAC_RARG(void *_o, yacmemptr _args       ) {((_Matrix3f*)_o)->_transpose_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix3f___translatef_YAC_RSELF(void *_o, yacmemptr _args     ) {((_Matrix3f*)_o)->_translatef_YAC_RSELF(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL Matrix3f___translatef_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix3f*)_o)->_translatef_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _r);}
void  YAC_CALL Matrix3f___translatef_YAC_RARG(void *_o, yacmemptr _args      ) {((_Matrix3f*)_o)->_translatef_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].o);}
void  YAC_CALL Matrix3f___translatev_YAC_RSELF(void *_o, yacmemptr _args     ) {((_Matrix3f*)_o)->_translatev_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix3f___translatev_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix3f*)_o)->_translatev_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix3f___translatev_YAC_RARG(void *_o, yacmemptr _args      ) {((_Matrix3f*)_o)->_translatev_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix3f___scalef_YAC_RSELF(void *_o, yacmemptr _args         ) {((_Matrix3f*)_o)->_scalef_YAC_RSELF(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix3f___scalef_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix3f*)_o)->_scalef_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix3f___scalef_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix3f*)_o)->_scalef_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix3f___scalev_YAC_RSELF(void *_o, yacmemptr _args         ) {((_Matrix3f*)_o)->_scalev_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix3f___scalev_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix3f*)_o)->_scalev_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix3f___scalev_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix3f*)_o)->_scalev_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix3f___rotatef_YAC_RSELF(void *_o, yacmemptr _args        ) {((_Matrix3f*)_o)->_rotatef_YAC_RSELF(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix3f___rotatef_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix3f*)_o)->_rotatef_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix3f___rotatef_YAC_RARG(void *_o, yacmemptr _args         ) {((_Matrix3f*)_o)->_rotatef_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix3f___rotatev_YAC_RSELF(void *_o, yacmemptr _args        ) {((_Matrix3f*)_o)->_rotatev_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix3f___rotatev_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix3f*)_o)->_rotatev_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix3f___rotatev_YAC_RARG(void *_o, yacmemptr _args         ) {((_Matrix3f*)_o)->_rotatev_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
#endif // YAC_NO_HOST
