// ---- ying_Math_Matrix4f.cpp: auto generated by YInG - the YAC interface generator (Fri, 12/Sep/2025 13:19:00)

#ifndef YAC_NO_HOST
void  YAC_CALL Matrix4f___New       (void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___set       (void *, yacmemptr             );
sF32  YAC_CALL Matrix4f___get       (void *, yacmemptr             );
void  YAC_CALL Matrix4f___setA      (void *, yacmemptr             );
void  YAC_CALL Matrix4f___setB      (void *, yacmemptr             );
void  YAC_CALL Matrix4f___setC      (void *, yacmemptr             );
void  YAC_CALL Matrix4f___setD      (void *, yacmemptr             );
void  YAC_CALL Matrix4f___setE      (void *, yacmemptr             );
void  YAC_CALL Matrix4f___setF      (void *, yacmemptr             );
void  YAC_CALL Matrix4f___setG      (void *, yacmemptr             );
void  YAC_CALL Matrix4f___setH      (void *, yacmemptr             );
void  YAC_CALL Matrix4f___setI      (void *, yacmemptr             );
void  YAC_CALL Matrix4f___setJ      (void *, yacmemptr             );
void  YAC_CALL Matrix4f___setK      (void *, yacmemptr             );
void  YAC_CALL Matrix4f___setL      (void *, yacmemptr             );
void  YAC_CALL Matrix4f___setM      (void *, yacmemptr             );
void  YAC_CALL Matrix4f___setN      (void *, yacmemptr             );
void  YAC_CALL Matrix4f___setO      (void *, yacmemptr             );
void  YAC_CALL Matrix4f___setP      (void *, yacmemptr             );
sF32  YAC_CALL Matrix4f___getA      (void *                        );
sF32  YAC_CALL Matrix4f___getB      (void *                        );
sF32  YAC_CALL Matrix4f___getC      (void *                        );
sF32  YAC_CALL Matrix4f___getD      (void *                        );
sF32  YAC_CALL Matrix4f___getE      (void *                        );
sF32  YAC_CALL Matrix4f___getF      (void *                        );
sF32  YAC_CALL Matrix4f___getG      (void *                        );
sF32  YAC_CALL Matrix4f___getH      (void *                        );
sF32  YAC_CALL Matrix4f___getI      (void *                        );
sF32  YAC_CALL Matrix4f___getJ      (void *                        );
sF32  YAC_CALL Matrix4f___getK      (void *                        );
sF32  YAC_CALL Matrix4f___getL      (void *                        );
sF32  YAC_CALL Matrix4f___getM      (void *                        );
sF32  YAC_CALL Matrix4f___getN      (void *                        );
sF32  YAC_CALL Matrix4f___getO      (void *                        );
sF32  YAC_CALL Matrix4f___getP      (void *                        );
void  YAC_CALL Matrix4f___getString (void *, YAC_Value *           );
void  YAC_CALL Matrix4f___setRow    (void *, yacmemptr             );
void  YAC_CALL Matrix4f___getRow_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___getRow_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix4f___setCol    (void *, yacmemptr             );
void  YAC_CALL Matrix4f___getCol_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___getCol_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix4f___init      (void *, yacmemptr             );
void  YAC_CALL Matrix4f___initRowMajor(void *, yacmemptr           );
void  YAC_CALL Matrix4f___initColumnMajor(void *, yacmemptr        );
void  YAC_CALL Matrix4f___initTranspose(void *, yacmemptr          );
void  YAC_CALL Matrix4f___initRowf  (void *, yacmemptr             );
void  YAC_CALL Matrix4f___initRowv  (void *, yacmemptr             );
void  YAC_CALL Matrix4f___initColf  (void *, yacmemptr             );
void  YAC_CALL Matrix4f___initColv  (void *, yacmemptr             );
void  YAC_CALL Matrix4f___initEulerXYX(void *, yacmemptr           );
void  YAC_CALL Matrix4f___initEulerXZX(void *, yacmemptr           );
void  YAC_CALL Matrix4f___initEulerYXY(void *, yacmemptr           );
void  YAC_CALL Matrix4f___initEulerYZY(void *, yacmemptr           );
void  YAC_CALL Matrix4f___initEulerZXZ(void *, yacmemptr           );
void  YAC_CALL Matrix4f___initEulerZYZ(void *, yacmemptr           );
void  YAC_CALL Matrix4f___initEulerXYZ(void *, yacmemptr           );
void  YAC_CALL Matrix4f___initEulerXZY(void *, yacmemptr           );
void  YAC_CALL Matrix4f___initEulerYXZ(void *, yacmemptr           );
void  YAC_CALL Matrix4f___initEulerYZX(void *, yacmemptr           );
void  YAC_CALL Matrix4f___initEulerZXY(void *, yacmemptr           );
void  YAC_CALL Matrix4f___initEulerZYX(void *, yacmemptr           );
void  YAC_CALL Matrix4f___initIdentity(void *                      );
sSI   YAC_CALL Matrix4f___isIdentity(void *                        );
void  YAC_CALL Matrix4f___initTranslatef(void *, yacmemptr         );
void  YAC_CALL Matrix4f___initTranslatev(void *, yacmemptr         );
void  YAC_CALL Matrix4f___initScalef(void *, yacmemptr             );
void  YAC_CALL Matrix4f___initScalev(void *, yacmemptr             );
void  YAC_CALL Matrix4f___initSkewXf(void *, yacmemptr             );
void  YAC_CALL Matrix4f___initSkewYf(void *, yacmemptr             );
void  YAC_CALL Matrix4f___initRotatef(void *, yacmemptr            );
void  YAC_CALL Matrix4f___initRotatev(void *, yacmemptr            );
void  YAC_CALL Matrix4f___initRotate(void *, yacmemptr             );
void  YAC_CALL Matrix4f___initOrtho (void *, yacmemptr             );
void  YAC_CALL Matrix4f___initFrustum(void *, yacmemptr            );
void  YAC_CALL Matrix4f___initFrustumFov(void *, yacmemptr         );
void  YAC_CALL Matrix4f___initFrustumFovXY(void *, yacmemptr       );
void  YAC_CALL Matrix4f___initPerspective(void *, yacmemptr        );
void  YAC_CALL Matrix4f___initLookAt(void *, yacmemptr             );
void  YAC_CALL Matrix4f___add_YAC_RSELF(void *, yacmemptr          );
void  YAC_CALL Matrix4f___add_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___add_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL Matrix4f___sub_YAC_RSELF(void *, yacmemptr          );
void  YAC_CALL Matrix4f___sub_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___sub_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL Matrix4f___mulf_YAC_RSELF(void *, yacmemptr         );
void  YAC_CALL Matrix4f___mulf_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___mulf_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Matrix4f___mul_YAC_RSELF(void *, yacmemptr          );
void  YAC_CALL Matrix4f___mul_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___mul_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL Matrix4f___mulRev_YAC_RSELF(void *, yacmemptr       );
void  YAC_CALL Matrix4f___mulRev_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___mulRev_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix4f___mulv_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___mulv_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Matrix4f___mulvRev_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___mulvRev_YAC_RARG(void *, yacmemptr       );
sF32  YAC_CALL Matrix4f___getAbs    (void *                        );
sF32  YAC_CALL Matrix4f___getAbsSqr (void *                        );
void  YAC_CALL Matrix4f___unit_YAC_RSELF(void *                    );
void  YAC_CALL Matrix4f___unit_YAC_RVAL(void *, YAC_Value *        );
void  YAC_CALL Matrix4f___unit_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL Matrix4f___unitScale_YAC_RSELF(void *, yacmemptr    );
void  YAC_CALL Matrix4f___unitScale_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___unitScale_YAC_RARG(void *, yacmemptr     );
sF32  YAC_CALL Matrix4f___det       (void *                        );
void  YAC_CALL Matrix4f___invert_YAC_RSELF(void *                  );
void  YAC_CALL Matrix4f___invert_YAC_RVAL(void *, YAC_Value *      );
void  YAC_CALL Matrix4f___invert_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix4f___transpose_YAC_RSELF(void *               );
void  YAC_CALL Matrix4f___transpose_YAC_RVAL(void *, YAC_Value *   );
void  YAC_CALL Matrix4f___transpose_YAC_RARG(void *, yacmemptr     );
void  YAC_CALL Matrix4f___getQuaternionf_YAC_RVAL(void *, YAC_Value *);
void  YAC_CALL Matrix4f___getQuaternionf_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildPerspectiveMatrix4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildPerspectiveMatrix4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildLookAtMatrix4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildLookAtMatrix4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildRotateMatrix4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildRotateMatrix4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildTranslateMatrix4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildTranslateMatrix4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildScaleMatrix4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildScaleMatrix4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildEulerXZX4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildEulerXZX4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildEulerXYX4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildEulerXYX4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildEulerYXY4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildEulerYXY4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildEulerYZY4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildEulerYZY4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildEulerZYZ4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildEulerZYZ4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildEulerZXZ4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildEulerZXZ4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildEulerXZY4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildEulerXZY4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildEulerXYZ4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildEulerXYZ4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildEulerYXZ4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildEulerYXZ4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildEulerYZX4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildEulerYZX4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildEulerZYX4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildEulerZYX4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___BuildEulerZXY4f_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___BuildEulerZXY4f_YAC_RARG(void *, yacmemptr);
void  YAC_CALL Matrix4f___translatef_YAC_RSELF(void *, yacmemptr   );
void  YAC_CALL Matrix4f___translatef_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___translatef_YAC_RARG(void *, yacmemptr    );
void  YAC_CALL Matrix4f___translatev_YAC_RSELF(void *, yacmemptr   );
void  YAC_CALL Matrix4f___translatev_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___translatev_YAC_RARG(void *, yacmemptr    );
void  YAC_CALL Matrix4f___scalef_YAC_RSELF(void *, yacmemptr       );
void  YAC_CALL Matrix4f___scalef_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___scalef_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix4f___scalev_YAC_RSELF(void *, yacmemptr       );
void  YAC_CALL Matrix4f___scalev_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___scalev_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix4f___rotatef_YAC_RSELF(void *, yacmemptr      );
void  YAC_CALL Matrix4f___rotatef_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___rotatef_YAC_RARG(void *, yacmemptr       );
void  YAC_CALL Matrix4f___rotatev_YAC_RSELF(void *, yacmemptr      );
void  YAC_CALL Matrix4f___rotatev_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___rotatev_YAC_RARG(void *, yacmemptr       );
void  YAC_CALL Matrix4f___rotate_YAC_RSELF(void *, yacmemptr       );
void  YAC_CALL Matrix4f___rotate_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___rotate_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix4f___ortho_YAC_RSELF(void *, yacmemptr        );
void  YAC_CALL Matrix4f___ortho_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___ortho_YAC_RARG(void *, yacmemptr         );
void  YAC_CALL Matrix4f___frustum_YAC_RSELF(void *, yacmemptr      );
void  YAC_CALL Matrix4f___frustum_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___frustum_YAC_RARG(void *, yacmemptr       );
void  YAC_CALL Matrix4f___frustumFovXY_YAC_RSELF(void *, yacmemptr );
void  YAC_CALL Matrix4f___frustumFovXY_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___frustumFovXY_YAC_RARG(void *, yacmemptr  );
void  YAC_CALL Matrix4f___perspective_YAC_RSELF(void *, yacmemptr  );
void  YAC_CALL Matrix4f___perspective_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___perspective_YAC_RARG(void *, yacmemptr   );
void  YAC_CALL Matrix4f___lookAt_YAC_RSELF(void *, yacmemptr       );
void  YAC_CALL Matrix4f___lookAt_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Matrix4f___lookAt_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL Matrix4f___extractPlanes(void *, yacmemptr          );
#endif // YAC_NO_HOST

// ------------------ YAC class "_Matrix4f" reflection map (implementation) ------------------
sUI          YAC_VCALL _Matrix4f::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Matrix4f::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Matrix4f::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Matrix4f::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Matrix4f::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Matrix4f::yacMethodGetNum                  (void) {return 187;}
const char **YAC_VCALL _Matrix4f::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "New", "set", "get", "setA", "setB", "setC", "setD", "setE", "setF", "setG", "setH", "setI", "setJ", "setK", "setL", "setM", "setN", "setO", "setP", "getA", "getB", "getC", "getD", "getE", "getF", "getG", "getH", "getI", "getJ", "getK", "getL", "getM", "getN", "getO", "getP", "getString", "setRow", "getRow_YAC_RVAL", "getRow_YAC_RARG", "setCol", "getCol_YAC_RVAL", "getCol_YAC_RARG", "init", "initRowMajor", "initColumnMajor", "initTranspose", "initRowf", "initRowv", "initColf", "initColv", "initEulerXYX", "initEulerXZX", "initEulerYXY", "initEulerYZY", "initEulerZXZ", "initEulerZYZ", "initEulerXYZ", "initEulerXZY", "initEulerYXZ", "initEulerYZX", "initEulerZXY", "initEulerZYX", "initIdentity", "isIdentity", "initTranslatef", "initTranslatev", "initScalef", "initScalev", "initSkewXf", "initSkewYf", "initRotatef", "initRotatev", "initRotate", "initOrtho", "initFrustum", "initFrustumFov", "initFrustumFovXY", "initPerspective", "initLookAt", "add_YAC_RSELF", "add_YAC_RVAL", "add_YAC_RARG", "sub_YAC_RSELF", "sub_YAC_RVAL", "sub_YAC_RARG", "mulf_YAC_RSELF", "mulf_YAC_RVAL", "mulf_YAC_RARG", "mul_YAC_RSELF", "mul_YAC_RVAL", "mul_YAC_RARG", "mulRev_YAC_RSELF", "mulRev_YAC_RVAL", "mulRev_YAC_RARG", "mulv_YAC_RVAL", "mulv_YAC_RARG", "mulvRev_YAC_RVAL", "mulvRev_YAC_RARG", "getAbs", "getAbsSqr", "unit_YAC_RSELF", "unit_YAC_RVAL", "unit_YAC_RARG", "unitScale_YAC_RSELF", "unitScale_YAC_RVAL", "unitScale_YAC_RARG", "det", "invert_YAC_RSELF", "invert_YAC_RVAL", "invert_YAC_RARG", "transpose_YAC_RSELF", "transpose_YAC_RVAL", "transpose_YAC_RARG", "getQuaternionf_YAC_RVAL", "getQuaternionf_YAC_RARG", "BuildPerspectiveMatrix4f_YAC_RVAL", "BuildPerspectiveMatrix4f_YAC_RARG", "BuildLookAtMatrix4f_YAC_RVAL", "BuildLookAtMatrix4f_YAC_RARG", "BuildRotateMatrix4f_YAC_RVAL", "BuildRotateMatrix4f_YAC_RARG", "BuildTranslateMatrix4f_YAC_RVAL", "BuildTranslateMatrix4f_YAC_RARG", "BuildScaleMatrix4f_YAC_RVAL", "BuildScaleMatrix4f_YAC_RARG", "BuildEulerXZX4f_YAC_RVAL", "BuildEulerXZX4f_YAC_RARG", "BuildEulerXYX4f_YAC_RVAL", "BuildEulerXYX4f_YAC_RARG", "BuildEulerYXY4f_YAC_RVAL", "BuildEulerYXY4f_YAC_RARG", "BuildEulerYZY4f_YAC_RVAL", "BuildEulerYZY4f_YAC_RARG", "BuildEulerZYZ4f_YAC_RVAL", "BuildEulerZYZ4f_YAC_RARG", "BuildEulerZXZ4f_YAC_RVAL", "BuildEulerZXZ4f_YAC_RARG", "BuildEulerXZY4f_YAC_RVAL", "BuildEulerXZY4f_YAC_RARG", "BuildEulerXYZ4f_YAC_RVAL", "BuildEulerXYZ4f_YAC_RARG", "BuildEulerYXZ4f_YAC_RVAL", "BuildEulerYXZ4f_YAC_RARG", "BuildEulerYZX4f_YAC_RVAL", "BuildEulerYZX4f_YAC_RARG", "BuildEulerZYX4f_YAC_RVAL", "BuildEulerZYX4f_YAC_RARG", "BuildEulerZXY4f_YAC_RVAL", "BuildEulerZXY4f_YAC_RARG", "translatef_YAC_RSELF", "translatef_YAC_RVAL", "translatef_YAC_RARG", "translatev_YAC_RSELF", "translatev_YAC_RVAL", "translatev_YAC_RARG", "scalef_YAC_RSELF", "scalef_YAC_RVAL", "scalef_YAC_RARG", "scalev_YAC_RSELF", "scalev_YAC_RVAL", "scalev_YAC_RARG", "rotatef_YAC_RSELF", "rotatef_YAC_RVAL", "rotatef_YAC_RARG", "rotatev_YAC_RSELF", "rotatev_YAC_RVAL", "rotatev_YAC_RARG", "rotate_YAC_RSELF", "rotate_YAC_RVAL", "rotate_YAC_RARG", "ortho_YAC_RSELF", "ortho_YAC_RVAL", "ortho_YAC_RARG", "frustum_YAC_RSELF", "frustum_YAC_RVAL", "frustum_YAC_RARG", "frustumFovXY_YAC_RSELF", "frustumFovXY_YAC_RVAL", "frustumFovXY_YAC_RARG", "perspective_YAC_RSELF", "perspective_YAC_RVAL", "perspective_YAC_RARG", "lookAt_YAC_RSELF", "lookAt_YAC_RVAL", "lookAt_YAC_RARG", "extractPlanes"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Matrix4f::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 2, 1, 2, 16, 16, 16, 16, 5, 2, 5, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 1, 3, 1, 1, 1, 3, 1, 2, 6, 6, 4, 9, 4, 3, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 0, 0, 0, 0, 1, 1, 1, 2, 0, 0, 0, 1, 0, 0, 1, 0, 1, 4, 5, 3, 4, 2, 3, 1, 2, 1, 2, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 3, 4, 1, 1, 2, 3, 3, 4, 1, 1, 2, 3, 3, 4, 1, 1, 2, 2, 2, 3, 6, 6, 7, 6, 6, 7, 9, 9, 10, 4, 4, 5, 3, 3, 4, 6}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _Matrix4f::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={3,};static const sUI rt2[]={1, 1, 2,};static const sUI rt3[]={1, 1,};static const sUI rt4[]={2,};static const sUI rt5[]={2,};static const sUI rt6[]={2,};static const sUI rt7[]={2,};static const sUI rt8[]={2,};static const sUI rt9[]={2,};static const sUI rt10[]={2,};static const sUI rt11[]={2,};static const sUI rt12[]={2,};static const sUI rt13[]={2,};static const sUI rt14[]={2,};static const sUI rt15[]={2,};static const sUI rt16[]={2,};static const sUI rt17[]={2,};static const sUI rt18[]={2,};static const sUI rt19[]={2,};static const sUI rt20[]={0,};static const sUI rt21[]={0,};static const sUI rt22[]={0,};static const sUI rt23[]={0,};static const sUI rt24[]={0,};static const sUI rt25[]={0,};static const sUI rt26[]={0,};static const sUI rt27[]={0,};static const sUI rt28[]={0,};static const sUI rt29[]={0,};static const sUI rt30[]={0,};static const sUI rt31[]={0,};static const sUI rt32[]={0,};static const sUI rt33[]={0,};static const sUI rt34[]={0,};static const sUI rt35[]={0,};static const sUI rt36[]={0,};static const sUI rt37[]={1, 3,};static const sUI rt38[]={1,};static const sUI rt39[]={1, 3,};static const sUI rt40[]={1, 3,};static const sUI rt41[]={1,};static const sUI rt42[]={1, 3,};static const sUI rt43[]={2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,};static const sUI rt44[]={2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,};static const sUI rt45[]={2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,};static const sUI rt46[]={2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,};static const sUI rt47[]={1, 2, 2, 2, 2,};static const sUI rt48[]={1, 3,};static const sUI rt49[]={1, 2, 2, 2, 2,};static const sUI rt50[]={1, 3,};static const sUI rt51[]={2, 2, 2,};static const sUI rt52[]={2, 2, 2,};static const sUI rt53[]={2, 2, 2,};static const sUI rt54[]={2, 2, 2,};static const sUI rt55[]={2, 2, 2,};static const sUI rt56[]={2, 2, 2,};static const sUI rt57[]={2, 2, 2,};static const sUI rt58[]={2, 2, 2,};static const sUI rt59[]={2, 2, 2,};static const sUI rt60[]={2, 2, 2,};static const sUI rt61[]={2, 2, 2,};static const sUI rt62[]={2, 2, 2,};static const sUI rt63[]={0,};static const sUI rt64[]={0,};static const sUI rt65[]={2, 2, 2,};static const sUI rt66[]={3,};static const sUI rt67[]={2, 2, 2,};static const sUI rt68[]={3,};static const sUI rt69[]={2,};static const sUI rt70[]={2,};static const sUI rt71[]={2, 2, 2,};static const sUI rt72[]={3,};static const sUI rt73[]={2, 3,};static const sUI rt74[]={2, 2, 2, 2, 2, 2,};static const sUI rt75[]={2, 2, 2, 2, 2, 2,};static const sUI rt76[]={2, 2, 2, 2,};static const sUI rt77[]={2, 2, 2, 2, 2, 2, 2, 2, 2,};static const sUI rt78[]={2, 2, 2, 2,};static const sUI rt79[]={3, 3, 3,};static const sUI rt80[]={3,};static const sUI rt81[]={3,};static const sUI rt82[]={3, 3,};static const sUI rt83[]={3,};static const sUI rt84[]={3,};static const sUI rt85[]={3, 3,};static const sUI rt86[]={2,};static const sUI rt87[]={2,};static const sUI rt88[]={2, 3,};static const sUI rt89[]={3,};static const sUI rt90[]={3,};static const sUI rt91[]={3, 3,};static const sUI rt92[]={3,};static const sUI rt93[]={3,};static const sUI rt94[]={3, 3,};static const sUI rt95[]={3,};static const sUI rt96[]={3, 3,};static const sUI rt97[]={3,};static const sUI rt98[]={3, 3,};static const sUI rt99[]={0,};static const sUI rt100[]={0,};static const sUI rt101[]={0,};static const sUI rt102[]={0,};static const sUI rt103[]={3,};static const sUI rt104[]={2,};static const sUI rt105[]={2,};static const sUI rt106[]={2, 3,};static const sUI rt107[]={0,};static const sUI rt108[]={0,};static const sUI rt109[]={0,};static const sUI rt110[]={3,};static const sUI rt111[]={0,};static const sUI rt112[]={0,};static const sUI rt113[]={3,};static const sUI rt114[]={0,};static const sUI rt115[]={3,};static const sUI rt116[]={2, 2, 2, 2,};static const sUI rt117[]={2, 2, 2, 2, 3,};static const sUI rt118[]={3, 3, 3,};static const sUI rt119[]={3, 3, 3, 3,};static const sUI rt120[]={2, 3,};static const sUI rt121[]={2, 3, 3,};static const sUI rt122[]={3,};static const sUI rt123[]={3, 3,};static const sUI rt124[]={3,};static const sUI rt125[]={3, 3,};static const sUI rt126[]={2, 2, 2,};static const sUI rt127[]={2, 2, 2, 3,};static const sUI rt128[]={2, 2, 2,};static const sUI rt129[]={2, 2, 2, 3,};static const sUI rt130[]={2, 2, 2,};static const sUI rt131[]={2, 2, 2, 3,};static const sUI rt132[]={2, 2, 2,};static const sUI rt133[]={2, 2, 2, 3,};static const sUI rt134[]={2, 2, 2,};static const sUI rt135[]={2, 2, 2, 3,};static const sUI rt136[]={2, 2, 2,};static const sUI rt137[]={2, 2, 2, 3,};static const sUI rt138[]={2, 2, 2,};static const sUI rt139[]={2, 2, 2, 3,};static const sUI rt140[]={2, 2, 2,};static const sUI rt141[]={2, 2, 2, 3,};static const sUI rt142[]={2, 2, 2,};static const sUI rt143[]={2, 2, 2, 3,};static const sUI rt144[]={2, 2, 2,};static const sUI rt145[]={2, 2, 2, 3,};static const sUI rt146[]={2, 2, 2,};static const sUI rt147[]={2, 2, 2, 3,};static const sUI rt148[]={2, 2, 2,};static const sUI rt149[]={2, 2, 2, 3,};static const sUI rt150[]={2, 2, 2,};static const sUI rt151[]={2, 2, 2,};static const sUI rt152[]={2, 2, 2, 3,};static const sUI rt153[]={3,};static const sUI rt154[]={3,};static const sUI rt155[]={3, 3,};static const sUI rt156[]={2, 2, 2,};static const sUI rt157[]={2, 2, 2,};static const sUI rt158[]={2, 2, 2, 3,};static const sUI rt159[]={3,};static const sUI rt160[]={3,};static const sUI rt161[]={3, 3,};static const sUI rt162[]={2, 2, 2,};static const sUI rt163[]={2, 2, 2,};static const sUI rt164[]={2, 2, 2, 3,};static const sUI rt165[]={3,};static const sUI rt166[]={3,};static const sUI rt167[]={3, 3,};static const sUI rt168[]={2, 3,};static const sUI rt169[]={2, 3,};static const sUI rt170[]={2, 3, 3,};static const sUI rt171[]={2, 2, 2, 2, 2, 2,};static const sUI rt172[]={2, 2, 2, 2, 2, 2,};static const sUI rt173[]={2, 2, 2, 2, 2, 2, 3,};static const sUI rt174[]={2, 2, 2, 2, 2, 2,};static const sUI rt175[]={2, 2, 2, 2, 2, 2,};static const sUI rt176[]={2, 2, 2, 2, 2, 2, 3,};static const sUI rt177[]={2, 2, 2, 2, 2, 2, 2, 2, 2,};static const sUI rt178[]={2, 2, 2, 2, 2, 2, 2, 2, 2,};static const sUI rt179[]={2, 2, 2, 2, 2, 2, 2, 2, 2, 3,};static const sUI rt180[]={2, 2, 2, 2,};static const sUI rt181[]={2, 2, 2, 2,};static const sUI rt182[]={2, 2, 2, 2, 3,};static const sUI rt183[]={3, 3, 3,};static const sUI rt184[]={3, 3, 3,};static const sUI rt185[]={3, 3, 3, 3,};static const sUI rt186[]={3, 3, 3, 3, 3, 3,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40, rt41, rt42, rt43, rt44, rt45, rt46, rt47, rt48, rt49, rt50, rt51, rt52, rt53, rt54, rt55, rt56, rt57, rt58, rt59, rt60, rt61, rt62, rt63, rt64, rt65, rt66, rt67, rt68, rt69, rt70, rt71, rt72, rt73, rt74, rt75, rt76, rt77, rt78, rt79, rt80, rt81, rt82, rt83, rt84, rt85, rt86, rt87, rt88, rt89, rt90, rt91, rt92, rt93, rt94, rt95, rt96, rt97, rt98, rt99, rt100, rt101, rt102, rt103, rt104, rt105, rt106, rt107, rt108, rt109, rt110, rt111, rt112, rt113, rt114, rt115, rt116, rt117, rt118, rt119, rt120, rt121, rt122, rt123, rt124, rt125, rt126, rt127, rt128, rt129, rt130, rt131, rt132, rt133, rt134, rt135, rt136, rt137, rt138, rt139, rt140, rt141, rt142, rt143, rt144, rt145, rt146, rt147, rt148, rt149, rt150, rt151, rt152, rt153, rt154, rt155, rt156, rt157, rt158, rt159, rt160, rt161, rt162, rt163, rt164, rt165, rt166, rt167, rt168, rt169, rt170, rt171, rt172, rt173, rt174, rt175, rt176, rt177, rt178, rt179, rt180, rt181, rt182, rt183, rt184, rt185, rt186}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _Matrix4f::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs3[]={(const char*)0, (const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0,};static const char *rs26[]={(const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0,};static const char *rs31[]={(const char*)0,};static const char *rs32[]={(const char*)0,};static const char *rs33[]={(const char*)0,};static const char *rs34[]={(const char*)0,};static const char *rs35[]={(const char*)0,};static const char *rs36[]={(const char*)0,};static const char *rs37[]={(const char*)0, (const char*)0,};static const char *rs38[]={(const char*)0,};static const char *rs39[]={(const char*)0, (const char*)0,};static const char *rs40[]={(const char*)0, (const char*)0,};static const char *rs41[]={(const char*)0,};static const char *rs42[]={(const char*)0, (const char*)0,};static const char *rs43[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs44[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs45[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs46[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs47[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs48[]={(const char*)0, (const char*)0,};static const char *rs49[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs50[]={(const char*)0, (const char*)0,};static const char *rs51[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs52[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs53[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs54[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs55[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs56[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs57[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs58[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs59[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs60[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs61[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs62[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs63[]={(const char*)0,};static const char *rs64[]={(const char*)0,};static const char *rs65[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs66[]={(const char*)0,};static const char *rs67[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs68[]={(const char*)0,};static const char *rs69[]={(const char*)0,};static const char *rs70[]={(const char*)0,};static const char *rs71[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs72[]={(const char*)0,};static const char *rs73[]={(const char*)0, (const char*)0,};static const char *rs74[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs75[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs76[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs77[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs78[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs79[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs80[]={(const char*)0,};static const char *rs81[]={(const char*)0,};static const char *rs82[]={(const char*)0, (const char*)0,};static const char *rs83[]={(const char*)0,};static const char *rs84[]={(const char*)0,};static const char *rs85[]={(const char*)0, (const char*)0,};static const char *rs86[]={(const char*)0,};static const char *rs87[]={(const char*)0,};static const char *rs88[]={(const char*)0, (const char*)0,};static const char *rs89[]={(const char*)0,};static const char *rs90[]={(const char*)0,};static const char *rs91[]={(const char*)0, (const char*)0,};static const char *rs92[]={(const char*)0,};static const char *rs93[]={(const char*)0,};static const char *rs94[]={(const char*)0, (const char*)0,};static const char *rs95[]={(const char*)0,};static const char *rs96[]={(const char*)0, (const char*)0,};static const char *rs97[]={(const char*)0,};static const char *rs98[]={(const char*)0, (const char*)0,};static const char *rs99[]={(const char*)0,};static const char *rs100[]={(const char*)0,};static const char *rs101[]={(const char*)0,};static const char *rs102[]={(const char*)0,};static const char *rs103[]={(const char*)0,};static const char *rs104[]={(const char*)0,};static const char *rs105[]={(const char*)0,};static const char *rs106[]={(const char*)0, (const char*)0,};static const char *rs107[]={(const char*)0,};static const char *rs108[]={(const char*)0,};static const char *rs109[]={(const char*)0,};static const char *rs110[]={(const char*)0,};static const char *rs111[]={(const char*)0,};static const char *rs112[]={(const char*)0,};static const char *rs113[]={(const char*)0,};static const char *rs114[]={(const char*)0,};static const char *rs115[]={(const char*)0,};static const char *rs116[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs117[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs118[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs119[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs120[]={(const char*)0, (const char*)0,};static const char *rs121[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs122[]={(const char*)0,};static const char *rs123[]={(const char*)0, (const char*)0,};static const char *rs124[]={(const char*)0,};static const char *rs125[]={(const char*)0, (const char*)0,};static const char *rs126[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs127[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs128[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs129[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs130[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs131[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs132[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs133[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs134[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs135[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs136[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs137[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs138[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs139[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs140[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs141[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs142[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs143[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs144[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs145[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs146[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs147[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs148[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs149[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs150[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs151[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs152[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs153[]={(const char*)0,};static const char *rs154[]={(const char*)0,};static const char *rs155[]={(const char*)0, (const char*)0,};static const char *rs156[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs157[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs158[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs159[]={(const char*)0,};static const char *rs160[]={(const char*)0,};static const char *rs161[]={(const char*)0, (const char*)0,};static const char *rs162[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs163[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs164[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs165[]={(const char*)0,};static const char *rs166[]={(const char*)0,};static const char *rs167[]={(const char*)0, (const char*)0,};static const char *rs168[]={(const char*)0, (const char*)0,};static const char *rs169[]={(const char*)0, (const char*)0,};static const char *rs170[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs171[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs172[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs173[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs174[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs175[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs176[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs177[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs178[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs179[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs180[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs181[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs182[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs183[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs184[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs185[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs186[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40, rs41, rs42, rs43, rs44, rs45, rs46, rs47, rs48, rs49, rs50, rs51, rs52, rs53, rs54, rs55, rs56, rs57, rs58, rs59, rs60, rs61, rs62, rs63, rs64, rs65, rs66, rs67, rs68, rs69, rs70, rs71, rs72, rs73, rs74, rs75, rs76, rs77, rs78, rs79, rs80, rs81, rs82, rs83, rs84, rs85, rs86, rs87, rs88, rs89, rs90, rs91, rs92, rs93, rs94, rs95, rs96, rs97, rs98, rs99, rs100, rs101, rs102, rs103, rs104, rs105, rs106, rs107, rs108, rs109, rs110, rs111, rs112, rs113, rs114, rs115, rs116, rs117, rs118, rs119, rs120, rs121, rs122, rs123, rs124, rs125, rs126, rs127, rs128, rs129, rs130, rs131, rs132, rs133, rs134, rs135, rs136, rs137, rs138, rs139, rs140, rs141, rs142, rs143, rs144, rs145, rs146, rs147, rs148, rs149, rs150, rs151, rs152, rs153, rs154, rs155, rs156, rs157, rs158, rs159, rs160, rs161, rs162, rs163, rs164, rs165, rs166, rs167, rs168, rs169, rs170, rs171, rs172, rs173, rs174, rs175, rs176, rs177, rs178, rs179, rs180, rs181, rs182, rs183, rs184, rs185, rs186}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Matrix4f::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 4, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 0, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 4, 0, 4, 0, 2, 2, 0, 4, 0, 0, 4, 0, 2, 0, 4, 0, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _Matrix4f::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _Matrix4f::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)Matrix4f___New, (void*)Matrix4f___set, (void*)Matrix4f___get, (void*)Matrix4f___setA, (void*)Matrix4f___setB, (void*)Matrix4f___setC, (void*)Matrix4f___setD, (void*)Matrix4f___setE, (void*)Matrix4f___setF, (void*)Matrix4f___setG, (void*)Matrix4f___setH, (void*)Matrix4f___setI, (void*)Matrix4f___setJ, (void*)Matrix4f___setK, (void*)Matrix4f___setL, (void*)Matrix4f___setM, (void*)Matrix4f___setN, (void*)Matrix4f___setO, (void*)Matrix4f___setP, (void*)Matrix4f___getA, (void*)Matrix4f___getB, (void*)Matrix4f___getC, (void*)Matrix4f___getD, (void*)Matrix4f___getE, (void*)Matrix4f___getF, (void*)Matrix4f___getG, (void*)Matrix4f___getH, (void*)Matrix4f___getI, (void*)Matrix4f___getJ, (void*)Matrix4f___getK, (void*)Matrix4f___getL, (void*)Matrix4f___getM, (void*)Matrix4f___getN, (void*)Matrix4f___getO, (void*)Matrix4f___getP, (void*)Matrix4f___getString, (void*)Matrix4f___setRow, (void*)Matrix4f___getRow_YAC_RVAL, (void*)Matrix4f___getRow_YAC_RARG, (void*)Matrix4f___setCol, (void*)Matrix4f___getCol_YAC_RVAL, (void*)Matrix4f___getCol_YAC_RARG, (void*)Matrix4f___init, (void*)Matrix4f___initRowMajor, (void*)Matrix4f___initColumnMajor, (void*)Matrix4f___initTranspose, (void*)Matrix4f___initRowf, (void*)Matrix4f___initRowv, (void*)Matrix4f___initColf, (void*)Matrix4f___initColv, (void*)Matrix4f___initEulerXYX, (void*)Matrix4f___initEulerXZX, (void*)Matrix4f___initEulerYXY, (void*)Matrix4f___initEulerYZY, (void*)Matrix4f___initEulerZXZ, (void*)Matrix4f___initEulerZYZ, (void*)Matrix4f___initEulerXYZ, (void*)Matrix4f___initEulerXZY, (void*)Matrix4f___initEulerYXZ, (void*)Matrix4f___initEulerYZX, (void*)Matrix4f___initEulerZXY, (void*)Matrix4f___initEulerZYX, (void*)Matrix4f___initIdentity, (void*)Matrix4f___isIdentity, (void*)Matrix4f___initTranslatef, (void*)Matrix4f___initTranslatev, (void*)Matrix4f___initScalef, (void*)Matrix4f___initScalev, (void*)Matrix4f___initSkewXf, (void*)Matrix4f___initSkewYf, (void*)Matrix4f___initRotatef, (void*)Matrix4f___initRotatev, (void*)Matrix4f___initRotate, (void*)Matrix4f___initOrtho, (void*)Matrix4f___initFrustum, (void*)Matrix4f___initFrustumFov, (void*)Matrix4f___initFrustumFovXY, (void*)Matrix4f___initPerspective, (void*)Matrix4f___initLookAt, (void*)Matrix4f___add_YAC_RSELF, (void*)Matrix4f___add_YAC_RVAL, (void*)Matrix4f___add_YAC_RARG, (void*)Matrix4f___sub_YAC_RSELF, (void*)Matrix4f___sub_YAC_RVAL, (void*)Matrix4f___sub_YAC_RARG, (void*)Matrix4f___mulf_YAC_RSELF, (void*)Matrix4f___mulf_YAC_RVAL, (void*)Matrix4f___mulf_YAC_RARG, (void*)Matrix4f___mul_YAC_RSELF, (void*)Matrix4f___mul_YAC_RVAL, (void*)Matrix4f___mul_YAC_RARG, (void*)Matrix4f___mulRev_YAC_RSELF, (void*)Matrix4f___mulRev_YAC_RVAL, (void*)Matrix4f___mulRev_YAC_RARG, (void*)Matrix4f___mulv_YAC_RVAL, (void*)Matrix4f___mulv_YAC_RARG, (void*)Matrix4f___mulvRev_YAC_RVAL, (void*)Matrix4f___mulvRev_YAC_RARG, (void*)Matrix4f___getAbs, (void*)Matrix4f___getAbsSqr, (void*)Matrix4f___unit_YAC_RSELF, (void*)Matrix4f___unit_YAC_RVAL, (void*)Matrix4f___unit_YAC_RARG, (void*)Matrix4f___unitScale_YAC_RSELF, (void*)Matrix4f___unitScale_YAC_RVAL, (void*)Matrix4f___unitScale_YAC_RARG, (void*)Matrix4f___det, (void*)Matrix4f___invert_YAC_RSELF, (void*)Matrix4f___invert_YAC_RVAL, (void*)Matrix4f___invert_YAC_RARG, (void*)Matrix4f___transpose_YAC_RSELF, (void*)Matrix4f___transpose_YAC_RVAL, (void*)Matrix4f___transpose_YAC_RARG, (void*)Matrix4f___getQuaternionf_YAC_RVAL, (void*)Matrix4f___getQuaternionf_YAC_RARG, (void*)Matrix4f___BuildPerspectiveMatrix4f_YAC_RVAL, (void*)Matrix4f___BuildPerspectiveMatrix4f_YAC_RARG, (void*)Matrix4f___BuildLookAtMatrix4f_YAC_RVAL, (void*)Matrix4f___BuildLookAtMatrix4f_YAC_RARG, (void*)Matrix4f___BuildRotateMatrix4f_YAC_RVAL, (void*)Matrix4f___BuildRotateMatrix4f_YAC_RARG, (void*)Matrix4f___BuildTranslateMatrix4f_YAC_RVAL, (void*)Matrix4f___BuildTranslateMatrix4f_YAC_RARG, (void*)Matrix4f___BuildScaleMatrix4f_YAC_RVAL, (void*)Matrix4f___BuildScaleMatrix4f_YAC_RARG, (void*)Matrix4f___BuildEulerXZX4f_YAC_RVAL, (void*)Matrix4f___BuildEulerXZX4f_YAC_RARG, (void*)Matrix4f___BuildEulerXYX4f_YAC_RVAL, (void*)Matrix4f___BuildEulerXYX4f_YAC_RARG, (void*)Matrix4f___BuildEulerYXY4f_YAC_RVAL, (void*)Matrix4f___BuildEulerYXY4f_YAC_RARG, (void*)Matrix4f___BuildEulerYZY4f_YAC_RVAL, (void*)Matrix4f___BuildEulerYZY4f_YAC_RARG, (void*)Matrix4f___BuildEulerZYZ4f_YAC_RVAL, (void*)Matrix4f___BuildEulerZYZ4f_YAC_RARG, (void*)Matrix4f___BuildEulerZXZ4f_YAC_RVAL, (void*)Matrix4f___BuildEulerZXZ4f_YAC_RARG, (void*)Matrix4f___BuildEulerXZY4f_YAC_RVAL, (void*)Matrix4f___BuildEulerXZY4f_YAC_RARG, (void*)Matrix4f___BuildEulerXYZ4f_YAC_RVAL, (void*)Matrix4f___BuildEulerXYZ4f_YAC_RARG, (void*)Matrix4f___BuildEulerYXZ4f_YAC_RVAL, (void*)Matrix4f___BuildEulerYXZ4f_YAC_RARG, (void*)Matrix4f___BuildEulerYZX4f_YAC_RVAL, (void*)Matrix4f___BuildEulerYZX4f_YAC_RARG, (void*)Matrix4f___BuildEulerZYX4f_YAC_RVAL, (void*)Matrix4f___BuildEulerZYX4f_YAC_RARG, (void*)Matrix4f___BuildEulerZXY4f_YAC_RVAL, (void*)Matrix4f___BuildEulerZXY4f_YAC_RARG, (void*)Matrix4f___translatef_YAC_RSELF, (void*)Matrix4f___translatef_YAC_RVAL, (void*)Matrix4f___translatef_YAC_RARG, (void*)Matrix4f___translatev_YAC_RSELF, (void*)Matrix4f___translatev_YAC_RVAL, (void*)Matrix4f___translatev_YAC_RARG, (void*)Matrix4f___scalef_YAC_RSELF, (void*)Matrix4f___scalef_YAC_RVAL, (void*)Matrix4f___scalef_YAC_RARG, (void*)Matrix4f___scalev_YAC_RSELF, (void*)Matrix4f___scalev_YAC_RVAL, (void*)Matrix4f___scalev_YAC_RARG, (void*)Matrix4f___rotatef_YAC_RSELF, (void*)Matrix4f___rotatef_YAC_RVAL, (void*)Matrix4f___rotatef_YAC_RARG, (void*)Matrix4f___rotatev_YAC_RSELF, (void*)Matrix4f___rotatev_YAC_RVAL, (void*)Matrix4f___rotatev_YAC_RARG, (void*)Matrix4f___rotate_YAC_RSELF, (void*)Matrix4f___rotate_YAC_RVAL, (void*)Matrix4f___rotate_YAC_RARG, (void*)Matrix4f___ortho_YAC_RSELF, (void*)Matrix4f___ortho_YAC_RVAL, (void*)Matrix4f___ortho_YAC_RARG, (void*)Matrix4f___frustum_YAC_RSELF, (void*)Matrix4f___frustum_YAC_RVAL, (void*)Matrix4f___frustum_YAC_RARG, (void*)Matrix4f___frustumFovXY_YAC_RSELF, (void*)Matrix4f___frustumFovXY_YAC_RVAL, (void*)Matrix4f___frustumFovXY_YAC_RARG, (void*)Matrix4f___perspective_YAC_RSELF, (void*)Matrix4f___perspective_YAC_RVAL, (void*)Matrix4f___perspective_YAC_RARG, (void*)Matrix4f___lookAt_YAC_RSELF, (void*)Matrix4f___lookAt_YAC_RVAL, (void*)Matrix4f___lookAt_YAC_RARG, (void*)Matrix4f___extractPlanes}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _Matrix4f::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Matrix4f::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Matrix4f::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Matrix4f::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C_POOLED(_Matrix4f, "Matrix4f");

#ifndef YAC_NO_HOST
void  YAC_CALL Matrix4f___New       (void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_New(_args.mem[0].o, _r);}
void  YAC_CALL Matrix4f___set       (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_set(_args.mem[0].si, _args.mem[1].si, _args.mem[2].f32);}
sF32  YAC_CALL Matrix4f___get       (void *_o, yacmemptr _args               ) {return (sF32)((_Matrix4f*)_o)->_get(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL Matrix4f___setA      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setA(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___setB      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setB(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___setC      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setC(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___setD      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setD(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___setE      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setE(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___setF      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setF(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___setG      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setG(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___setH      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setH(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___setI      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setI(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___setJ      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setJ(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___setK      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setK(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___setL      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setL(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___setM      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setM(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___setN      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setN(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___setO      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setO(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___setP      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setP(_args.mem[0].f32);}
sF32  YAC_CALL Matrix4f___getA      (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getA();}
sF32  YAC_CALL Matrix4f___getB      (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getB();}
sF32  YAC_CALL Matrix4f___getC      (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getC();}
sF32  YAC_CALL Matrix4f___getD      (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getD();}
sF32  YAC_CALL Matrix4f___getE      (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getE();}
sF32  YAC_CALL Matrix4f___getF      (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getF();}
sF32  YAC_CALL Matrix4f___getG      (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getG();}
sF32  YAC_CALL Matrix4f___getH      (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getH();}
sF32  YAC_CALL Matrix4f___getI      (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getI();}
sF32  YAC_CALL Matrix4f___getJ      (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getJ();}
sF32  YAC_CALL Matrix4f___getK      (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getK();}
sF32  YAC_CALL Matrix4f___getL      (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getL();}
sF32  YAC_CALL Matrix4f___getM      (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getM();}
sF32  YAC_CALL Matrix4f___getN      (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getN();}
sF32  YAC_CALL Matrix4f___getO      (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getO();}
sF32  YAC_CALL Matrix4f___getP      (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getP();}
void  YAC_CALL Matrix4f___getString (void *_o, YAC_Value *_r                 ) {((_Matrix4f*)_o)->_getString(_r);}
void  YAC_CALL Matrix4f___setRow    (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setRow(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix4f___getRow_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_getRow_YAC_RVAL(_args.mem[0].si, _r);}
void  YAC_CALL Matrix4f___getRow_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix4f*)_o)->_getRow_YAC_RARG(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix4f___setCol    (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_setCol(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix4f___getCol_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_getCol_YAC_RVAL(_args.mem[0].si, _r);}
void  YAC_CALL Matrix4f___getCol_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix4f*)_o)->_getCol_YAC_RARG(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix4f___init      (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_init(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32, _args.mem[9].f32, _args.mem[10].f32, _args.mem[11].f32, _args.mem[12].f32, _args.mem[13].f32, _args.mem[14].f32, _args.mem[15].f32);}
void  YAC_CALL Matrix4f___initRowMajor(void *_o, yacmemptr _args             ) {((_Matrix4f*)_o)->_initRowMajor(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32, _args.mem[9].f32, _args.mem[10].f32, _args.mem[11].f32, _args.mem[12].f32, _args.mem[13].f32, _args.mem[14].f32, _args.mem[15].f32);}
void  YAC_CALL Matrix4f___initColumnMajor(void *_o, yacmemptr _args          ) {((_Matrix4f*)_o)->_initColumnMajor(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32, _args.mem[9].f32, _args.mem[10].f32, _args.mem[11].f32, _args.mem[12].f32, _args.mem[13].f32, _args.mem[14].f32, _args.mem[15].f32);}
void  YAC_CALL Matrix4f___initTranspose(void *_o, yacmemptr _args            ) {((_Matrix4f*)_o)->_initTranspose(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32, _args.mem[9].f32, _args.mem[10].f32, _args.mem[11].f32, _args.mem[12].f32, _args.mem[13].f32, _args.mem[14].f32, _args.mem[15].f32);}
void  YAC_CALL Matrix4f___initRowf  (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_initRowf(_args.mem[0].si, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32);}
void  YAC_CALL Matrix4f___initRowv  (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_initRowv(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix4f___initColf  (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_initColf(_args.mem[0].si, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32);}
void  YAC_CALL Matrix4f___initColv  (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_initColv(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL Matrix4f___initEulerXYX(void *_o, yacmemptr _args             ) {((_Matrix4f*)_o)->_initEulerXYX(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___initEulerXZX(void *_o, yacmemptr _args             ) {((_Matrix4f*)_o)->_initEulerXZX(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___initEulerYXY(void *_o, yacmemptr _args             ) {((_Matrix4f*)_o)->_initEulerYXY(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___initEulerYZY(void *_o, yacmemptr _args             ) {((_Matrix4f*)_o)->_initEulerYZY(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___initEulerZXZ(void *_o, yacmemptr _args             ) {((_Matrix4f*)_o)->_initEulerZXZ(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___initEulerZYZ(void *_o, yacmemptr _args             ) {((_Matrix4f*)_o)->_initEulerZYZ(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___initEulerXYZ(void *_o, yacmemptr _args             ) {((_Matrix4f*)_o)->_initEulerXYZ(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___initEulerXZY(void *_o, yacmemptr _args             ) {((_Matrix4f*)_o)->_initEulerXZY(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___initEulerYXZ(void *_o, yacmemptr _args             ) {((_Matrix4f*)_o)->_initEulerYXZ(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___initEulerYZX(void *_o, yacmemptr _args             ) {((_Matrix4f*)_o)->_initEulerYZX(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___initEulerZXY(void *_o, yacmemptr _args             ) {((_Matrix4f*)_o)->_initEulerZXY(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___initEulerZYX(void *_o, yacmemptr _args             ) {((_Matrix4f*)_o)->_initEulerZYX(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___initIdentity(void *_o                              ) {((_Matrix4f*)_o)->_initIdentity();}
sSI   YAC_CALL Matrix4f___isIdentity(void *_o                                ) {return (sSI)((_Matrix4f*)_o)->_isIdentity();}
void  YAC_CALL Matrix4f___initTranslatef(void *_o, yacmemptr _args           ) {((_Matrix4f*)_o)->_initTranslatef(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___initTranslatev(void *_o, yacmemptr _args           ) {((_Matrix4f*)_o)->_initTranslatev(_args.mem[0].o);}
void  YAC_CALL Matrix4f___initScalef(void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_initScalef(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___initScalev(void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_initScalev(_args.mem[0].o);}
void  YAC_CALL Matrix4f___initSkewXf(void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_initSkewXf(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___initSkewYf(void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_initSkewYf(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___initRotatef(void *_o, yacmemptr _args              ) {((_Matrix4f*)_o)->_initRotatef(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___initRotatev(void *_o, yacmemptr _args              ) {((_Matrix4f*)_o)->_initRotatev(_args.mem[0].o);}
void  YAC_CALL Matrix4f___initRotate(void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_initRotate(_args.mem[0].f32, _args.mem[1].o);}
void  YAC_CALL Matrix4f___initOrtho (void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_initOrtho(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32);}
void  YAC_CALL Matrix4f___initFrustum(void *_o, yacmemptr _args              ) {((_Matrix4f*)_o)->_initFrustum(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32);}
void  YAC_CALL Matrix4f___initFrustumFov(void *_o, yacmemptr _args           ) {((_Matrix4f*)_o)->_initFrustumFov(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32);}
void  YAC_CALL Matrix4f___initFrustumFovXY(void *_o, yacmemptr _args         ) {((_Matrix4f*)_o)->_initFrustumFovXY(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32);}
void  YAC_CALL Matrix4f___initPerspective(void *_o, yacmemptr _args          ) {((_Matrix4f*)_o)->_initPerspective(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32);}
void  YAC_CALL Matrix4f___initLookAt(void *_o, yacmemptr _args               ) {((_Matrix4f*)_o)->_initLookAt(_args.mem[0].o, _args.mem[1].o, _args.mem[2].o);}
void  YAC_CALL Matrix4f___add_YAC_RSELF(void *_o, yacmemptr _args            ) {((_Matrix4f*)_o)->_add_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix4f___add_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_add_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix4f___add_YAC_RARG(void *_o, yacmemptr _args             ) {((_Matrix4f*)_o)->_add_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix4f___sub_YAC_RSELF(void *_o, yacmemptr _args            ) {((_Matrix4f*)_o)->_sub_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix4f___sub_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_sub_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix4f___sub_YAC_RARG(void *_o, yacmemptr _args             ) {((_Matrix4f*)_o)->_sub_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix4f___mulf_YAC_RSELF(void *_o, yacmemptr _args           ) {((_Matrix4f*)_o)->_mulf_YAC_RSELF(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___mulf_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_mulf_YAC_RVAL(_args.mem[0].f32, _r);}
void  YAC_CALL Matrix4f___mulf_YAC_RARG(void *_o, yacmemptr _args            ) {((_Matrix4f*)_o)->_mulf_YAC_RARG(_args.mem[0].f32, _args.mem[1].o);}
void  YAC_CALL Matrix4f___mul_YAC_RSELF(void *_o, yacmemptr _args            ) {((_Matrix4f*)_o)->_mul_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix4f___mul_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_mul_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix4f___mul_YAC_RARG(void *_o, yacmemptr _args             ) {((_Matrix4f*)_o)->_mul_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix4f___mulRev_YAC_RSELF(void *_o, yacmemptr _args         ) {((_Matrix4f*)_o)->_mulRev_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix4f___mulRev_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_mulRev_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix4f___mulRev_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix4f*)_o)->_mulRev_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix4f___mulv_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_mulv_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix4f___mulv_YAC_RARG(void *_o, yacmemptr _args            ) {((_Matrix4f*)_o)->_mulv_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix4f___mulvRev_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_mulvRev_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix4f___mulvRev_YAC_RARG(void *_o, yacmemptr _args         ) {((_Matrix4f*)_o)->_mulvRev_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
sF32  YAC_CALL Matrix4f___getAbs    (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getAbs();}
sF32  YAC_CALL Matrix4f___getAbsSqr (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_getAbsSqr();}
void  YAC_CALL Matrix4f___unit_YAC_RSELF(void *_o                            ) {((_Matrix4f*)_o)->_unit_YAC_RSELF();}
void  YAC_CALL Matrix4f___unit_YAC_RVAL(void *_o, YAC_Value *_r              ) {((_Matrix4f*)_o)->_unit_YAC_RVAL(_r);}
void  YAC_CALL Matrix4f___unit_YAC_RARG(void *_o, yacmemptr _args            ) {((_Matrix4f*)_o)->_unit_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix4f___unitScale_YAC_RSELF(void *_o, yacmemptr _args      ) {((_Matrix4f*)_o)->_unitScale_YAC_RSELF(_args.mem[0].f32);}
void  YAC_CALL Matrix4f___unitScale_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_unitScale_YAC_RVAL(_args.mem[0].f32, _r);}
void  YAC_CALL Matrix4f___unitScale_YAC_RARG(void *_o, yacmemptr _args       ) {((_Matrix4f*)_o)->_unitScale_YAC_RARG(_args.mem[0].f32, _args.mem[1].o);}
sF32  YAC_CALL Matrix4f___det       (void *_o                                ) {return (sF32)((_Matrix4f*)_o)->_det();}
void  YAC_CALL Matrix4f___invert_YAC_RSELF(void *_o                          ) {((_Matrix4f*)_o)->_invert_YAC_RSELF();}
void  YAC_CALL Matrix4f___invert_YAC_RVAL(void *_o, YAC_Value *_r            ) {((_Matrix4f*)_o)->_invert_YAC_RVAL(_r);}
void  YAC_CALL Matrix4f___invert_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix4f*)_o)->_invert_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix4f___transpose_YAC_RSELF(void *_o                       ) {((_Matrix4f*)_o)->_transpose_YAC_RSELF();}
void  YAC_CALL Matrix4f___transpose_YAC_RVAL(void *_o, YAC_Value *_r         ) {((_Matrix4f*)_o)->_transpose_YAC_RVAL(_r);}
void  YAC_CALL Matrix4f___transpose_YAC_RARG(void *_o, yacmemptr _args       ) {((_Matrix4f*)_o)->_transpose_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix4f___getQuaternionf_YAC_RVAL(void *_o, YAC_Value *_r    ) {((_Matrix4f*)_o)->_getQuaternionf_YAC_RVAL(_r);}
void  YAC_CALL Matrix4f___getQuaternionf_YAC_RARG(void *_o, yacmemptr _args  ) {((_Matrix4f*)_o)->_getQuaternionf_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL Matrix4f___BuildPerspectiveMatrix4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildPerspectiveMatrix4f_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _r);}
void  YAC_CALL Matrix4f___BuildPerspectiveMatrix4f_YAC_RARG(void *_o, yacmemptr _args) {((_Matrix4f*)_o)->_BuildPerspectiveMatrix4f_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].o);}
void  YAC_CALL Matrix4f___BuildLookAtMatrix4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildLookAtMatrix4f_YAC_RVAL(_args.mem[0].o, _args.mem[1].o, _args.mem[2].o, _r);}
void  YAC_CALL Matrix4f___BuildLookAtMatrix4f_YAC_RARG(void *_o, yacmemptr _args) {((_Matrix4f*)_o)->_BuildLookAtMatrix4f_YAC_RARG(_args.mem[0].o, _args.mem[1].o, _args.mem[2].o, _args.mem[3].o);}
void  YAC_CALL Matrix4f___BuildRotateMatrix4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildRotateMatrix4f_YAC_RVAL(_args.mem[0].f32, _args.mem[1].o, _r);}
void  YAC_CALL Matrix4f___BuildRotateMatrix4f_YAC_RARG(void *_o, yacmemptr _args) {((_Matrix4f*)_o)->_BuildRotateMatrix4f_YAC_RARG(_args.mem[0].f32, _args.mem[1].o, _args.mem[2].o);}
void  YAC_CALL Matrix4f___BuildTranslateMatrix4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildTranslateMatrix4f_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix4f___BuildTranslateMatrix4f_YAC_RARG(void *_o, yacmemptr _args) {((_Matrix4f*)_o)->_BuildTranslateMatrix4f_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix4f___BuildScaleMatrix4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildScaleMatrix4f_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix4f___BuildScaleMatrix4f_YAC_RARG(void *_o, yacmemptr _args) {((_Matrix4f*)_o)->_BuildScaleMatrix4f_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix4f___BuildEulerXZX4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildEulerXZX4f_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix4f___BuildEulerXZX4f_YAC_RARG(void *_o, yacmemptr _args ) {((_Matrix4f*)_o)->_BuildEulerXZX4f_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix4f___BuildEulerXYX4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildEulerXYX4f_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix4f___BuildEulerXYX4f_YAC_RARG(void *_o, yacmemptr _args ) {((_Matrix4f*)_o)->_BuildEulerXYX4f_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix4f___BuildEulerYXY4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildEulerYXY4f_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix4f___BuildEulerYXY4f_YAC_RARG(void *_o, yacmemptr _args ) {((_Matrix4f*)_o)->_BuildEulerYXY4f_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix4f___BuildEulerYZY4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildEulerYZY4f_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix4f___BuildEulerYZY4f_YAC_RARG(void *_o, yacmemptr _args ) {((_Matrix4f*)_o)->_BuildEulerYZY4f_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix4f___BuildEulerZYZ4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildEulerZYZ4f_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix4f___BuildEulerZYZ4f_YAC_RARG(void *_o, yacmemptr _args ) {((_Matrix4f*)_o)->_BuildEulerZYZ4f_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix4f___BuildEulerZXZ4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildEulerZXZ4f_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix4f___BuildEulerZXZ4f_YAC_RARG(void *_o, yacmemptr _args ) {((_Matrix4f*)_o)->_BuildEulerZXZ4f_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix4f___BuildEulerXZY4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildEulerXZY4f_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix4f___BuildEulerXZY4f_YAC_RARG(void *_o, yacmemptr _args ) {((_Matrix4f*)_o)->_BuildEulerXZY4f_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix4f___BuildEulerXYZ4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildEulerXYZ4f_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix4f___BuildEulerXYZ4f_YAC_RARG(void *_o, yacmemptr _args ) {((_Matrix4f*)_o)->_BuildEulerXYZ4f_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix4f___BuildEulerYXZ4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildEulerYXZ4f_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix4f___BuildEulerYXZ4f_YAC_RARG(void *_o, yacmemptr _args ) {((_Matrix4f*)_o)->_BuildEulerYXZ4f_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix4f___BuildEulerYZX4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildEulerYZX4f_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix4f___BuildEulerYZX4f_YAC_RARG(void *_o, yacmemptr _args ) {((_Matrix4f*)_o)->_BuildEulerYZX4f_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix4f___BuildEulerZYX4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildEulerZYX4f_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix4f___BuildEulerZYX4f_YAC_RARG(void *_o, yacmemptr _args ) {((_Matrix4f*)_o)->_BuildEulerZYX4f_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix4f___BuildEulerZXY4f_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_BuildEulerZXY4f_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix4f___BuildEulerZXY4f_YAC_RARG(void *_o, yacmemptr _args ) {((_Matrix4f*)_o)->_BuildEulerZXY4f_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix4f___translatef_YAC_RSELF(void *_o, yacmemptr _args     ) {((_Matrix4f*)_o)->_translatef_YAC_RSELF(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___translatef_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_translatef_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix4f___translatef_YAC_RARG(void *_o, yacmemptr _args      ) {((_Matrix4f*)_o)->_translatef_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix4f___translatev_YAC_RSELF(void *_o, yacmemptr _args     ) {((_Matrix4f*)_o)->_translatev_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix4f___translatev_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_translatev_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix4f___translatev_YAC_RARG(void *_o, yacmemptr _args      ) {((_Matrix4f*)_o)->_translatev_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix4f___scalef_YAC_RSELF(void *_o, yacmemptr _args         ) {((_Matrix4f*)_o)->_scalef_YAC_RSELF(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___scalef_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_scalef_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix4f___scalef_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix4f*)_o)->_scalef_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix4f___scalev_YAC_RSELF(void *_o, yacmemptr _args         ) {((_Matrix4f*)_o)->_scalev_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix4f___scalev_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_scalev_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix4f___scalev_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix4f*)_o)->_scalev_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix4f___rotatef_YAC_RSELF(void *_o, yacmemptr _args        ) {((_Matrix4f*)_o)->_rotatef_YAC_RSELF(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix4f___rotatef_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_rotatef_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _r);}
void  YAC_CALL Matrix4f___rotatef_YAC_RARG(void *_o, yacmemptr _args         ) {((_Matrix4f*)_o)->_rotatef_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].o);}
void  YAC_CALL Matrix4f___rotatev_YAC_RSELF(void *_o, yacmemptr _args        ) {((_Matrix4f*)_o)->_rotatev_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL Matrix4f___rotatev_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_rotatev_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL Matrix4f___rotatev_YAC_RARG(void *_o, yacmemptr _args         ) {((_Matrix4f*)_o)->_rotatev_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix4f___rotate_YAC_RSELF(void *_o, yacmemptr _args         ) {((_Matrix4f*)_o)->_rotate_YAC_RSELF(_args.mem[0].f32, _args.mem[1].o);}
void  YAC_CALL Matrix4f___rotate_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_rotate_YAC_RVAL(_args.mem[0].f32, _args.mem[1].o, _r);}
void  YAC_CALL Matrix4f___rotate_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix4f*)_o)->_rotate_YAC_RARG(_args.mem[0].f32, _args.mem[1].o, _args.mem[2].o);}
void  YAC_CALL Matrix4f___ortho_YAC_RSELF(void *_o, yacmemptr _args          ) {((_Matrix4f*)_o)->_ortho_YAC_RSELF(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32);}
void  YAC_CALL Matrix4f___ortho_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_ortho_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _r);}
void  YAC_CALL Matrix4f___ortho_YAC_RARG(void *_o, yacmemptr _args           ) {((_Matrix4f*)_o)->_ortho_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].o);}
void  YAC_CALL Matrix4f___frustum_YAC_RSELF(void *_o, yacmemptr _args        ) {((_Matrix4f*)_o)->_frustum_YAC_RSELF(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32);}
void  YAC_CALL Matrix4f___frustum_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_frustum_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _r);}
void  YAC_CALL Matrix4f___frustum_YAC_RARG(void *_o, yacmemptr _args         ) {((_Matrix4f*)_o)->_frustum_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].o);}
void  YAC_CALL Matrix4f___frustumFovXY_YAC_RSELF(void *_o, yacmemptr _args   ) {((_Matrix4f*)_o)->_frustumFovXY_YAC_RSELF(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32);}
void  YAC_CALL Matrix4f___frustumFovXY_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_frustumFovXY_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32, _r);}
void  YAC_CALL Matrix4f___frustumFovXY_YAC_RARG(void *_o, yacmemptr _args    ) {((_Matrix4f*)_o)->_frustumFovXY_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32, _args.mem[6].f32, _args.mem[7].f32, _args.mem[8].f32, _args.mem[9].o);}
void  YAC_CALL Matrix4f___perspective_YAC_RSELF(void *_o, yacmemptr _args    ) {((_Matrix4f*)_o)->_perspective_YAC_RSELF(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32);}
void  YAC_CALL Matrix4f___perspective_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_perspective_YAC_RVAL(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _r);}
void  YAC_CALL Matrix4f___perspective_YAC_RARG(void *_o, yacmemptr _args     ) {((_Matrix4f*)_o)->_perspective_YAC_RARG(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].o);}
void  YAC_CALL Matrix4f___lookAt_YAC_RSELF(void *_o, yacmemptr _args         ) {((_Matrix4f*)_o)->_lookAt_YAC_RSELF(_args.mem[0].o, _args.mem[1].o, _args.mem[2].o);}
void  YAC_CALL Matrix4f___lookAt_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_Matrix4f*)_o)->_lookAt_YAC_RVAL(_args.mem[0].o, _args.mem[1].o, _args.mem[2].o, _r);}
void  YAC_CALL Matrix4f___lookAt_YAC_RARG(void *_o, yacmemptr _args          ) {((_Matrix4f*)_o)->_lookAt_YAC_RARG(_args.mem[0].o, _args.mem[1].o, _args.mem[2].o, _args.mem[3].o);}
void  YAC_CALL Matrix4f___extractPlanes(void *_o, yacmemptr _args            ) {((_Matrix4f*)_o)->_extractPlanes(_args.mem[0].o, _args.mem[1].o, _args.mem[2].o, _args.mem[3].o, _args.mem[4].o, _args.mem[5].o);}
#endif // YAC_NO_HOST
