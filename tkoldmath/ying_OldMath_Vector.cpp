// ---- ying_OldMath_Vector.cpp: auto generated by YInG - the YAC interface generator (Wed, 31/Jul/2019 21:16:42)

sF32  YAC_CALL Vector___dot         (void *, yacmemptr             );
void  YAC_CALL Vector__scalef       (void *, yacmemptr             );
void  YAC_CALL Vector__unit         (void *                        );
void  YAC_CALL Vector__neg          (void *                        );
void  YAC_CALL Vector__init         (void *, yacmemptr             );
void  YAC_CALL Vector__rotateXCW    (void *                        );
void  YAC_CALL Vector__rotateXCCW   (void *                        );
void  YAC_CALL Vector__rotateYCW    (void *                        );
void  YAC_CALL Vector__rotateYCCW   (void *                        );
void  YAC_CALL Vector__rotateZCW    (void *                        );
void  YAC_CALL Vector__rotateZCCW   (void *                        );
void  YAC_CALL Vector___addScale    (void *, yacmemptr             );
sF32  YAC_CALL Vector___getAbs      (void *                        );
sF32  YAC_CALL Vector___getAbsMax   (void *                        );
sF32  YAC_CALL Vector___getAbsAdd   (void *                        );
void  YAC_CALL Vector___cross       (void *, yacmemptr             );
void  YAC_CALL Vector___rotate      (void *, yacmemptr             );
void  YAC_CALL Vector___rotateInv   (void *, yacmemptr             );
sF32  YAC_CALL Vector___getX        (void *                        );
sF32  YAC_CALL Vector___getY        (void *                        );
sF32  YAC_CALL Vector___getZ        (void *                        );
void  YAC_CALL Vector___setX        (void *, yacmemptr             );
void  YAC_CALL Vector___setY        (void *, yacmemptr             );
void  YAC_CALL Vector___setZ        (void *, yacmemptr             );
void  YAC_CALL Vector___print       (void *                        );
void  YAC_CALL Vector___sphere      (void *, yacmemptr             );
void  YAC_CALL Vector___add         (void *, yacmemptr             );
void  YAC_CALL Vector___sub         (void *, yacmemptr             );
void  YAC_CALL Vector___unitScale   (void *, yacmemptr             );
void  YAC_CALL Vector___scalev      (void *, yacmemptr             );
void  YAC_CALL Vector___initv       (void *, yacmemptr             );
void  YAC_CALL Vector___getString   (void *, YAC_Value *           );
void  YAC_CALL Vector___blend       (void *, yacmemptr             );
void  YAC_CALL Vector___rotateAdd   (void *, yacmemptr             );
void  YAC_CALL Vector___rotateInvAdd(void *, yacmemptr             );
void  YAC_CALL Vector___glVertex    (void *                        );
void  YAC_CALL Vector___glNormal    (void *                        );
void  YAC_CALL Vector___glColor     (void *                        );
void  YAC_CALL Vector___glColorGamma(void *, yacmemptr             );
void  YAC_CALL Vector___glScale     (void *                        );
void  YAC_CALL Vector___faSet       (void *, yacmemptr             );
void  YAC_CALL Vector___faGet       (void *, yacmemptr             );
void  YAC_CALL Vector___initScale   (void *, yacmemptr             );

// ------------------ YAC class "_Vector" reflection map (implementation) ------------------
sUI          YAC_VCALL _Vector::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Vector::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Vector::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Vector::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Vector::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Vector::yacMethodGetNum                  (void) {return 44;}
const char **YAC_VCALL _Vector::yacMethodGetNames                (void) {static const char *r[]={"operator", "dot", "scalef", "unit", "neg", "init", "rotateXCW", "rotateXCCW", "rotateYCW", "rotateYCCW", "rotateZCW", "rotateZCCW", "addScale", "getAbs", "getAbsMax", "getAbsAdd", "cross", "rotate", "rotateInv", "getX", "getY", "getZ", "setX", "setY", "setZ", "print", "sphere", "add", "sub", "unitScale", "scalev", "initv", "getString", "blend", "rotateAdd", "rotateInvAdd", "glVertex", "glNormal", "glColor", "glColorGamma", "glScale", "faSet", "faGet", "initScale"}; return r;}
const sUI   *YAC_VCALL _Vector::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 1, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 0, 0, 0, 1, 1, 1, 0, 4, 1, 1, 1, 1, 1, 0, 2, 2, 2, 0, 0, 0, 1, 0, 2, 2, 2}; return r;}
const sUI  **YAC_VCALL _Vector::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={3,};static const sUI rt2[]={2,};static const sUI rt3[]={0,};static const sUI rt4[]={0,};static const sUI rt5[]={2, 2, 2,};static const sUI rt6[]={0,};static const sUI rt7[]={0,};static const sUI rt8[]={0,};static const sUI rt9[]={0,};static const sUI rt10[]={0,};static const sUI rt11[]={0,};static const sUI rt12[]={3, 2,};static const sUI rt13[]={0,};static const sUI rt14[]={0,};static const sUI rt15[]={0,};static const sUI rt16[]={3, 3,};static const sUI rt17[]={3,};static const sUI rt18[]={3,};static const sUI rt19[]={0,};static const sUI rt20[]={0,};static const sUI rt21[]={0,};static const sUI rt22[]={2,};static const sUI rt23[]={2,};static const sUI rt24[]={2,};static const sUI rt25[]={0,};static const sUI rt26[]={2, 2, 2, 2,};static const sUI rt27[]={3,};static const sUI rt28[]={3,};static const sUI rt29[]={2,};static const sUI rt30[]={3,};static const sUI rt31[]={3,};static const sUI rt32[]={0,};static const sUI rt33[]={3, 2,};static const sUI rt34[]={3, 3,};static const sUI rt35[]={3, 3,};static const sUI rt36[]={0,};static const sUI rt37[]={0,};static const sUI rt38[]={0,};static const sUI rt39[]={2,};static const sUI rt40[]={0,};static const sUI rt41[]={3, 1,};static const sUI rt42[]={3, 1,};static const sUI rt43[]={3, 2,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40, rt41, rt42, rt43}; return r;}
const char***YAC_VCALL _Vector::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0, (const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0, (const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0,};static const char *rs26[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0,};static const char *rs31[]={(const char*)0,};static const char *rs32[]={(const char*)0,};static const char *rs33[]={(const char*)0, (const char*)0,};static const char *rs34[]={(const char*)0, (const char*)0,};static const char *rs35[]={(const char*)0, (const char*)0,};static const char *rs36[]={(const char*)0,};static const char *rs37[]={(const char*)0,};static const char *rs38[]={(const char*)0,};static const char *rs39[]={(const char*)0,};static const char *rs40[]={(const char*)0,};static const char *rs41[]={(const char*)0, (const char*)0,};static const char *rs42[]={(const char*)0, (const char*)0,};static const char *rs43[]={(const char*)0, (const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40, rs41, rs42, rs43}; return r;}
const sUI   *YAC_VCALL _Vector::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}; return r;}
const char **YAC_VCALL _Vector::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL _Vector::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)Vector___dot, (void*)Vector__scalef, (void*)Vector__unit, (void*)Vector__neg, (void*)Vector__init, (void*)Vector__rotateXCW, (void*)Vector__rotateXCCW, (void*)Vector__rotateYCW, (void*)Vector__rotateYCCW, (void*)Vector__rotateZCW, (void*)Vector__rotateZCCW, (void*)Vector___addScale, (void*)Vector___getAbs, (void*)Vector___getAbsMax, (void*)Vector___getAbsAdd, (void*)Vector___cross, (void*)Vector___rotate, (void*)Vector___rotateInv, (void*)Vector___getX, (void*)Vector___getY, (void*)Vector___getZ, (void*)Vector___setX, (void*)Vector___setY, (void*)Vector___setZ, (void*)Vector___print, (void*)Vector___sphere, (void*)Vector___add, (void*)Vector___sub, (void*)Vector___unitScale, (void*)Vector___scalev, (void*)Vector___initv, (void*)Vector___getString, (void*)Vector___blend, (void*)Vector___rotateAdd, (void*)Vector___rotateInvAdd, (void*)Vector___glVertex, (void*)Vector___glNormal, (void*)Vector___glColor, (void*)Vector___glColorGamma, (void*)Vector___glScale, (void*)Vector___faSet, (void*)Vector___faGet, (void*)Vector___initScale}; return r;}
sUI          YAC_VCALL _Vector::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Vector::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Vector::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Vector::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(_Vector, "Vector");

sF32  YAC_CALL Vector___dot         (void *_o, yacmemptr _args               ) {return (sF32)((_Vector*)_o)->_dot(_args.mem[0].o);}
void  YAC_CALL Vector__scalef       (void *_o, yacmemptr _args               ) {((_Vector*)_o)->scalef(_args.mem[0].f32);}
void  YAC_CALL Vector__unit         (void *_o                                ) {((_Vector*)_o)->unit();}
void  YAC_CALL Vector__neg          (void *_o                                ) {((_Vector*)_o)->neg();}
void  YAC_CALL Vector__init         (void *_o, yacmemptr _args               ) {((_Vector*)_o)->init(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Vector__rotateXCW    (void *_o                                ) {((_Vector*)_o)->rotateXCW();}
void  YAC_CALL Vector__rotateXCCW   (void *_o                                ) {((_Vector*)_o)->rotateXCCW();}
void  YAC_CALL Vector__rotateYCW    (void *_o                                ) {((_Vector*)_o)->rotateYCW();}
void  YAC_CALL Vector__rotateYCCW   (void *_o                                ) {((_Vector*)_o)->rotateYCCW();}
void  YAC_CALL Vector__rotateZCW    (void *_o                                ) {((_Vector*)_o)->rotateZCW();}
void  YAC_CALL Vector__rotateZCCW   (void *_o                                ) {((_Vector*)_o)->rotateZCCW();}
void  YAC_CALL Vector___addScale    (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_addScale(_args.mem[0].o, _args.mem[1].f32);}
sF32  YAC_CALL Vector___getAbs      (void *_o                                ) {return (sF32)((_Vector*)_o)->_getAbs();}
sF32  YAC_CALL Vector___getAbsMax   (void *_o                                ) {return (sF32)((_Vector*)_o)->_getAbsMax();}
sF32  YAC_CALL Vector___getAbsAdd   (void *_o                                ) {return (sF32)((_Vector*)_o)->_getAbsAdd();}
void  YAC_CALL Vector___cross       (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_cross(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Vector___rotate      (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_rotate(_args.mem[0].o);}
void  YAC_CALL Vector___rotateInv   (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_rotateInv(_args.mem[0].o);}
sF32  YAC_CALL Vector___getX        (void *_o                                ) {return (sF32)((_Vector*)_o)->_getX();}
sF32  YAC_CALL Vector___getY        (void *_o                                ) {return (sF32)((_Vector*)_o)->_getY();}
sF32  YAC_CALL Vector___getZ        (void *_o                                ) {return (sF32)((_Vector*)_o)->_getZ();}
void  YAC_CALL Vector___setX        (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_setX(_args.mem[0].f32);}
void  YAC_CALL Vector___setY        (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_setY(_args.mem[0].f32);}
void  YAC_CALL Vector___setZ        (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_setZ(_args.mem[0].f32);}
void  YAC_CALL Vector___print       (void *_o                                ) {((_Vector*)_o)->_print();}
void  YAC_CALL Vector___sphere      (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_sphere(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32);}
void  YAC_CALL Vector___add         (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_add(_args.mem[0].o);}
void  YAC_CALL Vector___sub         (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_sub(_args.mem[0].o);}
void  YAC_CALL Vector___unitScale   (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_unitScale(_args.mem[0].f32);}
void  YAC_CALL Vector___scalev      (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_scalev(_args.mem[0].o);}
void  YAC_CALL Vector___initv       (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_initv(_args.mem[0].o);}
void  YAC_CALL Vector___getString   (void *_o, YAC_Value *_r                 ) {((_Vector*)_o)->_getString(_r);}
void  YAC_CALL Vector___blend       (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_blend(_args.mem[0].o, _args.mem[1].f32);}
void  YAC_CALL Vector___rotateAdd   (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_rotateAdd(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Vector___rotateInvAdd(void *_o, yacmemptr _args               ) {((_Vector*)_o)->_rotateInvAdd(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Vector___glVertex    (void *_o                                ) {((_Vector*)_o)->_glVertex();}
void  YAC_CALL Vector___glNormal    (void *_o                                ) {((_Vector*)_o)->_glNormal();}
void  YAC_CALL Vector___glColor     (void *_o                                ) {((_Vector*)_o)->_glColor();}
void  YAC_CALL Vector___glColorGamma(void *_o, yacmemptr _args               ) {((_Vector*)_o)->_glColorGamma(_args.mem[0].f32);}
void  YAC_CALL Vector___glScale     (void *_o                                ) {((_Vector*)_o)->_glScale();}
void  YAC_CALL Vector___faSet       (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_faSet(_args.mem[0].o, _args.mem[1].si);}
void  YAC_CALL Vector___faGet       (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_faGet(_args.mem[0].o, _args.mem[1].si);}
void  YAC_CALL Vector___initScale   (void *_o, yacmemptr _args               ) {((_Vector*)_o)->_initScale(_args.mem[0].o, _args.mem[1].f32);}
