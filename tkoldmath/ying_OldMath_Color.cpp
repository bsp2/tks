// ---- ying_OldMath_Color.cpp: auto generated by YInG - the YAC interface generator (Wed, 31/Jul/2019 21:16:42)

sSI   YAC_CALL Color___getColori    (void *                        );
sSI   YAC_CALL Color___setColori    (void *, yacmemptr             );
sSI   YAC_CALL Color___getColor4b   (void *                        );
sSI   YAC_CALL Color___setRgbpi     (void *, yacmemptr             );
sSI   YAC_CALL Color___init4i       (void *, yacmemptr             );
sSI   YAC_CALL Color___init4f       (void *, yacmemptr             );
sSI   YAC_CALL Color___init3f       (void *, yacmemptr             );
sSI   YAC_CALL Color___initGamma3f  (void *, yacmemptr             );
sSI   YAC_CALL Color___getRi        (void *                        );
sSI   YAC_CALL Color___getGi        (void *                        );
sSI   YAC_CALL Color___getBi        (void *                        );
sSI   YAC_CALL Color___getAi        (void *                        );
sF32  YAC_CALL Color___getRf        (void *                        );
sF32  YAC_CALL Color___getGf        (void *                        );
sF32  YAC_CALL Color___getBf        (void *                        );
sF32  YAC_CALL Color___getAf        (void *                        );
void  YAC_CALL Color___setAi        (void *, yacmemptr             );
void  YAC_CALL Color___setAf        (void *, yacmemptr             );
void  YAC_CALL Color___setRi        (void *, yacmemptr             );
void  YAC_CALL Color___setRf        (void *, yacmemptr             );
void  YAC_CALL Color___setGi        (void *, yacmemptr             );
void  YAC_CALL Color___setGf        (void *, yacmemptr             );
void  YAC_CALL Color___getString    (void *, YAC_Value *           );
void  YAC_CALL Color___setBi        (void *, yacmemptr             );
void  YAC_CALL Color___setBf        (void *, yacmemptr             );
sF32  YAC_CALL Color___getGamma     (void *                        );
void  YAC_CALL Color___setGamma     (void *, yacmemptr             );
void  YAC_CALL Color___glColor      (void *                        );
sSI   YAC_CALL Color___getBlendf    (void *, yacmemptr             );
sSI   YAC_CALL Color___getGammaf    (void *, yacmemptr             );
sSI   YAC_CALL Color___mixf         (void *, yacmemptr             );
void  YAC_CALL Color___glColorGamma (void *, yacmemptr             );
void  YAC_CALL Color___glLightMaterialAmbient(void *, yacmemptr    );
void  YAC_CALL Color___glLightMaterialDiffuse(void *, yacmemptr    );
void  YAC_CALL Color___glLightMaterialAmbientAndDiffuse(void *, yacmemptr);
void  YAC_CALL Color___glLightMaterialSpecular(void *, yacmemptr   );
void  YAC_CALL Color___glLightMaterialEmission(void *, yacmemptr   );

// ------------------ YAC class "_Color" reflection map (implementation) ------------------
sUI          YAC_VCALL _Color::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Color::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Color::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Color::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Color::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Color::yacMethodGetNum                  (void) {return 38;}
const char **YAC_VCALL _Color::yacMethodGetNames                (void) {static const char *r[]={"operator", "getColori", "setColori", "getColor4b", "setRgbpi", "init4i", "init4f", "init3f", "initGamma3f", "getRi", "getGi", "getBi", "getAi", "getRf", "getGf", "getBf", "getAf", "setAi", "setAf", "setRi", "setRf", "setGi", "setGf", "getString", "setBi", "setBf", "getGamma", "setGamma", "glColor", "getBlendf", "getGammaf", "mixf", "glColorGamma", "glLightMaterialAmbient", "glLightMaterialDiffuse", "glLightMaterialAmbientAndDiffuse", "glLightMaterialSpecular", "glLightMaterialEmission"}; return r;}
const sUI   *YAC_VCALL _Color::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 0, 1, 0, 1, 4, 4, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1}; return r;}
const sUI  **YAC_VCALL _Color::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={1,};static const sUI rt3[]={0,};static const sUI rt4[]={1,};static const sUI rt5[]={1, 1, 1, 1,};static const sUI rt6[]={2, 2, 2, 2,};static const sUI rt7[]={2, 2, 2,};static const sUI rt8[]={2, 2, 2, 2,};static const sUI rt9[]={0,};static const sUI rt10[]={0,};static const sUI rt11[]={0,};static const sUI rt12[]={0,};static const sUI rt13[]={0,};static const sUI rt14[]={0,};static const sUI rt15[]={0,};static const sUI rt16[]={0,};static const sUI rt17[]={1,};static const sUI rt18[]={2,};static const sUI rt19[]={1,};static const sUI rt20[]={2,};static const sUI rt21[]={1,};static const sUI rt22[]={2,};static const sUI rt23[]={0,};static const sUI rt24[]={1,};static const sUI rt25[]={2,};static const sUI rt26[]={0,};static const sUI rt27[]={2,};static const sUI rt28[]={0,};static const sUI rt29[]={2,};static const sUI rt30[]={2,};static const sUI rt31[]={3, 2,};static const sUI rt32[]={2,};static const sUI rt33[]={1,};static const sUI rt34[]={1,};static const sUI rt35[]={1,};static const sUI rt36[]={1,};static const sUI rt37[]={1,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37}; return r;}
const char***YAC_VCALL _Color::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs6[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs7[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs8[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0,};static const char *rs26[]={(const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0,};static const char *rs31[]={(const char*)0, (const char*)0,};static const char *rs32[]={(const char*)0,};static const char *rs33[]={(const char*)0,};static const char *rs34[]={(const char*)0,};static const char *rs35[]={(const char*)0,};static const char *rs36[]={(const char*)0,};static const char *rs37[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37}; return r;}
const sUI   *YAC_VCALL _Color::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0}; return r;}
const char **YAC_VCALL _Color::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL _Color::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)Color___getColori, (void*)Color___setColori, (void*)Color___getColor4b, (void*)Color___setRgbpi, (void*)Color___init4i, (void*)Color___init4f, (void*)Color___init3f, (void*)Color___initGamma3f, (void*)Color___getRi, (void*)Color___getGi, (void*)Color___getBi, (void*)Color___getAi, (void*)Color___getRf, (void*)Color___getGf, (void*)Color___getBf, (void*)Color___getAf, (void*)Color___setAi, (void*)Color___setAf, (void*)Color___setRi, (void*)Color___setRf, (void*)Color___setGi, (void*)Color___setGf, (void*)Color___getString, (void*)Color___setBi, (void*)Color___setBf, (void*)Color___getGamma, (void*)Color___setGamma, (void*)Color___glColor, (void*)Color___getBlendf, (void*)Color___getGammaf, (void*)Color___mixf, (void*)Color___glColorGamma, (void*)Color___glLightMaterialAmbient, (void*)Color___glLightMaterialDiffuse, (void*)Color___glLightMaterialAmbientAndDiffuse, (void*)Color___glLightMaterialSpecular, (void*)Color___glLightMaterialEmission}; return r;}
sUI          YAC_VCALL _Color::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Color::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Color::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Color::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(_Color, "Color");

sSI   YAC_CALL Color___getColori    (void *_o                                ) {return (sSI)((_Color*)_o)->_getColori();}
sSI   YAC_CALL Color___setColori    (void *_o, yacmemptr _args               ) {return (sSI)((_Color*)_o)->_setColori(_args.mem[0].si);}
sSI   YAC_CALL Color___getColor4b   (void *_o                                ) {return (sSI)((_Color*)_o)->_getColor4b();}
sSI   YAC_CALL Color___setRgbpi     (void *_o, yacmemptr _args               ) {return (sSI)((_Color*)_o)->_setRgbpi(_args.mem[0].si);}
sSI   YAC_CALL Color___init4i       (void *_o, yacmemptr _args               ) {return (sSI)((_Color*)_o)->_init4i(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si, _args.mem[3].si);}
sSI   YAC_CALL Color___init4f       (void *_o, yacmemptr _args               ) {return (sSI)((_Color*)_o)->_init4f(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32);}
sSI   YAC_CALL Color___init3f       (void *_o, yacmemptr _args               ) {return (sSI)((_Color*)_o)->_init3f(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
sSI   YAC_CALL Color___initGamma3f  (void *_o, yacmemptr _args               ) {return (sSI)((_Color*)_o)->_initGamma3f(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32);}
sSI   YAC_CALL Color___getRi        (void *_o                                ) {return (sSI)((_Color*)_o)->_getRi();}
sSI   YAC_CALL Color___getGi        (void *_o                                ) {return (sSI)((_Color*)_o)->_getGi();}
sSI   YAC_CALL Color___getBi        (void *_o                                ) {return (sSI)((_Color*)_o)->_getBi();}
sSI   YAC_CALL Color___getAi        (void *_o                                ) {return (sSI)((_Color*)_o)->_getAi();}
sF32  YAC_CALL Color___getRf        (void *_o                                ) {return (sF32)((_Color*)_o)->_getRf();}
sF32  YAC_CALL Color___getGf        (void *_o                                ) {return (sF32)((_Color*)_o)->_getGf();}
sF32  YAC_CALL Color___getBf        (void *_o                                ) {return (sF32)((_Color*)_o)->_getBf();}
sF32  YAC_CALL Color___getAf        (void *_o                                ) {return (sF32)((_Color*)_o)->_getAf();}
void  YAC_CALL Color___setAi        (void *_o, yacmemptr _args               ) {((_Color*)_o)->_setAi(_args.mem[0].si);}
void  YAC_CALL Color___setAf        (void *_o, yacmemptr _args               ) {((_Color*)_o)->_setAf(_args.mem[0].f32);}
void  YAC_CALL Color___setRi        (void *_o, yacmemptr _args               ) {((_Color*)_o)->_setRi(_args.mem[0].si);}
void  YAC_CALL Color___setRf        (void *_o, yacmemptr _args               ) {((_Color*)_o)->_setRf(_args.mem[0].f32);}
void  YAC_CALL Color___setGi        (void *_o, yacmemptr _args               ) {((_Color*)_o)->_setGi(_args.mem[0].si);}
void  YAC_CALL Color___setGf        (void *_o, yacmemptr _args               ) {((_Color*)_o)->_setGf(_args.mem[0].f32);}
void  YAC_CALL Color___getString    (void *_o, YAC_Value *_r                 ) {((_Color*)_o)->_getString(_r);}
void  YAC_CALL Color___setBi        (void *_o, yacmemptr _args               ) {((_Color*)_o)->_setBi(_args.mem[0].si);}
void  YAC_CALL Color___setBf        (void *_o, yacmemptr _args               ) {((_Color*)_o)->_setBf(_args.mem[0].f32);}
sF32  YAC_CALL Color___getGamma     (void *_o                                ) {return (sF32)((_Color*)_o)->_getGamma();}
void  YAC_CALL Color___setGamma     (void *_o, yacmemptr _args               ) {((_Color*)_o)->_setGamma(_args.mem[0].f32);}
void  YAC_CALL Color___glColor      (void *_o                                ) {((_Color*)_o)->_glColor();}
sSI   YAC_CALL Color___getBlendf    (void *_o, yacmemptr _args               ) {return (sSI)((_Color*)_o)->_getBlendf(_args.mem[0].f32);}
sSI   YAC_CALL Color___getGammaf    (void *_o, yacmemptr _args               ) {return (sSI)((_Color*)_o)->_getGammaf(_args.mem[0].f32);}
sSI   YAC_CALL Color___mixf         (void *_o, yacmemptr _args               ) {return (sSI)((_Color*)_o)->_mixf(_args.mem[0].o, _args.mem[1].f32);}
void  YAC_CALL Color___glColorGamma (void *_o, yacmemptr _args               ) {((_Color*)_o)->_glColorGamma(_args.mem[0].f32);}
void  YAC_CALL Color___glLightMaterialAmbient(void *_o, yacmemptr _args      ) {((_Color*)_o)->_glLightMaterialAmbient(_args.mem[0].si);}
void  YAC_CALL Color___glLightMaterialDiffuse(void *_o, yacmemptr _args      ) {((_Color*)_o)->_glLightMaterialDiffuse(_args.mem[0].si);}
void  YAC_CALL Color___glLightMaterialAmbientAndDiffuse(void *_o, yacmemptr _args) {((_Color*)_o)->_glLightMaterialAmbientAndDiffuse(_args.mem[0].si);}
void  YAC_CALL Color___glLightMaterialSpecular(void *_o, yacmemptr _args     ) {((_Color*)_o)->_glLightMaterialSpecular(_args.mem[0].si);}
void  YAC_CALL Color___glLightMaterialEmission(void *_o, yacmemptr _args     ) {((_Color*)_o)->_glLightMaterialEmission(_args.mem[0].si);}
