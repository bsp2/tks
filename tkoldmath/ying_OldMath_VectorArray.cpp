// ---- ying_OldMath_VectorArray.cpp: auto generated by YInG - the YAC interface generator (Wed, 31/Jul/2019 21:16:42)

sSI   YAC_CALL VectorArray___alloc  (void *, yacmemptr             );
void  YAC_CALL VectorArray___free   (void *                        );
sSI   YAC_CALL VectorArray___add    (void *, yacmemptr             );
sSI   YAC_CALL VectorArray___addEmpty(void *, yacmemptr            );
sSI   YAC_CALL VectorArray___getNumElements(void *                 );
sSI   YAC_CALL VectorArray___getMaxElements(void *                 );
void  YAC_CALL VectorArray___empty  (void *                        );
sSI   YAC_CALL VectorArray___realloc(void *, yacmemptr             );
sSI   YAC_CALL VectorArray___insert (void *, yacmemptr             );
sSI   YAC_CALL VectorArray___delete (void *, yacmemptr             );
void  YAC_CALL VectorArray___zero   (void *                        );
void  YAC_CALL VectorArray___reverse(void *                        );
void  YAC_CALL VectorArray___print  (void *                        );
void  YAC_CALL VectorArray___rotate (void *, yacmemptr             );
void  YAC_CALL VectorArray___translatev(void *, yacmemptr          );
void  YAC_CALL VectorArray___scalev (void *, yacmemptr             );
void* YAC_CALL VectorArray___getNextFree(void *                    );
void  YAC_CALL VectorArray___setNumElements(void *, yacmemptr      );
void  YAC_CALL VectorArray___rotateInv(void *, yacmemptr           );
void  YAC_CALL VectorArray__sortByX (void *, yacmemptr             );
void  YAC_CALL VectorArray__sortByY (void *, yacmemptr             );
void  YAC_CALL VectorArray__sortByZ (void *, yacmemptr             );
sSI   YAC_CALL VectorArray__reorderFrom(void *, yacmemptr          );

// ------------------ YAC class "_VectorArray" reflection map (implementation) ------------------
sUI          YAC_VCALL _VectorArray::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _VectorArray::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _VectorArray::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _VectorArray::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _VectorArray::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _VectorArray::yacMethodGetNum                  (void) {return 24;}
const char **YAC_VCALL _VectorArray::yacMethodGetNames                (void) {static const char *r[]={"operator", "alloc", "free", "add", "addEmpty", "getNumElements", "getMaxElements", "empty", "realloc", "insert", "delete", "zero", "reverse", "print", "rotate", "translatev", "scalev", "getNextFree", "setNumElements", "rotateInv", "sortByX", "sortByY", "sortByZ", "reorderFrom"}; return r;}
const sUI   *YAC_VCALL _VectorArray::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 1, 0, 1, 1, 0, 0, 0, 1, 2, 1, 0, 0, 0, 2, 2, 2, 0, 1, 2, 1, 1, 1, 2}; return r;}
const sUI  **YAC_VCALL _VectorArray::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={1,};static const sUI rt2[]={0,};static const sUI rt3[]={3,};static const sUI rt4[]={1,};static const sUI rt5[]={0,};static const sUI rt6[]={0,};static const sUI rt7[]={0,};static const sUI rt8[]={1,};static const sUI rt9[]={1, 3,};static const sUI rt10[]={1,};static const sUI rt11[]={0,};static const sUI rt12[]={0,};static const sUI rt13[]={0,};static const sUI rt14[]={3, 3,};static const sUI rt15[]={3, 3,};static const sUI rt16[]={3, 3,};static const sUI rt17[]={0,};static const sUI rt18[]={1,};static const sUI rt19[]={3, 3,};static const sUI rt20[]={3,};static const sUI rt21[]={3,};static const sUI rt22[]={3,};static const sUI rt23[]={3, 3,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23}; return r;}
const char***YAC_VCALL _VectorArray::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0, (const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0, (const char*)0,};static const char *rs15[]={(const char*)0, (const char*)0,};static const char *rs16[]={(const char*)0, (const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0, (const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0, (const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23}; return r;}
const sUI   *YAC_VCALL _VectorArray::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 1}; return r;}
const char **YAC_VCALL _VectorArray::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL _VectorArray::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)VectorArray___alloc, (void*)VectorArray___free, (void*)VectorArray___add, (void*)VectorArray___addEmpty, (void*)VectorArray___getNumElements, (void*)VectorArray___getMaxElements, (void*)VectorArray___empty, (void*)VectorArray___realloc, (void*)VectorArray___insert, (void*)VectorArray___delete, (void*)VectorArray___zero, (void*)VectorArray___reverse, (void*)VectorArray___print, (void*)VectorArray___rotate, (void*)VectorArray___translatev, (void*)VectorArray___scalev, (void*)VectorArray___getNextFree, (void*)VectorArray___setNumElements, (void*)VectorArray___rotateInv, (void*)VectorArray__sortByX, (void*)VectorArray__sortByY, (void*)VectorArray__sortByZ, (void*)VectorArray__reorderFrom}; return r;}
sUI          YAC_VCALL _VectorArray::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _VectorArray::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _VectorArray::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _VectorArray::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(_VectorArray, "VectorArray");

sSI   YAC_CALL VectorArray___alloc  (void *_o, yacmemptr _args               ) {return (sSI)((_VectorArray*)_o)->_alloc(_args.mem[0].si);}
void  YAC_CALL VectorArray___free   (void *_o                                ) {((_VectorArray*)_o)->_free();}
sSI   YAC_CALL VectorArray___add    (void *_o, yacmemptr _args               ) {return (sSI)((_VectorArray*)_o)->_add(_args.mem[0].o);}
sSI   YAC_CALL VectorArray___addEmpty(void *_o, yacmemptr _args              ) {return (sSI)((_VectorArray*)_o)->_addEmpty(_args.mem[0].si);}
sSI   YAC_CALL VectorArray___getNumElements(void *_o                         ) {return (sSI)((_VectorArray*)_o)->_getNumElements();}
sSI   YAC_CALL VectorArray___getMaxElements(void *_o                         ) {return (sSI)((_VectorArray*)_o)->_getMaxElements();}
void  YAC_CALL VectorArray___empty  (void *_o                                ) {((_VectorArray*)_o)->_empty();}
sSI   YAC_CALL VectorArray___realloc(void *_o, yacmemptr _args               ) {return (sSI)((_VectorArray*)_o)->_realloc(_args.mem[0].si);}
sSI   YAC_CALL VectorArray___insert (void *_o, yacmemptr _args               ) {return (sSI)((_VectorArray*)_o)->_insert(_args.mem[0].si, _args.mem[1].o);}
sSI   YAC_CALL VectorArray___delete (void *_o, yacmemptr _args               ) {return (sSI)((_VectorArray*)_o)->_delete(_args.mem[0].si);}
void  YAC_CALL VectorArray___zero   (void *_o                                ) {((_VectorArray*)_o)->_zero();}
void  YAC_CALL VectorArray___reverse(void *_o                                ) {((_VectorArray*)_o)->_reverse();}
void  YAC_CALL VectorArray___print  (void *_o                                ) {((_VectorArray*)_o)->_print();}
void  YAC_CALL VectorArray___rotate (void *_o, yacmemptr _args               ) {((_VectorArray*)_o)->_rotate(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL VectorArray___translatev(void *_o, yacmemptr _args            ) {((_VectorArray*)_o)->_translatev(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL VectorArray___scalev (void *_o, yacmemptr _args               ) {((_VectorArray*)_o)->_scalev(_args.mem[0].o, _args.mem[1].o);}
void* YAC_CALL VectorArray___getNextFree(void *_o                            ) {return (void*)((_VectorArray*)_o)->_getNextFree();}
void  YAC_CALL VectorArray___setNumElements(void *_o, yacmemptr _args        ) {((_VectorArray*)_o)->_setNumElements(_args.mem[0].si);}
void  YAC_CALL VectorArray___rotateInv(void *_o, yacmemptr _args             ) {((_VectorArray*)_o)->_rotateInv(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL VectorArray__sortByX (void *_o, yacmemptr _args               ) {((_VectorArray*)_o)->sortByX(_args.mem[0].o);}
void  YAC_CALL VectorArray__sortByY (void *_o, yacmemptr _args               ) {((_VectorArray*)_o)->sortByY(_args.mem[0].o);}
void  YAC_CALL VectorArray__sortByZ (void *_o, yacmemptr _args               ) {((_VectorArray*)_o)->sortByZ(_args.mem[0].o);}
sSI   YAC_CALL VectorArray__reorderFrom(void *_o, yacmemptr _args            ) {return (sSI)((_VectorArray*)_o)->reorderFrom(_args.mem[0].o, _args.mem[1].o);}
