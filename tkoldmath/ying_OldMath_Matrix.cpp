// ---- ying_OldMath_Matrix.cpp: auto generated by YInG - the YAC interface generator (Wed, 31/Jul/2019 21:16:42)

void  YAC_CALL Matrix__invert       (void *                        );
void  YAC_CALL Matrix__scale        (void *, yacmemptr             );
void  YAC_CALL Matrix__init         (void *, yacmemptr             );
void  YAC_CALL Matrix__initDeg      (void *, yacmemptr             );
void  YAC_CALL Matrix__loadIdentity (void *                        );
void  YAC_CALL Matrix___add         (void *, yacmemptr             );
void  YAC_CALL Matrix___mul         (void *, yacmemptr             );
void  YAC_CALL Matrix___sub         (void *, yacmemptr             );
void  YAC_CALL Matrix___getI        (void *, YAC_Value *           );
void  YAC_CALL Matrix___getJ        (void *, YAC_Value *           );
void  YAC_CALL Matrix___getK        (void *, YAC_Value *           );
void  YAC_CALL Matrix___setI        (void *, yacmemptr             );
void  YAC_CALL Matrix___setJ        (void *, yacmemptr             );
void  YAC_CALL Matrix___setK        (void *, yacmemptr             );
void  YAC_CALL Matrix___print       (void *                        );
void  YAC_CALL Matrix___initv       (void *, yacmemptr             );
void  YAC_CALL Matrix___getString   (void *, YAC_Value *           );
void  YAC_CALL Matrix___rotate      (void *, yacmemptr             );
void  YAC_CALL Matrix___rotateInv   (void *, yacmemptr             );
void  YAC_CALL Matrix___mulInv      (void *, yacmemptr             );
void  YAC_CALL Matrix___initIJK     (void *, yacmemptr             );
void  YAC_CALL Matrix___initIJKInv  (void *, yacmemptr             );

// ------------------ YAC class "_Matrix" reflection map (implementation) ------------------
sUI          YAC_VCALL _Matrix::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Matrix::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Matrix::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Matrix::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Matrix::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Matrix::yacMethodGetNum                  (void) {return 23;}
const char **YAC_VCALL _Matrix::yacMethodGetNames                (void) {static const char *r[]={"operator", "invert", "scale", "init", "initDeg", "loadIdentity", "add", "mul", "sub", "getI", "getJ", "getK", "setI", "setJ", "setK", "print", "initv", "getString", "rotate", "rotateInv", "mulInv", "initIJK", "initIJKInv"}; return r;}
const sUI   *YAC_VCALL _Matrix::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 0, 1, 3, 3, 0, 1, 2, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 2, 3, 3}; return r;}
const sUI  **YAC_VCALL _Matrix::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={2,};static const sUI rt3[]={2, 2, 2,};static const sUI rt4[]={2, 2, 2,};static const sUI rt5[]={0,};static const sUI rt6[]={3,};static const sUI rt7[]={3, 3,};static const sUI rt8[]={3,};static const sUI rt9[]={0,};static const sUI rt10[]={0,};static const sUI rt11[]={0,};static const sUI rt12[]={3,};static const sUI rt13[]={3,};static const sUI rt14[]={3,};static const sUI rt15[]={0,};static const sUI rt16[]={3,};static const sUI rt17[]={0,};static const sUI rt18[]={3,};static const sUI rt19[]={3,};static const sUI rt20[]={3, 3,};static const sUI rt21[]={3, 3, 3,};static const sUI rt22[]={3, 3, 3,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22}; return r;}
const char***YAC_VCALL _Matrix::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs4[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0, (const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0, (const char*)0,};static const char *rs21[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs22[]={(const char*)0, (const char*)0, (const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22}; return r;}
const sUI   *YAC_VCALL _Matrix::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0}; return r;}
const char **YAC_VCALL _Matrix::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL _Matrix::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)Matrix__invert, (void*)Matrix__scale, (void*)Matrix__init, (void*)Matrix__initDeg, (void*)Matrix__loadIdentity, (void*)Matrix___add, (void*)Matrix___mul, (void*)Matrix___sub, (void*)Matrix___getI, (void*)Matrix___getJ, (void*)Matrix___getK, (void*)Matrix___setI, (void*)Matrix___setJ, (void*)Matrix___setK, (void*)Matrix___print, (void*)Matrix___initv, (void*)Matrix___getString, (void*)Matrix___rotate, (void*)Matrix___rotateInv, (void*)Matrix___mulInv, (void*)Matrix___initIJK, (void*)Matrix___initIJKInv}; return r;}
sUI          YAC_VCALL _Matrix::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Matrix::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Matrix::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Matrix::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(_Matrix, "Matrix");

void  YAC_CALL Matrix__invert       (void *_o                                ) {((_Matrix*)_o)->invert();}
void  YAC_CALL Matrix__scale        (void *_o, yacmemptr _args               ) {((_Matrix*)_o)->scale(_args.mem[0].f32);}
void  YAC_CALL Matrix__init         (void *_o, yacmemptr _args               ) {((_Matrix*)_o)->init(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix__initDeg      (void *_o, yacmemptr _args               ) {((_Matrix*)_o)->initDeg(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Matrix__loadIdentity (void *_o                                ) {((_Matrix*)_o)->loadIdentity();}
void  YAC_CALL Matrix___add         (void *_o, yacmemptr _args               ) {((_Matrix*)_o)->_add(_args.mem[0].o);}
void  YAC_CALL Matrix___mul         (void *_o, yacmemptr _args               ) {((_Matrix*)_o)->_mul(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix___sub         (void *_o, yacmemptr _args               ) {((_Matrix*)_o)->_sub(_args.mem[0].o);}
void  YAC_CALL Matrix___getI        (void *_o, YAC_Value *_r                 ) {((_Matrix*)_o)->_getI(_r);}
void  YAC_CALL Matrix___getJ        (void *_o, YAC_Value *_r                 ) {((_Matrix*)_o)->_getJ(_r);}
void  YAC_CALL Matrix___getK        (void *_o, YAC_Value *_r                 ) {((_Matrix*)_o)->_getK(_r);}
void  YAC_CALL Matrix___setI        (void *_o, yacmemptr _args               ) {((_Matrix*)_o)->_setI(_args.mem[0].o);}
void  YAC_CALL Matrix___setJ        (void *_o, yacmemptr _args               ) {((_Matrix*)_o)->_setJ(_args.mem[0].o);}
void  YAC_CALL Matrix___setK        (void *_o, yacmemptr _args               ) {((_Matrix*)_o)->_setK(_args.mem[0].o);}
void  YAC_CALL Matrix___print       (void *_o                                ) {((_Matrix*)_o)->_print();}
void  YAC_CALL Matrix___initv       (void *_o, yacmemptr _args               ) {((_Matrix*)_o)->_initv(_args.mem[0].o);}
void  YAC_CALL Matrix___getString   (void *_o, YAC_Value *_r                 ) {((_Matrix*)_o)->_getString(_r);}
void  YAC_CALL Matrix___rotate      (void *_o, yacmemptr _args               ) {((_Matrix*)_o)->_rotate(_args.mem[0].o);}
void  YAC_CALL Matrix___rotateInv   (void *_o, yacmemptr _args               ) {((_Matrix*)_o)->_rotateInv(_args.mem[0].o);}
void  YAC_CALL Matrix___mulInv      (void *_o, yacmemptr _args               ) {((_Matrix*)_o)->_mulInv(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL Matrix___initIJK     (void *_o, yacmemptr _args               ) {((_Matrix*)_o)->_initIJK(_args.mem[0].o, _args.mem[1].o, _args.mem[2].o);}
void  YAC_CALL Matrix___initIJKInv  (void *_o, yacmemptr _args               ) {((_Matrix*)_o)->_initIJKInv(_args.mem[0].o, _args.mem[1].o, _args.mem[2].o);}
