// ---- ying_Shader_ZGLShader.cpp: auto generated by YInG - the YAC interface generator (Wed, 1/Oct/2025 17:31:51)

#ifndef YAC_NO_HOST
void  YAC_CALL ZGLShader__SetDefaultVersion(void *, yacmemptr      );
void  YAC_CALL ZGLShader__setVertexSource(void *, yacmemptr        );
void  YAC_CALL ZGLShader__getVertexSource(void *, YAC_Value *      );
void  YAC_CALL ZGLShader__setFragmentSource(void *, yacmemptr      );
void  YAC_CALL ZGLShader__getFragmentSource(void *, YAC_Value *    );
sSI   YAC_CALL ZGLShader__create    (void *                        );
void  YAC_CALL ZGLShader__bind      (void *                        );
void  YAC_CALL ZGLShader__unbind    (void *                        );
void  YAC_CALL ZGLShader__destroy   (void *                        );
sSI   YAC_CALL ZGLShader__getUniformLocation(void *, yacmemptr     );
sSI   YAC_CALL ZGLShader__getAttribLocation(void *, yacmemptr      );
sSI   YAC_CALL ZGLShader__getProgramId(void *                      );
sSI   YAC_CALL ZGLShader__getFragmentShaderId(void *               );
sSI   YAC_CALL ZGLShader__getVertexShaderId(void *                 );
sSI   YAC_CALL ZGLShader__getNumActiveAttributes(void *            );
sSI   YAC_CALL ZGLShader__getNumActiveUniforms(void *              );
sSI   YAC_CALL ZGLShader__getProgramBinaryLength(void *            );
#endif // YAC_NO_HOST

// ------------------ YAC class "_ZGLShader" reflection map (implementation) ------------------
sUI          YAC_VCALL _ZGLShader::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _ZGLShader::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _ZGLShader::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _ZGLShader::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _ZGLShader::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _ZGLShader::yacMethodGetNum                  (void) {return 18;}
const char **YAC_VCALL _ZGLShader::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "SetDefaultVersion", "setVertexSource", "getVertexSource", "setFragmentSource", "getFragmentSource", "create", "bind", "unbind", "destroy", "getUniformLocation", "getAttribLocation", "getProgramId", "getFragmentShaderId", "getVertexShaderId", "getNumActiveAttributes", "getNumActiveUniforms", "getProgramBinaryLength"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _ZGLShader::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _ZGLShader::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={3,};static const sUI rt2[]={3,};static const sUI rt3[]={0,};static const sUI rt4[]={3,};static const sUI rt5[]={0,};static const sUI rt6[]={0,};static const sUI rt7[]={0,};static const sUI rt8[]={0,};static const sUI rt9[]={0,};static const sUI rt10[]={3,};static const sUI rt11[]={3,};static const sUI rt12[]={0,};static const sUI rt13[]={0,};static const sUI rt14[]={0,};static const sUI rt15[]={0,};static const sUI rt16[]={0,};static const sUI rt17[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _ZGLShader::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={"String",};static const char *rs2[]={"String",};static const char *rs3[]={(const char*)0,};static const char *rs4[]={"String",};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={"String",};static const char *rs11[]={"String",};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _ZGLShader::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 0, 4, 0, 4, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _ZGLShader::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _ZGLShader::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)ZGLShader__SetDefaultVersion, (void*)ZGLShader__setVertexSource, (void*)ZGLShader__getVertexSource, (void*)ZGLShader__setFragmentSource, (void*)ZGLShader__getFragmentSource, (void*)ZGLShader__create, (void*)ZGLShader__bind, (void*)ZGLShader__unbind, (void*)ZGLShader__destroy, (void*)ZGLShader__getUniformLocation, (void*)ZGLShader__getAttribLocation, (void*)ZGLShader__getProgramId, (void*)ZGLShader__getFragmentShaderId, (void*)ZGLShader__getVertexShaderId, (void*)ZGLShader__getNumActiveAttributes, (void*)ZGLShader__getNumActiveUniforms, (void*)ZGLShader__getProgramBinaryLength}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _ZGLShader::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _ZGLShader::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _ZGLShader::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _ZGLShader::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(_ZGLShader, "ZGLShader");

#ifndef YAC_NO_HOST
void  YAC_CALL ZGLShader__SetDefaultVersion(void *_o, yacmemptr _args        ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ ((_ZGLShader*)_o)->SetDefaultVersion((YAC_String*)_args.mem[0].o);}}
void  YAC_CALL ZGLShader__setVertexSource(void *_o, yacmemptr _args          ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ ((_ZGLShader*)_o)->setVertexSource((YAC_String*)_args.mem[0].o);}}
void  YAC_CALL ZGLShader__getVertexSource(void *_o, YAC_Value *_r            ) {((_ZGLShader*)_o)->getVertexSource(_r);}
void  YAC_CALL ZGLShader__setFragmentSource(void *_o, yacmemptr _args        ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ ((_ZGLShader*)_o)->setFragmentSource((YAC_String*)_args.mem[0].o);}}
void  YAC_CALL ZGLShader__getFragmentSource(void *_o, YAC_Value *_r          ) {((_ZGLShader*)_o)->getFragmentSource(_r);}
sSI   YAC_CALL ZGLShader__create    (void *_o                                ) {return (sSI)((_ZGLShader*)_o)->create();}
void  YAC_CALL ZGLShader__bind      (void *_o                                ) {((_ZGLShader*)_o)->bind();}
void  YAC_CALL ZGLShader__unbind    (void *_o                                ) {((_ZGLShader*)_o)->unbind();}
void  YAC_CALL ZGLShader__destroy   (void *_o                                ) {((_ZGLShader*)_o)->destroy();}
sSI   YAC_CALL ZGLShader__getUniformLocation(void *_o, yacmemptr _args       ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_ZGLShader*)_o)->getUniformLocation((YAC_String*)_args.mem[0].o);}return 0;}
sSI   YAC_CALL ZGLShader__getAttribLocation(void *_o, yacmemptr _args        ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_ZGLShader*)_o)->getAttribLocation((YAC_String*)_args.mem[0].o);}return 0;}
sSI   YAC_CALL ZGLShader__getProgramId(void *_o                              ) {return (sSI)((_ZGLShader*)_o)->getProgramId();}
sSI   YAC_CALL ZGLShader__getFragmentShaderId(void *_o                       ) {return (sSI)((_ZGLShader*)_o)->getFragmentShaderId();}
sSI   YAC_CALL ZGLShader__getVertexShaderId(void *_o                         ) {return (sSI)((_ZGLShader*)_o)->getVertexShaderId();}
sSI   YAC_CALL ZGLShader__getNumActiveAttributes(void *_o                    ) {return (sSI)((_ZGLShader*)_o)->getNumActiveAttributes();}
sSI   YAC_CALL ZGLShader__getNumActiveUniforms(void *_o                      ) {return (sSI)((_ZGLShader*)_o)->getNumActiveUniforms();}
sSI   YAC_CALL ZGLShader__getProgramBinaryLength(void *_o                    ) {return (sSI)((_ZGLShader*)_o)->getProgramBinaryLength();}
#endif // YAC_NO_HOST
