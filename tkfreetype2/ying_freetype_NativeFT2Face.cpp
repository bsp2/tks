// ---- ying_freetype_NativeFT2Face.cpp: auto generated by YInG - the YAC interface generator (Wed, 31/Jul/2019 21:22:33)

sF32  YAC_CALL NativeFT2Face__getHeight(void *                     );
sF32  YAC_CALL NativeFT2Face__getAscender(void *                   );
sF32  YAC_CALL NativeFT2Face__getDescender(void *                  );
sF32  YAC_CALL NativeFT2Face__getUnderlinePosition(void *          );
sF32  YAC_CALL NativeFT2Face__getUnderlineThickness(void *         );
sSI   YAC_CALL NativeFT2Face__openMemoryFace(void *, yacmemptr     );
sSI   YAC_CALL NativeFT2Face__openFileFace(void *, yacmemptr       );
void  YAC_CALL NativeFT2Face__loadChar(void *, yacmemptr           );
void  YAC_CALL NativeFT2Face__renderGlyph(void *, yacmemptr        );
void  YAC_CALL NativeFT2Face__storeGlyphsAdvanceX(void *, yacmemptr);
void  YAC_CALL NativeFT2Face__storeFamilyName(void *, yacmemptr    );
void  YAC_CALL NativeFT2Face__storeStyleName(void *, yacmemptr     );
sSI   YAC_CALL NativeFT2Face__getStyleFlags(void *                 );
void  YAC_CALL NativeFT2Face__setMonochrome(void *, yacmemptr      );
sSI   YAC_CALL NativeFT2Face__getMonochrome(void *                 );

// ------------------ YAC class "NativeFT2Face" reflection map (implementation) ------------------
sUI          YAC_VCALL NativeFT2Face::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL NativeFT2Face::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL NativeFT2Face::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL NativeFT2Face::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL NativeFT2Face::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL NativeFT2Face::yacMethodGetNum                  (void) {return 16;}
const char **YAC_VCALL NativeFT2Face::yacMethodGetNames                (void) {static const char *r[]={"operator", "getHeight", "getAscender", "getDescender", "getUnderlinePosition", "getUnderlineThickness", "openMemoryFace", "openFileFace", "loadChar", "renderGlyph", "storeGlyphsAdvanceX", "storeFamilyName", "storeStyleName", "getStyleFlags", "setMonochrome", "getMonochrome"}; return r;}
const sUI   *YAC_VCALL NativeFT2Face::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 0, 0, 0, 0, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0}; return r;}
const sUI  **YAC_VCALL NativeFT2Face::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={0,};static const sUI rt3[]={0,};static const sUI rt4[]={0,};static const sUI rt5[]={0,};static const sUI rt6[]={3, 2, 2,};static const sUI rt7[]={3, 2, 2,};static const sUI rt8[]={3, 1,};static const sUI rt9[]={3,};static const sUI rt10[]={3,};static const sUI rt11[]={3,};static const sUI rt12[]={3,};static const sUI rt13[]={0,};static const sUI rt14[]={1,};static const sUI rt15[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15}; return r;}
const char***YAC_VCALL NativeFT2Face::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs7[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs8[]={(const char*)0, (const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15}; return r;}
const sUI   *YAC_VCALL NativeFT2Face::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1}; return r;}
const char **YAC_VCALL NativeFT2Face::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL NativeFT2Face::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)NativeFT2Face__getHeight, (void*)NativeFT2Face__getAscender, (void*)NativeFT2Face__getDescender, (void*)NativeFT2Face__getUnderlinePosition, (void*)NativeFT2Face__getUnderlineThickness, (void*)NativeFT2Face__openMemoryFace, (void*)NativeFT2Face__openFileFace, (void*)NativeFT2Face__loadChar, (void*)NativeFT2Face__renderGlyph, (void*)NativeFT2Face__storeGlyphsAdvanceX, (void*)NativeFT2Face__storeFamilyName, (void*)NativeFT2Face__storeStyleName, (void*)NativeFT2Face__getStyleFlags, (void*)NativeFT2Face__setMonochrome, (void*)NativeFT2Face__getMonochrome}; return r;}
sUI          YAC_VCALL NativeFT2Face::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL NativeFT2Face::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL NativeFT2Face::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL NativeFT2Face::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(NativeFT2Face, "NativeFT2Face");

sF32  YAC_CALL NativeFT2Face__getHeight(void *_o                             ) {return (sF32)((NativeFT2Face*)_o)->getHeight();}
sF32  YAC_CALL NativeFT2Face__getAscender(void *_o                           ) {return (sF32)((NativeFT2Face*)_o)->getAscender();}
sF32  YAC_CALL NativeFT2Face__getDescender(void *_o                          ) {return (sF32)((NativeFT2Face*)_o)->getDescender();}
sF32  YAC_CALL NativeFT2Face__getUnderlinePosition(void *_o                  ) {return (sF32)((NativeFT2Face*)_o)->getUnderlinePosition();}
sF32  YAC_CALL NativeFT2Face__getUnderlineThickness(void *_o                 ) {return (sF32)((NativeFT2Face*)_o)->getUnderlineThickness();}
sSI   YAC_CALL NativeFT2Face__openMemoryFace(void *_o, yacmemptr _args       ) {return (sSI)((NativeFT2Face*)_o)->openMemoryFace(_args.mem[0].o, _args.mem[1].f32, _args.mem[2].f32);}
sSI   YAC_CALL NativeFT2Face__openFileFace(void *_o, yacmemptr _args         ) {return (sSI)((NativeFT2Face*)_o)->openFileFace(_args.mem[0].o, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL NativeFT2Face__loadChar(void *_o, yacmemptr _args             ) {((NativeFT2Face*)_o)->loadChar(_args.mem[0].o, _args.mem[1].si);}
void  YAC_CALL NativeFT2Face__renderGlyph(void *_o, yacmemptr _args          ) {((NativeFT2Face*)_o)->renderGlyph(_args.mem[0].o);}
void  YAC_CALL NativeFT2Face__storeGlyphsAdvanceX(void *_o, yacmemptr _args  ) {((NativeFT2Face*)_o)->storeGlyphsAdvanceX(_args.mem[0].o);}
void  YAC_CALL NativeFT2Face__storeFamilyName(void *_o, yacmemptr _args      ) {((NativeFT2Face*)_o)->storeFamilyName(_args.mem[0].o);}
void  YAC_CALL NativeFT2Face__storeStyleName(void *_o, yacmemptr _args       ) {((NativeFT2Face*)_o)->storeStyleName(_args.mem[0].o);}
sSI   YAC_CALL NativeFT2Face__getStyleFlags(void *_o                         ) {return (sSI)((NativeFT2Face*)_o)->getStyleFlags();}
void  YAC_CALL NativeFT2Face__setMonochrome(void *_o, yacmemptr _args        ) {((NativeFT2Face*)_o)->setMonochrome(_args.mem[0].si);}
sSI   YAC_CALL NativeFT2Face__getMonochrome(void *_o                         ) {return (sSI)((NativeFT2Face*)_o)->getMonochrome();}
