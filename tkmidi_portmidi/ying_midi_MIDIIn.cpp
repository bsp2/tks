// ---- ying_midi_MIDIIn.cpp: auto generated by YInG - the YAC interface generator (Tue, 1/Aug/2023 23:55:10)

#ifndef YAC_NO_HOST
sSI   YAC_CALL MIDIIn___openByName  (void *, yacmemptr             );
sSI   YAC_CALL MIDIIn___openByIdx   (void *, yacmemptr             );
void  YAC_CALL MIDIIn___openLocalMIDI(void *                       );
void  YAC_CALL MIDIIn___close       (void *                        );
void  YAC_CALL MIDIIn___start       (void *                        );
sSI   YAC_CALL MIDIIn___isAlive     (void *                        );
void  YAC_CALL MIDIIn___stop        (void *                        );
void  YAC_CALL MIDIIn___reset       (void *                        );
void  YAC_CALL MIDIIn___clearEvents (void *                        );
void  YAC_CALL MIDIIn___getDeviceName(void *, YAC_Value *          );
sSI   YAC_CALL MIDIIn__getDeviceIdx (void *                        );
void* YAC_CALL MIDIIn___getNextEvent(void *                        );
void* YAC_CALL MIDIIn___waitNextEvent(void *, yacmemptr            );
sSI   YAC_CALL MIDIIn___getNumEvents(void *                        );
sSI   YAC_CALL MIDIIn__GetNumDevices(void *                        );
void  YAC_CALL MIDIIn__GetDeviceNameByIdx(void *, yacmemptr, YAC_Value *);
void  YAC_CALL MIDIIn__setFltNoteOff(void *, yacmemptr             );
sSI   YAC_CALL MIDIIn__getFltNoteOff(void *                        );
void  YAC_CALL MIDIIn__setFltNoteOn (void *, yacmemptr             );
sSI   YAC_CALL MIDIIn__getFltNoteOn (void *                        );
void  YAC_CALL MIDIIn__setFltPolyPressure(void *, yacmemptr        );
sSI   YAC_CALL MIDIIn__getFltPolyPressure(void *                   );
void  YAC_CALL MIDIIn__setFltCC     (void *, yacmemptr             );
sSI   YAC_CALL MIDIIn__getFltCC     (void *                        );
void  YAC_CALL MIDIIn__setFltProgramChange(void *, yacmemptr       );
sSI   YAC_CALL MIDIIn__getFltProgramChange(void *                  );
void  YAC_CALL MIDIIn__setFltChannelPressure(void *, yacmemptr     );
sSI   YAC_CALL MIDIIn__getFltChannelPressure(void *                );
void  YAC_CALL MIDIIn__setFltPitchbend(void *, yacmemptr           );
sSI   YAC_CALL MIDIIn__getFltPitchbend(void *                      );
void  YAC_CALL MIDIIn__setFltSysEx  (void *, yacmemptr             );
sSI   YAC_CALL MIDIIn__getFltSysEx  (void *                        );
void  YAC_CALL MIDIIn__setFltSysComTimeCode(void *, yacmemptr      );
sSI   YAC_CALL MIDIIn__getFltSysComTimeCode(void *                 );
void  YAC_CALL MIDIIn__setFltSysComSongPosition(void *, yacmemptr  );
sSI   YAC_CALL MIDIIn__getFltSysComSongPosition(void *             );
void  YAC_CALL MIDIIn__setFltSysComSongSelect(void *, yacmemptr    );
sSI   YAC_CALL MIDIIn__getFltSysComSongSelect(void *               );
void  YAC_CALL MIDIIn__setFltSysComTuneRequest(void *, yacmemptr   );
sSI   YAC_CALL MIDIIn__getFltSysComTuneRequest(void *              );
void  YAC_CALL MIDIIn__setFltSysRTTimingClock(void *, yacmemptr    );
sSI   YAC_CALL MIDIIn__getFltSysRTTimingClock(void *               );
void  YAC_CALL MIDIIn__setFltSysRTStart(void *, yacmemptr          );
sSI   YAC_CALL MIDIIn__getFltSysRTStart(void *                     );
void  YAC_CALL MIDIIn__setFltSysRTContinue(void *, yacmemptr       );
sSI   YAC_CALL MIDIIn__getFltSysRTContinue(void *                  );
void  YAC_CALL MIDIIn__setFltSysRTStop(void *, yacmemptr           );
sSI   YAC_CALL MIDIIn__getFltSysRTStop(void *                      );
void  YAC_CALL MIDIIn__setFltSysRTActiveSensing(void *, yacmemptr  );
sSI   YAC_CALL MIDIIn__getFltSysRTActiveSensing(void *             );
void  YAC_CALL MIDIIn__setFltSysRTSystemReset(void *, yacmemptr    );
sSI   YAC_CALL MIDIIn__getFltSysRTSystemReset(void *               );
void  YAC_CALL MIDIIn__setFltRpnSelect(void *, yacmemptr           );
sSI   YAC_CALL MIDIIn__getFltRpnSelect(void *                      );
void  YAC_CALL MIDIIn__setFltNrpnSelect(void *, yacmemptr          );
sSI   YAC_CALL MIDIIn__getFltNrpnSelect(void *                     );
void  YAC_CALL MIDIIn__setFltRpn    (void *, yacmemptr             );
sSI   YAC_CALL MIDIIn__getFltRpn    (void *                        );
void  YAC_CALL MIDIIn__setFltNrpn   (void *, yacmemptr             );
sSI   YAC_CALL MIDIIn__getFltNrpn   (void *                        );
void  YAC_CALL MIDIIn__setEnableParam(void *, yacmemptr            );
sSI   YAC_CALL MIDIIn__getEnableParam(void *, yacmemptr            );
void  YAC_CALL MIDIIn__setDataEntryMode(void *, yacmemptr          );
sSI   YAC_CALL MIDIIn__getDataEntryMode(void *, yacmemptr          );
void  YAC_CALL MIDIIn__parseBuffer  (void *, yacmemptr             );
#endif // YAC_NO_HOST

// ------------------ YAC class "MIDIIn" reflection map (implementation) ------------------
sUI          YAC_VCALL MIDIIn::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL MIDIIn::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL MIDIIn::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL MIDIIn::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL MIDIIn::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL MIDIIn::yacMethodGetNum                  (void) {return 66;}
const char **YAC_VCALL MIDIIn::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "openByName", "openByIdx", "openLocalMIDI", "close", "start", "isAlive", "stop", "reset", "clearEvents", "getDeviceName", "getDeviceIdx", "getNextEvent", "waitNextEvent", "getNumEvents", "GetNumDevices", "GetDeviceNameByIdx", "setFltNoteOff", "getFltNoteOff", "setFltNoteOn", "getFltNoteOn", "setFltPolyPressure", "getFltPolyPressure", "setFltCC", "getFltCC", "setFltProgramChange", "getFltProgramChange", "setFltChannelPressure", "getFltChannelPressure", "setFltPitchbend", "getFltPitchbend", "setFltSysEx", "getFltSysEx", "setFltSysComTimeCode", "getFltSysComTimeCode", "setFltSysComSongPosition", "getFltSysComSongPosition", "setFltSysComSongSelect", "getFltSysComSongSelect", "setFltSysComTuneRequest", "getFltSysComTuneRequest", "setFltSysRTTimingClock", "getFltSysRTTimingClock", "setFltSysRTStart", "getFltSysRTStart", "setFltSysRTContinue", "getFltSysRTContinue", "setFltSysRTStop", "getFltSysRTStop", "setFltSysRTActiveSensing", "getFltSysRTActiveSensing", "setFltSysRTSystemReset", "getFltSysRTSystemReset", "setFltRpnSelect", "getFltRpnSelect", "setFltNrpnSelect", "getFltNrpnSelect", "setFltRpn", "getFltRpn", "setFltNrpn", "getFltNrpn", "setEnableParam", "getEnableParam", "setDataEntryMode", "getDataEntryMode", "parseBuffer"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL MIDIIn::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 2, 1, 2, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL MIDIIn::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={3,};static const sUI rt2[]={1,};static const sUI rt3[]={0,};static const sUI rt4[]={0,};static const sUI rt5[]={0,};static const sUI rt6[]={0,};static const sUI rt7[]={0,};static const sUI rt8[]={0,};static const sUI rt9[]={0,};static const sUI rt10[]={0,};static const sUI rt11[]={0,};static const sUI rt12[]={0,};static const sUI rt13[]={1,};static const sUI rt14[]={0,};static const sUI rt15[]={0,};static const sUI rt16[]={1,};static const sUI rt17[]={1,};static const sUI rt18[]={0,};static const sUI rt19[]={1,};static const sUI rt20[]={0,};static const sUI rt21[]={1,};static const sUI rt22[]={0,};static const sUI rt23[]={1,};static const sUI rt24[]={0,};static const sUI rt25[]={1,};static const sUI rt26[]={0,};static const sUI rt27[]={1,};static const sUI rt28[]={0,};static const sUI rt29[]={1,};static const sUI rt30[]={0,};static const sUI rt31[]={1,};static const sUI rt32[]={0,};static const sUI rt33[]={1,};static const sUI rt34[]={0,};static const sUI rt35[]={1,};static const sUI rt36[]={0,};static const sUI rt37[]={1,};static const sUI rt38[]={0,};static const sUI rt39[]={1,};static const sUI rt40[]={0,};static const sUI rt41[]={1,};static const sUI rt42[]={0,};static const sUI rt43[]={1,};static const sUI rt44[]={0,};static const sUI rt45[]={1,};static const sUI rt46[]={0,};static const sUI rt47[]={1,};static const sUI rt48[]={0,};static const sUI rt49[]={1,};static const sUI rt50[]={0,};static const sUI rt51[]={1,};static const sUI rt52[]={0,};static const sUI rt53[]={1,};static const sUI rt54[]={0,};static const sUI rt55[]={1,};static const sUI rt56[]={0,};static const sUI rt57[]={1,};static const sUI rt58[]={0,};static const sUI rt59[]={1,};static const sUI rt60[]={0,};static const sUI rt61[]={1, 1,};static const sUI rt62[]={1,};static const sUI rt63[]={1, 1,};static const sUI rt64[]={1,};static const sUI rt65[]={3,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40, rt41, rt42, rt43, rt44, rt45, rt46, rt47, rt48, rt49, rt50, rt51, rt52, rt53, rt54, rt55, rt56, rt57, rt58, rt59, rt60, rt61, rt62, rt63, rt64, rt65}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL MIDIIn::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0,};static const char *rs26[]={(const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0,};static const char *rs31[]={(const char*)0,};static const char *rs32[]={(const char*)0,};static const char *rs33[]={(const char*)0,};static const char *rs34[]={(const char*)0,};static const char *rs35[]={(const char*)0,};static const char *rs36[]={(const char*)0,};static const char *rs37[]={(const char*)0,};static const char *rs38[]={(const char*)0,};static const char *rs39[]={(const char*)0,};static const char *rs40[]={(const char*)0,};static const char *rs41[]={(const char*)0,};static const char *rs42[]={(const char*)0,};static const char *rs43[]={(const char*)0,};static const char *rs44[]={(const char*)0,};static const char *rs45[]={(const char*)0,};static const char *rs46[]={(const char*)0,};static const char *rs47[]={(const char*)0,};static const char *rs48[]={(const char*)0,};static const char *rs49[]={(const char*)0,};static const char *rs50[]={(const char*)0,};static const char *rs51[]={(const char*)0,};static const char *rs52[]={(const char*)0,};static const char *rs53[]={(const char*)0,};static const char *rs54[]={(const char*)0,};static const char *rs55[]={(const char*)0,};static const char *rs56[]={(const char*)0,};static const char *rs57[]={(const char*)0,};static const char *rs58[]={(const char*)0,};static const char *rs59[]={(const char*)0,};static const char *rs60[]={(const char*)0,};static const char *rs61[]={(const char*)0, (const char*)0,};static const char *rs62[]={(const char*)0,};static const char *rs63[]={(const char*)0, (const char*)0,};static const char *rs64[]={(const char*)0,};static const char *rs65[]={"Buffer",};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40, rs41, rs42, rs43, rs44, rs45, rs46, rs47, rs48, rs49, rs50, rs51, rs52, rs53, rs54, rs55, rs56, rs57, rs58, rs59, rs60, rs61, rs62, rs63, rs64, rs65}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL MIDIIn::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 1, 1, 0, 0, 0, 1, 0, 0, 0, 4, 1, 3, 3, 1, 1, 4, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL MIDIIn::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL MIDIIn::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)MIDIIn___openByName, (void*)MIDIIn___openByIdx, (void*)MIDIIn___openLocalMIDI, (void*)MIDIIn___close, (void*)MIDIIn___start, (void*)MIDIIn___isAlive, (void*)MIDIIn___stop, (void*)MIDIIn___reset, (void*)MIDIIn___clearEvents, (void*)MIDIIn___getDeviceName, (void*)MIDIIn__getDeviceIdx, (void*)MIDIIn___getNextEvent, (void*)MIDIIn___waitNextEvent, (void*)MIDIIn___getNumEvents, (void*)MIDIIn__GetNumDevices, (void*)MIDIIn__GetDeviceNameByIdx, (void*)MIDIIn__setFltNoteOff, (void*)MIDIIn__getFltNoteOff, (void*)MIDIIn__setFltNoteOn, (void*)MIDIIn__getFltNoteOn, (void*)MIDIIn__setFltPolyPressure, (void*)MIDIIn__getFltPolyPressure, (void*)MIDIIn__setFltCC, (void*)MIDIIn__getFltCC, (void*)MIDIIn__setFltProgramChange, (void*)MIDIIn__getFltProgramChange, (void*)MIDIIn__setFltChannelPressure, (void*)MIDIIn__getFltChannelPressure, (void*)MIDIIn__setFltPitchbend, (void*)MIDIIn__getFltPitchbend, (void*)MIDIIn__setFltSysEx, (void*)MIDIIn__getFltSysEx, (void*)MIDIIn__setFltSysComTimeCode, (void*)MIDIIn__getFltSysComTimeCode, (void*)MIDIIn__setFltSysComSongPosition, (void*)MIDIIn__getFltSysComSongPosition, (void*)MIDIIn__setFltSysComSongSelect, (void*)MIDIIn__getFltSysComSongSelect, (void*)MIDIIn__setFltSysComTuneRequest, (void*)MIDIIn__getFltSysComTuneRequest, (void*)MIDIIn__setFltSysRTTimingClock, (void*)MIDIIn__getFltSysRTTimingClock, (void*)MIDIIn__setFltSysRTStart, (void*)MIDIIn__getFltSysRTStart, (void*)MIDIIn__setFltSysRTContinue, (void*)MIDIIn__getFltSysRTContinue, (void*)MIDIIn__setFltSysRTStop, (void*)MIDIIn__getFltSysRTStop, (void*)MIDIIn__setFltSysRTActiveSensing, (void*)MIDIIn__getFltSysRTActiveSensing, (void*)MIDIIn__setFltSysRTSystemReset, (void*)MIDIIn__getFltSysRTSystemReset, (void*)MIDIIn__setFltRpnSelect, (void*)MIDIIn__getFltRpnSelect, (void*)MIDIIn__setFltNrpnSelect, (void*)MIDIIn__getFltNrpnSelect, (void*)MIDIIn__setFltRpn, (void*)MIDIIn__getFltRpn, (void*)MIDIIn__setFltNrpn, (void*)MIDIIn__getFltNrpn, (void*)MIDIIn__setEnableParam, (void*)MIDIIn__getEnableParam, (void*)MIDIIn__setDataEntryMode, (void*)MIDIIn__getDataEntryMode, (void*)MIDIIn__parseBuffer}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL MIDIIn::yacConstantGetNum                (void) {return 3;}
const char **YAC_VCALL MIDIIn::yacConstantGetNames              (void) {
#ifndef YAC_NO_HOST
static const char*r[]={"MIDI_DATAENTRYMODE_MSBLSB", "MIDI_DATAENTRYMODE_LSBMSB", "MIDI_DATAENTRYMODE_MSB"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL MIDIIn::yacConstantGetTypes              (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={1, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
yacmemptr    YAC_VCALL MIDIIn::yacConstantGetValues             (void) {yacmemptr m;
#ifndef YAC_NO_HOST
static sUI r[3]; m.ui=r; m.si[0]=(sSI)0;m.si[1]=(sSI)1;m.si[2]=(sSI)2;; return m;
#else
m.any = 0; return m;
#endif // YAC_NO_HOST
}

YAC_C(MIDIIn, "MIDIIn");

#ifndef YAC_NO_HOST
sSI   YAC_CALL MIDIIn___openByName  (void *_o, yacmemptr _args               ) {return (sSI)((MIDIIn*)_o)->_openByName(_args.mem[0].o);}
sSI   YAC_CALL MIDIIn___openByIdx   (void *_o, yacmemptr _args               ) {return (sSI)((MIDIIn*)_o)->_openByIdx(_args.mem[0].si);}
void  YAC_CALL MIDIIn___openLocalMIDI(void *_o                               ) {((MIDIIn*)_o)->_openLocalMIDI();}
void  YAC_CALL MIDIIn___close       (void *_o                                ) {((MIDIIn*)_o)->_close();}
void  YAC_CALL MIDIIn___start       (void *_o                                ) {((MIDIIn*)_o)->_start();}
sSI   YAC_CALL MIDIIn___isAlive     (void *_o                                ) {return (sSI)((MIDIIn*)_o)->_isAlive();}
void  YAC_CALL MIDIIn___stop        (void *_o                                ) {((MIDIIn*)_o)->_stop();}
void  YAC_CALL MIDIIn___reset       (void *_o                                ) {((MIDIIn*)_o)->_reset();}
void  YAC_CALL MIDIIn___clearEvents (void *_o                                ) {((MIDIIn*)_o)->_clearEvents();}
void  YAC_CALL MIDIIn___getDeviceName(void *_o, YAC_Value *_r                ) {((MIDIIn*)_o)->_getDeviceName(_r);}
sSI   YAC_CALL MIDIIn__getDeviceIdx (void *_o                                ) {return (sSI)((MIDIIn*)_o)->getDeviceIdx();}
void* YAC_CALL MIDIIn___getNextEvent(void *_o                                ) {return (void*)((MIDIIn*)_o)->_getNextEvent();}
void* YAC_CALL MIDIIn___waitNextEvent(void *_o, yacmemptr _args              ) {return (void*)((MIDIIn*)_o)->_waitNextEvent(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn___getNumEvents(void *_o                                ) {return (sSI)((MIDIIn*)_o)->_getNumEvents();}
sSI   YAC_CALL MIDIIn__GetNumDevices(void *_o                                ) {return (sSI)((MIDIIn*)_o)->GetNumDevices();}
void  YAC_CALL MIDIIn__GetDeviceNameByIdx(void *_o, yacmemptr _args, YAC_Value *_r) {((MIDIIn*)_o)->GetDeviceNameByIdx(_args.mem[0].si, _r);}
void  YAC_CALL MIDIIn__setFltNoteOff(void *_o, yacmemptr _args               ) {((MIDIIn*)_o)->setFltNoteOff(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltNoteOff(void *_o                                ) {return (sSI)((MIDIIn*)_o)->getFltNoteOff();}
void  YAC_CALL MIDIIn__setFltNoteOn (void *_o, yacmemptr _args               ) {((MIDIIn*)_o)->setFltNoteOn(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltNoteOn (void *_o                                ) {return (sSI)((MIDIIn*)_o)->getFltNoteOn();}
void  YAC_CALL MIDIIn__setFltPolyPressure(void *_o, yacmemptr _args          ) {((MIDIIn*)_o)->setFltPolyPressure(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltPolyPressure(void *_o                           ) {return (sSI)((MIDIIn*)_o)->getFltPolyPressure();}
void  YAC_CALL MIDIIn__setFltCC     (void *_o, yacmemptr _args               ) {((MIDIIn*)_o)->setFltCC(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltCC     (void *_o                                ) {return (sSI)((MIDIIn*)_o)->getFltCC();}
void  YAC_CALL MIDIIn__setFltProgramChange(void *_o, yacmemptr _args         ) {((MIDIIn*)_o)->setFltProgramChange(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltProgramChange(void *_o                          ) {return (sSI)((MIDIIn*)_o)->getFltProgramChange();}
void  YAC_CALL MIDIIn__setFltChannelPressure(void *_o, yacmemptr _args       ) {((MIDIIn*)_o)->setFltChannelPressure(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltChannelPressure(void *_o                        ) {return (sSI)((MIDIIn*)_o)->getFltChannelPressure();}
void  YAC_CALL MIDIIn__setFltPitchbend(void *_o, yacmemptr _args             ) {((MIDIIn*)_o)->setFltPitchbend(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltPitchbend(void *_o                              ) {return (sSI)((MIDIIn*)_o)->getFltPitchbend();}
void  YAC_CALL MIDIIn__setFltSysEx  (void *_o, yacmemptr _args               ) {((MIDIIn*)_o)->setFltSysEx(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltSysEx  (void *_o                                ) {return (sSI)((MIDIIn*)_o)->getFltSysEx();}
void  YAC_CALL MIDIIn__setFltSysComTimeCode(void *_o, yacmemptr _args        ) {((MIDIIn*)_o)->setFltSysComTimeCode(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltSysComTimeCode(void *_o                         ) {return (sSI)((MIDIIn*)_o)->getFltSysComTimeCode();}
void  YAC_CALL MIDIIn__setFltSysComSongPosition(void *_o, yacmemptr _args    ) {((MIDIIn*)_o)->setFltSysComSongPosition(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltSysComSongPosition(void *_o                     ) {return (sSI)((MIDIIn*)_o)->getFltSysComSongPosition();}
void  YAC_CALL MIDIIn__setFltSysComSongSelect(void *_o, yacmemptr _args      ) {((MIDIIn*)_o)->setFltSysComSongSelect(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltSysComSongSelect(void *_o                       ) {return (sSI)((MIDIIn*)_o)->getFltSysComSongSelect();}
void  YAC_CALL MIDIIn__setFltSysComTuneRequest(void *_o, yacmemptr _args     ) {((MIDIIn*)_o)->setFltSysComTuneRequest(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltSysComTuneRequest(void *_o                      ) {return (sSI)((MIDIIn*)_o)->getFltSysComTuneRequest();}
void  YAC_CALL MIDIIn__setFltSysRTTimingClock(void *_o, yacmemptr _args      ) {((MIDIIn*)_o)->setFltSysRTTimingClock(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltSysRTTimingClock(void *_o                       ) {return (sSI)((MIDIIn*)_o)->getFltSysRTTimingClock();}
void  YAC_CALL MIDIIn__setFltSysRTStart(void *_o, yacmemptr _args            ) {((MIDIIn*)_o)->setFltSysRTStart(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltSysRTStart(void *_o                             ) {return (sSI)((MIDIIn*)_o)->getFltSysRTStart();}
void  YAC_CALL MIDIIn__setFltSysRTContinue(void *_o, yacmemptr _args         ) {((MIDIIn*)_o)->setFltSysRTContinue(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltSysRTContinue(void *_o                          ) {return (sSI)((MIDIIn*)_o)->getFltSysRTContinue();}
void  YAC_CALL MIDIIn__setFltSysRTStop(void *_o, yacmemptr _args             ) {((MIDIIn*)_o)->setFltSysRTStop(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltSysRTStop(void *_o                              ) {return (sSI)((MIDIIn*)_o)->getFltSysRTStop();}
void  YAC_CALL MIDIIn__setFltSysRTActiveSensing(void *_o, yacmemptr _args    ) {((MIDIIn*)_o)->setFltSysRTActiveSensing(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltSysRTActiveSensing(void *_o                     ) {return (sSI)((MIDIIn*)_o)->getFltSysRTActiveSensing();}
void  YAC_CALL MIDIIn__setFltSysRTSystemReset(void *_o, yacmemptr _args      ) {((MIDIIn*)_o)->setFltSysRTSystemReset(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltSysRTSystemReset(void *_o                       ) {return (sSI)((MIDIIn*)_o)->getFltSysRTSystemReset();}
void  YAC_CALL MIDIIn__setFltRpnSelect(void *_o, yacmemptr _args             ) {((MIDIIn*)_o)->setFltRpnSelect(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltRpnSelect(void *_o                              ) {return (sSI)((MIDIIn*)_o)->getFltRpnSelect();}
void  YAC_CALL MIDIIn__setFltNrpnSelect(void *_o, yacmemptr _args            ) {((MIDIIn*)_o)->setFltNrpnSelect(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltNrpnSelect(void *_o                             ) {return (sSI)((MIDIIn*)_o)->getFltNrpnSelect();}
void  YAC_CALL MIDIIn__setFltRpn    (void *_o, yacmemptr _args               ) {((MIDIIn*)_o)->setFltRpn(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltRpn    (void *_o                                ) {return (sSI)((MIDIIn*)_o)->getFltRpn();}
void  YAC_CALL MIDIIn__setFltNrpn   (void *_o, yacmemptr _args               ) {((MIDIIn*)_o)->setFltNrpn(_args.mem[0].si);}
sSI   YAC_CALL MIDIIn__getFltNrpn   (void *_o                                ) {return (sSI)((MIDIIn*)_o)->getFltNrpn();}
void  YAC_CALL MIDIIn__setEnableParam(void *_o, yacmemptr _args              ) {((MIDIIn*)_o)->setEnableParam(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL MIDIIn__getEnableParam(void *_o, yacmemptr _args              ) {return (sSI)((MIDIIn*)_o)->getEnableParam(_args.mem[0].si);}
void  YAC_CALL MIDIIn__setDataEntryMode(void *_o, yacmemptr _args            ) {((MIDIIn*)_o)->setDataEntryMode(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL MIDIIn__getDataEntryMode(void *_o, yacmemptr _args            ) {return (sSI)((MIDIIn*)_o)->getDataEntryMode(_args.mem[0].si);}
void  YAC_CALL MIDIIn__parseBuffer  (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_BUFFER)){ ((MIDIIn*)_o)->parseBuffer((YAC_Buffer*)_args.mem[0].o);}}
#endif // YAC_NO_HOST
