// ---- ying_hal1_Joystick.cpp: auto generated by YInG - the YAC interface generator (Mon, 15/Sep/2025 17:45:49)

#ifndef YAC_NO_HOST
sSI   YAC_CALL Joystick___getAxis   (void *, yacmemptr             );
sSI   YAC_CALL Joystick___getBall   (void *, yacmemptr             );
sSI   YAC_CALL Joystick___getButton (void *, yacmemptr             );
sSI   YAC_CALL Joystick___getHat    (void *, yacmemptr             );
sSI   YAC_CALL Joystick___getId     (void *                        );
sSI   YAC_CALL Joystick___getNumAxes(void *                        );
sSI   YAC_CALL Joystick___getNumBalls(void *                       );
sSI   YAC_CALL Joystick___getNumButtons(void *                     );
sSI   YAC_CALL Joystick___getNumHats(void *                        );
void  YAC_CALL Joystick___getName   (void *, YAC_Value *           );
#endif // YAC_NO_HOST

// ------------------ YAC class "_Joystick" reflection map (implementation) ------------------
sUI          YAC_VCALL _Joystick::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Joystick::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Joystick::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Joystick::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Joystick::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Joystick::yacMethodGetNum                  (void) {return 11;}
const char **YAC_VCALL _Joystick::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "getAxis", "getBall", "getButton", "getHat", "getId", "getNumAxes", "getNumBalls", "getNumButtons", "getNumHats", "getName"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Joystick::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _Joystick::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={1,};static const sUI rt2[]={1, 3,};static const sUI rt3[]={1,};static const sUI rt4[]={1,};static const sUI rt5[]={0,};static const sUI rt6[]={0,};static const sUI rt7[]={0,};static const sUI rt8[]={0,};static const sUI rt9[]={0,};static const sUI rt10[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _Joystick::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0, (const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Joystick::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _Joystick::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _Joystick::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)Joystick___getAxis, (void*)Joystick___getBall, (void*)Joystick___getButton, (void*)Joystick___getHat, (void*)Joystick___getId, (void*)Joystick___getNumAxes, (void*)Joystick___getNumBalls, (void*)Joystick___getNumButtons, (void*)Joystick___getNumHats, (void*)Joystick___getName}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _Joystick::yacConstantGetNum                (void) {return 9;}
const char **YAC_VCALL _Joystick::yacConstantGetNames              (void) {
#ifndef YAC_NO_HOST
static const char*r[]={"SDL_HAT_CENTERED", "SDL_HAT_UP", "SDL_HAT_RIGHT", "SDL_HAT_DOWN", "SDL_HAT_LEFT", "SDL_HAT_RIGHTUP", "SDL_HAT_RIGHTDOWN", "SDL_HAT_LEFTUP", "SDL_HAT_LEFTDOWN"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Joystick::yacConstantGetTypes              (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={1, 1, 1, 1, 1, 1, 1, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
yacmemptr    YAC_VCALL _Joystick::yacConstantGetValues             (void) {yacmemptr m;
#ifndef YAC_NO_HOST
static sUI r[9]; m.ui=r; m.si[0]=(sSI)0x0;m.si[1]=(sSI)0x1;m.si[2]=(sSI)0x2;m.si[3]=(sSI)0x4;m.si[4]=(sSI)0x8;m.si[5]=(sSI)0x3;m.si[6]=(sSI)0x6;m.si[7]=(sSI)0x9;m.si[8]=(sSI)0xc;; return m;
#else
m.any = 0; return m;
#endif // YAC_NO_HOST
}

YAC_C(_Joystick, "Joystick");

#ifndef YAC_NO_HOST
sSI   YAC_CALL Joystick___getAxis   (void *_o, yacmemptr _args               ) {return (sSI)((_Joystick*)_o)->_getAxis(_args.mem[0].si);}
sSI   YAC_CALL Joystick___getBall   (void *_o, yacmemptr _args               ) {return (sSI)((_Joystick*)_o)->_getBall(_args.mem[0].si, _args.mem[1].o);}
sSI   YAC_CALL Joystick___getButton (void *_o, yacmemptr _args               ) {return (sSI)((_Joystick*)_o)->_getButton(_args.mem[0].si);}
sSI   YAC_CALL Joystick___getHat    (void *_o, yacmemptr _args               ) {return (sSI)((_Joystick*)_o)->_getHat(_args.mem[0].si);}
sSI   YAC_CALL Joystick___getId     (void *_o                                ) {return (sSI)((_Joystick*)_o)->_getId();}
sSI   YAC_CALL Joystick___getNumAxes(void *_o                                ) {return (sSI)((_Joystick*)_o)->_getNumAxes();}
sSI   YAC_CALL Joystick___getNumBalls(void *_o                               ) {return (sSI)((_Joystick*)_o)->_getNumBalls();}
sSI   YAC_CALL Joystick___getNumButtons(void *_o                             ) {return (sSI)((_Joystick*)_o)->_getNumButtons();}
sSI   YAC_CALL Joystick___getNumHats(void *_o                                ) {return (sSI)((_Joystick*)_o)->_getNumHats();}
void  YAC_CALL Joystick___getName   (void *_o, YAC_Value *_r                 ) {((_Joystick*)_o)->_getName(_r);}
#endif // YAC_NO_HOST
