// ---- ying_hal1_Cursor.cpp: auto generated by YInG - the YAC interface generator (Mon, 15/Sep/2025 17:45:49)

#ifndef YAC_NO_HOST
sSI   YAC_CALL Cursor___create      (void *, yacmemptr             );
sSI   YAC_CALL Cursor___show        (void *                        );
void  YAC_CALL Cursor___revert      (void *                        );
#endif // YAC_NO_HOST

// ------------------ YAC class "_Cursor" reflection map (implementation) ------------------
sUI          YAC_VCALL _Cursor::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Cursor::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Cursor::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Cursor::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Cursor::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Cursor::yacMethodGetNum                  (void) {return 4;}
const char **YAC_VCALL _Cursor::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "create", "show", "revert"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Cursor::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 5, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _Cursor::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={3, 1, 1, 1, 1,};static const sUI rt2[]={0,};static const sUI rt3[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _Cursor::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Cursor::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 1, 1, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _Cursor::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _Cursor::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)Cursor___create, (void*)Cursor___show, (void*)Cursor___revert}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _Cursor::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Cursor::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Cursor::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Cursor::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(_Cursor, "Cursor");

#ifndef YAC_NO_HOST
sSI   YAC_CALL Cursor___create      (void *_o, yacmemptr _args               ) {return (sSI)((_Cursor*)_o)->_create(_args.mem[0].o, _args.mem[1].si, _args.mem[2].si, _args.mem[3].si, _args.mem[4].si);}
sSI   YAC_CALL Cursor___show        (void *_o                                ) {return (sSI)((_Cursor*)_o)->_show();}
void  YAC_CALL Cursor___revert      (void *_o                                ) {((_Cursor*)_o)->_revert();}
#endif // YAC_NO_HOST
