// ---- ying_audio_AudioDevice.cpp: auto generated by YInG - the YAC interface generator (Mon, 15/Sep/2025 17:45:49)

#ifndef YAC_NO_HOST
void  YAC_CALL AudioDevice___setVolume(void *, yacmemptr           );
sF32  YAC_CALL AudioDevice___getVolume(void *                      );
void  YAC_CALL AudioDevice___setSwapstereo(void *, yacmemptr       );
sSI   YAC_CALL AudioDevice___getSwapstereo(void *                  );
sSI   YAC_CALL AudioDevice___openDSP(void *, yacmemptr             );
void  YAC_CALL AudioDevice___start  (void *                        );
void  YAC_CALL AudioDevice___stop   (void *                        );
void  YAC_CALL AudioDevice___closeDSP(void *                       );
sF32  YAC_CALL AudioDevice___getBpm (void *                        );
void  YAC_CALL AudioDevice___setBpm (void *, yacmemptr             );
void  YAC_CALL AudioDevice___setPpq (void *, yacmemptr             );
sSI   YAC_CALL AudioDevice___getPpq (void *                        );
void  YAC_CALL AudioDevice___processTimeFrames(void *              );
void  YAC_CALL AudioDevice___finishBlock(void *                    );
void  YAC_CALL AudioDevice___setFileName(void *, yacmemptr         );
void  YAC_CALL AudioDevice___enableFileOutput(void *, yacmemptr    );
void  YAC_CALL AudioDevice___enable (void *, yacmemptr             );
void  YAC_CALL AudioDevice___setDefaultBufferSize(void *, yacmemptr);
#endif // YAC_NO_HOST

// ------------------ YAC class "_AudioDevice" reflection map (implementation) ------------------
sUI          YAC_VCALL _AudioDevice::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _AudioDevice::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _AudioDevice::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _AudioDevice::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _AudioDevice::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _AudioDevice::yacMethodGetNum                  (void) {return 19;}
const char **YAC_VCALL _AudioDevice::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "setVolume", "getVolume", "setSwapstereo", "getSwapstereo", "openDSP", "start", "stop", "closeDSP", "getBpm", "setBpm", "setPpq", "getPpq", "processTimeFrames", "finishBlock", "setFileName", "enableFileOutput", "enable", "setDefaultBufferSize"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _AudioDevice::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 1, 0, 1, 0, 2, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _AudioDevice::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={2,};static const sUI rt2[]={0,};static const sUI rt3[]={1,};static const sUI rt4[]={0,};static const sUI rt5[]={2, 1,};static const sUI rt6[]={0,};static const sUI rt7[]={0,};static const sUI rt8[]={0,};static const sUI rt9[]={0,};static const sUI rt10[]={2,};static const sUI rt11[]={1,};static const sUI rt12[]={0,};static const sUI rt13[]={0,};static const sUI rt14[]={0,};static const sUI rt15[]={3,};static const sUI rt16[]={1,};static const sUI rt17[]={1,};static const sUI rt18[]={1,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _AudioDevice::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0, (const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={"String",};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _AudioDevice::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 2, 0, 1, 1, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _AudioDevice::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _AudioDevice::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)AudioDevice___setVolume, (void*)AudioDevice___getVolume, (void*)AudioDevice___setSwapstereo, (void*)AudioDevice___getSwapstereo, (void*)AudioDevice___openDSP, (void*)AudioDevice___start, (void*)AudioDevice___stop, (void*)AudioDevice___closeDSP, (void*)AudioDevice___getBpm, (void*)AudioDevice___setBpm, (void*)AudioDevice___setPpq, (void*)AudioDevice___getPpq, (void*)AudioDevice___processTimeFrames, (void*)AudioDevice___finishBlock, (void*)AudioDevice___setFileName, (void*)AudioDevice___enableFileOutput, (void*)AudioDevice___enable, (void*)AudioDevice___setDefaultBufferSize}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _AudioDevice::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _AudioDevice::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _AudioDevice::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _AudioDevice::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(_AudioDevice, "AudioDevice");

#ifndef YAC_NO_HOST
void  YAC_CALL AudioDevice___setVolume(void *_o, yacmemptr _args             ) {((_AudioDevice*)_o)->_setVolume(_args.mem[0].f32);}
sF32  YAC_CALL AudioDevice___getVolume(void *_o                              ) {return (sF32)((_AudioDevice*)_o)->_getVolume();}
void  YAC_CALL AudioDevice___setSwapstereo(void *_o, yacmemptr _args         ) {((_AudioDevice*)_o)->_setSwapstereo(_args.mem[0].si);}
sSI   YAC_CALL AudioDevice___getSwapstereo(void *_o                          ) {return (sSI)((_AudioDevice*)_o)->_getSwapstereo();}
sSI   YAC_CALL AudioDevice___openDSP(void *_o, yacmemptr _args               ) {return (sSI)((_AudioDevice*)_o)->_openDSP(_args.mem[0].f32, _args.mem[1].si);}
void  YAC_CALL AudioDevice___start  (void *_o                                ) {((_AudioDevice*)_o)->_start();}
void  YAC_CALL AudioDevice___stop   (void *_o                                ) {((_AudioDevice*)_o)->_stop();}
void  YAC_CALL AudioDevice___closeDSP(void *_o                               ) {((_AudioDevice*)_o)->_closeDSP();}
sF32  YAC_CALL AudioDevice___getBpm (void *_o                                ) {return (sF32)((_AudioDevice*)_o)->_getBpm();}
void  YAC_CALL AudioDevice___setBpm (void *_o, yacmemptr _args               ) {((_AudioDevice*)_o)->_setBpm(_args.mem[0].f32);}
void  YAC_CALL AudioDevice___setPpq (void *_o, yacmemptr _args               ) {((_AudioDevice*)_o)->_setPpq(_args.mem[0].si);}
sSI   YAC_CALL AudioDevice___getPpq (void *_o                                ) {return (sSI)((_AudioDevice*)_o)->_getPpq();}
void  YAC_CALL AudioDevice___processTimeFrames(void *_o                      ) {((_AudioDevice*)_o)->_processTimeFrames();}
void  YAC_CALL AudioDevice___finishBlock(void *_o                            ) {((_AudioDevice*)_o)->_finishBlock();}
void  YAC_CALL AudioDevice___setFileName(void *_o, yacmemptr _args           ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ ((_AudioDevice*)_o)->_setFileName((YAC_String*)_args.mem[0].o);}}
void  YAC_CALL AudioDevice___enableFileOutput(void *_o, yacmemptr _args      ) {((_AudioDevice*)_o)->_enableFileOutput(_args.mem[0].si);}
void  YAC_CALL AudioDevice___enable (void *_o, yacmemptr _args               ) {((_AudioDevice*)_o)->_enable(_args.mem[0].si);}
void  YAC_CALL AudioDevice___setDefaultBufferSize(void *_o, yacmemptr _args  ) {((_AudioDevice*)_o)->_setDefaultBufferSize(_args.mem[0].si);}
#endif // YAC_NO_HOST
