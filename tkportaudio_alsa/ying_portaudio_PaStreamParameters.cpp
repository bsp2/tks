// ---- ying_portaudio_PaStreamParameters.cpp: auto generated by YInG - the YAC interface generator (Sat, 21/Jun/2025 21:04:48)

#ifndef YAC_NO_HOST
sSI   YAC_CALL PaStreamParameters___getDeviceIndex(void *          );
void  YAC_CALL PaStreamParameters___setDeviceIndex(void *, yacmemptr);
sSI   YAC_CALL PaStreamParameters___getChannelCount(void *         );
void  YAC_CALL PaStreamParameters___setChannelCount(void *, yacmemptr);
sSI   YAC_CALL PaStreamParameters___getSampleFormat(void *         );
void  YAC_CALL PaStreamParameters___setSampleFormat(void *, yacmemptr);
sF32  YAC_CALL PaStreamParameters___getSuggestedLatency(void *     );
void  YAC_CALL PaStreamParameters___setSuggestedLatency(void *, yacmemptr);
#endif // YAC_NO_HOST

// ------------------ YAC class "_PaStreamParameters" reflection map (implementation) ------------------
sUI          YAC_VCALL _PaStreamParameters::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _PaStreamParameters::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _PaStreamParameters::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _PaStreamParameters::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _PaStreamParameters::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _PaStreamParameters::yacMethodGetNum                  (void) {return 9;}
const char **YAC_VCALL _PaStreamParameters::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "getDeviceIndex", "setDeviceIndex", "getChannelCount", "setChannelCount", "getSampleFormat", "setSampleFormat", "getSuggestedLatency", "setSuggestedLatency"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _PaStreamParameters::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 1, 0, 1, 0, 1, 0, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _PaStreamParameters::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={1,};static const sUI rt3[]={0,};static const sUI rt4[]={1,};static const sUI rt5[]={0,};static const sUI rt6[]={1,};static const sUI rt7[]={0,};static const sUI rt8[]={2,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _PaStreamParameters::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _PaStreamParameters::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 1, 0, 1, 0, 1, 0, 2, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _PaStreamParameters::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _PaStreamParameters::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)PaStreamParameters___getDeviceIndex, (void*)PaStreamParameters___setDeviceIndex, (void*)PaStreamParameters___getChannelCount, (void*)PaStreamParameters___setChannelCount, (void*)PaStreamParameters___getSampleFormat, (void*)PaStreamParameters___setSampleFormat, (void*)PaStreamParameters___getSuggestedLatency, (void*)PaStreamParameters___setSuggestedLatency}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _PaStreamParameters::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _PaStreamParameters::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _PaStreamParameters::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _PaStreamParameters::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(_PaStreamParameters, "PaStreamParameters");

#ifndef YAC_NO_HOST
sSI   YAC_CALL PaStreamParameters___getDeviceIndex(void *_o                  ) {return (sSI)((_PaStreamParameters*)_o)->_getDeviceIndex();}
void  YAC_CALL PaStreamParameters___setDeviceIndex(void *_o, yacmemptr _args ) {((_PaStreamParameters*)_o)->_setDeviceIndex(_args.mem[0].si);}
sSI   YAC_CALL PaStreamParameters___getChannelCount(void *_o                 ) {return (sSI)((_PaStreamParameters*)_o)->_getChannelCount();}
void  YAC_CALL PaStreamParameters___setChannelCount(void *_o, yacmemptr _args) {((_PaStreamParameters*)_o)->_setChannelCount(_args.mem[0].si);}
sSI   YAC_CALL PaStreamParameters___getSampleFormat(void *_o                 ) {return (sSI)((_PaStreamParameters*)_o)->_getSampleFormat();}
void  YAC_CALL PaStreamParameters___setSampleFormat(void *_o, yacmemptr _args) {((_PaStreamParameters*)_o)->_setSampleFormat(_args.mem[0].si);}
sF32  YAC_CALL PaStreamParameters___getSuggestedLatency(void *_o             ) {return (sF32)((_PaStreamParameters*)_o)->_getSuggestedLatency();}
void  YAC_CALL PaStreamParameters___setSuggestedLatency(void *_o, yacmemptr _args) {((_PaStreamParameters*)_o)->_setSuggestedLatency(_args.mem[0].f32);}
#endif // YAC_NO_HOST
