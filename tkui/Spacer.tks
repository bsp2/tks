// ----
// ---- file   : Spacer.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2010-2024 by Bastian Spiegel. 
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See 
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : 
// ----
// ---- created: 05Jan2010
// ---- changed: 04Jan2012, 16Feb2018, 26Jun2020, 27Dec2020, 21Mar2024
// ----          
// ----

module MSpacer;

namespace ui;


class Spacer extends Layer {

   int bgcolor;
   protected boolean b_debug;

   public static New() {
      local Spacer spacer;
      spacer.initSpacer();
      return deref spacer;
   }

   public method initSpacer() {
      initLayer();
      setRequiredSize2f(1, 1); // is later overwritten by sizegroup or xfm attrib
      setManualPreferredSize2f(1, 1);
//       setMinimumSize2f(1, 1);
      b_debug = false;
      bgcolor = 0;
   }

   public method setEnableDebug(boolean _bEnabled) {
      b_debug = _bEnabled;
      if(b_debug)
         bgcolor = #ffff0000;
      else
         bgcolor = 0;
      redraw();
   }

   public method setBackgroundColor(int _c32) {
      bgcolor = _c32;
   }

   // public virtual layoutContent() {
   //    cached_baseline_y = getSizeY() * 0.5;
   // }

   public virtual onDraw() {
      // trace "xxx Spacer: p="+getPositionString()+" s="+getSizeString();
      if(bgcolor)
      {
         // trace "xxx Spacer::onDraw: bgcolor="+bgcolor;
         UIRenderer.DrawFilledRectangle(0, 0, size_x, size_y, bgcolor);
      }
   }

   public virtual beginXFMTag(AbstractXMLForm _form, HashTable _attributes) : boolean {
      initSpacer();

      if(Layer::beginXFMTag(_form, _attributes))
      {
         String atname, atnamelc;
         StringArray atsplit;
         
         foreach atname in _attributes 
         {
            String atval = _attributes[atname];
            atnamelc = atname; 
            ////trace "xxx atname=\""+atname+"\" atnamelc=\""+atnamelc+"\" atval=\""+atval+"\".";
            atnamelc.toLower();
            switch(atnamelc)
            {
               default:
                  break;
                  
               case "debug":
                  setEnableDebug(int(atval));
                  break;
               }
            }

         return true;
      }
      return false;
   }

}
