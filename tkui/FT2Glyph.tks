// ----
// ---- file   : FT2Glyph.tks
// ---- info   : script side of the tks freetype2 plugin. includes OpenGL text renderer.
// ---- author : (c) 2005-2020 Bastian Spiegel <bs@tkscript.de>
// ---- license: GNU Lesser General Public License. See <http://www.gnu.org/copyleft/lesser.html> for details.
// ---- date   : 25Apr2005, 27Apr2005, 30Apr2005, 06May2005,, 12Jun2005,, 25Jun2005, 31Jul2005, 11Jun2020
// ----          

module "MFT2Glyph";

namespace ui;

use tkfreetype2;
use tkopengl;

// ---- 
// ---- FT2Glyph
// ---- 
class FT2Glyph {
   // ----
   // ---- Reference to a texture page that holds the bitmap area of this glyph.
   // ---- The Texture depth (z) is 8bit (alpha+luminance (intensity)).
   // ----
   Texture texture<=null; 

   // ----
   // ---- (Normalized 0..1) texture coordinates of the glyph bitmap.
   // ---- Please notice that a border is added around each glyph to account
   // ---- for OpenGL filtering.
   // ---- During glyph loading, (rtu,rbv) are used for (bitmap_width, bitmap_height)
   // ----
   float   ltu, rtu, rbu, lbu; 
   float   ltv, rtv, rbv, lbv;

   // ---- Pixel position in bitmap (used by font converter code)
   int     bitmapx;
   int     bitmapy;

   // ---- The pixel width of the glyph bitmap. 0 means that this glyph is unused.
   float   width;

   // ---- The pixel height of the glyph bitmap
   float   height;

   // ---- Distance from the current horizontal cursor position to the leftmost scan column of the glyph bitmap
   float   offsetx;

   // ---- Distance from the baseline to the topmost scanline of the glyph bitmap
   float   offsety;

   // ---- How many pixels (in screen coordinates) to advance after printing this glyph
   float   advancex;

   public method normalizeTexCoords(float _rtexsize) {
      if(rtu>0.0) // ---- is this glyph used??
      {
         ltu = ltu / _rtexsize;
         rtu = rtu / _rtexsize;
         rbu = rbu / _rtexsize;
         lbu = lbu / _rtexsize;
         ltv = ltv / _rtexsize;
         rtv = rtv / _rtexsize;
         rbv = rbv / _rtexsize;
         lbv = lbv / _rtexsize;
      }
   }

   // ---- Initialize the texture info for this glyph
   // ---- This is usually called by the FT2Face class
   public method init(float _x, float _y, Texture _t) {
      bitmapx = _x;
      bitmapy = _y;
      ltu=_x;
      rtu=_x+width;
      rbu=_x+width;
      lbu=_x;
      ltv=_y;
      rtv=_y;
      rbv=_y+height;
      lbv=_y+height;
      texture<=deref _t;
   }
}



