// ----
// ---- file   : RadioButton.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2007-2020 by Bastian Spiegel. 
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See 
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "ui" toolkit.
// ----
// ---- changed: 20May2007, 31May2009, 17Mar2011, 27Dec2020
// ----          
// ----
// ----

module MRadioButton;

namespace ui;


class RadioButton extends CheckBox {

   namespace String value;

   public method getValue() : String {
      return value;
   }

   protected getCurrentIconName() : String {   
      if(b_selected)
      {
         if(b_pressed)
         {
            return "rab_1_0";
         }
         else
         {
            return "rab_1";
         }
      }
      else
      { 
         if(b_pressed)
         {
            return "rab_0_1";
         }
         else
         {
            return "rab_0";
         }
      }
   }

   protected handleToggleSelection() {
      if(!b_selected)
      {
         b_selected = true;
         RadioButtonGroup g <= getParent();
         g.deselectAllExcept(this);
         g.handleSelection(this);
      }
   }

   public virtual onMouse(MouseEvent _ev) : boolean {
      RadioButtonGroup *g;

      if(_ev.wheelUp())
      {
         g <= getParent();
         g.selectNext();
         return true;
      }
      else if(_ev.wheelDown())
      {
         g <= getParent();
         g.selectPrevious();
         return true;
      }

      return CheckBox::onMouse(_ev);
   }

   public virtual beginXFMTag(AbstractXMLForm _form, HashTable _attributes) : boolean {
      if(CheckBox::beginXFMTag(_form, _attributes))
      {
         String *atname, *atval;
         StringArray *atsplit;
         foreach atname in _attributes
         {
            atval <= _attributes[atname];
            switch(atname)
            {
               case "value":
                  value = atval;
                  break;
            }
         }
      }
      return true;
   }

}
