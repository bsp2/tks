// ----
// ---- file   : ComboBoxTM.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- license: (c) 2007-2025 by Bastian Spiegel.
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   :
// ----
// ---- created: 24Oct2007
// ---- changed: 29Oct2007, 06Nov2007, 11Nov2007, 14Apr2008, 02Aug2008, 03Sep2008, 01Feb2009
// ----          16Jun2009, 09Jan2010, 22Apr2010, 18Jul2010, 09Oct2010, 12Feb2011, 20Mar2011
// ----          29Mar2011, 06Jan2012, 09Jan2012, 08Jan2013, 05Sep2014, 22Feb2015, 29Jul2019
// ----          03Aug2024, 31Jan2025, 10Sep2025
// ----
// ----
// ----

module MComboBoxTM;

namespace ui;


class ComboBoxTM extends TableModel {

   namespace StringArray *options;
   namespace StringArray *tooltip_captions;
   namespace IntArray    *option_bgcolors;
   namespace IntArray    *option_fgtints;
   namespace Font        *font;
   namespace String      *current_filter_string;


   public virtual getNumColumns() : int {
      return 1;
   }

   public virtual getColumnCaption(int _col) : String {
      return "";
   }

   public virtual getNumRows() : int {
      if(null != options)
         return options.numElements;
      return 0;
   }

   public virtual getCellRenderer(int _col, int _row, int _visibleRow) : Layer {
      Label lb <= TableModel::getCellRenderer(_col, _row, _visibleRow);
      lb.setFont(font);
      return lb;
   }

   public virtual updateCellRendererColors(Layer l, int _col, int _row, int _visibleRow) {
      TableModel::updateCellRendererColors(l, _col, _row, _visibleRow);

      if(null != option_bgcolors)
         l.setBackgroundColor(sdvg_TintARGB(l.getBackgroundColor(), option_bgcolors.get(_row)));

      if(null != option_fgtints)
         l.setForegroundColor(sdvg_TintARGB(l.getForegroundColor(), option_fgtints.get(_row)));

      if(l instanceof Label)
      {
         Label lb <= l;
         if(null != current_filter_string)
         {
            if(!((lb.getCaption().toLower()) & current_filter_string))
            {
               l.setForegroundColor(sdvg_TintARGB(l.getForegroundColor(), #80000000 | (l.getBackgroundColor()&0xFFffFF)));
            }
         }
      }
   }

   public virtual getCellCaption(int _col, _row) : String {
      return options[_row];
   }

   public virtual getCellToolTipCaption(int _col, int _row) : String {
      if(null != tooltip_captions)
      {
         String caption <= tooltip_captions.get(_row);
         ////trace "xxx combobox::getCellToolTipCaption: row="+_row+" caption=\""+caption+"\"";
         return caption;
      }
      return ""; // by returning a non-null object the tablemodel indicates that it (potentially) supports cell tool tips
   }
}
