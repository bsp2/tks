// ----
// ---- file   : Logger.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2024 by Bastian Spiegel.
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : Base class for log writers. May be overridden by application (e.g. for logging to UI status bars)
// ----
// ---- created: 30May2024
// ---- changed: 03Jun2024, 23Jul2024
// ----
// ----
// ----

module MLogger;

namespace ui;


// <class.png>
class Logger {
   explain "Base class for log writers. May be overridden by application (e.g. for logging to UI status bars)";

   public method logInfo(local String _msg) {
      // regular info message (disappears after a short time out)
      trace "[...] ui::Logger::Info: \""+_msg+"\"";
   }

   public method logInfoFast(local String _msg) {
      // short (high frequency) info message (disappears after a very short time out)
      trace "[...] ui::Logger::InfoFast: \""+_msg+"\"";
   }

   public method logInfoSlow(local String _msg) {
      // regular info message (disappears after a medium time out)
      trace "[...] \""+_msg+"\"";
   }

   public method logSuccess(local String _msg) {
      // print success message (disappears after a long time out)
      trace "[+++] ui::Logger::Success: \""+_msg+"\"";
   }

   public method logSuccessShort(local String _msg) {
      // print success message (disappears after a short time out)
      trace "[+++] \""+_msg+"\".";
   }

   public method logDebug(local String _msg) {
      // print low frequency debug message
      trace "[dbg] ui::Logger::Debug: \""+_msg+"\"";
   }

   public method logTrace(local String _msg) {
      // print medium frequency debug message
      trace "[trc] ui::Logger::Trace: \""+_msg+"\"";
   }

   public method logVerbose(local String _msg) {
      // print high frequency debug message
      trace "[>>>] ui::Logger::Verbose: \""+_msg+"\"";
   }

   public method logProfile(local String _msg) {
      // print profiling message
      trace "[pro] ui::Logger::Profile: \""+_msg+"\"";
   }

   public method logWarning(local String _msg) {
      // print warning message (disappears after a medium time out)
      trace "[~~~] ui::Logger::Warning: \""+_msg+"\"";
   }

   public method logWarningLong(local String _msg) {
      // print warning message (disappears after a long time out)
      trace "[~~~] ui::Logger::WarningLong: \""+_msg+"\"";
   }

   public method logError(local String _msg) {
      // print error message (disappears after a long time out)
      trace "[---] ui::Logger::Error: \""+_msg+"\"";
   }

   public method logCritical(local String _msg) {
      // print critical error message
      trace "[!!!] ui::Logger::Critical: \""+_msg+"\"";
   }

   public method logFatal(local String _msg) {
      // print fatal error message
      trace "[!!!] ui::Logger::Fatal: \""+_msg+"\"";
   }

}
