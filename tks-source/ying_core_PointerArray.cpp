// ---- ying_core_PointerArray.cpp: auto generated by YInG - the YAC interface generator (Wed, 24/Sep/2025 09:42:38)

#ifndef YAC_NO_HOST
sSI   YAC_CALL PointerArray___add   (void *, yacmemptr             );
sSI   YAC_CALL PointerArray___remove(void *, yacmemptr             );
sSI   YAC_CALL PointerArray___insert(void *, yacmemptr             );
sSI   YAC_CALL PointerArray___delete(void *, yacmemptr             );
sSI   YAC_CALL PointerArray__alloc  (void *, yacmemptr             );
void  YAC_CALL PointerArray__free   (void *                        );
void  YAC_CALL PointerArray__unsetAll(void *                       );
sSI   YAC_CALL PointerArray__realloc(void *, yacmemptr             );
sSI   YAC_CALL PointerArray__getNumElements(void *                 );
sSI   YAC_CALL PointerArray__getMaxElements(void *                 );
void  YAC_CALL PointerArray__empty  (void *                        );
sSI   YAC_CALL PointerArray__isEmpty(void *                        );
void  YAC_CALL PointerArray__reverse(void *                        );
void  YAC_CALL PointerArray__setNumElements(void *, yacmemptr      );
void  YAC_CALL PointerArray___getString(void *, YAC_Value *        );
void* YAC_CALL PointerArray__get    (void *, yacmemptr             );
void* YAC_CALL PointerArray___getRev(void *, yacmemptr             );
void  YAC_CALL PointerArray__getDeref(void *, yacmemptr, YAC_Value *);
void  YAC_CALL PointerArray__unlink (void *, yacmemptr, YAC_Value *);
sSI   YAC_CALL PointerArray__indexOfPointer(void *, yacmemptr      );
sSI   YAC_CALL PointerArray__indexOfObject(void *, yacmemptr       );
sSI   YAC_CALL PointerArray__containsObject(void *, yacmemptr      );
sSI   YAC_CALL PointerArray__containsPointer(void *, yacmemptr     );
void* YAC_CALL PointerArray__getNextFree(void *                    );
sSI   YAC_CALL PointerArray___swap  (void *, yacmemptr             );
void  YAC_CALL PointerArray___useAll(void *                        );
void* YAC_CALL PointerArray___getFirst(void *                      );
void* YAC_CALL PointerArray___getLast(void *                       );
sSI   YAC_CALL PointerArray__rearrange(void *, yacmemptr           );
sSI   YAC_CALL PointerArray___joinArrays(void *, yacmemptr         );
sSI   YAC_CALL PointerArray___joinCC(void *, yacmemptr             );
sSI   YAC_CALL PointerArray___joinCR(void *, yacmemptr             );
sSI   YAC_CALL PointerArray___joinCD(void *, yacmemptr             );
sSI   YAC_CALL PointerArray___joinRR(void *, yacmemptr             );
sSI   YAC_CALL PointerArray___joinRC(void *, yacmemptr             );
sSI   YAC_CALL PointerArray___joinRD(void *, yacmemptr             );
sSI   YAC_CALL PointerArray___joinDD(void *, yacmemptr             );
sSI   YAC_CALL PointerArray___joinDC(void *, yacmemptr             );
sSI   YAC_CALL PointerArray___joinDR(void *, yacmemptr             );
sSI   YAC_CALL PointerArray__isFirst(void *, yacmemptr             );
sSI   YAC_CALL PointerArray__isLast (void *, yacmemptr             );
#endif // YAC_NO_HOST

// ------------------ YAC class "_PointerArray" reflection map (implementation) ------------------
sUI          YAC_VCALL _PointerArray::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _PointerArray::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _PointerArray::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _PointerArray::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _PointerArray::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _PointerArray::yacMethodGetNum                  (void) {return 42;}
const char **YAC_VCALL _PointerArray::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "add", "remove", "insert", "delete", "alloc", "free", "unsetAll", "realloc", "getNumElements", "getMaxElements", "empty", "isEmpty", "reverse", "setNumElements", "getString", "get", "getRev", "getDeref", "unlink", "indexOfPointer", "indexOfObject", "containsObject", "containsPointer", "getNextFree", "swap", "useAll", "getFirst", "getLast", "rearrange", "joinArrays", "joinCC", "joinCR", "joinCD", "joinRR", "joinRC", "joinRD", "joinDD", "joinDC", "joinDR", "isFirst", "isLast"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _PointerArray::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 1, 1, 2, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 2, 2, 1, 1, 0, 2, 0, 0, 0, 1, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _PointerArray::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={3,};static const sUI rt2[]={3,};static const sUI rt3[]={1, 3,};static const sUI rt4[]={1,};static const sUI rt5[]={1,};static const sUI rt6[]={0,};static const sUI rt7[]={0,};static const sUI rt8[]={1,};static const sUI rt9[]={0,};static const sUI rt10[]={0,};static const sUI rt11[]={0,};static const sUI rt12[]={0,};static const sUI rt13[]={0,};static const sUI rt14[]={1,};static const sUI rt15[]={0,};static const sUI rt16[]={1,};static const sUI rt17[]={1,};static const sUI rt18[]={1,};static const sUI rt19[]={3,};static const sUI rt20[]={3, 1,};static const sUI rt21[]={3, 1,};static const sUI rt22[]={3,};static const sUI rt23[]={3,};static const sUI rt24[]={0,};static const sUI rt25[]={1, 1,};static const sUI rt26[]={0,};static const sUI rt27[]={0,};static const sUI rt28[]={0,};static const sUI rt29[]={3,};static const sUI rt30[]={3, 3, 1, 1, 1, 1,};static const sUI rt31[]={3, 3,};static const sUI rt32[]={3, 3,};static const sUI rt33[]={3, 3,};static const sUI rt34[]={3, 3,};static const sUI rt35[]={3, 3,};static const sUI rt36[]={3, 3,};static const sUI rt37[]={3, 3,};static const sUI rt38[]={3, 3,};static const sUI rt39[]={3, 3,};static const sUI rt40[]={3,};static const sUI rt41[]={3,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40, rt41}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _PointerArray::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0, (const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0, (const char*)0,};static const char *rs21[]={(const char*)0, (const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0, (const char*)0,};static const char *rs26[]={(const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs31[]={(const char*)0, (const char*)0,};static const char *rs32[]={(const char*)0, (const char*)0,};static const char *rs33[]={(const char*)0, (const char*)0,};static const char *rs34[]={(const char*)0, (const char*)0,};static const char *rs35[]={(const char*)0, (const char*)0,};static const char *rs36[]={(const char*)0, (const char*)0,};static const char *rs37[]={(const char*)0, (const char*)0,};static const char *rs38[]={(const char*)0, (const char*)0,};static const char *rs39[]={(const char*)0, (const char*)0,};static const char *rs40[]={(const char*)0,};static const char *rs41[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40, rs41}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _PointerArray::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 4, 3, 3, 4, 4, 1, 1, 1, 1, 3, 1, 0, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _PointerArray::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _PointerArray::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)PointerArray___add, (void*)PointerArray___remove, (void*)PointerArray___insert, (void*)PointerArray___delete, (void*)PointerArray__alloc, (void*)PointerArray__free, (void*)PointerArray__unsetAll, (void*)PointerArray__realloc, (void*)PointerArray__getNumElements, (void*)PointerArray__getMaxElements, (void*)PointerArray__empty, (void*)PointerArray__isEmpty, (void*)PointerArray__reverse, (void*)PointerArray__setNumElements, (void*)PointerArray___getString, (void*)PointerArray__get, (void*)PointerArray___getRev, (void*)PointerArray__getDeref, (void*)PointerArray__unlink, (void*)PointerArray__indexOfPointer, (void*)PointerArray__indexOfObject, (void*)PointerArray__containsObject, (void*)PointerArray__containsPointer, (void*)PointerArray__getNextFree, (void*)PointerArray___swap, (void*)PointerArray___useAll, (void*)PointerArray___getFirst, (void*)PointerArray___getLast, (void*)PointerArray__rearrange, (void*)PointerArray___joinArrays, (void*)PointerArray___joinCC, (void*)PointerArray___joinCR, (void*)PointerArray___joinCD, (void*)PointerArray___joinRR, (void*)PointerArray___joinRC, (void*)PointerArray___joinRD, (void*)PointerArray___joinDD, (void*)PointerArray___joinDC, (void*)PointerArray___joinDR, (void*)PointerArray__isFirst, (void*)PointerArray__isLast}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _PointerArray::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _PointerArray::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _PointerArray::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _PointerArray::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

#ifndef YAC_NO_HOST
sSI   YAC_CALL PointerArray___add   (void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->_add(_args.mem[0].o);}
sSI   YAC_CALL PointerArray___remove(void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->_remove(_args.mem[0].o);}
sSI   YAC_CALL PointerArray___insert(void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->_insert(_args.mem[0].si, _args.mem[1].o);}
sSI   YAC_CALL PointerArray___delete(void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->_delete(_args.mem[0].si);}
sSI   YAC_CALL PointerArray__alloc  (void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->alloc(_args.mem[0].si);}
void  YAC_CALL PointerArray__free   (void *_o                                ) {((_PointerArray*)_o)->free();}
void  YAC_CALL PointerArray__unsetAll(void *_o                               ) {((_PointerArray*)_o)->unsetAll();}
sSI   YAC_CALL PointerArray__realloc(void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->realloc(_args.mem[0].si);}
sSI   YAC_CALL PointerArray__getNumElements(void *_o                         ) {return (sSI)((_PointerArray*)_o)->getNumElements();}
sSI   YAC_CALL PointerArray__getMaxElements(void *_o                         ) {return (sSI)((_PointerArray*)_o)->getMaxElements();}
void  YAC_CALL PointerArray__empty  (void *_o                                ) {((_PointerArray*)_o)->empty();}
sSI   YAC_CALL PointerArray__isEmpty(void *_o                                ) {return (sSI)((_PointerArray*)_o)->isEmpty();}
void  YAC_CALL PointerArray__reverse(void *_o                                ) {((_PointerArray*)_o)->reverse();}
void  YAC_CALL PointerArray__setNumElements(void *_o, yacmemptr _args        ) {((_PointerArray*)_o)->setNumElements(_args.mem[0].si);}
void  YAC_CALL PointerArray___getString(void *_o, YAC_Value *_r              ) {((_PointerArray*)_o)->_getString(_r);}
void* YAC_CALL PointerArray__get    (void *_o, yacmemptr _args               ) {return (void*)((_PointerArray*)_o)->get(_args.mem[0].si);}
void* YAC_CALL PointerArray___getRev(void *_o, yacmemptr _args               ) {return (void*)((_PointerArray*)_o)->_getRev(_args.mem[0].si);}
void  YAC_CALL PointerArray__getDeref(void *_o, yacmemptr _args, YAC_Value *_r) {((_PointerArray*)_o)->getDeref(_args.mem[0].si, _r);}
void  YAC_CALL PointerArray__unlink (void *_o, yacmemptr _args, YAC_Value *_r) {((_PointerArray*)_o)->unlink(_args.mem[0].o, _r);}
sSI   YAC_CALL PointerArray__indexOfPointer(void *_o, yacmemptr _args        ) {return (sSI)((_PointerArray*)_o)->indexOfPointer(_args.mem[0].o, _args.mem[1].si);}
sSI   YAC_CALL PointerArray__indexOfObject(void *_o, yacmemptr _args         ) {return (sSI)((_PointerArray*)_o)->indexOfObject(_args.mem[0].o, _args.mem[1].si);}
sSI   YAC_CALL PointerArray__containsObject(void *_o, yacmemptr _args        ) {return (sSI)((_PointerArray*)_o)->containsObject(_args.mem[0].o);}
sSI   YAC_CALL PointerArray__containsPointer(void *_o, yacmemptr _args       ) {return (sSI)((_PointerArray*)_o)->containsPointer(_args.mem[0].o);}
void* YAC_CALL PointerArray__getNextFree(void *_o                            ) {return (void*)((_PointerArray*)_o)->getNextFree();}
sSI   YAC_CALL PointerArray___swap  (void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->_swap(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL PointerArray___useAll(void *_o                                ) {((_PointerArray*)_o)->_useAll();}
void* YAC_CALL PointerArray___getFirst(void *_o                              ) {return (void*)((_PointerArray*)_o)->_getFirst();}
void* YAC_CALL PointerArray___getLast(void *_o                               ) {return (void*)((_PointerArray*)_o)->_getLast();}
sSI   YAC_CALL PointerArray__rearrange(void *_o, yacmemptr _args             ) {return (sSI)((_PointerArray*)_o)->rearrange(_args.mem[0].o);}
sSI   YAC_CALL PointerArray___joinArrays(void *_o, yacmemptr _args           ) {return (sSI)((_PointerArray*)_o)->_joinArrays(_args.mem[0].o, _args.mem[1].o, _args.mem[2].si, _args.mem[3].si, _args.mem[4].si, _args.mem[5].si);}
sSI   YAC_CALL PointerArray___joinCC(void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->_joinCC(_args.mem[0].o, _args.mem[1].o);}
sSI   YAC_CALL PointerArray___joinCR(void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->_joinCR(_args.mem[0].o, _args.mem[1].o);}
sSI   YAC_CALL PointerArray___joinCD(void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->_joinCD(_args.mem[0].o, _args.mem[1].o);}
sSI   YAC_CALL PointerArray___joinRR(void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->_joinRR(_args.mem[0].o, _args.mem[1].o);}
sSI   YAC_CALL PointerArray___joinRC(void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->_joinRC(_args.mem[0].o, _args.mem[1].o);}
sSI   YAC_CALL PointerArray___joinRD(void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->_joinRD(_args.mem[0].o, _args.mem[1].o);}
sSI   YAC_CALL PointerArray___joinDD(void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->_joinDD(_args.mem[0].o, _args.mem[1].o);}
sSI   YAC_CALL PointerArray___joinDC(void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->_joinDC(_args.mem[0].o, _args.mem[1].o);}
sSI   YAC_CALL PointerArray___joinDR(void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->_joinDR(_args.mem[0].o, _args.mem[1].o);}
sSI   YAC_CALL PointerArray__isFirst(void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->isFirst(_args.mem[0].o);}
sSI   YAC_CALL PointerArray__isLast (void *_o, yacmemptr _args               ) {return (sSI)((_PointerArray*)_o)->isLast(_args.mem[0].o);}
#endif // YAC_NO_HOST
