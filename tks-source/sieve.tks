module Main;

int flags[8191]; flags.numElements=8191;

//int NUM_BENCHMARK_ITERATIONS = (100);
int NUM_BENCHMARK_ITERATIONS = (100000);

compile {
   int size= 8190;
   int i, prime, k, count, iter;
   trace "Eratosthenes Sieve prime number calculation";
   
   trace NUM_BENCHMARK_ITERATIONS+" iterations, size="+(size+1);
   int starttime = milliSeconds();
   for (iter = 1; iter <= NUM_BENCHMARK_ITERATIONS; iter++)
   {
      count = 0;
      for (i = 0; i <= size; i++) flags[i] = true;
      for (i = 0; i <= size; i++)
		{
         if (flags[i])
			{
            prime = i + i + 3;
            k = i + prime;
            while (k <= size)
				{
               flags[k] = false;
               k += prime;
				}
            count ++;
			}
		}
	}
   int elapsedtime = milliSeconds()- starttime;
   trace count + " primes";
   trace "elapsed time = " + elapsedtime;
}
