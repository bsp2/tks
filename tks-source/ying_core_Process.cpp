// ---- ying_core_Process.cpp: auto generated by YInG - the YAC interface generator (Wed, 17/Sep/2025 19:04:45)

#ifndef YAC_NO_HOST
sSI   YAC_CALL Process__exec        (void *, yacmemptr             );
sSI   YAC_CALL Process__waitAvail   (void *, yacmemptr             );
void  YAC_CALL Process__kill        (void *                        );
sSI   YAC_CALL Process__GetPID      (void *                        );
void  YAC_CALL Process__SendSignal  (void *, yacmemptr             );
void  YAC_CALL Process__SendSignal_SIGUSR1(void *, yacmemptr       );
void  YAC_CALL Process__WaitSignal_SIGUSR1(void *                  );
#endif // YAC_NO_HOST

// ------------------ YAC class "_Process" reflection map (implementation) ------------------
sUI          YAC_VCALL _Process::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Process::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Process::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Process::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Process::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Process::yacMethodGetNum                  (void) {return 8;}
const char **YAC_VCALL _Process::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "exec", "waitAvail", "kill", "GetPID", "SendSignal", "SendSignal_SIGUSR1", "WaitSignal_SIGUSR1"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Process::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 2, 1, 0, 0, 2, 1, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _Process::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={3, 3,};static const sUI rt2[]={1,};static const sUI rt3[]={0,};static const sUI rt4[]={0,};static const sUI rt5[]={1, 1,};static const sUI rt6[]={1,};static const sUI rt7[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _Process::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={"String", (const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0, (const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Process::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 1, 1, 0, 1, 0, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _Process::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _Process::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)Process__exec, (void*)Process__waitAvail, (void*)Process__kill, (void*)Process__GetPID, (void*)Process__SendSignal, (void*)Process__SendSignal_SIGUSR1, (void*)Process__WaitSignal_SIGUSR1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _Process::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Process::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Process::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Process::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

#ifndef YAC_NO_HOST
sSI   YAC_CALL Process__exec        (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_Process*)_o)->exec((YAC_String*)_args.mem[0].o, _args.mem[1].o);}return 0;}
sSI   YAC_CALL Process__waitAvail   (void *_o, yacmemptr _args               ) {return (sSI)((_Process*)_o)->waitAvail(_args.mem[0].si);}
void  YAC_CALL Process__kill        (void *_o                                ) {((_Process*)_o)->kill();}
sSI   YAC_CALL Process__GetPID      (void *_o                                ) {return (sSI)((_Process*)_o)->GetPID();}
void  YAC_CALL Process__SendSignal  (void *_o, yacmemptr _args               ) {((_Process*)_o)->SendSignal(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL Process__SendSignal_SIGUSR1(void *_o, yacmemptr _args         ) {((_Process*)_o)->SendSignal_SIGUSR1(_args.mem[0].si);}
void  YAC_CALL Process__WaitSignal_SIGUSR1(void *_o                          ) {((_Process*)_o)->WaitSignal_SIGUSR1();}
#endif // YAC_NO_HOST
