// ---- ying_core_Condition.cpp: auto generated by YInG - the YAC interface generator (Wed, 24/Sep/2025 09:42:38)

#ifndef YAC_NO_HOST
sSI   YAC_CALL Condition__create    (void *, yacmemptr             );
sSI   YAC_CALL Condition__raise     (void *                        );
sSI   YAC_CALL Condition__wait      (void *, yacmemptr             );
sSI   YAC_CALL Condition__reset     (void *                        );
#endif // YAC_NO_HOST

// ------------------ YAC class "_Condition" reflection map (implementation) ------------------
sUI          YAC_VCALL _Condition::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Condition::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Condition::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Condition::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Condition::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Condition::yacMethodGetNum                  (void) {return 5;}
const char **YAC_VCALL _Condition::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "create", "raise", "wait", "reset"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Condition::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 1, 0, 1, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _Condition::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={1,};static const sUI rt2[]={0,};static const sUI rt3[]={1,};static const sUI rt4[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _Condition::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Condition::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 1, 1, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _Condition::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _Condition::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)Condition__create, (void*)Condition__raise, (void*)Condition__wait, (void*)Condition__reset}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _Condition::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Condition::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Condition::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Condition::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

#ifndef YAC_NO_HOST
sSI   YAC_CALL Condition__create    (void *_o, yacmemptr _args               ) {return (sSI)((_Condition*)_o)->create(_args.mem[0].si);}
sSI   YAC_CALL Condition__raise     (void *_o                                ) {return (sSI)((_Condition*)_o)->raise();}
sSI   YAC_CALL Condition__wait      (void *_o, yacmemptr _args               ) {return (sSI)((_Condition*)_o)->wait(_args.mem[0].si);}
sSI   YAC_CALL Condition__reset     (void *_o                                ) {return (sSI)((_Condition*)_o)->reset();}
#endif // YAC_NO_HOST
