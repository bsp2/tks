module MTestHashTable;

class TestHashTable : TestCase {

   HashTable ht;

   pre() {
      ht.alloc(89);
   }

   testInsertInt() {
      ht["myint"] = 42;
      assertqInt(42, ht["myint"]);
   }

   testInsertFloat() {
      ht["myfloat"] = PI;
      assertqFloat(PI, ht["myfloat"]);
   }

   testDelete() {
      ht["testDelete"] = 1;
      assert(true, ht.exists("testDelete"), "ht.exists(\"testDelete\")");

      ht.delete("testDelete");
      assert(false, ht.exists("testDelete"), "!ht.exists(\"testDelete\")");

      assertType(void, ht["testDelete"], "testDelete is void");
   }

}
