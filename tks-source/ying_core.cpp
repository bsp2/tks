// ---- auto generated by YInG - the YAC interface generator (Fri, 24/Apr/2009 23:33:46)
#ifndef __YAC__core_h__
#define __YAC__core_h__

sUI                                          clid_IntArray;
YAC_Template <_IntArray>                       *t_IntArray;
sUI                                          clid_ObjectArray;
YAC_Template <_ObjectArray>                    *t_ObjectArray;
sUI                                          clid_FloatArray;
YAC_Template <_FloatArray>                     *t_FloatArray;
sUI                                          clid_StringArray;
YAC_Template <_StringArray>                    *t_StringArray;
sUI                                          clid_ClassArray;
YAC_Template <_ClassArray>                     *t_ClassArray;
sUI                                          clid_PointerArray;
YAC_Template <_PointerArray>                   *t_PointerArray;
sUI                                          clid_Boolean;
YAC_Template <_Boolean>                        *t_Boolean;
sUI                                          clid_UnsignedByte;
YAC_Template <_UnsignedByte>                   *t_UnsignedByte;
sUI                                          clid_Byte;
YAC_Template <_Byte>                           *t_Byte;
sUI                                          clid_UnsignedShort;
YAC_Template <_UnsignedShort>                  *t_UnsignedShort;
sUI                                          clid_Short;
YAC_Template <_Short>                          *t_Short;
sUI                                          clid_UnsignedInteger;
YAC_Template <_UnsignedInteger>                *t_UnsignedInteger;
sUI                                          clid_Integer;
YAC_Template <_Integer>                        *t_Integer;
sUI                                          clid_UnsignedLong;
YAC_Template <_UnsignedLong>                   *t_UnsignedLong;
sUI                                          clid_Long;
YAC_Template <_Long>                           *t_Long;
sUI                                          clid_Float;
YAC_Template <_Float>                          *t_Float;
sUI                                          clid_Double;
YAC_Template <_Double>                         *t_Double;
sUI                                          clid_Buffer;
YAC_Template <_Buffer>                         *t_Buffer;
sUI                                          clid_SharedBuffer;
YAC_Template <_SharedBuffer>                   *t_SharedBuffer;
sUI                                          clid_Class;
YAC_Template <_Class>                          *t_Class;
sUI                                          clid_Envelope;
YAC_Template <_Envelope>                       *t_Envelope;
sUI                                          clid_File;
YAC_Template <_File>                           *t_File;
sUI                                          clid_StdOutStream;
YAC_Template <_StdOutStream>                   *t_StdOutStream;
sUI                                          clid_StdErrStream;
YAC_Template <_StdErrStream>                   *t_StdErrStream;
sUI                                          clid_StdInStream;
YAC_Template <_StdInStream>                    *t_StdInStream;
sUI                                          clid_PakFile;
YAC_Template <_PakFile>                        *t_PakFile;
sUI                                          clid_Language;
YAC_Template <_Language>                       *t_Language;
sUI                                          clid_Stream;
YAC_Template <_Stream>                         *t_Stream;
sUI                                          clid_String;
YAC_Template <_String>                         *t_String;
sUI                                          clid_StringIterator;
YAC_Template <_StringIterator>                 *t_StringIterator;
sUI                                          clid_Event;
YAC_Template <_Event>                          *t_Event;
sUI                                          clid_HashTable;
YAC_Template <_HashTable>                      *t_HashTable;
sUI                                          clid_Configuration;
YAC_Template <_Configuration>                  *t_Configuration;
sUI                                          clid_Pool;
YAC_Template <_Pool>                           *t_Pool;
sUI                                          clid_Stack;
YAC_Template <_Stack>                          *t_Stack;
sUI                                          clid_TreeNode;
YAC_Template <_TreeNode>                       *t_TreeNode;
sUI                                          clid_Thread;
YAC_Template <_Thread>                         *t_Thread;
sUI                                          clid_Mutex;
YAC_Template <_Mutex>                          *t_Mutex;
sUI                                          clid_Time;
YAC_Template <_Time>                           *t_Time;
sUI                                          clid_Value;
YAC_Template <_Value>                          *t_Value;
sUI                                          clid_Variable;
YAC_Template <_Variable>                       *t_Variable;
sUI                                          clid_Function;
YAC_Template <_Function>                       *t_Function;
sUI                                          clid_Script;
YAC_Template <_Script>                         *t_Script;
sUI                                          clid_ListNode;
YAC_Template <_ListNode>                       *t_ListNode;
sUI                                          clid_List;
YAC_Template <_List>                           *t_List;
sUI                                          clid_ValueArray;
YAC_Template <_ValueArray>                     *t_ValueArray;
sUI                                          clid_Exception;
YAC_Template <_Exception>                      *t_Exception;

void YAC_CALL YAC_Init_core(YAC_Host *_host) {
	// --------------------------------- classes ---------------------------------
	   t_IntArray                 =new YAC_Template <_IntArray>(_host);
	clid_IntArray                 =                t_IntArray->ctemplate.class_ID;
	   t_ObjectArray              =new YAC_Template <_ObjectArray>(_host);
	clid_ObjectArray              =                t_ObjectArray->ctemplate.class_ID;
	   t_FloatArray               =new YAC_Template <_FloatArray>(_host);
	clid_FloatArray               =                t_FloatArray->ctemplate.class_ID;
	   t_StringArray              =new YAC_Template <_StringArray>(_host);
	clid_StringArray              =                t_StringArray->ctemplate.class_ID;
	   t_ClassArray               =new YAC_Template <_ClassArray>(_host);
	clid_ClassArray               =                t_ClassArray->ctemplate.class_ID;
	   t_PointerArray             =new YAC_Template <_PointerArray>(_host);
	clid_PointerArray             =                t_PointerArray->ctemplate.class_ID;
	   t_Boolean                  =new YAC_Template <_Boolean>(_host);
	clid_Boolean                  =                t_Boolean->ctemplate.class_ID;
	   t_UnsignedByte             =new YAC_Template <_UnsignedByte>(_host);
	clid_UnsignedByte             =                t_UnsignedByte->ctemplate.class_ID;
	   t_Byte                     =new YAC_Template <_Byte>(_host);
	clid_Byte                     =                t_Byte->ctemplate.class_ID;
	   t_UnsignedShort            =new YAC_Template <_UnsignedShort>(_host);
	clid_UnsignedShort            =                t_UnsignedShort->ctemplate.class_ID;
	   t_Short                    =new YAC_Template <_Short>(_host);
	clid_Short                    =                t_Short->ctemplate.class_ID;
	   t_UnsignedInteger          =new YAC_Template <_UnsignedInteger>(_host);
	clid_UnsignedInteger          =                t_UnsignedInteger->ctemplate.class_ID;
	   t_Integer                  =new YAC_Template <_Integer>(_host);
	clid_Integer                  =                t_Integer->ctemplate.class_ID;
	   t_UnsignedLong             =new YAC_Template <_UnsignedLong>(_host);
	clid_UnsignedLong             =                t_UnsignedLong->ctemplate.class_ID;
	   t_Long                     =new YAC_Template <_Long>(_host);
	clid_Long                     =                t_Long->ctemplate.class_ID;
	   t_Float                    =new YAC_Template <_Float>(_host);
	clid_Float                    =                t_Float->ctemplate.class_ID;
	   t_Double                   =new YAC_Template <_Double>(_host);
	clid_Double                   =                t_Double->ctemplate.class_ID;
	   t_Buffer                   =new YAC_Template <_Buffer>(_host);
	clid_Buffer                   =                t_Buffer->ctemplate.class_ID;
	   t_SharedBuffer             =new YAC_Template <_SharedBuffer>(_host);
	clid_SharedBuffer             =                t_SharedBuffer->ctemplate.class_ID;
	   t_Class                    =new YAC_Template <_Class>(_host);
	clid_Class                    =                t_Class->ctemplate.class_ID;
	   t_Envelope                 =new YAC_Template <_Envelope>(_host);
	clid_Envelope                 =                t_Envelope->ctemplate.class_ID;
	   t_File                     =new YAC_Template <_File>(_host);
	clid_File                     =                t_File->ctemplate.class_ID;
	   t_StdOutStream             =new YAC_Template <_StdOutStream>(_host);
	clid_StdOutStream             =                t_StdOutStream->ctemplate.class_ID;
	   t_StdErrStream             =new YAC_Template <_StdErrStream>(_host);
	clid_StdErrStream             =                t_StdErrStream->ctemplate.class_ID;
	   t_StdInStream              =new YAC_Template <_StdInStream>(_host);
	clid_StdInStream              =                t_StdInStream->ctemplate.class_ID;
	   t_PakFile                  =new YAC_Template <_PakFile>(_host);
	clid_PakFile                  =                t_PakFile->ctemplate.class_ID;
	   t_Language                 =new YAC_Template <_Language>(_host);
	clid_Language                 =                t_Language->ctemplate.class_ID;
	   t_Stream                   =new YAC_Template <_Stream>(_host);
	clid_Stream                   =                t_Stream->ctemplate.class_ID;
	   t_String                   =new YAC_Template <_String>(_host);
	clid_String                   =                t_String->ctemplate.class_ID;
	   t_StringIterator           =new YAC_Template <_StringIterator>(_host);
	clid_StringIterator           =                t_StringIterator->ctemplate.class_ID;
	   t_Event                    =new YAC_Template <_Event>(_host);
	clid_Event                    =                t_Event->ctemplate.class_ID;
	   t_HashTable                =new YAC_Template <_HashTable>(_host);
	clid_HashTable                =                t_HashTable->ctemplate.class_ID;
	   t_Configuration            =new YAC_Template <_Configuration>(_host);
	clid_Configuration            =                t_Configuration->ctemplate.class_ID;
	   t_Pool                     =new YAC_Template <_Pool>(_host);
	clid_Pool                     =                t_Pool->ctemplate.class_ID;
	   t_Stack                    =new YAC_Template <_Stack>(_host);
	clid_Stack                    =                t_Stack->ctemplate.class_ID;
	   t_TreeNode                 =new YAC_Template <_TreeNode>(_host);
	clid_TreeNode                 =                t_TreeNode->ctemplate.class_ID;
	   t_Thread                   =new YAC_Template <_Thread>(_host);
	clid_Thread                   =                t_Thread->ctemplate.class_ID;
	   t_Mutex                    =new YAC_Template <_Mutex>(_host);
	clid_Mutex                    =                t_Mutex->ctemplate.class_ID;
	   t_Time                     =new YAC_Template <_Time>(_host);
	clid_Time                     =                t_Time->ctemplate.class_ID;
	   t_Value                    =new YAC_Template <_Value>(_host);
	clid_Value                    =                t_Value->ctemplate.class_ID;
	   t_Variable                 =new YAC_Template <_Variable>(_host);
	clid_Variable                 =                t_Variable->ctemplate.class_ID;
	   t_Function                 =new YAC_Template <_Function>(_host);
	clid_Function                 =                t_Function->ctemplate.class_ID;
	   t_Script                   =new YAC_Template <_Script>(_host);
	clid_Script                   =                t_Script->ctemplate.class_ID;
	   t_ListNode                 =new YAC_Template <_ListNode>(_host);
	clid_ListNode                 =                t_ListNode->ctemplate.class_ID;
	   t_List                     =new YAC_Template <_List>(_host);
	clid_List                     =                t_List->ctemplate.class_ID;
	   t_ValueArray               =new YAC_Template <_ValueArray>(_host);
	clid_ValueArray               =                t_ValueArray->ctemplate.class_ID;
	   t_Exception                =new YAC_Template <_Exception>(_host);
	clid_Exception                =                t_Exception->ctemplate.class_ID;
	// -------------------------------- functions --------------------------------

}

void YAC_CALL YAC_Exit_core(YAC_Host *_host) {
	delete t_Exception;
	delete t_ValueArray;
	delete t_List;
	delete t_ListNode;
	delete t_Script;
	delete t_Function;
	delete t_Variable;
	delete t_Value;
	delete t_Time;
	delete t_Mutex;
	delete t_Thread;
	delete t_TreeNode;
	delete t_Stack;
	delete t_Pool;
	delete t_Configuration;
	delete t_HashTable;
	delete t_Event;
	delete t_StringIterator;
	delete t_String;
	delete t_Stream;
	delete t_Language;
	delete t_PakFile;
	delete t_StdInStream;
	delete t_StdErrStream;
	delete t_StdOutStream;
	delete t_File;
	delete t_Envelope;
	delete t_Class;
	delete t_SharedBuffer;
	delete t_Buffer;
	delete t_Double;
	delete t_Float;
	delete t_Long;
	delete t_UnsignedLong;
	delete t_Integer;
	delete t_UnsignedInteger;
	delete t_Short;
	delete t_UnsignedShort;
	delete t_Byte;
	delete t_UnsignedByte;
	delete t_Boolean;
	delete t_PointerArray;
	delete t_ClassArray;
	delete t_StringArray;
	delete t_FloatArray;
	delete t_ObjectArray;
	delete t_IntArray;
}

#endif
