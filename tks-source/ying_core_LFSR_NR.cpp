// ---- ying_core_LFSR_NR.cpp: auto generated by YInG - the YAC interface generator (Wed, 24/Sep/2025 09:42:38)

#ifndef YAC_NO_HOST
void  YAC_CALL LFSR_NR__init        (void *, yacmemptr             );
sSI   YAC_CALL LFSR_NR__getNext     (void *                        );
#endif // YAC_NO_HOST

// ------------------ YAC class "_LFSR_NR" reflection map (implementation) ------------------
sUI          YAC_VCALL _LFSR_NR::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _LFSR_NR::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _LFSR_NR::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _LFSR_NR::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _LFSR_NR::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _LFSR_NR::yacMethodGetNum                  (void) {return 3;}
const char **YAC_VCALL _LFSR_NR::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "init", "getNext"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _LFSR_NR::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 3, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _LFSR_NR::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={1, 1, 1,};static const sUI rt2[]={0,};static const sUI *r[]={rt0, rt1, rt2}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _LFSR_NR::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs2[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _LFSR_NR::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _LFSR_NR::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _LFSR_NR::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)LFSR_NR__init, (void*)LFSR_NR__getNext}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _LFSR_NR::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _LFSR_NR::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _LFSR_NR::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _LFSR_NR::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

#ifndef YAC_NO_HOST
void  YAC_CALL LFSR_NR__init        (void *_o, yacmemptr _args               ) {((_LFSR_NR*)_o)->init(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL LFSR_NR__getNext     (void *_o                                ) {return (sSI)((_LFSR_NR*)_o)->getNext();}
#endif // YAC_NO_HOST
