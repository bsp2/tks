
int ia = 420;
int ib = 64;
float fa = 1.11f;
float fb = 2.22f;
int r;
float rf;
IntArray iarr;
iarr.alloc(10);
iarr.identity(10);

class MyClass {
   int mi;
   float mf;
   String ms;

   public method jitTest(int _i, float _f) compile {
      mi = _i;
      mf = _f;
   }
}

function jit_test() compile {
      
   //r = 42;
   //r = ia + ib;
   //r = ia * ib;
   //r = ia / ib;
   //r = ia % ib;

   // int i;
   // r = 0;
   // for(i=0; i<10; i++)
   // {
   //    r += ib;
   // }

   // int i=ib;
   // r=0;
   // while(i < ia)
   // {
   //    r++;
   //    i++;
   // }

   // int i = 0;
   // r = 0;
   // loop(10)
   // {
   //    r += iarr[i];
   //    iarr[i] = r *2;
   //    i++;
   // }

   // trace "Eratosthenes Sieve prime number calculation";
   // trace "2 Eratosthenes Sieve prime number calculation";
   // //trace ia+" iterations, size="+(ib+1);

   // rf = fa + fb;

   // rf = sqrt(fa*fa + fb*fb);

   // rf = sin(fb);
}

jit_test();

trace "xxx r="+r;
trace "xxx rf="+rf;
trace "xxx iarr="+#(iarr);


MyClass mc;
mc.jitTest(42, PI);

trace "xxx mc.mi="+mc.mi;
trace "xxx mc.mf="+mc.mf;
