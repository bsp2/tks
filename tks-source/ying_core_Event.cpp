// ---- ying_core_Event.cpp: auto generated by YInG - the YAC interface generator (Wed, 24/Sep/2025 09:42:38)

#ifndef YAC_NO_HOST
void  YAC_CALL Event__setId         (void *, yacmemptr             );
sSI   YAC_CALL Event__getId         (void *                        );
void  YAC_CALL Event__setSubId      (void *, yacmemptr             );
sSI   YAC_CALL Event__getSubId      (void *                        );
#endif // YAC_NO_HOST

// ------------------ YAC class "_Event" reflection map (implementation) ------------------
sUI          YAC_VCALL _Event::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Event::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Event::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Event::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Event::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Event::yacMethodGetNum                  (void) {return 5;}
const char **YAC_VCALL _Event::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "setId", "getId", "setSubId", "getSubId"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Event::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 1, 0, 1, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _Event::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={1,};static const sUI rt2[]={0,};static const sUI rt3[]={1,};static const sUI rt4[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _Event::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Event::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 1, 0, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _Event::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _Event::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)Event__setId, (void*)Event__getId, (void*)Event__setSubId, (void*)Event__getSubId}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _Event::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Event::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Event::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Event::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

#ifndef YAC_NO_HOST
void  YAC_CALL Event__setId         (void *_o, yacmemptr _args               ) {((_Event*)_o)->setId(_args.mem[0].si);}
sSI   YAC_CALL Event__getId         (void *_o                                ) {return (sSI)((_Event*)_o)->getId();}
void  YAC_CALL Event__setSubId      (void *_o, yacmemptr _args               ) {((_Event*)_o)->setSubId(_args.mem[0].si);}
sSI   YAC_CALL Event__getSubId      (void *_o                                ) {return (sSI)((_Event*)_o)->getSubId();}
#endif // YAC_NO_HOST
