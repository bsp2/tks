// ---- ying_core_Stream.cpp: auto generated by YInG - the YAC interface generator (Wed, 17/Sep/2025 19:04:45)

#ifndef YAC_NO_HOST
sSI   YAC_CALL Stream___deserialize (void *, yacmemptr             );
sSI   YAC_CALL Stream__eof          (void *                        );
sSI   YAC_CALL Stream__getByteOrder (void *                        );
sSI   YAC_CALL Stream__getErrorCode (void *                        );
void  YAC_CALL Stream__getErrorStringByCode(void *, yacmemptr, YAC_Value *);
sSI   YAC_CALL Stream__getI8        (void *                        );
sSI   YAC_CALL Stream__getU8        (void *                        );
sSI   YAC_CALL Stream__getS8        (void *                        );
sSI   YAC_CALL Stream__getB8        (void *                        );
sSI   YAC_CALL Stream__getI16       (void *                        );
sSI   YAC_CALL Stream__getU16       (void *                        );
sSI   YAC_CALL Stream__getS16       (void *                        );
sSI   YAC_CALL Stream__getI32       (void *                        );
sF32  YAC_CALL Stream__getF32       (void *                        );
sF32  YAC_CALL Stream__getF64       (void *                        );
sSI   YAC_CALL Stream__getOffset    (void *                        );
sSI   YAC_CALL Stream__getSize      (void *                        );
sSI   YAC_CALL Stream__readBuffer   (void *, yacmemptr             );
sSI   YAC_CALL Stream__readLine     (void *, yacmemptr             );
sSI   YAC_CALL Stream__readString   (void *, yacmemptr             );
void  YAC_CALL Stream___seek        (void *, yacmemptr             );
void  YAC_CALL Stream___serialize   (void *, yacmemptr             );
void  YAC_CALL Stream__setByteOrder (void *, yacmemptr             );
void  YAC_CALL Stream__setOffset    (void *, yacmemptr             );
sSI   YAC_CALL Stream__writeBuffer  (void *, yacmemptr             );
sSI   YAC_CALL Stream__writeString  (void *, yacmemptr             );
void  YAC_CALL Stream__setObject    (void *, yacmemptr             );
void  YAC_CALL Stream__getObject    (void *, yacmemptr             );
void  YAC_CALL Stream__setI8        (void *, yacmemptr             );
void  YAC_CALL Stream__setI16       (void *, yacmemptr             );
void  YAC_CALL Stream__setI32       (void *, yacmemptr             );
void  YAC_CALL Stream__setF32       (void *, yacmemptr             );
void  YAC_CALL Stream__setF64       (void *, yacmemptr             );
void  YAC_CALL Stream___close       (void *                        );
void  YAC_CALL Stream__setI8a       (void *, yacmemptr             );
void  YAC_CALL Stream__setI16a      (void *, yacmemptr             );
void  YAC_CALL Stream__setI32a      (void *, yacmemptr             );
void  YAC_CALL Stream__setF32a      (void *, yacmemptr             );
void  YAC_CALL Stream__setF64a      (void *, yacmemptr             );
void  YAC_CALL Stream__getI8a       (void *, yacmemptr             );
void  YAC_CALL Stream__getU8a       (void *, yacmemptr             );
void  YAC_CALL Stream__getI16a      (void *, yacmemptr             );
void  YAC_CALL Stream__getU16a      (void *, yacmemptr             );
void  YAC_CALL Stream__getI32a      (void *, yacmemptr             );
void  YAC_CALL Stream__getF32a      (void *, yacmemptr             );
void  YAC_CALL Stream__getF64a      (void *, yacmemptr             );
void  YAC_CALL Stream__add2f        (void *, yacmemptr             );
void  YAC_CALL Stream__add3f        (void *, yacmemptr             );
void  YAC_CALL Stream__add4f        (void *, yacmemptr             );
void  YAC_CALL Stream__setRgba      (void *, yacmemptr             );
void  YAC_CALL Stream__setBgra      (void *, yacmemptr             );
#endif // YAC_NO_HOST

// ------------------ YAC class "_Stream" reflection map (implementation) ------------------
sUI          YAC_VCALL _Stream::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Stream::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Stream::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Stream::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Stream::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Stream::yacMethodGetNum                  (void) {return 52;}
const char **YAC_VCALL _Stream::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "deserialize", "eof", "getByteOrder", "getErrorCode", "getErrorStringByCode", "getI8", "getU8", "getS8", "getB8", "getI16", "getU16", "getS16", "getI32", "getF32", "getF64", "getOffset", "getSize", "readBuffer", "readLine", "readString", "seek", "serialize", "setByteOrder", "setOffset", "writeBuffer", "writeString", "setObject", "getObject", "setI8", "setI16", "setI32", "setF32", "setF64", "close", "setI8a", "setI16a", "setI32a", "setF32a", "setF64a", "getI8a", "getU8a", "getI16a", "getU16a", "getI32a", "getF32a", "getF64a", "add2f", "add3f", "add4f", "setRgba", "setBgra"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Stream::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 2, 2, 2, 2, 1, 1, 3, 3, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 4, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _Stream::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={3, 1,};static const sUI rt2[]={0,};static const sUI rt3[]={0,};static const sUI rt4[]={0,};static const sUI rt5[]={1,};static const sUI rt6[]={0,};static const sUI rt7[]={0,};static const sUI rt8[]={0,};static const sUI rt9[]={0,};static const sUI rt10[]={0,};static const sUI rt11[]={0,};static const sUI rt12[]={0,};static const sUI rt13[]={0,};static const sUI rt14[]={0,};static const sUI rt15[]={0,};static const sUI rt16[]={0,};static const sUI rt17[]={0,};static const sUI rt18[]={3, 1, 1, 1,};static const sUI rt19[]={3, 1,};static const sUI rt20[]={3, 1,};static const sUI rt21[]={1, 1,};static const sUI rt22[]={3, 1,};static const sUI rt23[]={1,};static const sUI rt24[]={1,};static const sUI rt25[]={3, 1, 1,};static const sUI rt26[]={3, 1, 1,};static const sUI rt27[]={3,};static const sUI rt28[]={3,};static const sUI rt29[]={1,};static const sUI rt30[]={1,};static const sUI rt31[]={1,};static const sUI rt32[]={2,};static const sUI rt33[]={2,};static const sUI rt34[]={0,};static const sUI rt35[]={3,};static const sUI rt36[]={3,};static const sUI rt37[]={3,};static const sUI rt38[]={3,};static const sUI rt39[]={3,};static const sUI rt40[]={3, 1,};static const sUI rt41[]={3, 1,};static const sUI rt42[]={3, 1,};static const sUI rt43[]={3, 1,};static const sUI rt44[]={3, 1,};static const sUI rt45[]={3, 1,};static const sUI rt46[]={3, 1,};static const sUI rt47[]={2, 2,};static const sUI rt48[]={2, 2, 2,};static const sUI rt49[]={2, 2, 2, 2,};static const sUI rt50[]={1,};static const sUI rt51[]={1,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40, rt41, rt42, rt43, rt44, rt45, rt46, rt47, rt48, rt49, rt50, rt51}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _Stream::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0, (const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs19[]={"String", (const char*)0,};static const char *rs20[]={"String", (const char*)0,};static const char *rs21[]={(const char*)0, (const char*)0,};static const char *rs22[]={(const char*)0, (const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs26[]={"String", (const char*)0, (const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0,};static const char *rs31[]={(const char*)0,};static const char *rs32[]={(const char*)0,};static const char *rs33[]={(const char*)0,};static const char *rs34[]={(const char*)0,};static const char *rs35[]={(const char*)0,};static const char *rs36[]={(const char*)0,};static const char *rs37[]={(const char*)0,};static const char *rs38[]={(const char*)0,};static const char *rs39[]={(const char*)0,};static const char *rs40[]={(const char*)0, (const char*)0,};static const char *rs41[]={(const char*)0, (const char*)0,};static const char *rs42[]={(const char*)0, (const char*)0,};static const char *rs43[]={(const char*)0, (const char*)0,};static const char *rs44[]={(const char*)0, (const char*)0,};static const char *rs45[]={(const char*)0, (const char*)0,};static const char *rs46[]={(const char*)0, (const char*)0,};static const char *rs47[]={(const char*)0, (const char*)0,};static const char *rs48[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs49[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs50[]={(const char*)0,};static const char *rs51[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40, rs41, rs42, rs43, rs44, rs45, rs46, rs47, rs48, rs49, rs50, rs51}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Stream::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _Stream::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _Stream::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)Stream___deserialize, (void*)Stream__eof, (void*)Stream__getByteOrder, (void*)Stream__getErrorCode, (void*)Stream__getErrorStringByCode, (void*)Stream__getI8, (void*)Stream__getU8, (void*)Stream__getS8, (void*)Stream__getB8, (void*)Stream__getI16, (void*)Stream__getU16, (void*)Stream__getS16, (void*)Stream__getI32, (void*)Stream__getF32, (void*)Stream__getF64, (void*)Stream__getOffset, (void*)Stream__getSize, (void*)Stream__readBuffer, (void*)Stream__readLine, (void*)Stream__readString, (void*)Stream___seek, (void*)Stream___serialize, (void*)Stream__setByteOrder, (void*)Stream__setOffset, (void*)Stream__writeBuffer, (void*)Stream__writeString, (void*)Stream__setObject, (void*)Stream__getObject, (void*)Stream__setI8, (void*)Stream__setI16, (void*)Stream__setI32, (void*)Stream__setF32, (void*)Stream__setF64, (void*)Stream___close, (void*)Stream__setI8a, (void*)Stream__setI16a, (void*)Stream__setI32a, (void*)Stream__setF32a, (void*)Stream__setF64a, (void*)Stream__getI8a, (void*)Stream__getU8a, (void*)Stream__getI16a, (void*)Stream__getU16a, (void*)Stream__getI32a, (void*)Stream__getF32a, (void*)Stream__getF64a, (void*)Stream__add2f, (void*)Stream__add3f, (void*)Stream__add4f, (void*)Stream__setRgba, (void*)Stream__setBgra}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _Stream::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Stream::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Stream::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Stream::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

#ifndef YAC_NO_HOST
sSI   YAC_CALL Stream___deserialize (void *_o, yacmemptr _args               ) {return (sSI)((_Stream*)_o)->_deserialize(_args.mem[0].o, _args.mem[1].si);}
sSI   YAC_CALL Stream__eof          (void *_o                                ) {return (sSI)((_Stream*)_o)->eof();}
sSI   YAC_CALL Stream__getByteOrder (void *_o                                ) {return (sSI)((_Stream*)_o)->getByteOrder();}
sSI   YAC_CALL Stream__getErrorCode (void *_o                                ) {return (sSI)((_Stream*)_o)->getErrorCode();}
void  YAC_CALL Stream__getErrorStringByCode(void *_o, yacmemptr _args, YAC_Value *_r) {((_Stream*)_o)->getErrorStringByCode(_args.mem[0].si, _r);}
sSI   YAC_CALL Stream__getI8        (void *_o                                ) {return (sSI)((_Stream*)_o)->getI8();}
sSI   YAC_CALL Stream__getU8        (void *_o                                ) {return (sSI)((_Stream*)_o)->getU8();}
sSI   YAC_CALL Stream__getS8        (void *_o                                ) {return (sSI)((_Stream*)_o)->getS8();}
sSI   YAC_CALL Stream__getB8        (void *_o                                ) {return (sSI)((_Stream*)_o)->getB8();}
sSI   YAC_CALL Stream__getI16       (void *_o                                ) {return (sSI)((_Stream*)_o)->getI16();}
sSI   YAC_CALL Stream__getU16       (void *_o                                ) {return (sSI)((_Stream*)_o)->getU16();}
sSI   YAC_CALL Stream__getS16       (void *_o                                ) {return (sSI)((_Stream*)_o)->getS16();}
sSI   YAC_CALL Stream__getI32       (void *_o                                ) {return (sSI)((_Stream*)_o)->getI32();}
sF32  YAC_CALL Stream__getF32       (void *_o                                ) {return (sF32)((_Stream*)_o)->getF32();}
sF32  YAC_CALL Stream__getF64       (void *_o                                ) {return (sF32)((_Stream*)_o)->getF64();}
sSI   YAC_CALL Stream__getOffset    (void *_o                                ) {return (sSI)((_Stream*)_o)->getOffset();}
sSI   YAC_CALL Stream__getSize      (void *_o                                ) {return (sSI)((_Stream*)_o)->getSize();}
sSI   YAC_CALL Stream__readBuffer   (void *_o, yacmemptr _args               ) {return (sSI)((_Stream*)_o)->readBuffer(_args.mem[0].o, _args.mem[1].si, _args.mem[2].si, _args.mem[3].si);}
sSI   YAC_CALL Stream__readLine     (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_Stream*)_o)->readLine((YAC_String*)_args.mem[0].o, _args.mem[1].si);}return 0;}
sSI   YAC_CALL Stream__readString   (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_Stream*)_o)->readString((YAC_String*)_args.mem[0].o, _args.mem[1].si);}return 0;}
void  YAC_CALL Stream___seek        (void *_o, yacmemptr _args               ) {((_Stream*)_o)->_seek(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL Stream___serialize   (void *_o, yacmemptr _args               ) {((_Stream*)_o)->_serialize(_args.mem[0].o, _args.mem[1].si);}
void  YAC_CALL Stream__setByteOrder (void *_o, yacmemptr _args               ) {((_Stream*)_o)->setByteOrder(_args.mem[0].si);}
void  YAC_CALL Stream__setOffset    (void *_o, yacmemptr _args               ) {((_Stream*)_o)->setOffset(_args.mem[0].si);}
sSI   YAC_CALL Stream__writeBuffer  (void *_o, yacmemptr _args               ) {return (sSI)((_Stream*)_o)->writeBuffer(_args.mem[0].o, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL Stream__writeString  (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_Stream*)_o)->writeString((YAC_String*)_args.mem[0].o, _args.mem[1].si, _args.mem[2].si);}return 0;}
void  YAC_CALL Stream__setObject    (void *_o, yacmemptr _args               ) {((_Stream*)_o)->setObject(_args.mem[0].o);}
void  YAC_CALL Stream__getObject    (void *_o, yacmemptr _args               ) {((_Stream*)_o)->getObject(_args.mem[0].o);}
void  YAC_CALL Stream__setI8        (void *_o, yacmemptr _args               ) {((_Stream*)_o)->setI8(_args.mem[0].si);}
void  YAC_CALL Stream__setI16       (void *_o, yacmemptr _args               ) {((_Stream*)_o)->setI16(_args.mem[0].si);}
void  YAC_CALL Stream__setI32       (void *_o, yacmemptr _args               ) {((_Stream*)_o)->setI32(_args.mem[0].si);}
void  YAC_CALL Stream__setF32       (void *_o, yacmemptr _args               ) {((_Stream*)_o)->setF32(_args.mem[0].f32);}
void  YAC_CALL Stream__setF64       (void *_o, yacmemptr _args               ) {((_Stream*)_o)->setF64(_args.mem[0].f32);}
void  YAC_CALL Stream___close       (void *_o                                ) {((_Stream*)_o)->_close();}
void  YAC_CALL Stream__setI8a       (void *_o, yacmemptr _args               ) {((_Stream*)_o)->setI8a(_args.mem[0].o);}
void  YAC_CALL Stream__setI16a      (void *_o, yacmemptr _args               ) {((_Stream*)_o)->setI16a(_args.mem[0].o);}
void  YAC_CALL Stream__setI32a      (void *_o, yacmemptr _args               ) {((_Stream*)_o)->setI32a(_args.mem[0].o);}
void  YAC_CALL Stream__setF32a      (void *_o, yacmemptr _args               ) {((_Stream*)_o)->setF32a(_args.mem[0].o);}
void  YAC_CALL Stream__setF64a      (void *_o, yacmemptr _args               ) {((_Stream*)_o)->setF64a(_args.mem[0].o);}
void  YAC_CALL Stream__getI8a       (void *_o, yacmemptr _args               ) {((_Stream*)_o)->getI8a(_args.mem[0].o, _args.mem[1].si);}
void  YAC_CALL Stream__getU8a       (void *_o, yacmemptr _args               ) {((_Stream*)_o)->getU8a(_args.mem[0].o, _args.mem[1].si);}
void  YAC_CALL Stream__getI16a      (void *_o, yacmemptr _args               ) {((_Stream*)_o)->getI16a(_args.mem[0].o, _args.mem[1].si);}
void  YAC_CALL Stream__getU16a      (void *_o, yacmemptr _args               ) {((_Stream*)_o)->getU16a(_args.mem[0].o, _args.mem[1].si);}
void  YAC_CALL Stream__getI32a      (void *_o, yacmemptr _args               ) {((_Stream*)_o)->getI32a(_args.mem[0].o, _args.mem[1].si);}
void  YAC_CALL Stream__getF32a      (void *_o, yacmemptr _args               ) {((_Stream*)_o)->getF32a(_args.mem[0].o, _args.mem[1].si);}
void  YAC_CALL Stream__getF64a      (void *_o, yacmemptr _args               ) {((_Stream*)_o)->getF64a(_args.mem[0].o, _args.mem[1].si);}
void  YAC_CALL Stream__add2f        (void *_o, yacmemptr _args               ) {((_Stream*)_o)->add2f(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL Stream__add3f        (void *_o, yacmemptr _args               ) {((_Stream*)_o)->add3f(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32);}
void  YAC_CALL Stream__add4f        (void *_o, yacmemptr _args               ) {((_Stream*)_o)->add4f(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32);}
void  YAC_CALL Stream__setRgba      (void *_o, yacmemptr _args               ) {((_Stream*)_o)->setRgba(_args.mem[0].si);}
void  YAC_CALL Stream__setBgra      (void *_o, yacmemptr _args               ) {((_Stream*)_o)->setBgra(_args.mem[0].si);}
#endif // YAC_NO_HOST
