// ---- ying_core_String.cpp: auto generated by YInG - the YAC interface generator (Wed, 24/Sep/2025 09:42:38)

#ifndef YAC_NO_HOST
void  YAC_CALL String__freeStack    (void *                        );
void  YAC_CALL String___replace_YAC_RARG(void *, yacmemptr         );
void  YAC_CALL String___replace_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___replace_YAC_RSELF(void *, yacmemptr        );
sSI   YAC_CALL String___replaceReturnNum(void *, yacmemptr         );
sSI   YAC_CALL String__split        (void *, yacmemptr             );
sSI   YAC_CALL String__words        (void *, yacmemptr             );
void  YAC_CALL String__fixLength    (void *                        );
sSI   YAC_CALL String__getLength    (void *                        );
sSI   YAC_CALL String__getNumChars  (void *                        );
void  YAC_CALL String___substring_YAC_RARG(void *, yacmemptr       );
void  YAC_CALL String___substring_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___substring_YAC_RSELF(void *, yacmemptr      );
sSI   YAC_CALL String___indexOf     (void *, yacmemptr             );
sSI   YAC_CALL String___lastIndexOf (void *, yacmemptr             );
sSI   YAC_CALL String___loadLocal   (void *, yacmemptr             );
sSI   YAC_CALL String___saveLocal   (void *, yacmemptr             );
void  YAC_CALL String___trim_YAC_RARG(void *, yacmemptr            );
void  YAC_CALL String___trim_YAC_RVAL(void *, YAC_Value *          );
void  YAC_CALL String___trim_YAC_RSELF(void *                      );
sSI   YAC_CALL String___alloc       (void *, yacmemptr             );
sSI   YAC_CALL String___getc        (void *, yacmemptr             );
void  YAC_CALL String___putc        (void *, yacmemptr             );
sSI   YAC_CALL String__isBlank      (void *                        );
void  YAC_CALL String___copy        (void *, yacmemptr             );
void* YAC_CALL String__getWord      (void *, yacmemptr             );
sSI   YAC_CALL String___startsWith  (void *, yacmemptr             );
sSI   YAC_CALL String___endsWith    (void *, yacmemptr             );
sSI   YAC_CALL String___patternMatch(void *, yacmemptr             );
sSI   YAC_CALL String___numIndicesOf(void *, yacmemptr             );
void  YAC_CALL String___insert_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL String___insert_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___insert_YAC_RSELF(void *, yacmemptr         );
void  YAC_CALL String___append_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL String___append_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___append_YAC_RSELF(void *, yacmemptr         );
void  YAC_CALL String___appendRepeat_YAC_RARG(void *, yacmemptr    );
void  YAC_CALL String___appendRepeat_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___appendRepeat_YAC_RSELF(void *, yacmemptr   );
sSI   YAC_CALL String___load        (void *, yacmemptr             );
void  YAC_CALL String___parseXML    (void *, YAC_Value *           );
void  YAC_CALL String___splitSpace_YAC_RARG(void *, yacmemptr      );
void  YAC_CALL String___splitSpace_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___splitChar_YAC_RARG(void *, yacmemptr       );
void  YAC_CALL String___splitChar_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___splitCharset_YAC_RARG(void *, yacmemptr    );
void  YAC_CALL String___splitCharset_YAC_RVAL(void *, yacmemptr, YAC_Value *);
sSI   YAC_CALL String___wordIndexAtCharIndex(void *, yacmemptr     );
void  YAC_CALL String___tokenize_YAC_RARG(void *, yacmemptr        );
void  YAC_CALL String___tokenize_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___tokenizeWithRanges_YAC_RARG(void *, yacmemptr);
void  YAC_CALL String___tokenizeWithRanges_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___toLower_YAC_RARG(void *, yacmemptr         );
void  YAC_CALL String___toLower_YAC_RVAL(void *, YAC_Value *       );
void  YAC_CALL String___toLower_YAC_RSELF(void *                   );
void  YAC_CALL String___toUpper_YAC_RARG(void *, yacmemptr         );
void  YAC_CALL String___toUpper_YAC_RVAL(void *, YAC_Value *       );
void  YAC_CALL String___toUpper_YAC_RSELF(void *                   );
void  YAC_CALL String__empty        (void *                        );
void  YAC_CALL String__free         (void *                        );
sSI   YAC_CALL String__charsetIndexOf(void *, yacmemptr            );
sSI   YAC_CALL String__indexOfControlCharacter(void *, yacmemptr   );
void  YAC_CALL String___abbrev_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL String___abbrev_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___abbrev_YAC_RSELF(void *, yacmemptr         );
sSI   YAC_CALL String___realloc     (void *, yacmemptr             );
void  YAC_CALL String___deleteRegion_YAC_RARG(void *, yacmemptr    );
void  YAC_CALL String___deleteRegion_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___deleteRegion_YAC_RSELF(void *, yacmemptr   );
sSI   YAC_CALL String___indexOfWordStart(void *, yacmemptr         );
sSI   YAC_CALL String___charsetIndexOfWordStart(void *, yacmemptr  );
sSI   YAC_CALL String___indexOfWordEnd(void *, yacmemptr           );
sSI   YAC_CALL String___charsetIndexOfWordEnd(void *, yacmemptr    );
sSI   YAC_CALL String___compare     (void *, yacmemptr             );
sSI   YAC_CALL String___compareIgnoreCase(void *, yacmemptr        );
sSI   YAC_CALL String___compareIgnoreWhitespace(void *, yacmemptr  );
sSI   YAC_CALL String___replaceCharReturnNum(void *, yacmemptr     );
void  YAC_CALL String___replaceChar_YAC_RARG(void *, yacmemptr     );
void  YAC_CALL String___replaceChar_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___replaceChar_YAC_RSELF(void *, yacmemptr    );
sSI   YAC_CALL String___indexOfChar (void *, yacmemptr             );
sSI   YAC_CALL String___revIndexOfChar(void *, yacmemptr           );
sSI   YAC_CALL String___indexOfFirstDifference(void *, yacmemptr   );
void  YAC_CALL String___charsetBlacklist_YAC_RARG(void *, yacmemptr);
void  YAC_CALL String___charsetBlacklist_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___charsetBlacklist_YAC_RSELF(void *, yacmemptr);
void  YAC_CALL String___charsetWhitelist_YAC_RARG(void *, yacmemptr);
void  YAC_CALL String___charsetWhitelist_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___charsetWhitelist_YAC_RSELF(void *, yacmemptr);
void  YAC_CALL String___New         (void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___replaceRegion_YAC_RARG(void *, yacmemptr   );
void  YAC_CALL String___replaceRegion_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___replaceRegion_YAC_RSELF(void *, yacmemptr  );
sSI   YAC_CALL String___replaceIncludes(void *, yacmemptr          );
void  YAC_CALL String___visit       (void *, yacmemptr             );
sSI   YAC_CALL String___getChecksum (void *                        );
sSI   YAC_CALL String___getChecksumIgnoreWhitespace(void *         );
void  YAC_CALL String___getDirName_YAC_RVAL(void *, YAC_Value *    );
void  YAC_CALL String___getDirName_YAC_RARG(void *, yacmemptr      );
void  YAC_CALL String___getDebugString(void *, YAC_Value *         );
sSI   YAC_CALL String___checkConversions(void *                    );
sSI   YAC_CALL String__checkIntConversion(void *                   );
sSI   YAC_CALL String__checkFloatConversion(void *                 );
sSI   YAC_CALL String___getMetaFlags(void *                        );
sSI   YAC_CALL String___wasQuoted   (void *                        );
sSI   YAC_CALL String___wasQuotedSingle(void *                     );
sSI   YAC_CALL String___wasQuotedDouble(void *                     );
sSI   YAC_CALL String___isPredecessor(void *, yacmemptr            );
sSI   YAC_CALL String___numCharsAt  (void *, yacmemptr             );
void  YAC_CALL String__setQuotFlag  (void *, yacmemptr             );
sSI   YAC_CALL String__getQuotFlag  (void *                        );
void  YAC_CALL String___utf8ToASCII_YAC_RARG(void *, yacmemptr     );
void  YAC_CALL String___utf8ToASCII_YAC_RVAL(void *, YAC_Value *   );
void  YAC_CALL String___utf8ToASCII_YAC_RSELF(void *               );
void  YAC_CALL String___utf8ToCP1252_YAC_RARG(void *, yacmemptr    );
void  YAC_CALL String___utf8ToCP1252_YAC_RVAL(void *, YAC_Value *  );
void  YAC_CALL String___utf8ToCP1252_YAC_RSELF(void *              );
void  YAC_CALL String___cp1252ToUTF8_YAC_RARG(void *, yacmemptr    );
void  YAC_CALL String___cp1252ToUTF8_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL String___cp1252ToUTF8_YAC_RSELF(void *, yacmemptr   );
sSI   YAC_CALL String___hasUTF8BOM  (void *                        );
sSI   YAC_CALL String___isUTF8      (void *                        );
void  YAC_CALL String___escapeControlChars_YAC_RSELF(void *        );
void  YAC_CALL String___escapeControlChars_YAC_RVAL(void *, YAC_Value *);
void  YAC_CALL String___escapeControlChars_YAC_RARG(void *, yacmemptr);
#endif // YAC_NO_HOST

// ------------------ YAC class "_String" reflection map (implementation) ------------------
sUI          YAC_VCALL _String::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _String::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _String::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _String::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _String::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _String::yacMethodGetNum                  (void) {return 126;}
const char **YAC_VCALL _String::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "freeStack", "replace_YAC_RARG", "replace_YAC_RVAL", "replace_YAC_RSELF", "replaceReturnNum", "split", "words", "fixLength", "getLength", "getNumChars", "substring_YAC_RARG", "substring_YAC_RVAL", "substring_YAC_RSELF", "indexOf", "lastIndexOf", "loadLocal", "saveLocal", "trim_YAC_RARG", "trim_YAC_RVAL", "trim_YAC_RSELF", "alloc", "getc", "putc", "isBlank", "copy", "getWord", "startsWith", "endsWith", "patternMatch", "numIndicesOf", "insert_YAC_RARG", "insert_YAC_RVAL", "insert_YAC_RSELF", "append_YAC_RARG", "append_YAC_RVAL", "append_YAC_RSELF", "appendRepeat_YAC_RARG", "appendRepeat_YAC_RVAL", "appendRepeat_YAC_RSELF", "load", "parseXML", "splitSpace_YAC_RARG", "splitSpace_YAC_RVAL", "splitChar_YAC_RARG", "splitChar_YAC_RVAL", "splitCharset_YAC_RARG", "splitCharset_YAC_RVAL", "wordIndexAtCharIndex", "tokenize_YAC_RARG", "tokenize_YAC_RVAL", "tokenizeWithRanges_YAC_RARG", "tokenizeWithRanges_YAC_RVAL", "toLower_YAC_RARG", "toLower_YAC_RVAL", "toLower_YAC_RSELF", "toUpper_YAC_RARG", "toUpper_YAC_RVAL", "toUpper_YAC_RSELF", "empty", "free", "charsetIndexOf", "indexOfControlCharacter", "abbrev_YAC_RARG", "abbrev_YAC_RVAL", "abbrev_YAC_RSELF", "realloc", "deleteRegion_YAC_RARG", "deleteRegion_YAC_RVAL", "deleteRegion_YAC_RSELF", "indexOfWordStart", "charsetIndexOfWordStart", "indexOfWordEnd", "charsetIndexOfWordEnd", "compare", "compareIgnoreCase", "compareIgnoreWhitespace", "replaceCharReturnNum", "replaceChar_YAC_RARG", "replaceChar_YAC_RVAL", "replaceChar_YAC_RSELF", "indexOfChar", "revIndexOfChar", "indexOfFirstDifference", "charsetBlacklist_YAC_RARG", "charsetBlacklist_YAC_RVAL", "charsetBlacklist_YAC_RSELF", "charsetWhitelist_YAC_RARG", "charsetWhitelist_YAC_RVAL", "charsetWhitelist_YAC_RSELF", "New", "replaceRegion_YAC_RARG", "replaceRegion_YAC_RVAL", "replaceRegion_YAC_RSELF", "replaceIncludes", "visit", "getChecksum", "getChecksumIgnoreWhitespace", "getDirName_YAC_RVAL", "getDirName_YAC_RARG", "getDebugString", "checkConversions", "checkIntConversion", "checkFloatConversion", "getMetaFlags", "wasQuoted", "wasQuotedSingle", "wasQuotedDouble", "isPredecessor", "numCharsAt", "setQuotFlag", "getQuotFlag", "utf8ToASCII_YAC_RARG", "utf8ToASCII_YAC_RVAL", "utf8ToASCII_YAC_RSELF", "utf8ToCP1252_YAC_RARG", "utf8ToCP1252_YAC_RVAL", "utf8ToCP1252_YAC_RSELF", "cp1252ToUTF8_YAC_RARG", "cp1252ToUTF8_YAC_RVAL", "cp1252ToUTF8_YAC_RSELF", "hasUTF8BOM", "isUTF8", "escapeControlChars_YAC_RSELF", "escapeControlChars_YAC_RVAL", "escapeControlChars_YAC_RARG"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _String::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 3, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 2, 1, 2, 1, 1, 0, 0, 1, 1, 2, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 1, 1, 3, 2, 2, 2, 0, 2, 1, 2, 1, 2, 1, 2, 2, 1, 3, 2, 1, 0, 0, 1, 0, 0, 0, 0, 2, 1, 2, 1, 1, 1, 3, 2, 2, 1, 2, 1, 2, 1, 1, 1, 2, 3, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 1, 1, 4, 3, 3, 1, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0, 0, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _String::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={3, 3, 3,};static const sUI rt3[]={3, 3,};static const sUI rt4[]={3, 3,};static const sUI rt5[]={3, 3,};static const sUI rt6[]={1,};static const sUI rt7[]={1,};static const sUI rt8[]={0,};static const sUI rt9[]={0,};static const sUI rt10[]={0,};static const sUI rt11[]={1, 1, 3,};static const sUI rt12[]={1, 1,};static const sUI rt13[]={1, 1,};static const sUI rt14[]={3, 1,};static const sUI rt15[]={3,};static const sUI rt16[]={3, 1,};static const sUI rt17[]={3,};static const sUI rt18[]={3,};static const sUI rt19[]={0,};static const sUI rt20[]={0,};static const sUI rt21[]={1,};static const sUI rt22[]={1,};static const sUI rt23[]={1, 1,};static const sUI rt24[]={0,};static const sUI rt25[]={3,};static const sUI rt26[]={1,};static const sUI rt27[]={3,};static const sUI rt28[]={3,};static const sUI rt29[]={3,};static const sUI rt30[]={3,};static const sUI rt31[]={1, 3, 3,};static const sUI rt32[]={1, 3,};static const sUI rt33[]={1, 3,};static const sUI rt34[]={3, 3,};static const sUI rt35[]={3,};static const sUI rt36[]={3,};static const sUI rt37[]={3, 1, 3,};static const sUI rt38[]={3, 1,};static const sUI rt39[]={3, 1,};static const sUI rt40[]={3, 1,};static const sUI rt41[]={0,};static const sUI rt42[]={1, 3,};static const sUI rt43[]={1,};static const sUI rt44[]={1, 3,};static const sUI rt45[]={1,};static const sUI rt46[]={3, 3,};static const sUI rt47[]={3,};static const sUI rt48[]={1, 1,};static const sUI rt49[]={3, 3,};static const sUI rt50[]={3,};static const sUI rt51[]={3, 3, 3,};static const sUI rt52[]={3, 3,};static const sUI rt53[]={3,};static const sUI rt54[]={0,};static const sUI rt55[]={0,};static const sUI rt56[]={3,};static const sUI rt57[]={0,};static const sUI rt58[]={0,};static const sUI rt59[]={0,};static const sUI rt60[]={0,};static const sUI rt61[]={3, 1,};static const sUI rt62[]={1,};static const sUI rt63[]={1, 3,};static const sUI rt64[]={1,};static const sUI rt65[]={1,};static const sUI rt66[]={1,};static const sUI rt67[]={1, 1, 3,};static const sUI rt68[]={1, 1,};static const sUI rt69[]={1, 1,};static const sUI rt70[]={1,};static const sUI rt71[]={3, 1,};static const sUI rt72[]={1,};static const sUI rt73[]={3, 1,};static const sUI rt74[]={3,};static const sUI rt75[]={3,};static const sUI rt76[]={3,};static const sUI rt77[]={1, 1,};static const sUI rt78[]={1, 1, 3,};static const sUI rt79[]={1, 1,};static const sUI rt80[]={1, 1,};static const sUI rt81[]={1, 1,};static const sUI rt82[]={1, 1,};static const sUI rt83[]={3,};static const sUI rt84[]={3, 3,};static const sUI rt85[]={3,};static const sUI rt86[]={3,};static const sUI rt87[]={3, 3,};static const sUI rt88[]={3,};static const sUI rt89[]={3,};static const sUI rt90[]={3,};static const sUI rt91[]={1, 1, 3, 3,};static const sUI rt92[]={1, 1, 3,};static const sUI rt93[]={1, 1, 3,};static const sUI rt94[]={3,};static const sUI rt95[]={3, 1, 1,};static const sUI rt96[]={0,};static const sUI rt97[]={0,};static const sUI rt98[]={0,};static const sUI rt99[]={3,};static const sUI rt100[]={0,};static const sUI rt101[]={0,};static const sUI rt102[]={0,};static const sUI rt103[]={0,};static const sUI rt104[]={0,};static const sUI rt105[]={0,};static const sUI rt106[]={0,};static const sUI rt107[]={0,};static const sUI rt108[]={3, 1,};static const sUI rt109[]={1, 1,};static const sUI rt110[]={1,};static const sUI rt111[]={0,};static const sUI rt112[]={3,};static const sUI rt113[]={0,};static const sUI rt114[]={0,};static const sUI rt115[]={3,};static const sUI rt116[]={0,};static const sUI rt117[]={0,};static const sUI rt118[]={1, 3,};static const sUI rt119[]={1,};static const sUI rt120[]={1,};static const sUI rt121[]={0,};static const sUI rt122[]={0,};static const sUI rt123[]={0,};static const sUI rt124[]={0,};static const sUI rt125[]={3,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40, rt41, rt42, rt43, rt44, rt45, rt46, rt47, rt48, rt49, rt50, rt51, rt52, rt53, rt54, rt55, rt56, rt57, rt58, rt59, rt60, rt61, rt62, rt63, rt64, rt65, rt66, rt67, rt68, rt69, rt70, rt71, rt72, rt73, rt74, rt75, rt76, rt77, rt78, rt79, rt80, rt81, rt82, rt83, rt84, rt85, rt86, rt87, rt88, rt89, rt90, rt91, rt92, rt93, rt94, rt95, rt96, rt97, rt98, rt99, rt100, rt101, rt102, rt103, rt104, rt105, rt106, rt107, rt108, rt109, rt110, rt111, rt112, rt113, rt114, rt115, rt116, rt117, rt118, rt119, rt120, rt121, rt122, rt123, rt124, rt125}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _String::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={"String", "String", (const char*)0,};static const char *rs3[]={"String", "String",};static const char *rs4[]={"String", "String",};static const char *rs5[]={"String", "String",};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs12[]={(const char*)0, (const char*)0,};static const char *rs13[]={(const char*)0, (const char*)0,};static const char *rs14[]={(const char*)0, (const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={"String", (const char*)0,};static const char *rs17[]={"String",};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0, (const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0,};static const char *rs26[]={(const char*)0,};static const char *rs27[]={"String",};static const char *rs28[]={"String",};static const char *rs29[]={(const char*)0,};static const char *rs30[]={"String",};static const char *rs31[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs32[]={(const char*)0, (const char*)0,};static const char *rs33[]={(const char*)0, (const char*)0,};static const char *rs34[]={(const char*)0, (const char*)0,};static const char *rs35[]={(const char*)0,};static const char *rs36[]={(const char*)0,};static const char *rs37[]={"String", (const char*)0, (const char*)0,};static const char *rs38[]={"String", (const char*)0,};static const char *rs39[]={"String", (const char*)0,};static const char *rs40[]={"String", (const char*)0,};static const char *rs41[]={(const char*)0,};static const char *rs42[]={(const char*)0, (const char*)0,};static const char *rs43[]={(const char*)0,};static const char *rs44[]={(const char*)0, (const char*)0,};static const char *rs45[]={(const char*)0,};static const char *rs46[]={(const char*)0, (const char*)0,};static const char *rs47[]={(const char*)0,};static const char *rs48[]={(const char*)0, (const char*)0,};static const char *rs49[]={(const char*)0, (const char*)0,};static const char *rs50[]={(const char*)0,};static const char *rs51[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs52[]={(const char*)0, (const char*)0,};static const char *rs53[]={(const char*)0,};static const char *rs54[]={(const char*)0,};static const char *rs55[]={(const char*)0,};static const char *rs56[]={(const char*)0,};static const char *rs57[]={(const char*)0,};static const char *rs58[]={(const char*)0,};static const char *rs59[]={(const char*)0,};static const char *rs60[]={(const char*)0,};static const char *rs61[]={"String", (const char*)0,};static const char *rs62[]={(const char*)0,};static const char *rs63[]={(const char*)0, (const char*)0,};static const char *rs64[]={(const char*)0,};static const char *rs65[]={(const char*)0,};static const char *rs66[]={(const char*)0,};static const char *rs67[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs68[]={(const char*)0, (const char*)0,};static const char *rs69[]={(const char*)0, (const char*)0,};static const char *rs70[]={(const char*)0,};static const char *rs71[]={"String", (const char*)0,};static const char *rs72[]={(const char*)0,};static const char *rs73[]={"String", (const char*)0,};static const char *rs74[]={(const char*)0,};static const char *rs75[]={(const char*)0,};static const char *rs76[]={(const char*)0,};static const char *rs77[]={(const char*)0, (const char*)0,};static const char *rs78[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs79[]={(const char*)0, (const char*)0,};static const char *rs80[]={(const char*)0, (const char*)0,};static const char *rs81[]={(const char*)0, (const char*)0,};static const char *rs82[]={(const char*)0, (const char*)0,};static const char *rs83[]={(const char*)0,};static const char *rs84[]={(const char*)0, (const char*)0,};static const char *rs85[]={(const char*)0,};static const char *rs86[]={(const char*)0,};static const char *rs87[]={(const char*)0, (const char*)0,};static const char *rs88[]={(const char*)0,};static const char *rs89[]={(const char*)0,};static const char *rs90[]={(const char*)0,};static const char *rs91[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs92[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs93[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs94[]={"String",};static const char *rs95[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs96[]={(const char*)0,};static const char *rs97[]={(const char*)0,};static const char *rs98[]={(const char*)0,};static const char *rs99[]={(const char*)0,};static const char *rs100[]={(const char*)0,};static const char *rs101[]={(const char*)0,};static const char *rs102[]={(const char*)0,};static const char *rs103[]={(const char*)0,};static const char *rs104[]={(const char*)0,};static const char *rs105[]={(const char*)0,};static const char *rs106[]={(const char*)0,};static const char *rs107[]={(const char*)0,};static const char *rs108[]={"String", (const char*)0,};static const char *rs109[]={(const char*)0, (const char*)0,};static const char *rs110[]={(const char*)0,};static const char *rs111[]={(const char*)0,};static const char *rs112[]={(const char*)0,};static const char *rs113[]={(const char*)0,};static const char *rs114[]={(const char*)0,};static const char *rs115[]={(const char*)0,};static const char *rs116[]={(const char*)0,};static const char *rs117[]={(const char*)0,};static const char *rs118[]={(const char*)0, (const char*)0,};static const char *rs119[]={(const char*)0,};static const char *rs120[]={(const char*)0,};static const char *rs121[]={(const char*)0,};static const char *rs122[]={(const char*)0,};static const char *rs123[]={(const char*)0,};static const char *rs124[]={(const char*)0,};static const char *rs125[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40, rs41, rs42, rs43, rs44, rs45, rs46, rs47, rs48, rs49, rs50, rs51, rs52, rs53, rs54, rs55, rs56, rs57, rs58, rs59, rs60, rs61, rs62, rs63, rs64, rs65, rs66, rs67, rs68, rs69, rs70, rs71, rs72, rs73, rs74, rs75, rs76, rs77, rs78, rs79, rs80, rs81, rs82, rs83, rs84, rs85, rs86, rs87, rs88, rs89, rs90, rs91, rs92, rs93, rs94, rs95, rs96, rs97, rs98, rs99, rs100, rs101, rs102, rs103, rs104, rs105, rs106, rs107, rs108, rs109, rs110, rs111, rs112, rs113, rs114, rs115, rs116, rs117, rs118, rs119, rs120, rs121, rs122, rs123, rs124, rs125}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _String::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 0, 4, 0, 1, 1, 1, 0, 1, 1, 0, 4, 0, 1, 1, 1, 1, 0, 4, 0, 1, 1, 0, 1, 0, 3, 1, 1, 1, 1, 0, 4, 0, 0, 4, 0, 0, 4, 0, 1, 4, 0, 4, 0, 4, 0, 4, 1, 0, 4, 0, 4, 0, 4, 0, 0, 4, 0, 0, 0, 1, 1, 0, 4, 0, 1, 0, 4, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 4, 0, 1, 1, 1, 0, 4, 0, 0, 4, 0, 4, 0, 4, 0, 1, 0, 1, 1, 4, 0, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 4, 0, 0, 4, 0, 0, 4, 0, 1, 1, 0, 4, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _String::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, "String", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _String::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)String__freeStack, (void*)String___replace_YAC_RARG, (void*)String___replace_YAC_RVAL, (void*)String___replace_YAC_RSELF, (void*)String___replaceReturnNum, (void*)String__split, (void*)String__words, (void*)String__fixLength, (void*)String__getLength, (void*)String__getNumChars, (void*)String___substring_YAC_RARG, (void*)String___substring_YAC_RVAL, (void*)String___substring_YAC_RSELF, (void*)String___indexOf, (void*)String___lastIndexOf, (void*)String___loadLocal, (void*)String___saveLocal, (void*)String___trim_YAC_RARG, (void*)String___trim_YAC_RVAL, (void*)String___trim_YAC_RSELF, (void*)String___alloc, (void*)String___getc, (void*)String___putc, (void*)String__isBlank, (void*)String___copy, (void*)String__getWord, (void*)String___startsWith, (void*)String___endsWith, (void*)String___patternMatch, (void*)String___numIndicesOf, (void*)String___insert_YAC_RARG, (void*)String___insert_YAC_RVAL, (void*)String___insert_YAC_RSELF, (void*)String___append_YAC_RARG, (void*)String___append_YAC_RVAL, (void*)String___append_YAC_RSELF, (void*)String___appendRepeat_YAC_RARG, (void*)String___appendRepeat_YAC_RVAL, (void*)String___appendRepeat_YAC_RSELF, (void*)String___load, (void*)String___parseXML, (void*)String___splitSpace_YAC_RARG, (void*)String___splitSpace_YAC_RVAL, (void*)String___splitChar_YAC_RARG, (void*)String___splitChar_YAC_RVAL, (void*)String___splitCharset_YAC_RARG, (void*)String___splitCharset_YAC_RVAL, (void*)String___wordIndexAtCharIndex, (void*)String___tokenize_YAC_RARG, (void*)String___tokenize_YAC_RVAL, (void*)String___tokenizeWithRanges_YAC_RARG, (void*)String___tokenizeWithRanges_YAC_RVAL, (void*)String___toLower_YAC_RARG, (void*)String___toLower_YAC_RVAL, (void*)String___toLower_YAC_RSELF, (void*)String___toUpper_YAC_RARG, (void*)String___toUpper_YAC_RVAL, (void*)String___toUpper_YAC_RSELF, (void*)String__empty, (void*)String__free, (void*)String__charsetIndexOf, (void*)String__indexOfControlCharacter, (void*)String___abbrev_YAC_RARG, (void*)String___abbrev_YAC_RVAL, (void*)String___abbrev_YAC_RSELF, (void*)String___realloc, (void*)String___deleteRegion_YAC_RARG, (void*)String___deleteRegion_YAC_RVAL, (void*)String___deleteRegion_YAC_RSELF, (void*)String___indexOfWordStart, (void*)String___charsetIndexOfWordStart, (void*)String___indexOfWordEnd, (void*)String___charsetIndexOfWordEnd, (void*)String___compare, (void*)String___compareIgnoreCase, (void*)String___compareIgnoreWhitespace, (void*)String___replaceCharReturnNum, (void*)String___replaceChar_YAC_RARG, (void*)String___replaceChar_YAC_RVAL, (void*)String___replaceChar_YAC_RSELF, (void*)String___indexOfChar, (void*)String___revIndexOfChar, (void*)String___indexOfFirstDifference, (void*)String___charsetBlacklist_YAC_RARG, (void*)String___charsetBlacklist_YAC_RVAL, (void*)String___charsetBlacklist_YAC_RSELF, (void*)String___charsetWhitelist_YAC_RARG, (void*)String___charsetWhitelist_YAC_RVAL, (void*)String___charsetWhitelist_YAC_RSELF, (void*)String___New, (void*)String___replaceRegion_YAC_RARG, (void*)String___replaceRegion_YAC_RVAL, (void*)String___replaceRegion_YAC_RSELF, (void*)String___replaceIncludes, (void*)String___visit, (void*)String___getChecksum, (void*)String___getChecksumIgnoreWhitespace, (void*)String___getDirName_YAC_RVAL, (void*)String___getDirName_YAC_RARG, (void*)String___getDebugString, (void*)String___checkConversions, (void*)String__checkIntConversion, (void*)String__checkFloatConversion, (void*)String___getMetaFlags, (void*)String___wasQuoted, (void*)String___wasQuotedSingle, (void*)String___wasQuotedDouble, (void*)String___isPredecessor, (void*)String___numCharsAt, (void*)String__setQuotFlag, (void*)String__getQuotFlag, (void*)String___utf8ToASCII_YAC_RARG, (void*)String___utf8ToASCII_YAC_RVAL, (void*)String___utf8ToASCII_YAC_RSELF, (void*)String___utf8ToCP1252_YAC_RARG, (void*)String___utf8ToCP1252_YAC_RVAL, (void*)String___utf8ToCP1252_YAC_RSELF, (void*)String___cp1252ToUTF8_YAC_RARG, (void*)String___cp1252ToUTF8_YAC_RVAL, (void*)String___cp1252ToUTF8_YAC_RSELF, (void*)String___hasUTF8BOM, (void*)String___isUTF8, (void*)String___escapeControlChars_YAC_RSELF, (void*)String___escapeControlChars_YAC_RVAL, (void*)String___escapeControlChars_YAC_RARG}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _String::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _String::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _String::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _String::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

#ifndef YAC_NO_HOST
void  YAC_CALL String__freeStack    (void *_o                                ) {((_String*)_o)->freeStack();}
void  YAC_CALL String___replace_YAC_RARG(void *_o, yacmemptr _args           ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING))if(YAC_BCHK(_args.mem[1].o, YAC_CLID_STRING)){ ((_String*)_o)->_replace_YAC_RARG((YAC_String*)_args.mem[0].o, (YAC_String*)_args.mem[1].o, _args.mem[2].o);}}
void  YAC_CALL String___replace_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING))if(YAC_BCHK(_args.mem[1].o, YAC_CLID_STRING)){ ((_String*)_o)->_replace_YAC_RVAL((YAC_String*)_args.mem[0].o, (YAC_String*)_args.mem[1].o, _r);}}
void  YAC_CALL String___replace_YAC_RSELF(void *_o, yacmemptr _args          ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING))if(YAC_BCHK(_args.mem[1].o, YAC_CLID_STRING)){ ((_String*)_o)->_replace_YAC_RSELF((YAC_String*)_args.mem[0].o, (YAC_String*)_args.mem[1].o);}}
sSI   YAC_CALL String___replaceReturnNum(void *_o, yacmemptr _args           ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING))if(YAC_BCHK(_args.mem[1].o, YAC_CLID_STRING)){ return (sSI)((_String*)_o)->_replaceReturnNum((YAC_String*)_args.mem[0].o, (YAC_String*)_args.mem[1].o);}return 0;}
sSI   YAC_CALL String__split        (void *_o, yacmemptr _args               ) {return (sSI)((_String*)_o)->split(_args.mem[0].si);}
sSI   YAC_CALL String__words        (void *_o, yacmemptr _args               ) {return (sSI)((_String*)_o)->words(_args.mem[0].si);}
void  YAC_CALL String__fixLength    (void *_o                                ) {((_String*)_o)->fixLength();}
sSI   YAC_CALL String__getLength    (void *_o                                ) {return (sSI)((_String*)_o)->getLength();}
sSI   YAC_CALL String__getNumChars  (void *_o                                ) {return (sSI)((_String*)_o)->getNumChars();}
void  YAC_CALL String___substring_YAC_RARG(void *_o, yacmemptr _args         ) {((_String*)_o)->_substring_YAC_RARG(_args.mem[0].si, _args.mem[1].si, _args.mem[2].o);}
void  YAC_CALL String___substring_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_String*)_o)->_substring_YAC_RVAL(_args.mem[0].si, _args.mem[1].si, _r);}
void  YAC_CALL String___substring_YAC_RSELF(void *_o, yacmemptr _args        ) {((_String*)_o)->_substring_YAC_RSELF(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL String___indexOf     (void *_o, yacmemptr _args               ) {return (sSI)((_String*)_o)->_indexOf(_args.mem[0].o, _args.mem[1].si);}
sSI   YAC_CALL String___lastIndexOf (void *_o, yacmemptr _args               ) {return (sSI)((_String*)_o)->_lastIndexOf(_args.mem[0].o);}
sSI   YAC_CALL String___loadLocal   (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_String*)_o)->_loadLocal((YAC_String*)_args.mem[0].o, _args.mem[1].si);}return 0;}
sSI   YAC_CALL String___saveLocal   (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_String*)_o)->_saveLocal((YAC_String*)_args.mem[0].o);}return 0;}
void  YAC_CALL String___trim_YAC_RARG(void *_o, yacmemptr _args              ) {((_String*)_o)->_trim_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL String___trim_YAC_RVAL(void *_o, YAC_Value *_r                ) {((_String*)_o)->_trim_YAC_RVAL(_r);}
void  YAC_CALL String___trim_YAC_RSELF(void *_o                              ) {((_String*)_o)->_trim_YAC_RSELF();}
sSI   YAC_CALL String___alloc       (void *_o, yacmemptr _args               ) {return (sSI)((_String*)_o)->_alloc(_args.mem[0].si);}
sSI   YAC_CALL String___getc        (void *_o, yacmemptr _args               ) {return (sSI)((_String*)_o)->_getc(_args.mem[0].si);}
void  YAC_CALL String___putc        (void *_o, yacmemptr _args               ) {((_String*)_o)->_putc(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL String__isBlank      (void *_o                                ) {return (sSI)((_String*)_o)->isBlank();}
void  YAC_CALL String___copy        (void *_o, yacmemptr _args               ) {((_String*)_o)->_copy(_args.mem[0].o);}
void* YAC_CALL String__getWord      (void *_o, yacmemptr _args               ) {return (void*)((_String*)_o)->getWord(_args.mem[0].si);}
sSI   YAC_CALL String___startsWith  (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_String*)_o)->_startsWith((YAC_String*)_args.mem[0].o);}return 0;}
sSI   YAC_CALL String___endsWith    (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_String*)_o)->_endsWith((YAC_String*)_args.mem[0].o);}return 0;}
sSI   YAC_CALL String___patternMatch(void *_o, yacmemptr _args               ) {return (sSI)((_String*)_o)->_patternMatch(_args.mem[0].o);}
sSI   YAC_CALL String___numIndicesOf(void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_String*)_o)->_numIndicesOf((YAC_String*)_args.mem[0].o);}return 0;}
void  YAC_CALL String___insert_YAC_RARG(void *_o, yacmemptr _args            ) {((_String*)_o)->_insert_YAC_RARG(_args.mem[0].si, _args.mem[1].o, _args.mem[2].o);}
void  YAC_CALL String___insert_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_String*)_o)->_insert_YAC_RVAL(_args.mem[0].si, _args.mem[1].o, _r);}
void  YAC_CALL String___insert_YAC_RSELF(void *_o, yacmemptr _args           ) {((_String*)_o)->_insert_YAC_RSELF(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL String___append_YAC_RARG(void *_o, yacmemptr _args            ) {((_String*)_o)->_append_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL String___append_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_String*)_o)->_append_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL String___append_YAC_RSELF(void *_o, yacmemptr _args           ) {((_String*)_o)->_append_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL String___appendRepeat_YAC_RARG(void *_o, yacmemptr _args      ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ ((_String*)_o)->_appendRepeat_YAC_RARG((YAC_String*)_args.mem[0].o, _args.mem[1].si, _args.mem[2].o);}}
void  YAC_CALL String___appendRepeat_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ ((_String*)_o)->_appendRepeat_YAC_RVAL((YAC_String*)_args.mem[0].o, _args.mem[1].si, _r);}}
void  YAC_CALL String___appendRepeat_YAC_RSELF(void *_o, yacmemptr _args     ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ ((_String*)_o)->_appendRepeat_YAC_RSELF((YAC_String*)_args.mem[0].o, _args.mem[1].si);}}
sSI   YAC_CALL String___load        (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_String*)_o)->_load((YAC_String*)_args.mem[0].o, _args.mem[1].si);}return 0;}
void  YAC_CALL String___parseXML    (void *_o, YAC_Value *_r                 ) {((_String*)_o)->_parseXML(_r);}
void  YAC_CALL String___splitSpace_YAC_RARG(void *_o, yacmemptr _args        ) {((_String*)_o)->_splitSpace_YAC_RARG(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL String___splitSpace_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_String*)_o)->_splitSpace_YAC_RVAL(_args.mem[0].si, _r);}
void  YAC_CALL String___splitChar_YAC_RARG(void *_o, yacmemptr _args         ) {((_String*)_o)->_splitChar_YAC_RARG(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL String___splitChar_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_String*)_o)->_splitChar_YAC_RVAL(_args.mem[0].si, _r);}
void  YAC_CALL String___splitCharset_YAC_RARG(void *_o, yacmemptr _args      ) {((_String*)_o)->_splitCharset_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL String___splitCharset_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_String*)_o)->_splitCharset_YAC_RVAL(_args.mem[0].o, _r);}
sSI   YAC_CALL String___wordIndexAtCharIndex(void *_o, yacmemptr _args       ) {return (sSI)((_String*)_o)->_wordIndexAtCharIndex(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL String___tokenize_YAC_RARG(void *_o, yacmemptr _args          ) {((_String*)_o)->_tokenize_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL String___tokenize_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_String*)_o)->_tokenize_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL String___tokenizeWithRanges_YAC_RARG(void *_o, yacmemptr _args) {((_String*)_o)->_tokenizeWithRanges_YAC_RARG(_args.mem[0].o, _args.mem[1].o, _args.mem[2].o);}
void  YAC_CALL String___tokenizeWithRanges_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_String*)_o)->_tokenizeWithRanges_YAC_RVAL(_args.mem[0].o, _args.mem[1].o, _r);}
void  YAC_CALL String___toLower_YAC_RARG(void *_o, yacmemptr _args           ) {((_String*)_o)->_toLower_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL String___toLower_YAC_RVAL(void *_o, YAC_Value *_r             ) {((_String*)_o)->_toLower_YAC_RVAL(_r);}
void  YAC_CALL String___toLower_YAC_RSELF(void *_o                           ) {((_String*)_o)->_toLower_YAC_RSELF();}
void  YAC_CALL String___toUpper_YAC_RARG(void *_o, yacmemptr _args           ) {((_String*)_o)->_toUpper_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL String___toUpper_YAC_RVAL(void *_o, YAC_Value *_r             ) {((_String*)_o)->_toUpper_YAC_RVAL(_r);}
void  YAC_CALL String___toUpper_YAC_RSELF(void *_o                           ) {((_String*)_o)->_toUpper_YAC_RSELF();}
void  YAC_CALL String__empty        (void *_o                                ) {((_String*)_o)->empty();}
void  YAC_CALL String__free         (void *_o                                ) {((_String*)_o)->free();}
sSI   YAC_CALL String__charsetIndexOf(void *_o, yacmemptr _args              ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_String*)_o)->charsetIndexOf((YAC_String*)_args.mem[0].o, _args.mem[1].si);}return 0;}
sSI   YAC_CALL String__indexOfControlCharacter(void *_o, yacmemptr _args     ) {return (sSI)((_String*)_o)->indexOfControlCharacter(_args.mem[0].si);}
void  YAC_CALL String___abbrev_YAC_RARG(void *_o, yacmemptr _args            ) {((_String*)_o)->_abbrev_YAC_RARG(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL String___abbrev_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_String*)_o)->_abbrev_YAC_RVAL(_args.mem[0].si, _r);}
void  YAC_CALL String___abbrev_YAC_RSELF(void *_o, yacmemptr _args           ) {((_String*)_o)->_abbrev_YAC_RSELF(_args.mem[0].si);}
sSI   YAC_CALL String___realloc     (void *_o, yacmemptr _args               ) {return (sSI)((_String*)_o)->_realloc(_args.mem[0].si);}
void  YAC_CALL String___deleteRegion_YAC_RARG(void *_o, yacmemptr _args      ) {((_String*)_o)->_deleteRegion_YAC_RARG(_args.mem[0].si, _args.mem[1].si, _args.mem[2].o);}
void  YAC_CALL String___deleteRegion_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_String*)_o)->_deleteRegion_YAC_RVAL(_args.mem[0].si, _args.mem[1].si, _r);}
void  YAC_CALL String___deleteRegion_YAC_RSELF(void *_o, yacmemptr _args     ) {((_String*)_o)->_deleteRegion_YAC_RSELF(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL String___indexOfWordStart(void *_o, yacmemptr _args           ) {return (sSI)((_String*)_o)->_indexOfWordStart(_args.mem[0].si);}
sSI   YAC_CALL String___charsetIndexOfWordStart(void *_o, yacmemptr _args    ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_String*)_o)->_charsetIndexOfWordStart((YAC_String*)_args.mem[0].o, _args.mem[1].si);}return 0;}
sSI   YAC_CALL String___indexOfWordEnd(void *_o, yacmemptr _args             ) {return (sSI)((_String*)_o)->_indexOfWordEnd(_args.mem[0].si);}
sSI   YAC_CALL String___charsetIndexOfWordEnd(void *_o, yacmemptr _args      ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_String*)_o)->_charsetIndexOfWordEnd((YAC_String*)_args.mem[0].o, _args.mem[1].si);}return 0;}
sSI   YAC_CALL String___compare     (void *_o, yacmemptr _args               ) {return (sSI)((_String*)_o)->_compare(_args.mem[0].o);}
sSI   YAC_CALL String___compareIgnoreCase(void *_o, yacmemptr _args          ) {return (sSI)((_String*)_o)->_compareIgnoreCase(_args.mem[0].o);}
sSI   YAC_CALL String___compareIgnoreWhitespace(void *_o, yacmemptr _args    ) {return (sSI)((_String*)_o)->_compareIgnoreWhitespace(_args.mem[0].o);}
sSI   YAC_CALL String___replaceCharReturnNum(void *_o, yacmemptr _args       ) {return (sSI)((_String*)_o)->_replaceCharReturnNum(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL String___replaceChar_YAC_RARG(void *_o, yacmemptr _args       ) {((_String*)_o)->_replaceChar_YAC_RARG(_args.mem[0].si, _args.mem[1].si, _args.mem[2].o);}
void  YAC_CALL String___replaceChar_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_String*)_o)->_replaceChar_YAC_RVAL(_args.mem[0].si, _args.mem[1].si, _r);}
void  YAC_CALL String___replaceChar_YAC_RSELF(void *_o, yacmemptr _args      ) {((_String*)_o)->_replaceChar_YAC_RSELF(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL String___indexOfChar (void *_o, yacmemptr _args               ) {return (sSI)((_String*)_o)->_indexOfChar(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL String___revIndexOfChar(void *_o, yacmemptr _args             ) {return (sSI)((_String*)_o)->_revIndexOfChar(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL String___indexOfFirstDifference(void *_o, yacmemptr _args     ) {return (sSI)((_String*)_o)->_indexOfFirstDifference(_args.mem[0].o);}
void  YAC_CALL String___charsetBlacklist_YAC_RARG(void *_o, yacmemptr _args  ) {((_String*)_o)->_charsetBlacklist_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL String___charsetBlacklist_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_String*)_o)->_charsetBlacklist_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL String___charsetBlacklist_YAC_RSELF(void *_o, yacmemptr _args ) {((_String*)_o)->_charsetBlacklist_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL String___charsetWhitelist_YAC_RARG(void *_o, yacmemptr _args  ) {((_String*)_o)->_charsetWhitelist_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL String___charsetWhitelist_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_String*)_o)->_charsetWhitelist_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL String___charsetWhitelist_YAC_RSELF(void *_o, yacmemptr _args ) {((_String*)_o)->_charsetWhitelist_YAC_RSELF(_args.mem[0].o);}
void  YAC_CALL String___New         (void *_o, yacmemptr _args, YAC_Value *_r) {((_String*)_o)->_New(_args.mem[0].o, _r);}
void  YAC_CALL String___replaceRegion_YAC_RARG(void *_o, yacmemptr _args     ) {((_String*)_o)->_replaceRegion_YAC_RARG(_args.mem[0].si, _args.mem[1].si, _args.mem[2].o, _args.mem[3].o);}
void  YAC_CALL String___replaceRegion_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_String*)_o)->_replaceRegion_YAC_RVAL(_args.mem[0].si, _args.mem[1].si, _args.mem[2].o, _r);}
void  YAC_CALL String___replaceRegion_YAC_RSELF(void *_o, yacmemptr _args    ) {((_String*)_o)->_replaceRegion_YAC_RSELF(_args.mem[0].si, _args.mem[1].si, _args.mem[2].o);}
sSI   YAC_CALL String___replaceIncludes(void *_o, yacmemptr _args            ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_String*)_o)->_replaceIncludes((YAC_String*)_args.mem[0].o);}return 0;}
void  YAC_CALL String___visit       (void *_o, yacmemptr _args               ) {((_String*)_o)->_visit(_args.mem[0].o, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL String___getChecksum (void *_o                                ) {return (sSI)((_String*)_o)->_getChecksum();}
sSI   YAC_CALL String___getChecksumIgnoreWhitespace(void *_o                 ) {return (sSI)((_String*)_o)->_getChecksumIgnoreWhitespace();}
void  YAC_CALL String___getDirName_YAC_RVAL(void *_o, YAC_Value *_r          ) {((_String*)_o)->_getDirName_YAC_RVAL(_r);}
void  YAC_CALL String___getDirName_YAC_RARG(void *_o, yacmemptr _args        ) {((_String*)_o)->_getDirName_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL String___getDebugString(void *_o, YAC_Value *_r               ) {((_String*)_o)->_getDebugString(_r);}
sSI   YAC_CALL String___checkConversions(void *_o                            ) {return (sSI)((_String*)_o)->_checkConversions();}
sSI   YAC_CALL String__checkIntConversion(void *_o                           ) {return (sSI)((_String*)_o)->checkIntConversion();}
sSI   YAC_CALL String__checkFloatConversion(void *_o                         ) {return (sSI)((_String*)_o)->checkFloatConversion();}
sSI   YAC_CALL String___getMetaFlags(void *_o                                ) {return (sSI)((_String*)_o)->_getMetaFlags();}
sSI   YAC_CALL String___wasQuoted   (void *_o                                ) {return (sSI)((_String*)_o)->_wasQuoted();}
sSI   YAC_CALL String___wasQuotedSingle(void *_o                             ) {return (sSI)((_String*)_o)->_wasQuotedSingle();}
sSI   YAC_CALL String___wasQuotedDouble(void *_o                             ) {return (sSI)((_String*)_o)->_wasQuotedDouble();}
sSI   YAC_CALL String___isPredecessor(void *_o, yacmemptr _args              ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_String*)_o)->_isPredecessor((YAC_String*)_args.mem[0].o, _args.mem[1].si);}return 0;}
sSI   YAC_CALL String___numCharsAt  (void *_o, yacmemptr _args               ) {return (sSI)((_String*)_o)->_numCharsAt(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL String__setQuotFlag  (void *_o, yacmemptr _args               ) {((_String*)_o)->setQuotFlag(_args.mem[0].si);}
sSI   YAC_CALL String__getQuotFlag  (void *_o                                ) {return (sSI)((_String*)_o)->getQuotFlag();}
void  YAC_CALL String___utf8ToASCII_YAC_RARG(void *_o, yacmemptr _args       ) {((_String*)_o)->_utf8ToASCII_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL String___utf8ToASCII_YAC_RVAL(void *_o, YAC_Value *_r         ) {((_String*)_o)->_utf8ToASCII_YAC_RVAL(_r);}
void  YAC_CALL String___utf8ToASCII_YAC_RSELF(void *_o                       ) {((_String*)_o)->_utf8ToASCII_YAC_RSELF();}
void  YAC_CALL String___utf8ToCP1252_YAC_RARG(void *_o, yacmemptr _args      ) {((_String*)_o)->_utf8ToCP1252_YAC_RARG(_args.mem[0].o);}
void  YAC_CALL String___utf8ToCP1252_YAC_RVAL(void *_o, YAC_Value *_r        ) {((_String*)_o)->_utf8ToCP1252_YAC_RVAL(_r);}
void  YAC_CALL String___utf8ToCP1252_YAC_RSELF(void *_o                      ) {((_String*)_o)->_utf8ToCP1252_YAC_RSELF();}
void  YAC_CALL String___cp1252ToUTF8_YAC_RARG(void *_o, yacmemptr _args      ) {((_String*)_o)->_cp1252ToUTF8_YAC_RARG(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL String___cp1252ToUTF8_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_String*)_o)->_cp1252ToUTF8_YAC_RVAL(_args.mem[0].si, _r);}
void  YAC_CALL String___cp1252ToUTF8_YAC_RSELF(void *_o, yacmemptr _args     ) {((_String*)_o)->_cp1252ToUTF8_YAC_RSELF(_args.mem[0].si);}
sSI   YAC_CALL String___hasUTF8BOM  (void *_o                                ) {return (sSI)((_String*)_o)->_hasUTF8BOM();}
sSI   YAC_CALL String___isUTF8      (void *_o                                ) {return (sSI)((_String*)_o)->_isUTF8();}
void  YAC_CALL String___escapeControlChars_YAC_RSELF(void *_o                ) {((_String*)_o)->_escapeControlChars_YAC_RSELF();}
void  YAC_CALL String___escapeControlChars_YAC_RVAL(void *_o, YAC_Value *_r  ) {((_String*)_o)->_escapeControlChars_YAC_RVAL(_r);}
void  YAC_CALL String___escapeControlChars_YAC_RARG(void *_o, yacmemptr _args) {((_String*)_o)->_escapeControlChars_YAC_RARG(_args.mem[0].o);}
#endif // YAC_NO_HOST
