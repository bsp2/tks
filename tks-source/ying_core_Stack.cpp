// ---- ying_core_Stack.cpp: auto generated by YInG - the YAC interface generator (Wed, 24/Sep/2025 09:42:38)

#ifndef YAC_NO_HOST
void  YAC_CALL Stack__setTemplate   (void *, yacmemptr             );
void* YAC_CALL Stack__getTemplate   (void *                        );
void* YAC_CALL Stack__push          (void *                        );
void* YAC_CALL Stack__pop           (void *                        );
sSI   YAC_CALL Stack__setSize       (void *, yacmemptr             );
sSI   YAC_CALL Stack__getSize       (void *                        );
void  YAC_CALL Stack__setIndex      (void *, yacmemptr             );
sSI   YAC_CALL Stack__getIndex      (void *                        );
void  YAC_CALL Stack__init          (void *, yacmemptr             );
#endif // YAC_NO_HOST

// ------------------ YAC class "_Stack" reflection map (implementation) ------------------
sUI          YAC_VCALL _Stack::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Stack::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Stack::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Stack::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Stack::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Stack::yacMethodGetNum                  (void) {return 10;}
const char **YAC_VCALL _Stack::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "setTemplate", "getTemplate", "push", "pop", "setSize", "getSize", "setIndex", "getIndex", "init"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Stack::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 1, 0, 0, 0, 1, 0, 1, 0, 2}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _Stack::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={3,};static const sUI rt2[]={0,};static const sUI rt3[]={0,};static const sUI rt4[]={0,};static const sUI rt5[]={1,};static const sUI rt6[]={0,};static const sUI rt7[]={1,};static const sUI rt8[]={0,};static const sUI rt9[]={3, 1,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _Stack::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0, (const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Stack::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 3, 3, 3, 1, 1, 0, 1, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _Stack::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _Stack::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)Stack__setTemplate, (void*)Stack__getTemplate, (void*)Stack__push, (void*)Stack__pop, (void*)Stack__setSize, (void*)Stack__getSize, (void*)Stack__setIndex, (void*)Stack__getIndex, (void*)Stack__init}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _Stack::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Stack::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Stack::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Stack::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

#ifndef YAC_NO_HOST
void  YAC_CALL Stack__setTemplate   (void *_o, yacmemptr _args               ) {((_Stack*)_o)->setTemplate(_args.mem[0].o);}
void* YAC_CALL Stack__getTemplate   (void *_o                                ) {return (void*)((_Stack*)_o)->getTemplate();}
void* YAC_CALL Stack__push          (void *_o                                ) {return (void*)((_Stack*)_o)->push();}
void* YAC_CALL Stack__pop           (void *_o                                ) {return (void*)((_Stack*)_o)->pop();}
sSI   YAC_CALL Stack__setSize       (void *_o, yacmemptr _args               ) {return (sSI)((_Stack*)_o)->setSize(_args.mem[0].si);}
sSI   YAC_CALL Stack__getSize       (void *_o                                ) {return (sSI)((_Stack*)_o)->getSize();}
void  YAC_CALL Stack__setIndex      (void *_o, yacmemptr _args               ) {((_Stack*)_o)->setIndex(_args.mem[0].si);}
sSI   YAC_CALL Stack__getIndex      (void *_o                                ) {return (sSI)((_Stack*)_o)->getIndex();}
void  YAC_CALL Stack__init          (void *_o, yacmemptr _args               ) {((_Stack*)_o)->init(_args.mem[0].o, _args.mem[1].si);}
#endif // YAC_NO_HOST
