// ---- ying_core_StringArray.cpp: auto generated by YInG - the YAC interface generator (Wed, 24/Sep/2025 09:42:38)

#ifndef YAC_NO_HOST
sSI   YAC_CALL StringArray__alloc   (void *, yacmemptr             );
void  YAC_CALL StringArray__free    (void *                        );
sSI   YAC_CALL StringArray__add     (void *, yacmemptr             );
sSI   YAC_CALL StringArray__addEmpty(void *, yacmemptr             );
sSI   YAC_CALL StringArray__remove  (void *, yacmemptr             );
sSI   YAC_CALL StringArray__getNumElements(void *                  );
sSI   YAC_CALL StringArray__getMaxElements(void *                  );
void  YAC_CALL StringArray__empty   (void *                        );
sSI   YAC_CALL StringArray__isEmpty (void *                        );
sSI   YAC_CALL StringArray__realloc (void *, yacmemptr             );
sSI   YAC_CALL StringArray__insert  (void *, yacmemptr             );
sSI   YAC_CALL StringArray___delete (void *, yacmemptr             );
void  YAC_CALL StringArray__unset   (void *                        );
void  YAC_CALL StringArray__reverse (void *                        );
void* YAC_CALL StringArray__getNextFree(void *                     );
void  YAC_CALL StringArray__setNumElements(void *, yacmemptr       );
void  YAC_CALL StringArray__sortByLength(void *, yacmemptr         );
void  YAC_CALL StringArray__sortByValue(void *, yacmemptr          );
void  YAC_CALL StringArray___getString(void *, YAC_Value *         );
void* YAC_CALL StringArray__get     (void *, yacmemptr             );
void  YAC_CALL StringArray___set    (void *, yacmemptr             );
void* YAC_CALL StringArray___getRev (void *, yacmemptr             );
void  YAC_CALL StringArray___setRev (void *, yacmemptr             );
void  YAC_CALL StringArray__getCopy (void *, yacmemptr, YAC_Value *);
void  YAC_CALL StringArray___getDefault(void *, yacmemptr, YAC_Value *);
sSI   YAC_CALL StringArray__indexOfPointer(void *, yacmemptr       );
sSI   YAC_CALL StringArray__indexOfObject(void *, yacmemptr        );
sSI   YAC_CALL StringArray__containsObject(void *, yacmemptr       );
sSI   YAC_CALL StringArray__containsPointer(void *, yacmemptr      );
sSI   YAC_CALL StringArray__rearrange(void *, yacmemptr            );
sSI   YAC_CALL StringArray___swap   (void *, yacmemptr             );
void  YAC_CALL StringArray___useAll (void *                        );
void* YAC_CALL StringArray___getFirst(void *                       );
void* YAC_CALL StringArray___getLast(void *                        );
sSI   YAC_CALL StringArray___join   (void *, yacmemptr             );
sSI   YAC_CALL StringArray___getMaxChars(void *                    );
void  YAC_CALL StringArray___mergeToString(void *, yacmemptr, YAC_Value *);
#endif // YAC_NO_HOST

// ------------------ YAC class "_StringArray" reflection map (implementation) ------------------
sUI          YAC_VCALL _StringArray::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _StringArray::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _StringArray::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _StringArray::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _StringArray::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _StringArray::yacMethodGetNum                  (void) {return 38;}
const char **YAC_VCALL _StringArray::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "alloc", "free", "add", "addEmpty", "remove", "getNumElements", "getMaxElements", "empty", "isEmpty", "realloc", "insert", "delete", "unset", "reverse", "getNextFree", "setNumElements", "sortByLength", "sortByValue", "getString", "get", "set", "getRev", "setRev", "getCopy", "getDefault", "indexOfPointer", "indexOfObject", "containsObject", "containsPointer", "rearrange", "swap", "useAll", "getFirst", "getLast", "join", "getMaxChars", "mergeToString"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _StringArray::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 1, 1, 2, 0, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 0, 0, 0, 2, 0, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _StringArray::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={1,};static const sUI rt2[]={0,};static const sUI rt3[]={3,};static const sUI rt4[]={1,};static const sUI rt5[]={3,};static const sUI rt6[]={0,};static const sUI rt7[]={0,};static const sUI rt8[]={0,};static const sUI rt9[]={0,};static const sUI rt10[]={1,};static const sUI rt11[]={1, 3,};static const sUI rt12[]={1,};static const sUI rt13[]={0,};static const sUI rt14[]={0,};static const sUI rt15[]={0,};static const sUI rt16[]={1,};static const sUI rt17[]={3,};static const sUI rt18[]={3, 1,};static const sUI rt19[]={0,};static const sUI rt20[]={1,};static const sUI rt21[]={1, 3,};static const sUI rt22[]={1,};static const sUI rt23[]={1, 3,};static const sUI rt24[]={1,};static const sUI rt25[]={1, 3,};static const sUI rt26[]={3, 1,};static const sUI rt27[]={3, 1,};static const sUI rt28[]={3,};static const sUI rt29[]={3,};static const sUI rt30[]={3,};static const sUI rt31[]={1, 1,};static const sUI rt32[]={0,};static const sUI rt33[]={0,};static const sUI rt34[]={0,};static const sUI rt35[]={3, 3,};static const sUI rt36[]={0,};static const sUI rt37[]={3,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _StringArray::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0, (const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0, (const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0, (const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0, (const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0, (const char*)0,};static const char *rs26[]={(const char*)0, (const char*)0,};static const char *rs27[]={(const char*)0, (const char*)0,};static const char *rs28[]={(const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0,};static const char *rs31[]={(const char*)0, (const char*)0,};static const char *rs32[]={(const char*)0,};static const char *rs33[]={(const char*)0,};static const char *rs34[]={(const char*)0,};static const char *rs35[]={(const char*)0, (const char*)0,};static const char *rs36[]={(const char*)0,};static const char *rs37[]={"String",};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _StringArray::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 3, 0, 0, 0, 4, 3, 0, 3, 0, 4, 4, 1, 1, 1, 1, 1, 1, 0, 3, 3, 1, 1, 4}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _StringArray::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _StringArray::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)StringArray__alloc, (void*)StringArray__free, (void*)StringArray__add, (void*)StringArray__addEmpty, (void*)StringArray__remove, (void*)StringArray__getNumElements, (void*)StringArray__getMaxElements, (void*)StringArray__empty, (void*)StringArray__isEmpty, (void*)StringArray__realloc, (void*)StringArray__insert, (void*)StringArray___delete, (void*)StringArray__unset, (void*)StringArray__reverse, (void*)StringArray__getNextFree, (void*)StringArray__setNumElements, (void*)StringArray__sortByLength, (void*)StringArray__sortByValue, (void*)StringArray___getString, (void*)StringArray__get, (void*)StringArray___set, (void*)StringArray___getRev, (void*)StringArray___setRev, (void*)StringArray__getCopy, (void*)StringArray___getDefault, (void*)StringArray__indexOfPointer, (void*)StringArray__indexOfObject, (void*)StringArray__containsObject, (void*)StringArray__containsPointer, (void*)StringArray__rearrange, (void*)StringArray___swap, (void*)StringArray___useAll, (void*)StringArray___getFirst, (void*)StringArray___getLast, (void*)StringArray___join, (void*)StringArray___getMaxChars, (void*)StringArray___mergeToString}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _StringArray::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _StringArray::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _StringArray::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _StringArray::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

#ifndef YAC_NO_HOST
sSI   YAC_CALL StringArray__alloc   (void *_o, yacmemptr _args               ) {return (sSI)((_StringArray*)_o)->alloc(_args.mem[0].si);}
void  YAC_CALL StringArray__free    (void *_o                                ) {((_StringArray*)_o)->free();}
sSI   YAC_CALL StringArray__add     (void *_o, yacmemptr _args               ) {return (sSI)((_StringArray*)_o)->add(_args.mem[0].o);}
sSI   YAC_CALL StringArray__addEmpty(void *_o, yacmemptr _args               ) {return (sSI)((_StringArray*)_o)->addEmpty(_args.mem[0].si);}
sSI   YAC_CALL StringArray__remove  (void *_o, yacmemptr _args               ) {return (sSI)((_StringArray*)_o)->remove(_args.mem[0].o);}
sSI   YAC_CALL StringArray__getNumElements(void *_o                          ) {return (sSI)((_StringArray*)_o)->getNumElements();}
sSI   YAC_CALL StringArray__getMaxElements(void *_o                          ) {return (sSI)((_StringArray*)_o)->getMaxElements();}
void  YAC_CALL StringArray__empty   (void *_o                                ) {((_StringArray*)_o)->empty();}
sSI   YAC_CALL StringArray__isEmpty (void *_o                                ) {return (sSI)((_StringArray*)_o)->isEmpty();}
sSI   YAC_CALL StringArray__realloc (void *_o, yacmemptr _args               ) {return (sSI)((_StringArray*)_o)->realloc(_args.mem[0].si);}
sSI   YAC_CALL StringArray__insert  (void *_o, yacmemptr _args               ) {return (sSI)((_StringArray*)_o)->insert(_args.mem[0].si, _args.mem[1].o);}
sSI   YAC_CALL StringArray___delete (void *_o, yacmemptr _args               ) {return (sSI)((_StringArray*)_o)->_delete(_args.mem[0].si);}
void  YAC_CALL StringArray__unset   (void *_o                                ) {((_StringArray*)_o)->unset();}
void  YAC_CALL StringArray__reverse (void *_o                                ) {((_StringArray*)_o)->reverse();}
void* YAC_CALL StringArray__getNextFree(void *_o                             ) {return (void*)((_StringArray*)_o)->getNextFree();}
void  YAC_CALL StringArray__setNumElements(void *_o, yacmemptr _args         ) {((_StringArray*)_o)->setNumElements(_args.mem[0].si);}
void  YAC_CALL StringArray__sortByLength(void *_o, yacmemptr _args           ) {((_StringArray*)_o)->sortByLength(_args.mem[0].o);}
void  YAC_CALL StringArray__sortByValue(void *_o, yacmemptr _args            ) {((_StringArray*)_o)->sortByValue(_args.mem[0].o, _args.mem[1].si);}
void  YAC_CALL StringArray___getString(void *_o, YAC_Value *_r               ) {((_StringArray*)_o)->_getString(_r);}
void* YAC_CALL StringArray__get     (void *_o, yacmemptr _args               ) {return (void*)((_StringArray*)_o)->get(_args.mem[0].si);}
void  YAC_CALL StringArray___set    (void *_o, yacmemptr _args               ) {((_StringArray*)_o)->_set(_args.mem[0].si, _args.mem[1].o);}
void* YAC_CALL StringArray___getRev (void *_o, yacmemptr _args               ) {return (void*)((_StringArray*)_o)->_getRev(_args.mem[0].si);}
void  YAC_CALL StringArray___setRev (void *_o, yacmemptr _args               ) {((_StringArray*)_o)->_setRev(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL StringArray__getCopy (void *_o, yacmemptr _args, YAC_Value *_r) {((_StringArray*)_o)->getCopy(_args.mem[0].si, _r);}
void  YAC_CALL StringArray___getDefault(void *_o, yacmemptr _args, YAC_Value *_r) {((_StringArray*)_o)->_getDefault(_args.mem[0].si, _args.mem[1].o, _r);}
sSI   YAC_CALL StringArray__indexOfPointer(void *_o, yacmemptr _args         ) {return (sSI)((_StringArray*)_o)->indexOfPointer(_args.mem[0].o, _args.mem[1].si);}
sSI   YAC_CALL StringArray__indexOfObject(void *_o, yacmemptr _args          ) {return (sSI)((_StringArray*)_o)->indexOfObject(_args.mem[0].o, _args.mem[1].si);}
sSI   YAC_CALL StringArray__containsObject(void *_o, yacmemptr _args         ) {return (sSI)((_StringArray*)_o)->containsObject(_args.mem[0].o);}
sSI   YAC_CALL StringArray__containsPointer(void *_o, yacmemptr _args        ) {return (sSI)((_StringArray*)_o)->containsPointer(_args.mem[0].o);}
sSI   YAC_CALL StringArray__rearrange(void *_o, yacmemptr _args              ) {return (sSI)((_StringArray*)_o)->rearrange(_args.mem[0].o);}
sSI   YAC_CALL StringArray___swap   (void *_o, yacmemptr _args               ) {return (sSI)((_StringArray*)_o)->_swap(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL StringArray___useAll (void *_o                                ) {((_StringArray*)_o)->_useAll();}
void* YAC_CALL StringArray___getFirst(void *_o                               ) {return (void*)((_StringArray*)_o)->_getFirst();}
void* YAC_CALL StringArray___getLast(void *_o                                ) {return (void*)((_StringArray*)_o)->_getLast();}
sSI   YAC_CALL StringArray___join   (void *_o, yacmemptr _args               ) {return (sSI)((_StringArray*)_o)->_join(_args.mem[0].o, _args.mem[1].o);}
sSI   YAC_CALL StringArray___getMaxChars(void *_o                            ) {return (sSI)((_StringArray*)_o)->_getMaxChars();}
void  YAC_CALL StringArray___mergeToString(void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ ((_StringArray*)_o)->_mergeToString((YAC_String*)_args.mem[0].o, _r);}}
#endif // YAC_NO_HOST
