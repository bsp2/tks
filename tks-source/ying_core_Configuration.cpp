// ---- ying_core_Configuration.cpp: auto generated by YInG - the YAC interface generator (Wed, 24/Sep/2025 09:42:38)

#ifndef YAC_NO_HOST
void  YAC_CALL Configuration__setDebugLevel(void *, yacmemptr      );
sSI   YAC_CALL Configuration__getDebugLevel(void *                 );
void  YAC_CALL Configuration__setForceInt(void *, yacmemptr        );
sSI   YAC_CALL Configuration__getForceInt(void *                   );
void  YAC_CALL Configuration__setThreadTerminateOnException(void *, yacmemptr);
void  YAC_CALL Configuration__setLockGlobalContext(void *, yacmemptr);
#endif // YAC_NO_HOST

// ------------------ YAC class "_Configuration" reflection map (implementation) ------------------
sUI          YAC_VCALL _Configuration::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Configuration::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Configuration::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Configuration::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Configuration::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Configuration::yacMethodGetNum                  (void) {return 7;}
const char **YAC_VCALL _Configuration::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "setDebugLevel", "getDebugLevel", "setForceInt", "getForceInt", "setThreadTerminateOnException", "setLockGlobalContext"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Configuration::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 1, 0, 1, 0, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _Configuration::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={1,};static const sUI rt2[]={0,};static const sUI rt3[]={1,};static const sUI rt4[]={0,};static const sUI rt5[]={1,};static const sUI rt6[]={1,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _Configuration::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Configuration::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 1, 0, 1, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _Configuration::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _Configuration::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)Configuration__setDebugLevel, (void*)Configuration__getDebugLevel, (void*)Configuration__setForceInt, (void*)Configuration__getForceInt, (void*)Configuration__setThreadTerminateOnException, (void*)Configuration__setLockGlobalContext}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _Configuration::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Configuration::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Configuration::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Configuration::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

#ifndef YAC_NO_HOST
void  YAC_CALL Configuration__setDebugLevel(void *_o, yacmemptr _args        ) {((_Configuration*)_o)->setDebugLevel(_args.mem[0].si);}
sSI   YAC_CALL Configuration__getDebugLevel(void *_o                         ) {return (sSI)((_Configuration*)_o)->getDebugLevel();}
void  YAC_CALL Configuration__setForceInt(void *_o, yacmemptr _args          ) {((_Configuration*)_o)->setForceInt(_args.mem[0].si);}
sSI   YAC_CALL Configuration__getForceInt(void *_o                           ) {return (sSI)((_Configuration*)_o)->getForceInt();}
void  YAC_CALL Configuration__setThreadTerminateOnException(void *_o, yacmemptr _args) {((_Configuration*)_o)->setThreadTerminateOnException(_args.mem[0].si);}
void  YAC_CALL Configuration__setLockGlobalContext(void *_o, yacmemptr _args ) {((_Configuration*)_o)->setLockGlobalContext(_args.mem[0].si);}
#endif // YAC_NO_HOST
