// ---- ying_core_Function.cpp: auto generated by YInG - the YAC interface generator (Wed, 24/Sep/2025 09:42:38)

#ifndef YAC_NO_HOST
void* YAC_CALL Function__getName    (void *                        );
void  YAC_CALL Function__eval       (void *, yacmemptr, YAC_Value *);
void  YAC_CALL Function__findVariable(void *, yacmemptr, YAC_Value *);
#endif // YAC_NO_HOST

// ------------------ YAC class "_Function" reflection map (implementation) ------------------
sUI          YAC_VCALL _Function::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Function::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Function::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Function::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Function::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Function::yacMethodGetNum                  (void) {return 4;}
const char **YAC_VCALL _Function::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "getName", "eval", "findVariable"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Function::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _Function::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={3,};static const sUI rt3[]={3,};static const sUI *r[]={rt0, rt1, rt2, rt3}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _Function::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={"String",};static const char**r[]={rs0, rs1, rs2, rs3}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Function::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 3, 4, 4}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _Function::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", "String", (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _Function::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)Function__getName, (void*)Function__eval, (void*)Function__findVariable}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _Function::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Function::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Function::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Function::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

#ifndef YAC_NO_HOST
void* YAC_CALL Function__getName    (void *_o                                ) {return (void*)((_Function*)_o)->getName();}
void  YAC_CALL Function__eval       (void *_o, yacmemptr _args, YAC_Value *_r) {((_Function*)_o)->eval(_args.mem[0].o, _r);}
void  YAC_CALL Function__findVariable(void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ ((_Function*)_o)->findVariable((YAC_String*)_args.mem[0].o, _r);}}
#endif // YAC_NO_HOST
