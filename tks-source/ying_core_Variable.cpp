// ---- ying_core_Variable.cpp: auto generated by YInG - the YAC interface generator (Wed, 24/Sep/2025 09:42:38)

#ifndef YAC_NO_HOST
sSI   YAC_CALL Variable__query      (void *                        );
sSI   YAC_CALL Variable__store      (void *                        );
sSI   YAC_CALL Variable__storeDeref (void *                        );
void* YAC_CALL Variable__getName    (void *                        );
#endif // YAC_NO_HOST

// ------------------ YAC class "_Variable" reflection map (implementation) ------------------
sUI          YAC_VCALL _Variable::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Variable::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Variable::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Variable::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Variable::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Variable::yacMethodGetNum                  (void) {return 5;}
const char **YAC_VCALL _Variable::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "query", "store", "storeDeref", "getName"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Variable::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 0, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _Variable::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={0,};static const sUI rt3[]={0,};static const sUI rt4[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _Variable::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _Variable::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 1, 1, 1, 3}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _Variable::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, "String"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _Variable::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)Variable__query, (void*)Variable__store, (void*)Variable__storeDeref, (void*)Variable__getName}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _Variable::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _Variable::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _Variable::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _Variable::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

#ifndef YAC_NO_HOST
sSI   YAC_CALL Variable__query      (void *_o                                ) {return (sSI)((_Variable*)_o)->query();}
sSI   YAC_CALL Variable__store      (void *_o                                ) {return (sSI)((_Variable*)_o)->store();}
sSI   YAC_CALL Variable__storeDeref (void *_o                                ) {return (sSI)((_Variable*)_o)->storeDeref();}
void* YAC_CALL Variable__getName    (void *_o                                ) {return (void*)((_Variable*)_o)->getName();}
#endif // YAC_NO_HOST
