// ---- ying_core_UnsignedByte.cpp: auto generated by YInG - the YAC interface generator (Wed, 17/Sep/2025 19:04:45)

#ifndef YAC_NO_HOST
void  YAC_CALL UnsignedByte__setValue(void *, yacmemptr            );
sSI   YAC_CALL UnsignedByte__getValue(void *                       );
void  YAC_CALL UnsignedByte___printf_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL UnsignedByte___printf_YAC_RARG(void *, yacmemptr    );
void  YAC_CALL UnsignedByte___getString(void *, YAC_Value *        );
void  YAC_CALL UnsignedByte___New   (void *, yacmemptr, YAC_Value *);
#endif // YAC_NO_HOST

// ------------------ YAC class "_UnsignedByte" reflection map (implementation) ------------------
sUI          YAC_VCALL _UnsignedByte::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _UnsignedByte::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _UnsignedByte::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _UnsignedByte::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _UnsignedByte::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _UnsignedByte::yacMethodGetNum                  (void) {return 7;}
const char **YAC_VCALL _UnsignedByte::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "setValue", "getValue", "printf_YAC_RVAL", "printf_YAC_RARG", "getString", "New"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _UnsignedByte::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 1, 0, 1, 2, 0, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _UnsignedByte::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={1,};static const sUI rt2[]={0,};static const sUI rt3[]={3,};static const sUI rt4[]={3, 3,};static const sUI rt5[]={0,};static const sUI rt6[]={1,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _UnsignedByte::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0, (const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _UnsignedByte::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 1, 4, 0, 4, 4}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _UnsignedByte::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _UnsignedByte::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)UnsignedByte__setValue, (void*)UnsignedByte__getValue, (void*)UnsignedByte___printf_YAC_RVAL, (void*)UnsignedByte___printf_YAC_RARG, (void*)UnsignedByte___getString, (void*)UnsignedByte___New}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _UnsignedByte::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _UnsignedByte::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _UnsignedByte::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _UnsignedByte::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

#ifndef YAC_NO_HOST
void  YAC_CALL UnsignedByte__setValue(void *_o, yacmemptr _args              ) {((_UnsignedByte*)_o)->setValue(_args.mem[0].si);}
sSI   YAC_CALL UnsignedByte__getValue(void *_o                               ) {return (sSI)((_UnsignedByte*)_o)->getValue();}
void  YAC_CALL UnsignedByte___printf_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {((_UnsignedByte*)_o)->_printf_YAC_RVAL(_args.mem[0].o, _r);}
void  YAC_CALL UnsignedByte___printf_YAC_RARG(void *_o, yacmemptr _args      ) {((_UnsignedByte*)_o)->_printf_YAC_RARG(_args.mem[0].o, _args.mem[1].o);}
void  YAC_CALL UnsignedByte___getString(void *_o, YAC_Value *_r              ) {((_UnsignedByte*)_o)->_getString(_r);}
void  YAC_CALL UnsignedByte___New   (void *_o, yacmemptr _args, YAC_Value *_r) {((_UnsignedByte*)_o)->_New(_args.mem[0].si, _r);}
#endif // YAC_NO_HOST
