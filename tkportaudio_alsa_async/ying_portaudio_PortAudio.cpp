// ---- ying_portaudio_PortAudio.cpp: auto generated by YInG - the YAC interface generator (Sat, 21/Jun/2025 21:04:48)

#ifndef YAC_NO_HOST
void  YAC_CALL PortAudio___Initialize(void *                       );
sSI   YAC_CALL PortAudio___GetNumDevices(void *                    );
void  YAC_CALL PortAudio___GetDeviceInfo(void *, yacmemptr, YAC_Value *);
void  YAC_CALL PortAudio___ShowControlPanel(void *, yacmemptr      );
sSI   YAC_CALL PortAudio___GetDefaultInputDeviceIndex(void *       );
sSI   YAC_CALL PortAudio___GetDefaultOutputDeviceIndex(void *      );
sSI   YAC_CALL PortAudio___IsFormatSupported(void *, yacmemptr     );
sSI   YAC_CALL PortAudio___OpenStream(void *, yacmemptr            );
void  YAC_CALL PortAudio___Terminate(void *                        );
sSI   YAC_CALL PortAudio___GetSampleSize(void *, yacmemptr         );
#endif // YAC_NO_HOST

// ------------------ YAC class "_PortAudio" reflection map (implementation) ------------------
sUI          YAC_VCALL _PortAudio::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _PortAudio::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _PortAudio::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _PortAudio::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _PortAudio::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _PortAudio::yacMethodGetNum                  (void) {return 11;}
const char **YAC_VCALL _PortAudio::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "Initialize", "GetNumDevices", "GetDeviceInfo", "ShowControlPanel", "GetDefaultInputDeviceIndex", "GetDefaultOutputDeviceIndex", "IsFormatSupported", "OpenStream", "Terminate", "GetSampleSize"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _PortAudio::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 0, 1, 2, 0, 0, 3, 6, 0, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _PortAudio::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={0,};static const sUI rt3[]={1,};static const sUI rt4[]={1, 1,};static const sUI rt5[]={0,};static const sUI rt6[]={0,};static const sUI rt7[]={3, 3, 2,};static const sUI rt8[]={3, 3, 2, 1, 3, 3,};static const sUI rt9[]={0,};static const sUI rt10[]={1,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _PortAudio::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0, (const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs8[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _PortAudio::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 1, 4, 0, 1, 1, 1, 1, 0, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _PortAudio::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _PortAudio::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)PortAudio___Initialize, (void*)PortAudio___GetNumDevices, (void*)PortAudio___GetDeviceInfo, (void*)PortAudio___ShowControlPanel, (void*)PortAudio___GetDefaultInputDeviceIndex, (void*)PortAudio___GetDefaultOutputDeviceIndex, (void*)PortAudio___IsFormatSupported, (void*)PortAudio___OpenStream, (void*)PortAudio___Terminate, (void*)PortAudio___GetSampleSize}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _PortAudio::yacConstantGetNum                (void) {return 6;}
const char **YAC_VCALL _PortAudio::yacConstantGetNames              (void) {
#ifndef YAC_NO_HOST
static const char*r[]={"PA_FLOAT32", "PA_INT32", "PA_INT24", "PA_INT16", "PA_INT8", "PA_UINT8"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _PortAudio::yacConstantGetTypes              (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={1, 1, 1, 1, 1, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
yacmemptr    YAC_VCALL _PortAudio::yacConstantGetValues             (void) {yacmemptr m;
#ifndef YAC_NO_HOST
static sUI r[6]; m.ui=r; m.si[0]=(sSI)paFloat32;m.si[1]=(sSI)paInt32;m.si[2]=(sSI)paInt24;m.si[3]=(sSI)paInt16;m.si[4]=(sSI)paInt8;m.si[5]=(sSI)paUInt8;; return m;
#else
m.any = 0; return m;
#endif // YAC_NO_HOST
}

YAC_C(_PortAudio, "PortAudio");

#ifndef YAC_NO_HOST
void  YAC_CALL PortAudio___Initialize(void *_o                               ) {((_PortAudio*)_o)->_Initialize();}
sSI   YAC_CALL PortAudio___GetNumDevices(void *_o                            ) {return (sSI)((_PortAudio*)_o)->_GetNumDevices();}
void  YAC_CALL PortAudio___GetDeviceInfo(void *_o, yacmemptr _args, YAC_Value *_r) {((_PortAudio*)_o)->_GetDeviceInfo(_args.mem[0].si, _r);}
void  YAC_CALL PortAudio___ShowControlPanel(void *_o, yacmemptr _args        ) {((_PortAudio*)_o)->_ShowControlPanel(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL PortAudio___GetDefaultInputDeviceIndex(void *_o               ) {return (sSI)((_PortAudio*)_o)->_GetDefaultInputDeviceIndex();}
sSI   YAC_CALL PortAudio___GetDefaultOutputDeviceIndex(void *_o              ) {return (sSI)((_PortAudio*)_o)->_GetDefaultOutputDeviceIndex();}
sSI   YAC_CALL PortAudio___IsFormatSupported(void *_o, yacmemptr _args       ) {return (sSI)((_PortAudio*)_o)->_IsFormatSupported(_args.mem[0].o, _args.mem[1].o, _args.mem[2].f32);}
sSI   YAC_CALL PortAudio___OpenStream(void *_o, yacmemptr _args              ) {return (sSI)((_PortAudio*)_o)->_OpenStream(_args.mem[0].o, _args.mem[1].o, _args.mem[2].f32, _args.mem[3].si, _args.mem[4].o, _args.mem[5].o);}
void  YAC_CALL PortAudio___Terminate(void *_o                                ) {((_PortAudio*)_o)->_Terminate();}
sSI   YAC_CALL PortAudio___GetSampleSize(void *_o, yacmemptr _args           ) {return (sSI)((_PortAudio*)_o)->_GetSampleSize(_args.mem[0].si);}
#endif // YAC_NO_HOST
