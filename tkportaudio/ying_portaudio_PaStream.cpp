// ---- ying_portaudio_PaStream.cpp: auto generated by YInG - the YAC interface generator (Sat, 21/Jun/2025 21:04:48)

#ifndef YAC_NO_HOST
void  YAC_CALL PaStream___start     (void *                        );
void  YAC_CALL PaStream___stop      (void *                        );
void  YAC_CALL PaStream___abort     (void *                        );
void  YAC_CALL PaStream___close     (void *                        );
sSI   YAC_CALL PaStream___isStopped (void *                        );
sSI   YAC_CALL PaStream___isActive  (void *                        );
sF32  YAC_CALL PaStream___getCpuLoad(void *                        );
sSI   YAC_CALL PaStream___getNumInputChannels(void *               );
sSI   YAC_CALL PaStream___getNumOutputChannels(void *              );
sF32  YAC_CALL PaStream___getInputLatency(void *                   );
sF32  YAC_CALL PaStream___getOutputLatency(void *                  );
sF32  YAC_CALL PaStream___getSampleRate(void *                     );
void  YAC_CALL PaStream___macOSAudioWorkgroupJoin(void *, YAC_Value *);
void  YAC_CALL PaStream___macOSAudioWorkgroupLeave(void *, yacmemptr);
#endif // YAC_NO_HOST

// ------------------ YAC class "_PaStream" reflection map (implementation) ------------------
sUI          YAC_VCALL _PaStream::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _PaStream::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _PaStream::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _PaStream::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _PaStream::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _PaStream::yacMethodGetNum                  (void) {return 15;}
const char **YAC_VCALL _PaStream::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "start", "stop", "abort", "close", "isStopped", "isActive", "getCpuLoad", "getNumInputChannels", "getNumOutputChannels", "getInputLatency", "getOutputLatency", "getSampleRate", "macOSAudioWorkgroupJoin", "macOSAudioWorkgroupLeave"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _PaStream::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _PaStream::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={0,};static const sUI rt3[]={0,};static const sUI rt4[]={0,};static const sUI rt5[]={0,};static const sUI rt6[]={0,};static const sUI rt7[]={0,};static const sUI rt8[]={0,};static const sUI rt9[]={0,};static const sUI rt10[]={0,};static const sUI rt11[]={0,};static const sUI rt12[]={0,};static const sUI rt13[]={0,};static const sUI rt14[]={3,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _PaStream::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _PaStream::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 0, 0, 0, 1, 1, 2, 1, 1, 2, 2, 2, 4, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _PaStream::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _PaStream::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)PaStream___start, (void*)PaStream___stop, (void*)PaStream___abort, (void*)PaStream___close, (void*)PaStream___isStopped, (void*)PaStream___isActive, (void*)PaStream___getCpuLoad, (void*)PaStream___getNumInputChannels, (void*)PaStream___getNumOutputChannels, (void*)PaStream___getInputLatency, (void*)PaStream___getOutputLatency, (void*)PaStream___getSampleRate, (void*)PaStream___macOSAudioWorkgroupJoin, (void*)PaStream___macOSAudioWorkgroupLeave}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _PaStream::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _PaStream::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _PaStream::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _PaStream::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(_PaStream, "PaStream");

#ifndef YAC_NO_HOST
void  YAC_CALL PaStream___start     (void *_o                                ) {((_PaStream*)_o)->_start();}
void  YAC_CALL PaStream___stop      (void *_o                                ) {((_PaStream*)_o)->_stop();}
void  YAC_CALL PaStream___abort     (void *_o                                ) {((_PaStream*)_o)->_abort();}
void  YAC_CALL PaStream___close     (void *_o                                ) {((_PaStream*)_o)->_close();}
sSI   YAC_CALL PaStream___isStopped (void *_o                                ) {return (sSI)((_PaStream*)_o)->_isStopped();}
sSI   YAC_CALL PaStream___isActive  (void *_o                                ) {return (sSI)((_PaStream*)_o)->_isActive();}
sF32  YAC_CALL PaStream___getCpuLoad(void *_o                                ) {return (sF32)((_PaStream*)_o)->_getCpuLoad();}
sSI   YAC_CALL PaStream___getNumInputChannels(void *_o                       ) {return (sSI)((_PaStream*)_o)->_getNumInputChannels();}
sSI   YAC_CALL PaStream___getNumOutputChannels(void *_o                      ) {return (sSI)((_PaStream*)_o)->_getNumOutputChannels();}
sF32  YAC_CALL PaStream___getInputLatency(void *_o                           ) {return (sF32)((_PaStream*)_o)->_getInputLatency();}
sF32  YAC_CALL PaStream___getOutputLatency(void *_o                          ) {return (sF32)((_PaStream*)_o)->_getOutputLatency();}
sF32  YAC_CALL PaStream___getSampleRate(void *_o                             ) {return (sF32)((_PaStream*)_o)->_getSampleRate();}
void  YAC_CALL PaStream___macOSAudioWorkgroupJoin(void *_o, YAC_Value *_r    ) {((_PaStream*)_o)->_macOSAudioWorkgroupJoin(_r);}
void  YAC_CALL PaStream___macOSAudioWorkgroupLeave(void *_o, yacmemptr _args ) {((_PaStream*)_o)->_macOSAudioWorkgroupLeave(_args.mem[0].o);}
#endif // YAC_NO_HOST
