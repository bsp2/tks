// ---- ying_portaudio_PaDeviceInfo.cpp: auto generated by YInG - the YAC interface generator (Sat, 21/Jun/2025 21:04:48)

#ifndef YAC_NO_HOST
void  YAC_CALL PaDeviceInfo___getName(void *, YAC_Value *          );
sSI   YAC_CALL PaDeviceInfo___getHostApiIndex(void *               );
void  YAC_CALL PaDeviceInfo___getHostApiName(void *, YAC_Value *   );
void  YAC_CALL PaDeviceInfo___getHostApiInfo(void *, YAC_Value *   );
sSI   YAC_CALL PaDeviceInfo___getMaxInputChannels(void *           );
sSI   YAC_CALL PaDeviceInfo___getMaxOutputChannels(void *          );
void  YAC_CALL PaDeviceInfo___getInputChannelName(void *, yacmemptr, YAC_Value *);
void  YAC_CALL PaDeviceInfo___getOutputChannelName(void *, yacmemptr, YAC_Value *);
sF32  YAC_CALL PaDeviceInfo___getDefaultLowInputLatency(void *     );
sF32  YAC_CALL PaDeviceInfo___getDefaultLowOutputLatency(void *    );
sF32  YAC_CALL PaDeviceInfo___getDefaultHighInputLatency(void *    );
sF32  YAC_CALL PaDeviceInfo___getDefaultHighOutputLatency(void *   );
sF32  YAC_CALL PaDeviceInfo___getDefaultSampleRate(void *          );
sSI   YAC_CALL PaDeviceInfo___getDefaultSampleFormat(void *        );
#endif // YAC_NO_HOST

// ------------------ YAC class "_PaDeviceInfo" reflection map (implementation) ------------------
sUI          YAC_VCALL _PaDeviceInfo::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _PaDeviceInfo::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _PaDeviceInfo::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _PaDeviceInfo::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _PaDeviceInfo::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _PaDeviceInfo::yacMethodGetNum                  (void) {return 15;}
const char **YAC_VCALL _PaDeviceInfo::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "getName", "getHostApiIndex", "getHostApiName", "getHostApiInfo", "getMaxInputChannels", "getMaxOutputChannels", "getInputChannelName", "getOutputChannelName", "getDefaultLowInputLatency", "getDefaultLowOutputLatency", "getDefaultHighInputLatency", "getDefaultHighOutputLatency", "getDefaultSampleRate", "getDefaultSampleFormat"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _PaDeviceInfo::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL _PaDeviceInfo::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={0,};static const sUI rt3[]={0,};static const sUI rt4[]={0,};static const sUI rt5[]={0,};static const sUI rt6[]={0,};static const sUI rt7[]={1,};static const sUI rt8[]={1,};static const sUI rt9[]={0,};static const sUI rt10[]={0,};static const sUI rt11[]={0,};static const sUI rt12[]={0,};static const sUI rt13[]={0,};static const sUI rt14[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL _PaDeviceInfo::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL _PaDeviceInfo::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 4, 1, 4, 4, 1, 1, 4, 4, 2, 2, 2, 2, 2, 1}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL _PaDeviceInfo::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL _PaDeviceInfo::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)PaDeviceInfo___getName, (void*)PaDeviceInfo___getHostApiIndex, (void*)PaDeviceInfo___getHostApiName, (void*)PaDeviceInfo___getHostApiInfo, (void*)PaDeviceInfo___getMaxInputChannels, (void*)PaDeviceInfo___getMaxOutputChannels, (void*)PaDeviceInfo___getInputChannelName, (void*)PaDeviceInfo___getOutputChannelName, (void*)PaDeviceInfo___getDefaultLowInputLatency, (void*)PaDeviceInfo___getDefaultLowOutputLatency, (void*)PaDeviceInfo___getDefaultHighInputLatency, (void*)PaDeviceInfo___getDefaultHighOutputLatency, (void*)PaDeviceInfo___getDefaultSampleRate, (void*)PaDeviceInfo___getDefaultSampleFormat}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL _PaDeviceInfo::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _PaDeviceInfo::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _PaDeviceInfo::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _PaDeviceInfo::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(_PaDeviceInfo, "PaDeviceInfo");

#ifndef YAC_NO_HOST
void  YAC_CALL PaDeviceInfo___getName(void *_o, YAC_Value *_r                ) {((_PaDeviceInfo*)_o)->_getName(_r);}
sSI   YAC_CALL PaDeviceInfo___getHostApiIndex(void *_o                       ) {return (sSI)((_PaDeviceInfo*)_o)->_getHostApiIndex();}
void  YAC_CALL PaDeviceInfo___getHostApiName(void *_o, YAC_Value *_r         ) {((_PaDeviceInfo*)_o)->_getHostApiName(_r);}
void  YAC_CALL PaDeviceInfo___getHostApiInfo(void *_o, YAC_Value *_r         ) {((_PaDeviceInfo*)_o)->_getHostApiInfo(_r);}
sSI   YAC_CALL PaDeviceInfo___getMaxInputChannels(void *_o                   ) {return (sSI)((_PaDeviceInfo*)_o)->_getMaxInputChannels();}
sSI   YAC_CALL PaDeviceInfo___getMaxOutputChannels(void *_o                  ) {return (sSI)((_PaDeviceInfo*)_o)->_getMaxOutputChannels();}
void  YAC_CALL PaDeviceInfo___getInputChannelName(void *_o, yacmemptr _args, YAC_Value *_r) {((_PaDeviceInfo*)_o)->_getInputChannelName(_args.mem[0].si, _r);}
void  YAC_CALL PaDeviceInfo___getOutputChannelName(void *_o, yacmemptr _args, YAC_Value *_r) {((_PaDeviceInfo*)_o)->_getOutputChannelName(_args.mem[0].si, _r);}
sF32  YAC_CALL PaDeviceInfo___getDefaultLowInputLatency(void *_o             ) {return (sF32)((_PaDeviceInfo*)_o)->_getDefaultLowInputLatency();}
sF32  YAC_CALL PaDeviceInfo___getDefaultLowOutputLatency(void *_o            ) {return (sF32)((_PaDeviceInfo*)_o)->_getDefaultLowOutputLatency();}
sF32  YAC_CALL PaDeviceInfo___getDefaultHighInputLatency(void *_o            ) {return (sF32)((_PaDeviceInfo*)_o)->_getDefaultHighInputLatency();}
sF32  YAC_CALL PaDeviceInfo___getDefaultHighOutputLatency(void *_o           ) {return (sF32)((_PaDeviceInfo*)_o)->_getDefaultHighOutputLatency();}
sF32  YAC_CALL PaDeviceInfo___getDefaultSampleRate(void *_o                  ) {return (sF32)((_PaDeviceInfo*)_o)->_getDefaultSampleRate();}
sSI   YAC_CALL PaDeviceInfo___getDefaultSampleFormat(void *_o                ) {return (sSI)((_PaDeviceInfo*)_o)->_getDefaultSampleFormat();}
#endif // YAC_NO_HOST
