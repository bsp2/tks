#
# Toplevel makefile for TkScript and plugins on Win32 / MSYS / GNU make / MSVC++
#
#   - Requires MSYS bash
#
#  - please adjust the PLUGINS list (see below) before building
#
#  - edit "install_msvc.mk" to configure the build environment setup (install dirs, ..)
#
#  - edit "plugin_msvc.mk" to configure plugin-specific options
#
#

# (note) to include _all_ plugins (like VST2 or tkzip (gnu-tls dependency), do
#          $ export TKS_OPT_PACKAGES=y
#        before running make

include install_msvc.mk

MKFILE=makefile.msvc

TKS_ZIP_PREFIX=zipped/

# core plugins
PLUGINS= yingtest__
##PLUGINS+= tksdl__
####PLUGINS+= tksdl12-compat__
PLUGINS+= tksdl2__
PLUGINS+= tkopengl__
PLUGINS+= tkfreetype2__
PLUGINS+= tkui__
PLUGINS+= tkfileutils__

# other plugins
PLUGINS += tkmath__
PLUGINS += tkoldmath__
ifneq ("$(TKS_OPT_PACKAGES)","")
PLUGINS += tkbluetooth__
PLUGINS += tksdl_net__
endif
PLUGINS += tkzip__
PLUGINS += tkdist2d__
PLUGINS += tksqlite__ 

# graphics plugins (not used by Synergy)
PLUGINS += tkchipmunk__
PLUGINS += tkfreeglut__
PLUGINS += tktriangulate__
PLUGINS += tkminnie__

# audio plugins (not used by Synergy/Eureka)
PLUGINS += eqxmms__
PLUGINS += tksidplay2__
PLUGINS += tkfreeverb__
#PLUGINS += tksmdi__

# Synergy/Eureka audio plugins
PLUGINS += tkanalogrytm__
PLUGINS += tkmidi__
#PLUGINS += tkmidi_alsa__
#PLUGINS += tkmidi_portmidi__
ifneq ("$(TKS_OPT_PACKAGES)","")
PLUGINS += tkportaudio__
endif
PLUGINS += tkradiastools__
PLUGINS += tksampler__
PLUGINS += tksampleedit__
PLUGINS += tkspeexdsp__
ifneq ("$(TKS_OPT_PACKAGES)","")
# (note) tksvt2 requires non-redistributable header files => build stub by default
#PLUGINS += tkvst2__
PLUGINS += tkvst2_stub__
else
PLUGINS += tkvst2_stub__
endif
PLUGINS += tkclap__
PLUGINS += tkmidipipe__
PLUGINS += tksamplechain__


.PHONY: tks_bin_zip
tks_bin_zip:
	(cd /c/Program\ Files/ && $(ZIP) -r -9 "$(CURDIR)/zipped/tks.zip" tks)


EXTRA_ZIP_TARGETS:= tks_bin_zip


include makefile.common


.PHONY: clean_bak
clean_bak:
	$(RM) `find . -name \*~`

.PHONY: realclean
realclean: clean_bak
	$(RM) `find . -name \*.so`
#	$(RM) `find . -name \*.dll`
	$(RM) `find . -name \*.obj`
	$(RM) `find . -name \*.o`
