
class Test {
   Process process;

   protected method readUntilMarker(String _r, String _marker) : boolean {
      _r.empty();

      int i;

      for(i=0; i < 10; i++)
      {
         int avail = process.waitAvail(1000);
         // trace "xxx readUntilString: avail="+avail;
         loop(avail)
         {
            String res;
            process.readString(res, 1);
            _r.append(res);
            if(_r & _marker)
            {
               trace "xxx found marker \""+_marker+"\"";
               return true;
            }
         }
      }

      return false;
   }

   public method test() {
      String cmd;
      if("" == TKS.dllPrefix)
      {
         // Windows
         cmd = "tks";
      }
      else
      {
         // Linux, MacOSX, ..
         cmd = "/usr/bin/tks";
      }

      process.exec(cmd, ["child_process.tks"]);

      String res = "";

      if(readUntilMarker(res, "[prompt]"))
      {
         process.writeString("cmd_two\n", 0,0);

         if(readUntilMarker(res, "[eval cmd]"))
         {
            if(readUntilMarker(res, "[end eval cmd]"))
            {
               trace "xxx res.length="+res.length;
               trace "xxx res=\""+res+"\"";
            }
         }
      }

      process.kill();
      trace "xxx exiting";
      exit(10);
   }
   
}

Test test;
test.test();
