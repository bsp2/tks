
use tkportaudio;

function ListDevices() {
   int numDev = PortAudio.GetNumDevices();

   trace "[dbg] ListDevices: numDev="+numDev;
   int devIdx = 0;
   loop(numDev)
   {
      PaDeviceInfo devInfo <= PortAudio.GetDeviceInfo(devIdx);
      trace "[dbg] ListDevices:\n\t devIdx=" + devIdx +" name=\""+devInfo.name+"\" apiName=\""+devInfo.hostApiName + "\"" 
         "\n\t maxInputCh="+devInfo.maxInputChannels+" maxOutputCh="+devInfo.maxOutputChannels+
         "\n\t defLowInputLatency="+devInfo.defaultLowInputLatency+" defLowOutputLatency="+devInfo.defaultLowOutputLatency+
         "\n\t defHighInputLatency="+devInfo.defaultHighInputLatency+" defHighOutputLatency="+devInfo.defaultHighOutputLatency+
         "\n\t defSampleRate="+devInfo.defaultSampleRate;

      // if(PREFERRED_DEVNAME == devInfo.name)
      //    DEVICE_IDX = devIdx;

      int chIdx;
   
      if(0)
      {
         // List input channels:
         trace "[dbg]\t input channels:";
         chIdx = 0;
         loop(devInfo.maxInputChannels)
         {
            trace "[dbg]\t\t #"+chIdx+" : \"" + devInfo.getInputChannelName(chIdx) + "\"";
            chIdx++;
         }
      }

      if(0)
      {
         // List output channels:
         trace "[dbg]\t output channels:";
         chIdx = 0;
         loop(devInfo.maxOutputChannels)
         {
            trace "[dbg]\t\t #"+chIdx+" : \"" + devInfo.getOutputChannelName(chIdx) + "\"";
            chIdx++;
         }
      }

      devIdx++;
   }
}

PortAudio.Initialize();

ListDevices();

PortAudio.Terminate();
