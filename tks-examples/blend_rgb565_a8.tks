int NUM_BITMAP_PIXELS = 1024*256;

#define BLEND_A8_RGB565_CONST_COLOR 0x7F654321

IntArray src, dst;

src.alloc(NUM_BITMAP_PIXELS);
src.numElements = src.maxElements;
src.fill(0xFF);

dst.alloc(NUM_BITMAP_PIXELS);
dst.numElements = src.maxElements;
dst.fill(0xaaaa);

function test_blend_a8_rgb565_native() compile {

   local int iter = 0;
   while( iter++ < 500 )
   {

   local int n = NUM_BITMAP_PIXELS;

   local int color = BLEND_A8_RGB565_CONST_COLOR;

   local int i;
   local int alpha = color>>24;
   
   local int  mask   = 0x07E0F81F; 
   local int  mask2  = (mask>>1)&mask;
   
   // color to 565:
   local int r = (color>>8) & 0xf800;
   local int g = ((color>>5) & 0x07e0)<<16;
   local int b = (color>>3) & 0x001f;
   local int color565 = (r|g|b);
   
   for (i=0; i<n; i++)
   {
      local int a = src[i];
      local int c = dst[i];
      
      // multiply alpha with const alpha:
      a = (a * alpha + 0xff)>>11;

      // interleave color:
      c =  (c | (c<<16)) & mask;

      // lerp:
      c = ((((color565-c) * a + mask2)>>5) + c) & mask; 

      // de-interleave:
      c |= c>>16;

      // write:    
      dst[i] = c;

   }

   } // iter++ < 500
 
}



int ms = milliSeconds();

test_blend_a8_rgb565_native();

ms = milliSeconds() - ms;

trace "ms="+ms;

UnsignedShort us = dst[0];
trace "dst[0]="+us.printf("%04x");

