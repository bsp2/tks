
// very very old example (!), written in august 2001 (IIRC)
//   ~bsp, 08-Apr-2008

module Main;

function test();

int shadow_var;
Object ptr;

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class MyVector {
  float x;
  float y;
  float z;
}
MyVector myvectorarray[10]; // an array of MyVector class instances
RedTouchToneTelephone rttt; // implicit class forward declaration

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class ShadowScriptVarTestClass {
  int shadow_var;
  printVar();
}

ShadowScriptVarTestClass::printVar() {
  shadow_var=23;
  String s;
  s="ShadowScriptVarTestClass::shadow_var="+shadow_var+"\n";
  trace s;
}

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class Telephone {
    int volume;
    
    Telephone();
    ~Telephone();
    getVolume();
    getVendor();
    ring();
    hangUp();
}

Telephone::Telephone { 
    trace("Telephone()");
    volume=99; 
}
Telephone::~Telephone { 
    trace("~Telephone()");
    hangUp(); 
}
Telephone::getVolume { 
    return volume; 
}
Telephone::getVendor { 
    return "TelephoneVendor"; 
}
Telephone::ring { 
    trace("Telephone::ring()");
}
Telephone::hangUp { 
    trace("Telephone::hangUp()");
}

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class Color {
    int rgba;
    
    Color() { 
	trace("Color()");
    }
    ~Color() { 
	trace("~Color()");
    }
    getColor();
}

Color::getColor() {  // () is optional
    return rgba; 
} 

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class BlueColor : Color {
    BlueColor() { 
	trace("BlueColor()");
	rgba=$FF0000FF;
    }
    ~BlueColor() { 
	trace("~BlueColor()");
    }
}

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class RedColor : Color {
    RedColor() { 
	trace("RedColor()");
	rgba=$FFFF0000;  
    }; // ";" is optional
    ~RedColor() { 
	trace("~RedColor()");
    }
}

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class PulseCodeTelephone : Telephone {
    ring();
    PulseCodeTelephone() { 
	trace("PulseCodeTelephone()");
	volume=90; 
    }
    ~PulseCodeTelephone() { 
	trace("~PulseCodeTelephone()");
    }
}

PulseCodeTelephone::ring {
    trace("PulseCodeTelephone::ring()");
}

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class TouchToneTelephone : Telephone {
    ring();
    TouchToneTelephone() { 
	trace("TouchToneTelephone()");
	volume=94; 
    }
    ~TouchToneTelephone() { 
	trace("~TouchToneTelephone()");
    }
}

TouchToneTelephone::ring {
    trace("TouchToneTelephone::ring()");
}

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class RedPulseCodeTelephone : RedColor,PulseCodeTelephone {
    getVendor() { return "RedPulseCodeTelephoneVendor"; }
    RedPulseCodeTelephone() { 
	trace("RedPulseCodeTelephone()");
    }
    ~RedPulseCodeTelephone() { 
	trace("~RedPulseCodeTelephone()");
    }
}

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class BluePulseCodeTelephone : BlueColor,PulseCodeTelephone {
    getVendor() { return "BluePulseCodeTelephoneVendor"; }
    BluePulseCodeTelephone() { 
	trace("BluePulseCodeTelephone()");
    }
    ~BluePulseCodeTelephone() { 
	trace("~BluePulseCodeTelephone()");
  }
}

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class RedTouchToneTelephone : RedColor,TouchToneTelephone {
    getVendor()  { return "RedTouchToneTelephoneVendor"; }
    RedTouchToneTelephone() { 
	trace("RedTouchToneTelephone()");
    }
    ~RedTouchToneTelephone() { 
	trace("~RedTouchToneTelephone()");
    }
    ring() { trace "RedTouchToneTelephone::ring"; }
}

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class BlueTouchToneTelephone : BlueColor,TouchToneTelephone {
    getVendor() { return "BlueTouchToneTelephoneVendor"; }
    BlueTouchToneTelephone() { 
	trace("BlueTouchToneTelephone()");
    }
    ~BlueTouchToneTelephone() { 
	trace("~BlueTouchToneTelephone()");
    }
}

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
function test {
    String s;
    
    trace("-------------- TestClass -------------");
    
    shadow_var=9;
    ShadowScriptVarTestClass ssvtc;
    ssvtc.printVar();
    trace("script shadow_var="+shadow_var);
    trace("class shadow_var="+ssvtc.shadow_var);
    
    BluePulseCodeTelephone btdt;
    RedPulseCodeTelephone rtdt;
    btdt.rgba=#0000108C;
    rtdt.rgba=#008c1e0c;
    
    // --- test simple method ----
    rttt.ring();
    // --- test overloaded method call ----
    trace("vendor=\""+rttt.getVendor()+"\"");
    
    // --- test classmember expressions ----
    rttt.volume+=1;
    rttt.volume-=1;
    rttt.volume++;
    rttt.volume--;
    trace("volume="+rttt.volume);

    Integer io; 
    io.value=btdt.rgba;
    trace("BluePulseCodeTelephone color=#"+io.printf("%08x"));
    io.value=rtdt.rgba;
    trace("RedPulseCodeTelephone color=#"+io.printf("%08x"));
    
    // ---- test virtual method call ----
    Telephone tel;
    tel<=rttt;
    trace("calling virtual ring() method:");
    tel.ring();
}

test();
