//****************************
// Retroto Zoomer
// Copyright 2001
// Tommi Laukkanen
//****************************
// 27062002 Bastian Spiegel <fli@tkscript.de> adapted for the tks language .
// 30062002 <fli> added video output
// 12072002 <fli> added asm implementation which seems to be about as fast as the compiled one ...
// 25072003 <fli> fixed so it uses the tksdl plugin now
//

// "tks rotzoomer 1"    to benchmark script engine (i.e. disable graphics output)

module Main;

int ibuffer[256*256*2];

float deltat=0;

function render() compile {    
    int dx;
    int dy;
    int fx;
    int fy;
    int ffx;
    int ffy;
    int i;

    // Calculate the zooming and rotating
    dx=sin(deltat)*(550.0+(sin(deltat/3.0)*500.0));
    dy=cos(deltat)*(550.0+(sin(deltat/3.0)*500.0));
    fx=((128+(sin(deltat/4.0)*900.0))<<8)-128*dx-128*dy;
    fy=((128+(cos(deltat/4.0)*300.0))<<8)-128*dy+128*dx;
    
    i=65536;  // the "tpix" buffer is part of the "buffer"
    loop(256)
	{
	    ffx = fx; ffy = fy;
	    loop(256)
		{
		    fy+=dy; // JAVA :buffer[i++] = tpix[((fy+=dy)&0xff00)|(((fx+=dx)>>8)&0xff)];
		    fx+=dx;
		    ibuffer[i++]=ibuffer[(fy&$ff00)|((fx>>8)&$FF)];
		}
	    fx = ffx + dy; fy = ffy - dx;
	}
}

int l=milliSeconds();
int i;
for(i=0; i<1000; i++)
{
    render();
    deltat+=0.03;
}
l=milliSeconds() - l;
trace("time="+l+"ms\n");
trace((1000.0/(l/256.0))+"fps.");
