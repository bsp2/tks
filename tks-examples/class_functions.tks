//
// class_functions.tks
//
//
class CBase 
{
   protected function somefun1();
   private   function getString() {return "somefun1() called.";}
}
CBase::somefun1()  // implement CBase::somefun1
{
   print getString();
}



class CTest extends CBase {
   private int    i;
   private float  f;
   private String s;
   
      // ---- protection qualifiers for constructors and destructors are currently ignored.
   CTest() 
      {
         CTest.somefun1();  // search namespaces of CTest and its baseclass(es)
         CTest::somefun2(); // search only in namespace of CTest
      }
   

      // This function is visible only in this class
   private function somefun2() 
      {
         print "somefun2() called.";
         
      }

      // The following function is only visible within the current module.
   module function somefun3() 
      {
         print "somefun3() called.";
      }

      // This function is visible in all contexts
   public method somefun(int _i, float _f, String _s);

      // This method is only visible within this class
   private method printMembers() 
      {
         print "i= "+i;
         print "f= "+f;
         print "s=\""+s+"\"";
      }
   
}
CTest::somefun // implement CTest::somefun(int _i, float _f, String _s)
{
   i=_i;
   f=_f;
   s=_s;
   printMembers();
}


CTest c;

CTest.somefun3(); // call class function 
c.somefun(1,2,"3");
