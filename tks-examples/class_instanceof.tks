///
/// file: class_instanceof.tks
/// date: 12-Mar-2005
/// l.c.: 16-Mar-2005
/// 
/// info: tests the instanceof expression (native and script classes)
///
///

class CInterface {
      // ----
      // ---- in terms of java (tm, http://java.sun.com/), interfaces are used to declare a set of methods
      // ---- which the "implementing" class needs to overwrite.
      // ---- tkscript makes no difference between "interface classes" and "normal" classes.
      // ---- hence you can use all features that regular classes support, e.g. functions (static methods).
      // ----
   define int   i = 42;
   define float f = PI;

   public function PrintConstants() {
      // ----
      // ---- "class functions" are called without a class object.
      // ----
      // ---- The class is rather used as a namespace for the function so it becomes accessible
      // ---- using the <Class>.<Function>(..) syntax.
      // ----
      // ---- This is also known as "static method" call in other languages (c++, java..).
      // ----
      // ---- A common way to separate static and non-static method/function names is to
      // ---- start the name with an uppercase letter ("MyFunction" (which works without an object)) resp.
      // ---- a lowercase letter ("myMethod" (which requires an object)).
      // ----
      // ---- 
      print "CInterface::PrintConstants():   i="+i+" f="+f;
   }

   public method printConstants() {
      // ----
      // ---- This method is used to make the "print constants function"
      // ---- visible to instances of this class.
      // ----
      // ---- The method delegates/forwards the actual work to the PrintConstants() function
      // ---- which has been declared in the "namespace" of this class.
      // ---- 
      // ----
      CInterface.PrintConstants();
   }
   
   public method printConstants2() {
      // ----
      // ---- this method simply demonstrates another way of calling the PrintConstants() function.
      // ---- 
      // ---- 
      PrintConstants();
   }
   
}

class CBase extends CInterface {
}

class CDerived extends CBase, CInterface { // this class also implements CInterface..
}



Boolean b;

CDerived   cderived;
CBase      cbase;
File       cfile;
Stream     cstream;
CInterface cinterface;
CInterface cinterface_base   <=new CBase();
CInterface cinterface_derived<=new CDerived();

b=(cderived instanceof CBase);
print "cderived instanceof CBase      ="+b+"\t(true)";

b=(cderived instanceof CDerived);
print "cderived instanceof CDerived   ="+b+"\t(true)";


b=(cbase instanceof CBase);
print "cbase instanceof CBase         ="+b+"\t(true)";

b=(cbase instanceof CDerived);
print "cbase instanceof CDerived      ="+b+"\t(false)";


b=(cfile instanceof Stream);
print "cfile instanceof Stream        ="+b+"\t(true)";

b=(cfile instanceof File);
print "cfile instanceof File          ="+b+"\t(true)";

b=(cstream instanceof Stream);  
print "cstream instanceof Stream      ="+b+"\t(true)";

b=(cstream instanceof File); 
print "cstream instanceof File        ="+b+"\t(false)";


b=(File instanceof Stream);
print "File instanceof Stream         ="+b+"\t(true)";

b=(Stream instanceof File);
print "Stream instanceof File         ="+b+"\t(false)";

b=(CDerived instanceof CBase);
print "CDerived instanceof CBase      ="+b+"\t(true)";

b=(CBase instanceof CDerived);
print "CBase instanceof CDerived      ="+b+"\t(false)";


b=(cderived instanceof CInterface);
print "cderived instanceof CInterface ="+b+"\t(true)";

stdout "cderived           .printConstants ()=" ; cderived           .printConstants ();
stdout "cinterface         .printConstants ()=" ; cinterface         .printConstants ();
stdout "cinterface_base    .printConstants ()=" ; cinterface_base    .printConstants ();
stdout "cinterface_base    .printConstants2()=" ; cinterface_base    .printConstants2();
stdout "cinterface_derived .printConstants ()=" ; cinterface_derived .printConstants ();
stdout "CInterface         .printConstants ()=" ; CInterface         .PrintConstants ();

/// ---- 
/// ----
/// ---- outputs:
/// ---- 
/// ---- Administrator@delta /cygdrive/f/Projects/tks-examples
/// ---- $ tks class_instanceof.tks
/// ---- cderived instanceof CBase      =true    (true)
/// ---- cderived instanceof CDerived   =true    (true)
/// ---- cbase instanceof CBase         =true    (true)
/// ---- cbase instanceof CDerived      =false   (false)
/// ---- cfile instanceof Stream        =true    (true)
/// ---- cfile instanceof File          =true    (true)
/// ---- cstream instanceof Stream      =true    (true)
/// ---- cstream instanceof File        =false   (false)
/// ---- File instanceof Stream         =true    (true)
/// ---- Stream instanceof File         =false   (false)
/// ---- CDerived instanceof CBase      =true    (true)
/// ---- CBase instanceof CDerived      =false   (false)
/// ---- cderived instanceof CInterface =true    (true)
/// ---- cderived           .printConstants ()=CInterface::PrintConstants():   i=42 f=3.14159
/// ---- cinterface         .printConstants ()=CInterface::PrintConstants():   i=42 f=3.14159
/// ---- cinterface_base    .printConstants ()=CInterface::PrintConstants():   i=42 f=3.14159
/// ---- cinterface_base    .printConstants2()=CInterface::PrintConstants():   i=42 f=3.14159
/// ---- cinterface_derived .printConstants ()=CInterface::PrintConstants():   i=42 f=3.14159
/// ---- CInterface         .printConstants ()=CInterface::PrintConstants():   i=42 f=3.14159
/// ---- 
/// ---- 
