/*
 *  http://www.bagley.org/~doug/shootout/bench/wordfreq/
 *  3,532s (amd athlon 2500+)
 */

int t=milliSeconds();
String k;
loop(20)
{
    HashTable words; words.alloc(20000);
    String s; s.loadLocal("wordfreq.txt", true);
    s.words(false); 
    foreach k in s { 
	k.toLower();
	words[k]=words[k]+1; 
    }
    s.freeStack();
}
// ---- print result (words sorted by number of occurences)
StringArray sta; sta.alloc(words.numElements);
IntArray    ita; ita.alloc(words.numElements); 
int i=0;
foreach k in words { 
    ita[i]=i; 
    Integer io; io.value=words[k]; 
    sta[i]=io.printf("%7d")+" "+k; 
    i++; 
}
sta.sortByValue(ita, false);
i=words.numElements-1; 
loop(words.numElements) {
    trace sta[ita[i]];
    i--;
}

trace "words.numElements="+words.numElements;
t=milliSeconds()-t;
trace "time(ms)="+t;

