//
// Demonstrates how to blit bitmaps using Texture::drawPixels() (glDrawPixels())
//
use tksdl;
use tkopengl;

#define SCREEN_W 640
#define SCREEN_H 480

int numframesrendered=0;

Texture bitmap;
bitmap.alloc(SCREEN_W, SCREEN_H, 4);
RenderBitmap();

function RenderBitmap() compile {
    int x = 0,y = 0;
    int k = 0;
    
    loop(SCREEN_H)
    {
       x = 0;
       loop(SCREEN_W)
       {
          int v = x++ * y; // calc RGB565 value
          // 0000000000000000rrrrrGGGGGGbbbbb <-- 16 bit RGB565
          // 00000000rrrrr000GGGGGG00bbbbb000 <-- 32 bit ARGB
          bitmap[k++] = ((v&0xF800)<<8) | ((v&0x7E0)<<5) | ((v&0x1F)<<3); // convert 16 -> 32 bit
       }
       y++;
    }
}

function onKeyboard(Key _k) {
   if(_k.pressed == VKEY_ESCAPE)
      SDL.exitEventLoop();
}

function onDraw() compile {
    float dt=FPS.precision;
    if( !(++numframesrendered&127) )
      trace "FPS.real="+FPS.real;
    zglInit2D(Viewport.width, Viewport.height);

    // Blit bitmap to screen. 
    //    It is highly commended to y-flip the bitmap
    //    in RenderBitmap() instead of using glPixelZoom() (~30% faster, tested
    //    with ATI x850XT/win2k/1Ghz AthlonXP (233fps without versus 178fps with pixel zoom)
    glPixelZoom(1,-1); // OpenGL (0,0) is bottom left ; texture (0,0) is top left  --> flip y
    bitmap.drawPixels2i(0, 0);
}

function main() {
    Viewport.openWindow(SCREEN_W, SCREEN_H);
    use callbacks;
    FPS.tickInterval = 1;
    SDL.eventLoop();
}

