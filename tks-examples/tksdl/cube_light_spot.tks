
module Main;
use tksdl;
use tkopengl;

float rquad=0.0;                          // Angle For The Quad ( NEW )

function onDraw() {

   //viewport.waitVBlank();
   zglInitPerspective(1.3, 45.0, 0.1, 100.0);
   glCullFace(GL_BACK);
   glEnable(GL_CULL_FACE);
   glFrontFace(GL_CCW);
   glEnable(GL_DEPTH_TEST);
   glClearColor(0.1,0.1,0.1,1);
   glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);   // Clear Screen And Depth Buffer




   // Draw cube
   glLoadIdentity();
   //glTranslatef(0.0, 0.0, -7.0);
   //glRotatef(rquad, 0,1,0);
   glTranslatef(0,0,-7);

   glEnable(GL_LIGHT0);
   glEnable(GL_LIGHTING);
   glColorMaterial(GL_FRONT_AND_BACK, GL_AMBIENT_AND_DIFFUSE);
   glEnable(GL_COLOR_MATERIAL);

   float lx,ly,lz;

   if(1)
   {
      // Diffuse only
      zglLightModelAmbient4f(0,0,0,1);
      zglLightMaterialEmission4f(GL_FRONT_AND_BACK, 0,0,0,1);
      zglLightMaterialSpecular4f(GL_FRONT_AND_BACK, 0,0,0,1);
      zglLightMaterialAmbientAndDiffuse4f(GL_FRONT_AND_BACK, 0,0,0,1); // overridden by COLOR_MATERIAL
      zglLightAmbient4f(GL_LIGHT0, 0,0,0,1);
      zglLightDiffuse4f(GL_LIGHT0, 1,1,1,1);
      zglLightSpecular4f(GL_LIGHT0, 0,0,0,1);
      lx = 1.0;
      ly = 0.0;
      lz = 0.0;
      zglLightPositionf(GL_LIGHT0, lx, ly, lz, 0.0); // w=0 => directional
      // zglLightSpotCutOff(GL_LIGHT0, 30);
      // zglLightSpotDirectionf(GL_LIGHT0, 0,0,-1);
      zglLightConstantAttenuation  (GL_LIGHT0, 0);
      zglLightLinearAttenuation    (GL_LIGHT0, 0);
      zglLightQuadraticAttenuation (GL_LIGHT0, 0);
   }

   if(0)
   {
      glLineWidth(1);
      zglColorARGB(#ffffffff);
      glBegin(GL_LINES);
      glVertex3f(0,0,0);
      glVertex3f(lx*4, ly*4, lz*4);
      glEnd();
   }
   
   if(1)
   {
      glLoadIdentity();
      glTranslatef(0.0, 0.0, -7.0);
      glRotatef(rquad, 0,1,0);

      glBegin(GL_QUADS);                      // Draw A Quad

      zglColorARGB($00FF00);                  // Set The Color To Green
      glNormal3f(0,1,0);
      glVertex3f(1.0, 1.0, -1.0);             // Top Right Of The Quad (Top)
      glVertex3f(-1.0, 1.0, -1.0);            // Top Left Of The Quad (Top)
      glVertex3f(-1.0, 1.0, 1.0);             // Bottom Left Of The Quad (Top)
      glVertex3f(1.0, 1.0, 1.0);              // Bottom Right Of The Quad (Top)

      zglColorARGB($FF8000);                  // Set The Color To Orange
      glNormal3f(0,-1,0);
      glVertex3f(1.0, -1.0, 1.0);             // Top Right Of The Quad (Bottom)
      glVertex3f(-1.0, -1.0, 1.0);            // Top Left Of The Quad (Bottom)
      glVertex3f(-1.0, -1.0, -1.0);           // Bottom Left Of The Quad (Bottom)
      glVertex3f(1.0, -1.0, -1.0);            // Bottom Right Of The Quad (Bottom)

      zglColorARGB($FF0000);                  // Set The Color To Red
      glNormal3f(0,0,1);
      glVertex3f(1.0, 1.0, 1.0);              // Top Right Of The Quad (Front)
      glVertex3f(-1.0, 1.0, 1.0);             // Top Left Of The Quad (Front)
      glVertex3f(-1.0, -1.0, 1.0);            // Bottom Left Of The Quad (Front)
      glVertex3f(1.0, -1.0, 1.0);             // Bottom Right Of The Quad (Front)

      zglColorARGB($FFFF00);                  // Set The Color To Yellow
      glNormal3f(0,0,-1);
      glVertex3f(1.0, -1.0, -1.0);            // Top Right Of The Quad (Back)
      glVertex3f(-1.0,-1.0,-1.0);             // Top Left Of The Quad (Back)
      glVertex3f(-1.0, 1.0,-1.0);             // Bottom Left Of The Quad (Back)
      glVertex3f(1.0, 1.0, -1.0);             // Bottom Right Of The Quad (Back)

      zglColorARGB($0000FF);                  // Set The Color To Blue
      glNormal3f(-1,0,0);
      glVertex3f(-1.0, 1.0, 1.0);             // Top Right Of The Quad (Left)
      glVertex3f(-1.0, 1.0, -1.0);            // Top Left Of The Quad (Left)
      glVertex3f(-1.0, -1.0, -1.0);           // Bottom Left Of The Quad (Left)
      glVertex3f(-1.0, -1.0, 1.0);            // Bottom Right Of The Quad (Left)

      zglColorARGB($FF00FF);                  // Set The Color To Violet
      glNormal3f(1,0,0);
      glVertex3f(1.0, 1.0, -1.0);             // Top Right Of The Quad (Right)
      glVertex3f(1.0, 1.0, 1.0);              // Top Left Of The Quad (Right)
      glVertex3f(1.0, -1.0, 1.0);             // Bottom Left Of The Quad (Right)
      glVertex3f(1.0, -1.0, -1.0);            // Bottom Right Of The Quad (Right)

      glEnd();                                // Done Drawing The Quad
   
   }

   glDisable(GL_COLOR_MATERIAL);
   glDisable(GL_LIGHTING);
   glDisable(GL_LIGHT0);

   glDisable(GL_CULL_FACE);
   
   float dt=FPS.precision;
   rquad-=1.0*dt;                // Decrease The Rotation Variable For The Quad ( NEW )
}

function onKeyboard(Key _k) {
   if(_k.pressed==VKEY_ESCAPE) SDL.exitEventLoop();
}

function main() {

   use callbacks;

   FPS.tickInterval=1000.0/50.0;
   FPS.tickBuffer=0;
   FPS.limit=60;

   Viewport.openWindow(320, 240);
   Viewport.swapInterval(1);
   
   trace "-------- cube_light --------";
   trace "   esc : exit";
   trace "\n\n";

   SDL.eventLoop();
}
