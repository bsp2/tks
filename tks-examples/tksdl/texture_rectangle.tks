
use tksdl;
use tkopengl;

int numframesrendered=0;

#define TEX_SX  251
#define TEX_SY  257

Texture tex;

function InitTex() {
   tex.target = GL_TEXTURE_RECTANGLE;
   //tex.target = GL_TEXTURE_2D;

   tex.flags = TEX_CLAMPTOEDGE_S | TEX_CLAMPTOEDGE_T;

   tex.alloc(TEX_SX, TEX_SY, 3);

   int y=0;
   int k=0;
   loop(TEX_SY)
   {
      int x=0;
      loop(TEX_SX)
      {
         tex[k++] = (x ^ y);
         x++;
      }
      y++;
   }
}

InitTex();

function onDraw() {

   float dt=FPS.precision;
   glClearColor(0,0,0.2,1);
   glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);

   if( !(++numframesrendered&127) )
      trace "FPS.real="+FPS.real;

   zglInitOrtho(1, 1);

   glColor4f(1,1,1,1);

   tex.bind();
   tex.enable();

   glBegin(GL_QUADS);
   glTexCoord2f(0, 0);
   glVertex2f(-1,-1);

   glTexCoord2f(TEX_SX, 0);
   glVertex2f( 1,-1);

   glTexCoord2f(TEX_SX, TEX_SY);
   glVertex2f( 1, 1);

   glTexCoord2f(0, TEX_SY);
   glVertex2f(-1, 1);
   glEnd();

   tex.disable();
}

function onOpen() {
   tex.upload();
}

function onKeyboard(Key _k) {
   switch(_k.pressed)
   {
      case VKEY_ESCAPE:
         SDL.exitEventLoop();
         break;
   }
}

function main() {
   use callbacks;

   FPS.tickInterval=1000.0/60;
   //FPS.limit=30;
   FPS.limit=60;

   Viewport.openWindow(640, 480);
   //Viewport.swapInterval(1);

   trace "xxx entering eventloop";
   SDL.eventLoop();
}
