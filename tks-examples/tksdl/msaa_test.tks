
use tksdl;
use tkopengl;

float frot=0;
int numframesrendered=0;

function onDraw() {

   float dt=FPS.precision;
   glClearColor(0,0,0.2,1);
   // glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);
   glClear(GL_COLOR_BUFFER_BIT);
   glDisable(GL_DEPTH_TEST);

   if( !(++numframesrendered&127) )
      trace "FPS.real="+FPS.real;

   zglInitOrtho(1, 1);
   // glRotatef(frot, 0,0,1);
   glColor3f(1.0, 0.0, 0.0);

   if(1)
   {
      float A = 0.5f;
      glBegin(GL_QUADS);
      glVertex2f(-A,  A);
      glVertex2f(-A, -A);
      glVertex2f( A, -A);

      glVertex2f( A,  A);
      glVertex2f(-A,  A);
      glVertex2f( A, -A);

      glEnd();
   }
   else
   {
      FloatArray va = [
         -1, -1,
          1, -1,
          1,  1,
         -1,  1
                       ];
      zglVertexPointer2f(va);
      glEnableClientState(GL_VERTEX_ARRAY);
      glDrawArrays(GL_QUADS, 0, 4);
      glDisableClientState(GL_VERTEX_ARRAY);
   }

   frot+=dt;
   wrap frot 0 360;
}

function onMouse(int _x, int _y, int _cbs, int _nbs) {
   print "x="+_x+" y="+_y+" cbs="+_cbs+" nbs="+_nbs;
}

function onKeyboard(Key _k) {
   trace "xxx onKeyboard: k.code="+_k.code+" mod="+_k.mod+" unicode="+_k.unicode+" "+tcchar(_k.unicode);
   switch(_k.pressed)
   {
      case VKEY_ESCAPE:
         SDL.exitEventLoop();
         break;
   }
}

int tim_count = 0;
function onTimer() {
   // trace "xxx onTimer";
   // if(++tim_count > 100)
   //    SDL.exitEventLoop();
}

function main() {
   use callbacks;

   FPS.tickInterval=1000.0/60;
   //FPS.limit=30;
   FPS.limit=60;

   SDL.eventPolling = false; // tksdl default is "true" (do not block while waiting for an SDL event)
   SDL.timerInterval = 20;

   SDL.dpiAwareness = true;  // no OS scaling
   // SDL.dpiAwareness = false;  // assume 96dpi and let OS scale window to actual DPI

   SDL.touchInput = true;  // enable WM_POINTER* messages

   Viewport.multisampleSamples = 4;
   Viewport.multisampleBuffers = 1;
   // Viewport.stencilBits = 8;
   Viewport.openWindow(800, 600);
   //Viewport.openScreen(640, 480, 32);
   //Viewport.swapInterval(1);

   SDL.enableUNICODE(true);

   trace "xxx Viewport.dpi="+Viewport.dpi;
   trace "xxx entering eventloop";

   SDL.eventLoop();
}
