
use tksdl;
use tkopengl;

int numframesrendered=0;

int mode = 0;


float shift=0;

function onDraw() {
   float dt=FPS.precision;
   
//    glClearColor(0,0,0.2,1);
//    glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);
   if( !(++numframesrendered&127) )
      trace "FPS.real="+FPS.real;

   zglInitOrtho(1,1);

   glRotatef(25, 0,0,1);
   glTranslatef(-shift, 0, 0);

   glEnable(GL_BLEND);
   glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);

   glHint(GL_POLYGON_SMOOTH_HINT, GL_NICEST);
   glEnable(GL_POLYGON_SMOOTH);

   float cx = -1;
   int i = 0;
   loop(4)
   {
      if(i&1)
         glColor3f(0.0,0.3,0.3);
      else
         glColor3f(0.0,0.9,0.9);

      glBegin(GL_QUADS);
      glVertex2f(cx,-1);
      glVertex2f(cx+1,-1);
      glVertex2f(cx+1, 1);
      glVertex2f(cx, 1);
      glEnd();
      
      cx += 1;

      i++;
   }

   switch(mode)
   {
      case 0:
         // relying on frame-to-frame timing calculations ('precision')
         shift += dt * 0.01;
         break;

      case 1:
         // relying on v-sync
         shift += 0.01;
         break;
   }

   wrap shift 0 2;
}

function onKeyboard(Key _k) {
   switch(_k.pressed)
   {
      case VKEY_ESCAPE:
         SDL.exitEventLoop();
         break;
   }
   switch(_k.released)
   {
      case VKEY_SPACE:
         mode = (mode +1) & 1;
         trace "[...] timing mode is now "+mode;
         break;
   }
}

function main() {
   Viewport.multisampleBuffers = 1;
   Viewport.multisampleSamples = 4;
   Viewport.openWindow(640, 480);
   Viewport.swapInterval(1);
   use callbacks;
   FPS.tickInterval=16;
   FPS.limit=60;
   SDL.eventLoop();
}
