
// tests GL_POLYGON and glPolygonMode()

use tksdl;
use tkopengl;

int numframesrendered=0;

FloatArray poly_verts = [
   -0.3,  0.8,
    0.7,  0.7,
    0.8, -0.1,
    0.6, -0.9,
   -0.7, -0.3,
   -0.8,  0.4
                         ];

function DrawPolyImmediate(float _r, float _g, float _b) {
   glColor3f(0.9,0.9,0.9);
   glBegin(GL_POLYGON);
   glColor3f(_r, _g, _b);
   glVertex2f(-0.3,  0.8);
   glVertex2f( 0.7,  0.7);
   glVertex2f( 0.8, -0.1);
   glVertex2f( 0.6, -0.9);
   glVertex2f(-0.7, -0.3);
   glVertex2f(-0.8,  0.4);
   glEnd();
}

function DrawPolyArray(float _r, float _g, float _b) {
   zglVertexPointer2f(poly_verts);
   glEnableClientState(GL_VERTEX_ARRAY);
   glColor3f(_r, _g, _b);
   glDrawArrays(GL_POLYGON, 0/*first*/, poly_verts.numElements/2);
   glDisableClientState(GL_VERTEX_ARRAY);
}

function onDraw() {

   float dt=FPS.precision;
   glClearColor(0,0,0.2,1);
   glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);

   if( !(++numframesrendered&127) )
      trace "FPS.real="+FPS.real;

   zglInitOrtho(1, 1);

   glLineWidth(2);
   glPointSize(4);

   glPolygonMode(GL_FRONT_AND_BACK, GL_FILL);
   DrawPolyImmediate(0.6, 0.7, 0.6);

   glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);
   DrawPolyImmediate(0.3, 0.35, 0.3);

   glPolygonMode(GL_FRONT_AND_BACK, GL_POINT);
   DrawPolyImmediate(0.6, 0.0, 0.0);


   // Draw scaled down versions of the same polygons using glDrawArrays()
   glScalef(0.7, 0.7, 1.0);
   glPolygonMode(GL_FRONT_AND_BACK, GL_FILL);
   DrawPolyArray(0.8, 0.8, 0.6);

   glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);
   DrawPolyArray(0.4, 0.4, 0.3);

   glPolygonMode(GL_FRONT_AND_BACK, GL_POINT);
   DrawPolyArray(1.0, 0.0, 0.0);
}

function onKeyboard(Key _k) {
   switch(_k.pressed)
   {
      case VKEY_ESCAPE:
         SDL.exitEventLoop();
         break;
   }
}

function main() {
   use callbacks;

   FPS.tickInterval=1000.0/60;
   FPS.limit=60;

   Viewport.openWindow(640, 480);
   Viewport.swapInterval(1);

   trace "xxx entering eventloop";
   SDL.eventLoop();
}
