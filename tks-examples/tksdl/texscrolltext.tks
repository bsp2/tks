
// file   : texscrolltext.tks
// author : Bastian Spiegel
// date   : 11Dec2001
// license: public domain. provided "AS IS". no copyright, no liability. use as you want.

//  possible improvements:
//    - scroll the text using texture coordinate shifting, then copy one char width to the left
//  more improvements:
//    - scroll char_height/(char_width/scrspeed) rows each frame to avoid memcopy "peaks"

module TexScrollText;

class TexScrollText {
    Font font;
    String text;
    float fscrollcount;
    int scrollcount;
    int scrollspeed;
    int text_length;
    int text_offset;
    int scroller_sx;

    // _width is new char position
    init(Object _font, String _text, int _speed, int _width);
    render(Object _tex, float _dt);
}

TexScrollText::init {
    font<=_font;
    text=_text;
    text_length=_text.length;
    scrollspeed=_speed;
    scroller_sx=_width;
    text_offset=0;
    scrollcount=0;
    fscrollcount=0.0;
}

TexScrollText::render {
    Texture tex;
    tex<=_tex;
    fscrollcount-=scrollspeed*_dt;
    if(int(fscrollcount)!=scrollcount)
	{
	    scrollcount=fscrollcount;
	    tex.scroll(-scrollspeed, 0);
	    if(scrollcount<=0)
		{
		    String cchar;
		    cchar=" ";
		    cchar.putc(0, text.getc(text_offset));
		    font.drawTexturei(scroller_sx+scrollcount, 10, cchar, tex);
		    scrollcount+=font.getWidth(cchar);
		    fscrollcount+=font.getWidth(cchar);
		    if(++text_offset>=text_length) text_offset=0;
		}
	    tex.update();
	}
}

