
// simple vertexarray test that uses an unsigned byte color array

use tksdl;
use tkopengl;

int numframesrendered=0;

FloatArray verts = [
   -1, -1,
    1, -1,
    1,  1,
   -1,  1
                    ];

IntArray cols = [
   rgba_4b(#ff, #ff, #ff, #ff),
   rgba_4b(#ff, #00, #00, #ff),
   rgba_4b(#ff, #ff, #00, #ff),
   rgba_4b(#00, #ff, #ff, #ff)
                   ];


function onDraw() {
   float dt=FPS.precision;

   glClearColor(0,0,0.2,1);
   glClear(GL_COLOR_BUFFER_BIT);

   if( !(++numframesrendered&127) )
      trace "FPS.real="+FPS.real;

   zglInitOrtho(1, 1);

   zglVertexPointer2f(verts);
   glEnableClientState(GL_VERTEX_ARRAY);

   zglColorPointer4b(cols);
   glEnableClientState(GL_COLOR_ARRAY);

   glDrawArrays(GL_QUADS, 0, 4);

   glDisableClientState(GL_COLOR_ARRAY);
   glDisableClientState(GL_VERTEX_ARRAY);
}

function onKeyboard(Key _k) {
   switch(_k.pressed)
   {
      case VKEY_ESCAPE:
         SDL.exitEventLoop();
         break;
   }
}

function main() {
   use callbacks;

   FPS.tickInterval=1000.0/60;
   FPS.limit=60;

   Viewport.openWindow(640, 480);

   trace "xxx entering eventloop";
   SDL.eventLoop();
}
