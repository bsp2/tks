// ----
// ---- file   : eval.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- info   : Script eval test
// ---- created: 09Nov2017
// ---- changed: 
// ----
// ----
// ----


class EvalTest {

   Script   script;
   Function fxn_add;
   Function fxn_raiseinvalidpointer;

   public method init() : boolean {

      return = false;

      String src="";

      src.append("// Script test\n");
      src.append("\n");
      src.append("function Add(int i, int j) {\n");
      src.append("  return i + j;\n");
      src.append("}\n");
      src.append("\n");
      src.append("function RaiseInvalidPointer() {\n");
      src.append("  String s <= null;\n");
      src.append("  trace \"accessing invalid pointer:\";\n");
      src.append("  trace s.length;  // raise InvalidPointer exception\n");
      src.append("}\n");
      src.append("\n");
      src.append("trace \"script: global statement test\";");

      if(script.load(src))
      {
         trace "[...] script loaded";

         fxn_add <= script.findFunction("Add");

         if(null != fxn_add)
         {
            fxn_raiseinvalidpointer <= script.findFunction("RaiseInvalidPointer");
            
            if(null != fxn_raiseinvalidpointer)
            {
               return = true;
            }
            else
            {
               trace "[---] failed to resolve function Script.RaiseInvalidPointer()";
            }
         }
         else
         {
            trace "[---] failed to resolve function Script.Add()";
         }
      }

   }

   public method test() {

      // Run global script statements (prints "script: global statement test")
      // script.eval();

      // // Exec function "Add"
      // var res = fxn_add.eval([42, 64]);
      // trace "fxn_add.eval: result is "+res+" (expect 42+64=106)";

      // Exec function "RaiseInvalidPointer" and catch error
      try
      {
         fxn_raiseinvalidpointer.eval([]);
         trace "should not be reached (after InvalidPointer exception)";
      }
      catch(Error e)
      {
         trace "ok, caught exception "+e.name+", message=\""+e.message+"\"";
      }

      trace "leave test()";
   }

}


EvalTest t;

if(t.init())
{
   t.test();
}
else
{
   trace "[---] t.init() failed.";
}

trace "exit";
