
function GetVar() {
   switch(rnd(5)) // Just return a random value with random type
   {  case 0: return;
      case 1: return 42;
      case 2: return PI;
      case 3: return null;
      case 4: return "some string";
   }
}

function TestStatic() {
   IntArray ia <= [1,2,3];
   print ia.string;
   
   FloatArray fa <= [1.1, 2.2, 3.3];
   print fa.string;
   
   fa <= new [1, 2.02, 3];
   print fa.string;
   
   StringArray sa <= ["hello", ", ", "world."];
   print sa.string;
   
   ValueArray va <= [1,2.2,null,"hi",GetVar()];
   trace va.string;
   
   PointerArray pa <= [ia, fa, sa, va];
   print pa.string;
}

function TestNew() {
   local IntArray ia <= new [1,2,3];
   print ia.string;
   
   local FloatArray fa <= new [1.1, 2.2, 3.3];
   print fa.string;
   
   fa <= [1, 2.02, 3];
   print fa.string;
   
   local StringArray sa <= new ["hello", ", ", "world."];
   print sa.string;
   
   local ValueArray va <= new [1,2.2,null,"hi",GetVar()];
   trace va.string;
   
   local PointerArray pa <= new [ia, fa, sa, va];
   print pa.string;
}

TestStatic();

TestNew();

// 
// Outputs: (the output on your machine may differ because of the rnd() call)
// 
// $ tks array_initializer.tks
//
// [1, 2, 3]
// [1.1, 2.2, 3.3]
// [1, 2.02, 3]
// ["hello", ", ", "world."]
// [1, 2.2, <null>, "hi", 42]
// [[1, 2, 3], [1, 2.02, 3], ["hello", ", ", "world."], [1, 2.2, <null>, "hi", 42]]
// [1, 2, 3]
// [1.1, 2.2, 3.3]
// [1, 2.02, 3]
// ["hello", ", ", "world."]
// [1, 2.2, <null>, "hi", "some string"]
// [[1, 2, 3], [1, 2.02, 3], ["hello", ", ", "world."], [1, 2.2, <null>, "hi", "some string"]]
