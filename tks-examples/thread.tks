
Thread thread1;

class CThreadArg {
   String some_string = "hello, world.";
   int    some_int    = 42;
   float  some_float  = PI;
}

=sync=
class Counter {
   static int counter = 0;

   public =sync= inc() { counter++; }
   public =sync= dec() { counter--; }
   public =sync= get() { return counter; }
}
Counter counter;

CThreadArg threadArg;

function Thread1Entry(Thread _thread) {
   CThreadArg arg <= _thread.userdata;
   trace "thread1 started.";
   trace "  arg.some_string=\"" + arg.some_string + "\"";
   trace "  arg.some_int   =" + arg.some_int;
   trace "  arg.some_float =" + arg.some_float;
   while(_thread.isRunning())
   {
      counter.inc();
      trace "thread1: counter="+counter.get();
   }
   trace "exiting thread \"" + _thread.name + "\".";
}

thread1.userdata = threadArg;
thread1.name = "Thread1";

if(thread1.create(Thread1Entry))
{
   trace "main: thread1 created.";
   loop(100)
   {
      counter.inc();
      trace "mainthread: counter="+counter.get();
      //TKS.sleep(1); // sleep 10 milli seconds
   }
   trace "main: requesting thread to exit";
   thread1.wait();
   trace "main: thread \""+ thread1.name +"\" has terminated.";
}
else
{
   die "failed to create thread1";
}

