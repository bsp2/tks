/*
$ tks stream_array.tks

i8a
0000: 01 02 03 fd fe ff                               ......
i8a=[1, 2, 3, -3, -2, -1]
u8a=[1, 2, 3, 253, 254, 255]

i16a
0000: 01 00 02 00 03 00 fd 00 fe 00 ff 00             ............
i16a=[1, 2, 3, 253, 254, 255]
u16a=[1, 2, 3, 253, 254, 255]

i32a
0000: 01 00 00 00 02 00 00 00 03 00 00 00 fd 00 00 00 ................
0010: fe 00 00 00 ff 00 00 00                         ........
i32a=[1, 2, 3, 253, 254, 255]

f32a
0000: 00 00 80 3f 00 00 00 40 00 00 40 40 00 00 7d 43 ...?...@..@@..}C
0010: 00 00 7e 43 00 00 7f 43                         ..~C...C
f32a=[1, 2, 3, 253, 254, 255]

f64a
0000: 00 00 00 00 00 00 f0 3f 00 00 00 00 00 00 00 40 .......?.......@
0010: 00 00 00 00 00 00 08 40 00 00 00 00 00 a0 6f 40 .......@......o@
0020: 00 00 00 00 00 c0 6f 40 00 00 00 00 00 e0 6f 40 ......o@......o@
f64a=[1, 2, 3, 253, 254, 255]
*/

Buffer b;
b.size = 1024;

IntArray ia;
FloatArray fa;
ObjectArray da; da.template = Double;

// write bytes
trace "\ni8a";
b.offset = 0;
b.i8a = [ 1, 2, 3, 253, 254, 255 ];
b.hexdump(0, b.offset);  // => 0000: 01 02 03 fd fe ff
b.offset = 0;
b.getI8a(ia, 6);
trace "i8a="+ia.string;
b.offset = 0;
b.getU8a(ia, 6);
trace "u8a="+ia.string;

// write shorts
trace "\ni16a";
b.offset = 0;
b.i16a = [ 1, 2, 3, 253, 254, 255 ];
b.hexdump(0, b.offset);  // => 0000: 01 00 02 00 03 00 fd 00 fe 00 ff 00
b.offset = 0;
b.getI16a(ia, 6);
trace "i16a="+ia.string;
b.offset = 0;
b.getU16a(ia, 6);
trace "u16a="+ia.string;

// write dwords
trace "\ni32a";
b.offset = 0;
b.i32a = [ 1, 2, 3, 253, 254, 255 ];
b.hexdump(0, b.offset);  // => 0000: 01 00 00 00 02 00 00 00 03 00 00 00 fd 00 00 00 ................
                         //    0010: fe 00 00 00 ff 00 00 00                         ........
b.offset = 0;
b.getI32a(ia, 6);
trace "i32a="+ia.string;

// write 32bit floats
trace "\nf32a";
b.offset = 0;
b.f32a = [ 1, 2, 3, 253, 254, 255 ];
b.hexdump(0, b.offset);  // => 0000: 00 00 80 3f 00 00 00 40 00 00 40 40 00 00 7d 43 ...?...@..@@..}C
                         //    0010: 00 00 7e 43 00 00 7f 43                         ..~C...C
b.offset = 0;
b.getF32a(fa, 6);
trace "f32a="+fa.string;

// write 64bit doubles
trace "\nf64a";
b.offset = 0;
b.f64a = [ Double.Newi(1), Double.Newi(2), Double.Newi(3), Double.Newi(253), Double.Newi(254), Double.Newi(255) ];
b.hexdump(0, b.offset);  // => 0000: 00 00 00 00 00 00 f0 3f 00 00 00 00 00 00 00 40 .......?.......@
                         //    0010: 00 00 00 00 00 00 08 40 00 00 00 00 00 a0 6f 40 .......@......o@
                         //    0020: 00 00 00 00 00 c0 6f 40 00 00 00 00 00 e0 6f 40 ......o@......o@
b.offset = 0;
b.getF64a(da, 6);
trace "f64a="+da.string;
