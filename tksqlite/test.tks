
use tksqlite;


function PrintRowDebug(SQLite_Statement _st) {
   trace "column count = " + _st.columnCount;
   int colIdx = 0;
   loop(_st.columnCount)
   {
      trace "column["+colIdx+"].name = " + _st.getColumnName(colIdx);
      trace "column["+colIdx+"].type = " + _st.getColumnType(colIdx);
      trace "column["+colIdx+"].declType = " + _st.getColumnDeclType(colIdx);
      colIdx++;
   }
}


SQLite_Database db;

trace "db.version = " + db.version;

int r = db.open("test.db");

if(r==SQLITE_OK)
{
   trace "database opened.";


   // List persons that have been assigned to one or many roles
   SQLite_Statement st_personsInRoles <= db.prepareStatement("SELECT person.surname,person.name,role.name FROM person,role,person_in_role WHERE person.id=person_in_role.person_id AND role.id=person_in_role.role_id;");

   if(st_personsInRoles != null)
   {
      st_personsInRoles.reset();
      while(st_personsInRoles.step() == SQLITE_ROW)
      {
         trace st_personsInRoles.stringArrayResult;
      }
   }
   else
      die "failed to prepare st_personInRoles statement.";

   trace "\n----------------------------------------\n";

   // List persons that are assigned to $ROLE
   SQLite_Statement st_personsInRole <= db.prepareStatement("SELECT p.surname,p.name FROM person p,role r,person_in_role pr WHERE p.id=pr.person_id AND r.id=pr.role_id AND r.id=(SELECT role.id FROM role WHERE role.name=$ROLE);");
   
   if(st_personsInRole != null)
   {
      st_personsInRole.setTextByName("$ROLE", "admin");

      while(st_personsInRole.step() == SQLITE_ROW)
      {
         PrintRowDebug(st_personsInRole);
         trace st_personsInRole.stringArrayResult;
      }
   }
   else
      die "failed to prepare st_personInRole statement ("+db.errorMessage+").";

}
else
{
   trace "failed to open database.";
}


