// ---- ying_sqlite_SQLite_Database.cpp: auto generated by YInG - the YAC interface generator (Sat, 21/Jan/2023 15:19:31)

void  YAC_CALL SQLite_Database__close(void *                       );
void  YAC_CALL SQLite_Database__prepareStatement(void *, yacmemptr, YAC_Value *);
sSI   YAC_CALL SQLite_Database__getErrorCode(void *                );
void  YAC_CALL SQLite_Database__getErrorMessage(void *, YAC_Value *);
sSI   YAC_CALL SQLite_Database__getTotalChanges(void *             );
void  YAC_CALL SQLite_Database__getVersion(void *, YAC_Value *     );
void  YAC_CALL SQLite_Database__interrupt(void *                   );
sSI   YAC_CALL SQLite_Database__isAutoCommitEnabled(void *         );
sSI   YAC_CALL SQLite_Database__open(void *, yacmemptr             );
void  YAC_CALL SQLite_Database__setBusyTimeout(void *, yacmemptr   );

// ------------------ YAC class "SQLite_Database" reflection map (implementation) ------------------
sUI          YAC_VCALL SQLite_Database::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL SQLite_Database::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL SQLite_Database::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL SQLite_Database::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL SQLite_Database::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL SQLite_Database::yacMethodGetNum                  (void) {return 11;}
const char **YAC_VCALL SQLite_Database::yacMethodGetNames                (void) {static const char *r[]={"operator", "close", "prepareStatement", "getErrorCode", "getErrorMessage", "getTotalChanges", "getVersion", "interrupt", "isAutoCommitEnabled", "open", "setBusyTimeout"}; return r;}
const sUI   *YAC_VCALL SQLite_Database::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1}; return r;}
const sUI  **YAC_VCALL SQLite_Database::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={3,};static const sUI rt3[]={0,};static const sUI rt4[]={0,};static const sUI rt5[]={0,};static const sUI rt6[]={0,};static const sUI rt7[]={0,};static const sUI rt8[]={0,};static const sUI rt9[]={3,};static const sUI rt10[]={1,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10}; return r;}
const char***YAC_VCALL SQLite_Database::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10}; return r;}
const sUI   *YAC_VCALL SQLite_Database::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 0, 4, 1, 4, 1, 4, 0, 1, 1, 0}; return r;}
const char **YAC_VCALL SQLite_Database::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL SQLite_Database::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)SQLite_Database__close, (void*)SQLite_Database__prepareStatement, (void*)SQLite_Database__getErrorCode, (void*)SQLite_Database__getErrorMessage, (void*)SQLite_Database__getTotalChanges, (void*)SQLite_Database__getVersion, (void*)SQLite_Database__interrupt, (void*)SQLite_Database__isAutoCommitEnabled, (void*)SQLite_Database__open, (void*)SQLite_Database__setBusyTimeout}; return r;}
sUI          YAC_VCALL SQLite_Database::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL SQLite_Database::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL SQLite_Database::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL SQLite_Database::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(SQLite_Database, "SQLite_Database");

void  YAC_CALL SQLite_Database__close(void *_o                               ) {((SQLite_Database*)_o)->close();}
void  YAC_CALL SQLite_Database__prepareStatement(void *_o, yacmemptr _args, YAC_Value *_r) {((SQLite_Database*)_o)->prepareStatement(_args.mem[0].o, _r);}
sSI   YAC_CALL SQLite_Database__getErrorCode(void *_o                        ) {return (sSI)((SQLite_Database*)_o)->getErrorCode();}
void  YAC_CALL SQLite_Database__getErrorMessage(void *_o, YAC_Value *_r      ) {((SQLite_Database*)_o)->getErrorMessage(_r);}
sSI   YAC_CALL SQLite_Database__getTotalChanges(void *_o                     ) {return (sSI)((SQLite_Database*)_o)->getTotalChanges();}
void  YAC_CALL SQLite_Database__getVersion(void *_o, YAC_Value *_r           ) {((SQLite_Database*)_o)->getVersion(_r);}
void  YAC_CALL SQLite_Database__interrupt(void *_o                           ) {((SQLite_Database*)_o)->interrupt();}
sSI   YAC_CALL SQLite_Database__isAutoCommitEnabled(void *_o                 ) {return (sSI)((SQLite_Database*)_o)->isAutoCommitEnabled();}
sSI   YAC_CALL SQLite_Database__open(void *_o, yacmemptr _args               ) {return (sSI)((SQLite_Database*)_o)->open(_args.mem[0].o);}
void  YAC_CALL SQLite_Database__setBusyTimeout(void *_o, yacmemptr _args     ) {((SQLite_Database*)_o)->setBusyTimeout(_args.mem[0].si);}
