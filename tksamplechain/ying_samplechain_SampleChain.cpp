// ---- ying_samplechain_SampleChain.cpp: auto generated by YInG - the YAC interface generator (Wed, 31/Jul/2019 21:25:09)

sSI   YAC_CALL SampleChain__getNumAlgorithms(void *                );
sSI   YAC_CALL SampleChain__selectAlgorithm(void *, yacmemptr      );
void  YAC_CALL SampleChain__getAlgorithmName(void *, YAC_Value *   );
sSI   YAC_CALL SampleChain__init    (void *, yacmemptr             );
sSI   YAC_CALL SampleChain__setParameteri(void *, yacmemptr        );
sSI   YAC_CALL SampleChain__setParameterf(void *, yacmemptr        );
sSI   YAC_CALL SampleChain__add     (void *, yacmemptr             );
void  YAC_CALL SampleChain__calc    (void *                        );
sSI   YAC_CALL SampleChain__queryNumElements(void *                );
sSI   YAC_CALL SampleChain__queryTotalSize(void *                  );
sSI   YAC_CALL SampleChain__queryElementOffset(void *, yacmemptr   );
sSI   YAC_CALL SampleChain__queryElementTotalSize(void *, yacmemptr);
sSI   YAC_CALL SampleChain__queryElementOriginalSize(void *, yacmemptr);
void* YAC_CALL SampleChain__queryElementUserData(void *, yacmemptr );
void  YAC_CALL SampleChain__exit    (void *                        );

// ------------------ YAC class "SampleChain" reflection map (implementation) ------------------
sUI          YAC_VCALL SampleChain::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL SampleChain::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL SampleChain::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL SampleChain::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL SampleChain::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL SampleChain::yacMethodGetNum                  (void) {return 16;}
const char **YAC_VCALL SampleChain::yacMethodGetNames                (void) {static const char *r[]={"operator", "getNumAlgorithms", "selectAlgorithm", "getAlgorithmName", "init", "setParameteri", "setParameterf", "add", "calc", "queryNumElements", "queryTotalSize", "queryElementOffset", "queryElementTotalSize", "queryElementOriginalSize", "queryElementUserData", "exit"}; return r;}
const sUI   *YAC_VCALL SampleChain::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 0, 1, 0, 1, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 0}; return r;}
const sUI  **YAC_VCALL SampleChain::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={1,};static const sUI rt3[]={0,};static const sUI rt4[]={1,};static const sUI rt5[]={3, 1,};static const sUI rt6[]={3, 2,};static const sUI rt7[]={1, 3,};static const sUI rt8[]={0,};static const sUI rt9[]={0,};static const sUI rt10[]={0,};static const sUI rt11[]={1,};static const sUI rt12[]={1,};static const sUI rt13[]={1,};static const sUI rt14[]={1,};static const sUI rt15[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15}; return r;}
const char***YAC_VCALL SampleChain::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={"String", (const char*)0,};static const char *rs6[]={"String", (const char*)0,};static const char *rs7[]={(const char*)0, (const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15}; return r;}
const sUI   *YAC_VCALL SampleChain::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 1, 1, 4, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 3, 0}; return r;}
const char **YAC_VCALL SampleChain::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL SampleChain::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)SampleChain__getNumAlgorithms, (void*)SampleChain__selectAlgorithm, (void*)SampleChain__getAlgorithmName, (void*)SampleChain__init, (void*)SampleChain__setParameteri, (void*)SampleChain__setParameterf, (void*)SampleChain__add, (void*)SampleChain__calc, (void*)SampleChain__queryNumElements, (void*)SampleChain__queryTotalSize, (void*)SampleChain__queryElementOffset, (void*)SampleChain__queryElementTotalSize, (void*)SampleChain__queryElementOriginalSize, (void*)SampleChain__queryElementUserData, (void*)SampleChain__exit}; return r;}
sUI          YAC_VCALL SampleChain::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL SampleChain::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL SampleChain::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL SampleChain::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(SampleChain, "SampleChain");

sSI   YAC_CALL SampleChain__getNumAlgorithms(void *_o                        ) {return (sSI)((SampleChain*)_o)->getNumAlgorithms();}
sSI   YAC_CALL SampleChain__selectAlgorithm(void *_o, yacmemptr _args        ) {return (sSI)((SampleChain*)_o)->selectAlgorithm(_args.mem[0].si);}
void  YAC_CALL SampleChain__getAlgorithmName(void *_o, YAC_Value *_r         ) {((SampleChain*)_o)->getAlgorithmName(_r);}
sSI   YAC_CALL SampleChain__init    (void *_o, yacmemptr _args               ) {return (sSI)((SampleChain*)_o)->init(_args.mem[0].si);}
sSI   YAC_CALL SampleChain__setParameteri(void *_o, yacmemptr _args          ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((SampleChain*)_o)->setParameteri((YAC_String*)_args.mem[0].o, _args.mem[1].si);}return 0;}
sSI   YAC_CALL SampleChain__setParameterf(void *_o, yacmemptr _args          ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((SampleChain*)_o)->setParameterf((YAC_String*)_args.mem[0].o, _args.mem[1].f32);}return 0;}
sSI   YAC_CALL SampleChain__add     (void *_o, yacmemptr _args               ) {return (sSI)((SampleChain*)_o)->add(_args.mem[0].si, _args.mem[1].o);}
void  YAC_CALL SampleChain__calc    (void *_o                                ) {((SampleChain*)_o)->calc();}
sSI   YAC_CALL SampleChain__queryNumElements(void *_o                        ) {return (sSI)((SampleChain*)_o)->queryNumElements();}
sSI   YAC_CALL SampleChain__queryTotalSize(void *_o                          ) {return (sSI)((SampleChain*)_o)->queryTotalSize();}
sSI   YAC_CALL SampleChain__queryElementOffset(void *_o, yacmemptr _args     ) {return (sSI)((SampleChain*)_o)->queryElementOffset(_args.mem[0].si);}
sSI   YAC_CALL SampleChain__queryElementTotalSize(void *_o, yacmemptr _args  ) {return (sSI)((SampleChain*)_o)->queryElementTotalSize(_args.mem[0].si);}
sSI   YAC_CALL SampleChain__queryElementOriginalSize(void *_o, yacmemptr _args) {return (sSI)((SampleChain*)_o)->queryElementOriginalSize(_args.mem[0].si);}
void* YAC_CALL SampleChain__queryElementUserData(void *_o, yacmemptr _args   ) {return (void*)((SampleChain*)_o)->queryElementUserData(_args.mem[0].si);}
void  YAC_CALL SampleChain__exit    (void *_o                                ) {((SampleChain*)_o)->exit();}
