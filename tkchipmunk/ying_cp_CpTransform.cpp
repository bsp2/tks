// ---- ying_cp_CpTransform.cpp: auto generated by YInG - the YAC interface generator (Sun, 26/Sep/2021 12:44:11)

sF32  YAC_CALL CpTransform___getA   (void *                        );
void  YAC_CALL CpTransform___setA   (void *, yacmemptr             );
sF32  YAC_CALL CpTransform___getB   (void *                        );
void  YAC_CALL CpTransform___setB   (void *, yacmemptr             );
sF32  YAC_CALL CpTransform___getC   (void *                        );
void  YAC_CALL CpTransform___setC   (void *, yacmemptr             );
sF32  YAC_CALL CpTransform___getD   (void *                        );
void  YAC_CALL CpTransform___setD   (void *, yacmemptr             );
sF32  YAC_CALL CpTransform___getTx  (void *                        );
void  YAC_CALL CpTransform___setTx  (void *, yacmemptr             );
sF32  YAC_CALL CpTransform___getTy  (void *                        );
void  YAC_CALL CpTransform___setTy  (void *, yacmemptr             );
void  YAC_CALL CpTransform___getString(void *, YAC_Value *         );
void  YAC_CALL CpTransform___init   (void *, yacmemptr             );
void  YAC_CALL CpTransform___initIdentity(void *                   );

// ------------------ YAC class "CpTransform" reflection map (implementation) ------------------
sUI          YAC_VCALL CpTransform::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL CpTransform::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL CpTransform::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL CpTransform::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL CpTransform::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL CpTransform::yacMethodGetNum                  (void) {return 16;}
const char **YAC_VCALL CpTransform::yacMethodGetNames                (void) {static const char *r[]={"operator", "getA", "setA", "getB", "setB", "getC", "setC", "getD", "setD", "getTx", "setTx", "getTy", "setTy", "getString", "init", "initIdentity"}; return r;}
const sUI   *YAC_VCALL CpTransform::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 6, 0}; return r;}
const sUI  **YAC_VCALL CpTransform::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={2,};static const sUI rt3[]={0,};static const sUI rt4[]={2,};static const sUI rt5[]={0,};static const sUI rt6[]={2,};static const sUI rt7[]={0,};static const sUI rt8[]={2,};static const sUI rt9[]={0,};static const sUI rt10[]={2,};static const sUI rt11[]={0,};static const sUI rt12[]={2,};static const sUI rt13[]={0,};static const sUI rt14[]={2, 2, 2, 2, 2, 2,};static const sUI rt15[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15}; return r;}
const char***YAC_VCALL CpTransform::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs15[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15}; return r;}
const sUI   *YAC_VCALL CpTransform::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 4, 0, 0}; return r;}
const char **YAC_VCALL CpTransform::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL CpTransform::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)CpTransform___getA, (void*)CpTransform___setA, (void*)CpTransform___getB, (void*)CpTransform___setB, (void*)CpTransform___getC, (void*)CpTransform___setC, (void*)CpTransform___getD, (void*)CpTransform___setD, (void*)CpTransform___getTx, (void*)CpTransform___setTx, (void*)CpTransform___getTy, (void*)CpTransform___setTy, (void*)CpTransform___getString, (void*)CpTransform___init, (void*)CpTransform___initIdentity}; return r;}
sUI          YAC_VCALL CpTransform::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL CpTransform::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL CpTransform::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL CpTransform::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C_POOLED(CpTransform, "CpTransform");

sF32  YAC_CALL CpTransform___getA   (void *_o                                ) {return (sF32)((CpTransform*)_o)->_getA();}
void  YAC_CALL CpTransform___setA   (void *_o, yacmemptr _args               ) {((CpTransform*)_o)->_setA(_args.mem[0].f32);}
sF32  YAC_CALL CpTransform___getB   (void *_o                                ) {return (sF32)((CpTransform*)_o)->_getB();}
void  YAC_CALL CpTransform___setB   (void *_o, yacmemptr _args               ) {((CpTransform*)_o)->_setB(_args.mem[0].f32);}
sF32  YAC_CALL CpTransform___getC   (void *_o                                ) {return (sF32)((CpTransform*)_o)->_getC();}
void  YAC_CALL CpTransform___setC   (void *_o, yacmemptr _args               ) {((CpTransform*)_o)->_setC(_args.mem[0].f32);}
sF32  YAC_CALL CpTransform___getD   (void *_o                                ) {return (sF32)((CpTransform*)_o)->_getD();}
void  YAC_CALL CpTransform___setD   (void *_o, yacmemptr _args               ) {((CpTransform*)_o)->_setD(_args.mem[0].f32);}
sF32  YAC_CALL CpTransform___getTx  (void *_o                                ) {return (sF32)((CpTransform*)_o)->_getTx();}
void  YAC_CALL CpTransform___setTx  (void *_o, yacmemptr _args               ) {((CpTransform*)_o)->_setTx(_args.mem[0].f32);}
sF32  YAC_CALL CpTransform___getTy  (void *_o                                ) {return (sF32)((CpTransform*)_o)->_getTy();}
void  YAC_CALL CpTransform___setTy  (void *_o, yacmemptr _args               ) {((CpTransform*)_o)->_setTy(_args.mem[0].f32);}
void  YAC_CALL CpTransform___getString(void *_o, YAC_Value *_r               ) {((CpTransform*)_o)->_getString(_r);}
void  YAC_CALL CpTransform___init   (void *_o, yacmemptr _args               ) {((CpTransform*)_o)->_init(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _args.mem[4].f32, _args.mem[5].f32);}
void  YAC_CALL CpTransform___initIdentity(void *_o                           ) {((CpTransform*)_o)->_initIdentity();}
