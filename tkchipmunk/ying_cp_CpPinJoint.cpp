// ---- ying_cp_CpPinJoint.cpp: auto generated by YInG - the YAC interface generator (Sun, 26/Sep/2021 12:44:11)

void  YAC_CALL CpPinJoint___initPin (void *, yacmemptr             );
void  YAC_CALL CpPinJoint___New     (void *, yacmemptr, YAC_Value *);

// ------------------ YAC class "CpPinJoint" reflection map (implementation) ------------------
sUI          YAC_VCALL CpPinJoint::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL CpPinJoint::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL CpPinJoint::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL CpPinJoint::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL CpPinJoint::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL CpPinJoint::yacMethodGetNum                  (void) {return 3;}
const char **YAC_VCALL CpPinJoint::yacMethodGetNames                (void) {static const char *r[]={"operator", "initPin", "New"}; return r;}
const sUI   *YAC_VCALL CpPinJoint::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 4, 4}; return r;}
const sUI  **YAC_VCALL CpPinJoint::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={3, 3, 3, 3,};static const sUI rt2[]={3, 3, 3, 3,};static const sUI *r[]={rt0, rt1, rt2}; return r;}
const char***YAC_VCALL CpPinJoint::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={"CpBody", "CpBody", "CpVect", "CpVect",};static const char *rs2[]={"CpBody", "CpBody", "CpVect", "CpVect",};static const char**r[]={rs0, rs1, rs2}; return r;}
const sUI   *YAC_VCALL CpPinJoint::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 0, 4}; return r;}
const char **YAC_VCALL CpPinJoint::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL CpPinJoint::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)CpPinJoint___initPin, (void*)CpPinJoint___New}; return r;}
sUI          YAC_VCALL CpPinJoint::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL CpPinJoint::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL CpPinJoint::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL CpPinJoint::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(CpPinJoint, "CpPinJoint");

void  YAC_CALL CpPinJoint___initPin (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpBody))if(YAC_BCHK(_args.mem[1].o, clid_CpBody))if(YAC_BCHK(_args.mem[2].o, clid_CpVect))if(YAC_BCHK(_args.mem[3].o, clid_CpVect)){ ((CpPinJoint*)_o)->_initPin((CpBody*)_args.mem[0].o, (CpBody*)_args.mem[1].o, (CpVect*)_args.mem[2].o, (CpVect*)_args.mem[3].o);}}
void  YAC_CALL CpPinJoint___New     (void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, clid_CpBody))if(YAC_BCHK(_args.mem[1].o, clid_CpBody))if(YAC_BCHK(_args.mem[2].o, clid_CpVect))if(YAC_BCHK(_args.mem[3].o, clid_CpVect)){ ((CpPinJoint*)_o)->_New((CpBody*)_args.mem[0].o, (CpBody*)_args.mem[1].o, (CpVect*)_args.mem[2].o, (CpVect*)_args.mem[3].o, _r);}}
