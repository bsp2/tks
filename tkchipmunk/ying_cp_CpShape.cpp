// ---- ying_cp_CpShape.cpp: auto generated by YInG - the YAC interface generator (Sun, 26/Sep/2021 12:44:11)

void  YAC_CALL CpShape___free       (void *                        );
void* YAC_CALL CpShape___getBody    (void *                        );
sSI   YAC_CALL CpShape___getType    (void *                        );
sSI   YAC_CALL CpShape___getSensor  (void *                        );
void  YAC_CALL CpShape___setSensor  (void *, yacmemptr             );
sF32  YAC_CALL CpShape___getMass    (void *                        );
void  YAC_CALL CpShape___setMass    (void *, yacmemptr             );
sF32  YAC_CALL CpShape___getDensity (void *                        );
void  YAC_CALL CpShape___setDensity (void *, yacmemptr             );
sF32  YAC_CALL CpShape___getMoment  (void *                        );
sF32  YAC_CALL CpShape___getArea    (void *                        );
sSI   YAC_CALL CpShape___getFilterGroup(void *                     );
sSI   YAC_CALL CpShape___getGroup   (void *                        );
void  YAC_CALL CpShape___setFilterGroup(void *, yacmemptr          );
void  YAC_CALL CpShape___setGroup   (void *, yacmemptr             );
sSI   YAC_CALL CpShape___getFilterCategories(void *                );
void  YAC_CALL CpShape___setFilterCategories(void *, yacmemptr     );
sSI   YAC_CALL CpShape___getFilterMask(void *                      );
void  YAC_CALL CpShape___setFilterMask(void *, yacmemptr           );
sSI   YAC_CALL CpShape___getCollisionType(void *                   );
void  YAC_CALL CpShape___setCollisionType(void *, yacmemptr        );
void* YAC_CALL CpShape___getSurfaceVelocity(void *                 );
void  YAC_CALL CpShape___setSurfaceVelocity(void *, yacmemptr      );
void  YAC_CALL CpShape___setSurfaceVelocity2f(void *, yacmemptr    );
sF32  YAC_CALL CpShape___getElasticity(void *                      );
sF32  YAC_CALL CpShape___getE       (void *                        );
void  YAC_CALL CpShape___setElasticity(void *, yacmemptr           );
void  YAC_CALL CpShape___setE       (void *, yacmemptr             );
sF32  YAC_CALL CpShape___getFriction(void *                        );
sF32  YAC_CALL CpShape___getU       (void *                        );
void  YAC_CALL CpShape___setFriction(void *, yacmemptr             );
void  YAC_CALL CpShape___setU       (void *, yacmemptr             );
void  YAC_CALL CpShape___setRenderStyle(void *, yacmemptr          );
sSI   YAC_CALL CpShape___getRenderStyle(void *                     );
void  YAC_CALL CpShape___setId      (void *, yacmemptr             );
void* YAC_CALL CpShape___getId      (void *                        );
void  YAC_CALL CpShape___setUserData(void *, yacmemptr             );
void  YAC_CALL CpShape___getUserData(void *, YAC_Value *           );
sF32  YAC_CALL CpShape___getDisplayRotation(void *                 );
void  YAC_CALL CpShape___setDisplayRotation(void *, yacmemptr      );

// ------------------ YAC class "CpShape" reflection map (implementation) ------------------
sUI          YAC_VCALL CpShape::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL CpShape::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL CpShape::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL CpShape::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL CpShape::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL CpShape::yacMethodGetNum                  (void) {return 41;}
const char **YAC_VCALL CpShape::yacMethodGetNames                (void) {static const char *r[]={"operator", "free", "getBody", "getType", "getSensor", "setSensor", "getMass", "setMass", "getDensity", "setDensity", "getMoment", "getArea", "getFilterGroup", "getGroup", "setFilterGroup", "setGroup", "getFilterCategories", "setFilterCategories", "getFilterMask", "setFilterMask", "getCollisionType", "setCollisionType", "getSurfaceVelocity", "setSurfaceVelocity", "setSurfaceVelocity2f", "getElasticity", "getE", "setElasticity", "setE", "getFriction", "getU", "setFriction", "setU", "setRenderStyle", "getRenderStyle", "setId", "getId", "setUserData", "getUserData", "getDisplayRotation", "setDisplayRotation"}; return r;}
const sUI   *YAC_VCALL CpShape::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 2, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1}; return r;}
const sUI  **YAC_VCALL CpShape::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={0,};static const sUI rt3[]={0,};static const sUI rt4[]={0,};static const sUI rt5[]={1,};static const sUI rt6[]={0,};static const sUI rt7[]={2,};static const sUI rt8[]={0,};static const sUI rt9[]={2,};static const sUI rt10[]={0,};static const sUI rt11[]={0,};static const sUI rt12[]={0,};static const sUI rt13[]={0,};static const sUI rt14[]={1,};static const sUI rt15[]={1,};static const sUI rt16[]={0,};static const sUI rt17[]={1,};static const sUI rt18[]={0,};static const sUI rt19[]={1,};static const sUI rt20[]={0,};static const sUI rt21[]={1,};static const sUI rt22[]={0,};static const sUI rt23[]={3,};static const sUI rt24[]={2, 2,};static const sUI rt25[]={0,};static const sUI rt26[]={0,};static const sUI rt27[]={2,};static const sUI rt28[]={2,};static const sUI rt29[]={0,};static const sUI rt30[]={0,};static const sUI rt31[]={2,};static const sUI rt32[]={2,};static const sUI rt33[]={1,};static const sUI rt34[]={0,};static const sUI rt35[]={3,};static const sUI rt36[]={0,};static const sUI rt37[]={3,};static const sUI rt38[]={0,};static const sUI rt39[]={0,};static const sUI rt40[]={2,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40}; return r;}
const char***YAC_VCALL CpShape::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={"CpVect",};static const char *rs24[]={(const char*)0, (const char*)0,};static const char *rs25[]={(const char*)0,};static const char *rs26[]={(const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0,};static const char *rs29[]={(const char*)0,};static const char *rs30[]={(const char*)0,};static const char *rs31[]={(const char*)0,};static const char *rs32[]={(const char*)0,};static const char *rs33[]={(const char*)0,};static const char *rs34[]={(const char*)0,};static const char *rs35[]={(const char*)0,};static const char *rs36[]={(const char*)0,};static const char *rs37[]={(const char*)0,};static const char *rs38[]={(const char*)0,};static const char *rs39[]={(const char*)0,};static const char *rs40[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40}; return r;}
const sUI   *YAC_VCALL CpShape::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 0, 3, 1, 1, 0, 2, 0, 2, 0, 2, 2, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 3, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 0, 1, 0, 3, 0, 4, 2, 0}; return r;}
const char **YAC_VCALL CpShape::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL CpShape::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)CpShape___free, (void*)CpShape___getBody, (void*)CpShape___getType, (void*)CpShape___getSensor, (void*)CpShape___setSensor, (void*)CpShape___getMass, (void*)CpShape___setMass, (void*)CpShape___getDensity, (void*)CpShape___setDensity, (void*)CpShape___getMoment, (void*)CpShape___getArea, (void*)CpShape___getFilterGroup, (void*)CpShape___getGroup, (void*)CpShape___setFilterGroup, (void*)CpShape___setGroup, (void*)CpShape___getFilterCategories, (void*)CpShape___setFilterCategories, (void*)CpShape___getFilterMask, (void*)CpShape___setFilterMask, (void*)CpShape___getCollisionType, (void*)CpShape___setCollisionType, (void*)CpShape___getSurfaceVelocity, (void*)CpShape___setSurfaceVelocity, (void*)CpShape___setSurfaceVelocity2f, (void*)CpShape___getElasticity, (void*)CpShape___getE, (void*)CpShape___setElasticity, (void*)CpShape___setE, (void*)CpShape___getFriction, (void*)CpShape___getU, (void*)CpShape___setFriction, (void*)CpShape___setU, (void*)CpShape___setRenderStyle, (void*)CpShape___getRenderStyle, (void*)CpShape___setId, (void*)CpShape___getId, (void*)CpShape___setUserData, (void*)CpShape___getUserData, (void*)CpShape___getDisplayRotation, (void*)CpShape___setDisplayRotation}; return r;}
sUI          YAC_VCALL CpShape::yacConstantGetNum                (void) {return 3;}
const char **YAC_VCALL CpShape::yacConstantGetNames              (void) {static const char*r[]={"CP_CIRCLE_SHAPE", "CP_SEGMENT_SHAPE", "CP_POLY_SHAPE"}; return r;}
const sUI   *YAC_VCALL CpShape::yacConstantGetTypes              (void) {static const sUI r[]={1, 1, 1}; return r;}
yacmemptr    YAC_VCALL CpShape::yacConstantGetValues             (void) {static sUI r[3]; yacmemptr m; m.ui=r; m.si[0]=(sSI)CP_CIRCLE_SHAPE;m.si[1]=(sSI)CP_SEGMENT_SHAPE;m.si[2]=(sSI)CP_POLY_SHAPE;; return m;}

YAC_C(CpShape, "CpShape");

void  YAC_CALL CpShape___free       (void *_o                                ) {((CpShape*)_o)->_free();}
void* YAC_CALL CpShape___getBody    (void *_o                                ) {return (void*)((CpShape*)_o)->_getBody();}
sSI   YAC_CALL CpShape___getType    (void *_o                                ) {return (sSI)((CpShape*)_o)->_getType();}
sSI   YAC_CALL CpShape___getSensor  (void *_o                                ) {return (sSI)((CpShape*)_o)->_getSensor();}
void  YAC_CALL CpShape___setSensor  (void *_o, yacmemptr _args               ) {((CpShape*)_o)->_setSensor(_args.mem[0].si);}
sF32  YAC_CALL CpShape___getMass    (void *_o                                ) {return (sF32)((CpShape*)_o)->_getMass();}
void  YAC_CALL CpShape___setMass    (void *_o, yacmemptr _args               ) {((CpShape*)_o)->_setMass(_args.mem[0].f32);}
sF32  YAC_CALL CpShape___getDensity (void *_o                                ) {return (sF32)((CpShape*)_o)->_getDensity();}
void  YAC_CALL CpShape___setDensity (void *_o, yacmemptr _args               ) {((CpShape*)_o)->_setDensity(_args.mem[0].f32);}
sF32  YAC_CALL CpShape___getMoment  (void *_o                                ) {return (sF32)((CpShape*)_o)->_getMoment();}
sF32  YAC_CALL CpShape___getArea    (void *_o                                ) {return (sF32)((CpShape*)_o)->_getArea();}
sSI   YAC_CALL CpShape___getFilterGroup(void *_o                             ) {return (sSI)((CpShape*)_o)->_getFilterGroup();}
sSI   YAC_CALL CpShape___getGroup   (void *_o                                ) {return (sSI)((CpShape*)_o)->_getGroup();}
void  YAC_CALL CpShape___setFilterGroup(void *_o, yacmemptr _args            ) {((CpShape*)_o)->_setFilterGroup(_args.mem[0].si);}
void  YAC_CALL CpShape___setGroup   (void *_o, yacmemptr _args               ) {((CpShape*)_o)->_setGroup(_args.mem[0].si);}
sSI   YAC_CALL CpShape___getFilterCategories(void *_o                        ) {return (sSI)((CpShape*)_o)->_getFilterCategories();}
void  YAC_CALL CpShape___setFilterCategories(void *_o, yacmemptr _args       ) {((CpShape*)_o)->_setFilterCategories(_args.mem[0].si);}
sSI   YAC_CALL CpShape___getFilterMask(void *_o                              ) {return (sSI)((CpShape*)_o)->_getFilterMask();}
void  YAC_CALL CpShape___setFilterMask(void *_o, yacmemptr _args             ) {((CpShape*)_o)->_setFilterMask(_args.mem[0].si);}
sSI   YAC_CALL CpShape___getCollisionType(void *_o                           ) {return (sSI)((CpShape*)_o)->_getCollisionType();}
void  YAC_CALL CpShape___setCollisionType(void *_o, yacmemptr _args          ) {((CpShape*)_o)->_setCollisionType(_args.mem[0].si);}
void* YAC_CALL CpShape___getSurfaceVelocity(void *_o                         ) {return (void*)((CpShape*)_o)->_getSurfaceVelocity();}
void  YAC_CALL CpShape___setSurfaceVelocity(void *_o, yacmemptr _args        ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpShape*)_o)->_setSurfaceVelocity((CpVect*)_args.mem[0].o);}}
void  YAC_CALL CpShape___setSurfaceVelocity2f(void *_o, yacmemptr _args      ) {((CpShape*)_o)->_setSurfaceVelocity2f(_args.mem[0].f32, _args.mem[1].f32);}
sF32  YAC_CALL CpShape___getElasticity(void *_o                              ) {return (sF32)((CpShape*)_o)->_getElasticity();}
sF32  YAC_CALL CpShape___getE       (void *_o                                ) {return (sF32)((CpShape*)_o)->_getE();}
void  YAC_CALL CpShape___setElasticity(void *_o, yacmemptr _args             ) {((CpShape*)_o)->_setElasticity(_args.mem[0].f32);}
void  YAC_CALL CpShape___setE       (void *_o, yacmemptr _args               ) {((CpShape*)_o)->_setE(_args.mem[0].f32);}
sF32  YAC_CALL CpShape___getFriction(void *_o                                ) {return (sF32)((CpShape*)_o)->_getFriction();}
sF32  YAC_CALL CpShape___getU       (void *_o                                ) {return (sF32)((CpShape*)_o)->_getU();}
void  YAC_CALL CpShape___setFriction(void *_o, yacmemptr _args               ) {((CpShape*)_o)->_setFriction(_args.mem[0].f32);}
void  YAC_CALL CpShape___setU       (void *_o, yacmemptr _args               ) {((CpShape*)_o)->_setU(_args.mem[0].f32);}
void  YAC_CALL CpShape___setRenderStyle(void *_o, yacmemptr _args            ) {((CpShape*)_o)->_setRenderStyle(_args.mem[0].si);}
sSI   YAC_CALL CpShape___getRenderStyle(void *_o                             ) {return (sSI)((CpShape*)_o)->_getRenderStyle();}
void  YAC_CALL CpShape___setId      (void *_o, yacmemptr _args               ) {((CpShape*)_o)->_setId(_args.mem[0].o);}
void* YAC_CALL CpShape___getId      (void *_o                                ) {return (void*)((CpShape*)_o)->_getId();}
void  YAC_CALL CpShape___setUserData(void *_o, yacmemptr _args               ) {((CpShape*)_o)->_setUserData(_args.mem[0].o);}
void  YAC_CALL CpShape___getUserData(void *_o, YAC_Value *_r                 ) {((CpShape*)_o)->_getUserData(_r);}
sF32  YAC_CALL CpShape___getDisplayRotation(void *_o                         ) {return (sF32)((CpShape*)_o)->_getDisplayRotation();}
void  YAC_CALL CpShape___setDisplayRotation(void *_o, yacmemptr _args        ) {((CpShape*)_o)->_setDisplayRotation(_args.mem[0].f32);}
