// ---- ying_cp_CpBB.cpp: auto generated by YInG - the YAC interface generator (Sun, 26/Sep/2021 12:44:11)

void  YAC_CALL CpBB___New           (void *, yacmemptr, YAC_Value *);
void  YAC_CALL CpBB___NewForExtents (void *, yacmemptr, YAC_Value *);
void  YAC_CALL CpBB___NewForCircle  (void *, yacmemptr, YAC_Value *);
sF32  YAC_CALL CpBB___getL          (void *                        );
void  YAC_CALL CpBB___setL          (void *, yacmemptr             );
sF32  YAC_CALL CpBB___getB          (void *                        );
void  YAC_CALL CpBB___setB          (void *, yacmemptr             );
sF32  YAC_CALL CpBB___getR          (void *                        );
void  YAC_CALL CpBB___setR          (void *, yacmemptr             );
sF32  YAC_CALL CpBB___getT          (void *                        );
void  YAC_CALL CpBB___setT          (void *, yacmemptr             );
void  YAC_CALL CpBB___getString     (void *, YAC_Value *           );
void  YAC_CALL CpBB___init          (void *, yacmemptr             );
sSI   YAC_CALL CpBB___intersects    (void *, yacmemptr             );
sSI   YAC_CALL CpBB___contains      (void *, yacmemptr             );
sSI   YAC_CALL CpBB___containsVect  (void *, yacmemptr             );
void  YAC_CALL CpBB___merge         (void *, yacmemptr, YAC_Value *);
void  YAC_CALL CpBB___expand_YAC_RARG(void *, yacmemptr            );
void  YAC_CALL CpBB___expand_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL CpBB___expand_YAC_RSELF(void *, yacmemptr           );
void  YAC_CALL CpBB___getCenter_YAC_RARG(void *, yacmemptr         );
void  YAC_CALL CpBB___getCenter_YAC_RVAL(void *, YAC_Value *       );
sF32  YAC_CALL CpBB___getArea       (void *                        );
sF32  YAC_CALL CpBB___getMergedArea (void *, yacmemptr             );
sF32  YAC_CALL CpBB___segmentQuery  (void *, yacmemptr             );
sSI   YAC_CALL CpBB___intersectsSegment(void *, yacmemptr          );
void  YAC_CALL CpBB___clampVect_YAC_RARG(void *, yacmemptr         );
void  YAC_CALL CpBB___clampVect_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL CpBB___wrapVect_YAC_RARG(void *, yacmemptr          );
void  YAC_CALL CpBB___wrapVect_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL CpBB___offset_YAC_RARG(void *, yacmemptr            );
void  YAC_CALL CpBB___offset_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL CpBB___roffset_YAC_RARG(void *, yacmemptr           );
void  YAC_CALL CpBB___roffset_YAC_RVAL(void *, yacmemptr, YAC_Value *);

// ------------------ YAC class "CpBB" reflection map (implementation) ------------------
sUI          YAC_VCALL CpBB::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL CpBB::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL CpBB::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL CpBB::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL CpBB::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL CpBB::yacMethodGetNum                  (void) {return 35;}
const char **YAC_VCALL CpBB::yacMethodGetNames                (void) {static const char *r[]={"operator", "New", "NewForExtents", "NewForCircle", "getL", "setL", "getB", "setB", "getR", "setR", "getT", "setT", "getString", "init", "intersects", "contains", "containsVect", "merge", "expand_YAC_RARG", "expand_YAC_RVAL", "expand_YAC_RSELF", "getCenter_YAC_RARG", "getCenter_YAC_RVAL", "getArea", "getMergedArea", "segmentQuery", "intersectsSegment", "clampVect_YAC_RARG", "clampVect_YAC_RVAL", "wrapVect_YAC_RARG", "wrapVect_YAC_RVAL", "offset_YAC_RARG", "offset_YAC_RVAL", "roffset_YAC_RARG", "roffset_YAC_RVAL"}; return r;}
const sUI   *YAC_VCALL CpBB::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 4, 3, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 4, 1, 1, 1, 1, 2, 1, 1, 1, 0, 0, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 1}; return r;}
const sUI  **YAC_VCALL CpBB::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={2, 2, 2, 2,};static const sUI rt2[]={3, 2, 2,};static const sUI rt3[]={3, 2,};static const sUI rt4[]={0,};static const sUI rt5[]={2,};static const sUI rt6[]={0,};static const sUI rt7[]={2,};static const sUI rt8[]={0,};static const sUI rt9[]={2,};static const sUI rt10[]={0,};static const sUI rt11[]={2,};static const sUI rt12[]={0,};static const sUI rt13[]={2, 2, 2, 2,};static const sUI rt14[]={3,};static const sUI rt15[]={3,};static const sUI rt16[]={3,};static const sUI rt17[]={3,};static const sUI rt18[]={3, 3,};static const sUI rt19[]={3,};static const sUI rt20[]={3,};static const sUI rt21[]={3,};static const sUI rt22[]={0,};static const sUI rt23[]={0,};static const sUI rt24[]={3,};static const sUI rt25[]={3, 3,};static const sUI rt26[]={3, 3,};static const sUI rt27[]={3, 3,};static const sUI rt28[]={3,};static const sUI rt29[]={3, 3,};static const sUI rt30[]={3,};static const sUI rt31[]={3, 3,};static const sUI rt32[]={3,};static const sUI rt33[]={3, 3,};static const sUI rt34[]={3,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34}; return r;}
const char***YAC_VCALL CpBB::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs2[]={"CpVect", (const char*)0, (const char*)0,};static const char *rs3[]={"CpVect", (const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0, (const char*)0, (const char*)0, (const char*)0,};static const char *rs14[]={"CpBB",};static const char *rs15[]={"CpBB",};static const char *rs16[]={"CpVect",};static const char *rs17[]={"CpBB",};static const char *rs18[]={"CpVect", "CpBB",};static const char *rs19[]={"CpVect",};static const char *rs20[]={"CpVect",};static const char *rs21[]={"CpVect",};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={"CpBB",};static const char *rs25[]={"CpVect", "CpVect",};static const char *rs26[]={"CpVect", "CpVect",};static const char *rs27[]={"CpVect", "CpVect",};static const char *rs28[]={"CpVect",};static const char *rs29[]={"CpVect", "CpVect",};static const char *rs30[]={"CpVect",};static const char *rs31[]={"CpVect", "CpBB",};static const char *rs32[]={"CpVect",};static const char *rs33[]={"CpVect", "CpBB",};static const char *rs34[]={"CpVect",};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34}; return r;}
const sUI   *YAC_VCALL CpBB::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 4, 4, 4, 2, 0, 2, 0, 2, 0, 2, 0, 4, 0, 1, 1, 1, 4, 0, 4, 0, 0, 4, 2, 2, 2, 1, 0, 4, 0, 4, 0, 4, 0, 4}; return r;}
const char **YAC_VCALL CpBB::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL CpBB::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)CpBB___New, (void*)CpBB___NewForExtents, (void*)CpBB___NewForCircle, (void*)CpBB___getL, (void*)CpBB___setL, (void*)CpBB___getB, (void*)CpBB___setB, (void*)CpBB___getR, (void*)CpBB___setR, (void*)CpBB___getT, (void*)CpBB___setT, (void*)CpBB___getString, (void*)CpBB___init, (void*)CpBB___intersects, (void*)CpBB___contains, (void*)CpBB___containsVect, (void*)CpBB___merge, (void*)CpBB___expand_YAC_RARG, (void*)CpBB___expand_YAC_RVAL, (void*)CpBB___expand_YAC_RSELF, (void*)CpBB___getCenter_YAC_RARG, (void*)CpBB___getCenter_YAC_RVAL, (void*)CpBB___getArea, (void*)CpBB___getMergedArea, (void*)CpBB___segmentQuery, (void*)CpBB___intersectsSegment, (void*)CpBB___clampVect_YAC_RARG, (void*)CpBB___clampVect_YAC_RVAL, (void*)CpBB___wrapVect_YAC_RARG, (void*)CpBB___wrapVect_YAC_RVAL, (void*)CpBB___offset_YAC_RARG, (void*)CpBB___offset_YAC_RVAL, (void*)CpBB___roffset_YAC_RARG, (void*)CpBB___roffset_YAC_RVAL}; return r;}
sUI          YAC_VCALL CpBB::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL CpBB::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL CpBB::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL CpBB::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C_POOLED(CpBB, "CpBB");

void  YAC_CALL CpBB___New           (void *_o, yacmemptr _args, YAC_Value *_r) {((CpBB*)_o)->_New(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32, _r);}
void  YAC_CALL CpBB___NewForExtents (void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBB*)_o)->_NewForExtents((CpVect*)_args.mem[0].o, _args.mem[1].f32, _args.mem[2].f32, _r);}}
void  YAC_CALL CpBB___NewForCircle  (void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBB*)_o)->_NewForCircle((CpVect*)_args.mem[0].o, _args.mem[1].f32, _r);}}
sF32  YAC_CALL CpBB___getL          (void *_o                                ) {return (sF32)((CpBB*)_o)->_getL();}
void  YAC_CALL CpBB___setL          (void *_o, yacmemptr _args               ) {((CpBB*)_o)->_setL(_args.mem[0].f32);}
sF32  YAC_CALL CpBB___getB          (void *_o                                ) {return (sF32)((CpBB*)_o)->_getB();}
void  YAC_CALL CpBB___setB          (void *_o, yacmemptr _args               ) {((CpBB*)_o)->_setB(_args.mem[0].f32);}
sF32  YAC_CALL CpBB___getR          (void *_o                                ) {return (sF32)((CpBB*)_o)->_getR();}
void  YAC_CALL CpBB___setR          (void *_o, yacmemptr _args               ) {((CpBB*)_o)->_setR(_args.mem[0].f32);}
sF32  YAC_CALL CpBB___getT          (void *_o                                ) {return (sF32)((CpBB*)_o)->_getT();}
void  YAC_CALL CpBB___setT          (void *_o, yacmemptr _args               ) {((CpBB*)_o)->_setT(_args.mem[0].f32);}
void  YAC_CALL CpBB___getString     (void *_o, YAC_Value *_r                 ) {((CpBB*)_o)->_getString(_r);}
void  YAC_CALL CpBB___init          (void *_o, yacmemptr _args               ) {((CpBB*)_o)->_init(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, _args.mem[3].f32);}
sSI   YAC_CALL CpBB___intersects    (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpBB)){ return (sSI)((CpBB*)_o)->_intersects((CpBB*)_args.mem[0].o);}return 0;}
sSI   YAC_CALL CpBB___contains      (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpBB)){ return (sSI)((CpBB*)_o)->_contains((CpBB*)_args.mem[0].o);}return 0;}
sSI   YAC_CALL CpBB___containsVect  (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ return (sSI)((CpBB*)_o)->_containsVect((CpVect*)_args.mem[0].o);}return 0;}
void  YAC_CALL CpBB___merge         (void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, clid_CpBB)){ ((CpBB*)_o)->_merge((CpBB*)_args.mem[0].o, _r);}}
void  YAC_CALL CpBB___expand_YAC_RARG(void *_o, yacmemptr _args              ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpBB)){ ((CpBB*)_o)->_expand_YAC_RARG((CpVect*)_args.mem[0].o, (CpBB*)_args.mem[1].o);}}
void  YAC_CALL CpBB___expand_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBB*)_o)->_expand_YAC_RVAL((CpVect*)_args.mem[0].o, _r);}}
void  YAC_CALL CpBB___expand_YAC_RSELF(void *_o, yacmemptr _args             ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBB*)_o)->_expand_YAC_RSELF((CpVect*)_args.mem[0].o);}}
void  YAC_CALL CpBB___getCenter_YAC_RARG(void *_o, yacmemptr _args           ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBB*)_o)->_getCenter_YAC_RARG((CpVect*)_args.mem[0].o);}}
void  YAC_CALL CpBB___getCenter_YAC_RVAL(void *_o, YAC_Value *_r             ) {((CpBB*)_o)->_getCenter_YAC_RVAL(_r);}
sF32  YAC_CALL CpBB___getArea       (void *_o                                ) {return (sF32)((CpBB*)_o)->_getArea();}
sF32  YAC_CALL CpBB___getMergedArea (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpBB)){ return (sF32)((CpBB*)_o)->_getMergedArea((CpBB*)_args.mem[0].o);}return 0.0f;}
sF32  YAC_CALL CpBB___segmentQuery  (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ return (sF32)((CpBB*)_o)->_segmentQuery((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}return 0.0f;}
sSI   YAC_CALL CpBB___intersectsSegment(void *_o, yacmemptr _args            ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ return (sSI)((CpBB*)_o)->_intersectsSegment((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}return 0;}
void  YAC_CALL CpBB___clampVect_YAC_RARG(void *_o, yacmemptr _args           ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ ((CpBB*)_o)->_clampVect_YAC_RARG((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}}
void  YAC_CALL CpBB___clampVect_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBB*)_o)->_clampVect_YAC_RVAL((CpVect*)_args.mem[0].o, _r);}}
void  YAC_CALL CpBB___wrapVect_YAC_RARG(void *_o, yacmemptr _args            ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ ((CpBB*)_o)->_wrapVect_YAC_RARG((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}}
void  YAC_CALL CpBB___wrapVect_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBB*)_o)->_wrapVect_YAC_RVAL((CpVect*)_args.mem[0].o, _r);}}
void  YAC_CALL CpBB___offset_YAC_RARG(void *_o, yacmemptr _args              ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpBB)){ ((CpBB*)_o)->_offset_YAC_RARG((CpVect*)_args.mem[0].o, (CpBB*)_args.mem[1].o);}}
void  YAC_CALL CpBB___offset_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBB*)_o)->_offset_YAC_RVAL((CpVect*)_args.mem[0].o, _r);}}
void  YAC_CALL CpBB___roffset_YAC_RARG(void *_o, yacmemptr _args             ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpBB)){ ((CpBB*)_o)->_roffset_YAC_RARG((CpVect*)_args.mem[0].o, (CpBB*)_args.mem[1].o);}}
void  YAC_CALL CpBB___roffset_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBB*)_o)->_roffset_YAC_RVAL((CpVect*)_args.mem[0].o, _r);}}
