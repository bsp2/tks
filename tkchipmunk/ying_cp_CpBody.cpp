// ---- ying_cp_CpBody.cpp: auto generated by YInG - the YAC interface generator (Sun, 26/Sep/2021 12:44:11)

void  YAC_CALL CpBody___init        (void *, yacmemptr             );
void  YAC_CALL CpBody___New         (void *, yacmemptr, YAC_Value *);
void  YAC_CALL CpBody___activate    (void *                        );
void  YAC_CALL CpBody___activateStatic(void *, yacmemptr           );
void  YAC_CALL CpBody___sleep       (void *                        );
void  YAC_CALL CpBody___sleepWithGroup(void *, yacmemptr           );
sSI   YAC_CALL CpBody___isSleeping  (void *                        );
sSI   YAC_CALL CpBody___getType     (void *                        );
void  YAC_CALL CpBody___setType     (void *, yacmemptr             );
void* YAC_CALL CpBody___getPosition (void *                        );
void* YAC_CALL CpBody___getP        (void *                        );
void  YAC_CALL CpBody___setPosition (void *, yacmemptr             );
void  YAC_CALL CpBody___setP        (void *, yacmemptr             );
void* YAC_CALL CpBody___getCenterOfGravity(void *                  );
void* YAC_CALL CpBody___getCog      (void *                        );
void  YAC_CALL CpBody___setCenterOfGravity(void *, yacmemptr       );
void  YAC_CALL CpBody___setCog      (void *, yacmemptr             );
void* YAC_CALL CpBody___getVelocity (void *                        );
void* YAC_CALL CpBody___getV        (void *                        );
void  YAC_CALL CpBody___setVelocity (void *, yacmemptr             );
void  YAC_CALL CpBody___setV        (void *, yacmemptr             );
sF32  YAC_CALL CpBody___getAngularVelocity(void *                  );
sF32  YAC_CALL CpBody___getW        (void *                        );
void  YAC_CALL CpBody___setAngularVelocity(void *, yacmemptr       );
void  YAC_CALL CpBody___setW        (void *, yacmemptr             );
void* YAC_CALL CpBody___getForce    (void *                        );
void* YAC_CALL CpBody___getF        (void *                        );
void  YAC_CALL CpBody___setForce    (void *, yacmemptr             );
void  YAC_CALL CpBody___setF        (void *, yacmemptr             );
void* YAC_CALL CpBody___getRotation (void *                        );
void* YAC_CALL CpBody___getRot      (void *                        );
void  YAC_CALL CpBody___setRot      (void *, yacmemptr             );
sF32  YAC_CALL CpBody___getTorque   (void *                        );
sF32  YAC_CALL CpBody___getT        (void *                        );
void  YAC_CALL CpBody___setTorque   (void *, yacmemptr             );
void  YAC_CALL CpBody___setT        (void *, yacmemptr             );
sF32  YAC_CALL CpBody___getMass     (void *                        );
sF32  YAC_CALL CpBody___getM        (void *                        );
void  YAC_CALL CpBody___setMass     (void *, yacmemptr             );
void  YAC_CALL CpBody___setM        (void *, yacmemptr             );
sF32  YAC_CALL CpBody___getMoment   (void *                        );
sF32  YAC_CALL CpBody___getI        (void *                        );
void  YAC_CALL CpBody___setMoment   (void *, yacmemptr             );
void  YAC_CALL CpBody___setI        (void *, yacmemptr             );
sF32  YAC_CALL CpBody___getAngle    (void *                        );
sF32  YAC_CALL CpBody___getA        (void *                        );
void  YAC_CALL CpBody___setAngle    (void *, yacmemptr             );
void  YAC_CALL CpBody___setA        (void *, yacmemptr             );
void  YAC_CALL CpBody___localToWorld_YAC_RARG(void *, yacmemptr    );
void  YAC_CALL CpBody___localToWorld_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL CpBody___worldToLocal_YAC_RARG(void *, yacmemptr    );
void  YAC_CALL CpBody___worldToLocal_YAC_RVAL(void *, yacmemptr, YAC_Value *);
void  YAC_CALL CpBody___applyImpulseAtWorldPoint(void *, yacmemptr );
void  YAC_CALL CpBody___applyImpulse(void *, yacmemptr             );
void  YAC_CALL CpBody___applyImpulseAtLocalPoint(void *, yacmemptr );
void  YAC_CALL CpBody___applyForceAtWorldPoint(void *, yacmemptr   );
void  YAC_CALL CpBody___applyForce  (void *, yacmemptr             );
void  YAC_CALL CpBody___applyForceAtLocalPoint(void *, yacmemptr   );
void  YAC_CALL CpBody__getVelocityAtWorldPoint(void *, yacmemptr, YAC_Value *);
void  YAC_CALL CpBody__getVelocityAtLocalPoint(void *, yacmemptr, YAC_Value *);
void  YAC_CALL CpBody___updateVelocity(void *, yacmemptr           );
void  YAC_CALL CpBody___updatePosition(void *, yacmemptr           );
sF32  YAC_CALL CpBody___getKineticEnergy(void *                    );
void  YAC_CALL CpBody___setId       (void *, yacmemptr             );
void* YAC_CALL CpBody___getId       (void *                        );

// ------------------ YAC class "CpBody" reflection map (implementation) ------------------
sUI          YAC_VCALL CpBody::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL CpBody::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL CpBody::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL CpBody::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL CpBody::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL CpBody::yacMethodGetNum                  (void) {return 66;}
const char **YAC_VCALL CpBody::yacMethodGetNames                (void) {static const char *r[]={"operator", "init", "New", "activate", "activateStatic", "sleep", "sleepWithGroup", "isSleeping", "getType", "setType", "getPosition", "getP", "setPosition", "setP", "getCenterOfGravity", "getCog", "setCenterOfGravity", "setCog", "getVelocity", "getV", "setVelocity", "setV", "getAngularVelocity", "getW", "setAngularVelocity", "setW", "getForce", "getF", "setForce", "setF", "getRotation", "getRot", "setRot", "getTorque", "getT", "setTorque", "setT", "getMass", "getM", "setMass", "setM", "getMoment", "getI", "setMoment", "setI", "getAngle", "getA", "setAngle", "setA", "localToWorld_YAC_RARG", "localToWorld_YAC_RVAL", "worldToLocal_YAC_RARG", "worldToLocal_YAC_RVAL", "applyImpulseAtWorldPoint", "applyImpulse", "applyImpulseAtLocalPoint", "applyForceAtWorldPoint", "applyForce", "applyForceAtLocalPoint", "getVelocityAtWorldPoint", "getVelocityAtLocalPoint", "updateVelocity", "updatePosition", "getKineticEnergy", "setId", "getId"}; return r;}
const sUI   *YAC_VCALL CpBody::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 2, 2, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 3, 1, 0, 1, 0}; return r;}
const sUI  **YAC_VCALL CpBody::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={2, 2,};static const sUI rt2[]={2, 2,};static const sUI rt3[]={0,};static const sUI rt4[]={3,};static const sUI rt5[]={0,};static const sUI rt6[]={3,};static const sUI rt7[]={0,};static const sUI rt8[]={0,};static const sUI rt9[]={1,};static const sUI rt10[]={0,};static const sUI rt11[]={0,};static const sUI rt12[]={3,};static const sUI rt13[]={3,};static const sUI rt14[]={0,};static const sUI rt15[]={0,};static const sUI rt16[]={3,};static const sUI rt17[]={3,};static const sUI rt18[]={0,};static const sUI rt19[]={0,};static const sUI rt20[]={3,};static const sUI rt21[]={3,};static const sUI rt22[]={0,};static const sUI rt23[]={0,};static const sUI rt24[]={2,};static const sUI rt25[]={2,};static const sUI rt26[]={0,};static const sUI rt27[]={0,};static const sUI rt28[]={3,};static const sUI rt29[]={3,};static const sUI rt30[]={0,};static const sUI rt31[]={0,};static const sUI rt32[]={3,};static const sUI rt33[]={0,};static const sUI rt34[]={0,};static const sUI rt35[]={2,};static const sUI rt36[]={2,};static const sUI rt37[]={0,};static const sUI rt38[]={0,};static const sUI rt39[]={2,};static const sUI rt40[]={2,};static const sUI rt41[]={0,};static const sUI rt42[]={0,};static const sUI rt43[]={2,};static const sUI rt44[]={2,};static const sUI rt45[]={0,};static const sUI rt46[]={0,};static const sUI rt47[]={2,};static const sUI rt48[]={2,};static const sUI rt49[]={3, 3,};static const sUI rt50[]={3,};static const sUI rt51[]={3, 3,};static const sUI rt52[]={3,};static const sUI rt53[]={3, 3,};static const sUI rt54[]={3, 3,};static const sUI rt55[]={3, 3,};static const sUI rt56[]={3, 3,};static const sUI rt57[]={3, 3,};static const sUI rt58[]={3, 3,};static const sUI rt59[]={3,};static const sUI rt60[]={3,};static const sUI rt61[]={3, 2, 2,};static const sUI rt62[]={2,};static const sUI rt63[]={0,};static const sUI rt64[]={3,};static const sUI rt65[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40, rt41, rt42, rt43, rt44, rt45, rt46, rt47, rt48, rt49, rt50, rt51, rt52, rt53, rt54, rt55, rt56, rt57, rt58, rt59, rt60, rt61, rt62, rt63, rt64, rt65}; return r;}
const char***YAC_VCALL CpBody::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0, (const char*)0,};static const char *rs2[]={(const char*)0, (const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={"CpShape",};static const char *rs5[]={(const char*)0,};static const char *rs6[]={"CpBody",};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={(const char*)0,};static const char *rs12[]={"CpVect",};static const char *rs13[]={"CpVect",};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={"CpVect",};static const char *rs17[]={"CpVect",};static const char *rs18[]={(const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={"CpVect",};static const char *rs21[]={"CpVect",};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={(const char*)0,};static const char *rs25[]={(const char*)0,};static const char *rs26[]={(const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={"CpVect",};static const char *rs29[]={"CpVect",};static const char *rs30[]={(const char*)0,};static const char *rs31[]={(const char*)0,};static const char *rs32[]={"CpVect",};static const char *rs33[]={(const char*)0,};static const char *rs34[]={(const char*)0,};static const char *rs35[]={(const char*)0,};static const char *rs36[]={(const char*)0,};static const char *rs37[]={(const char*)0,};static const char *rs38[]={(const char*)0,};static const char *rs39[]={(const char*)0,};static const char *rs40[]={(const char*)0,};static const char *rs41[]={(const char*)0,};static const char *rs42[]={(const char*)0,};static const char *rs43[]={(const char*)0,};static const char *rs44[]={(const char*)0,};static const char *rs45[]={(const char*)0,};static const char *rs46[]={(const char*)0,};static const char *rs47[]={(const char*)0,};static const char *rs48[]={(const char*)0,};static const char *rs49[]={"CpVect", "CpVect",};static const char *rs50[]={"CpVect",};static const char *rs51[]={"CpVect", "CpVect",};static const char *rs52[]={"CpVect",};static const char *rs53[]={"CpVect", "CpVect",};static const char *rs54[]={"CpVect", "CpVect",};static const char *rs55[]={"CpVect", "CpVect",};static const char *rs56[]={"CpVect", "CpVect",};static const char *rs57[]={"CpVect", "CpVect",};static const char *rs58[]={"CpVect", "CpVect",};static const char *rs59[]={"CpVect",};static const char *rs60[]={"CpVect",};static const char *rs61[]={"CpVect", (const char*)0, (const char*)0,};static const char *rs62[]={(const char*)0,};static const char *rs63[]={(const char*)0,};static const char *rs64[]={(const char*)0,};static const char *rs65[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40, rs41, rs42, rs43, rs44, rs45, rs46, rs47, rs48, rs49, rs50, rs51, rs52, rs53, rs54, rs55, rs56, rs57, rs58, rs59, rs60, rs61, rs62, rs63, rs64, rs65}; return r;}
const sUI   *YAC_VCALL CpBody::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 0, 4, 0, 0, 0, 0, 1, 1, 0, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 2, 2, 0, 0, 3, 3, 0, 0, 3, 3, 0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 2, 0, 3}; return r;}
const char **YAC_VCALL CpBody::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL CpBody::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)CpBody___init, (void*)CpBody___New, (void*)CpBody___activate, (void*)CpBody___activateStatic, (void*)CpBody___sleep, (void*)CpBody___sleepWithGroup, (void*)CpBody___isSleeping, (void*)CpBody___getType, (void*)CpBody___setType, (void*)CpBody___getPosition, (void*)CpBody___getP, (void*)CpBody___setPosition, (void*)CpBody___setP, (void*)CpBody___getCenterOfGravity, (void*)CpBody___getCog, (void*)CpBody___setCenterOfGravity, (void*)CpBody___setCog, (void*)CpBody___getVelocity, (void*)CpBody___getV, (void*)CpBody___setVelocity, (void*)CpBody___setV, (void*)CpBody___getAngularVelocity, (void*)CpBody___getW, (void*)CpBody___setAngularVelocity, (void*)CpBody___setW, (void*)CpBody___getForce, (void*)CpBody___getF, (void*)CpBody___setForce, (void*)CpBody___setF, (void*)CpBody___getRotation, (void*)CpBody___getRot, (void*)CpBody___setRot, (void*)CpBody___getTorque, (void*)CpBody___getT, (void*)CpBody___setTorque, (void*)CpBody___setT, (void*)CpBody___getMass, (void*)CpBody___getM, (void*)CpBody___setMass, (void*)CpBody___setM, (void*)CpBody___getMoment, (void*)CpBody___getI, (void*)CpBody___setMoment, (void*)CpBody___setI, (void*)CpBody___getAngle, (void*)CpBody___getA, (void*)CpBody___setAngle, (void*)CpBody___setA, (void*)CpBody___localToWorld_YAC_RARG, (void*)CpBody___localToWorld_YAC_RVAL, (void*)CpBody___worldToLocal_YAC_RARG, (void*)CpBody___worldToLocal_YAC_RVAL, (void*)CpBody___applyImpulseAtWorldPoint, (void*)CpBody___applyImpulse, (void*)CpBody___applyImpulseAtLocalPoint, (void*)CpBody___applyForceAtWorldPoint, (void*)CpBody___applyForce, (void*)CpBody___applyForceAtLocalPoint, (void*)CpBody__getVelocityAtWorldPoint, (void*)CpBody__getVelocityAtLocalPoint, (void*)CpBody___updateVelocity, (void*)CpBody___updatePosition, (void*)CpBody___getKineticEnergy, (void*)CpBody___setId, (void*)CpBody___getId}; return r;}
sUI          YAC_VCALL CpBody::yacConstantGetNum                (void) {return 4;}
const char **YAC_VCALL CpBody::yacConstantGetNames              (void) {static const char*r[]={"INFINITY", "CP_BODY_TYPE_DYNAMIC", "CP_BODY_TYPE_KINEMATIC", "CP_BODY_TYPE_STATIC"}; return r;}
const sUI   *YAC_VCALL CpBody::yacConstantGetTypes              (void) {static const sUI r[]={2, 1, 1, 1}; return r;}
yacmemptr    YAC_VCALL CpBody::yacConstantGetValues             (void) {static sUI r[4]; yacmemptr m; m.ui=r; m.f32[0]=(sF32)INFINITY;m.si[1]=(sSI)CP_BODY_TYPE_DYNAMIC;m.si[2]=(sSI)CP_BODY_TYPE_KINEMATIC;m.si[3]=(sSI)CP_BODY_TYPE_STATIC;; return m;}

YAC_C(CpBody, "CpBody");

void  YAC_CALL CpBody___init        (void *_o, yacmemptr _args               ) {((CpBody*)_o)->_init(_args.mem[0].f32, _args.mem[1].f32);}
void  YAC_CALL CpBody___New         (void *_o, yacmemptr _args, YAC_Value *_r) {((CpBody*)_o)->_New(_args.mem[0].f32, _args.mem[1].f32, _r);}
void  YAC_CALL CpBody___activate    (void *_o                                ) {((CpBody*)_o)->_activate();}
void  YAC_CALL CpBody___activateStatic(void *_o, yacmemptr _args             ) {if(YAC_BCHK(_args.mem[0].o, clid_CpShape)){ ((CpBody*)_o)->_activateStatic((CpShape*)_args.mem[0].o);}}
void  YAC_CALL CpBody___sleep       (void *_o                                ) {((CpBody*)_o)->_sleep();}
void  YAC_CALL CpBody___sleepWithGroup(void *_o, yacmemptr _args             ) {if(YAC_BCHK(_args.mem[0].o, clid_CpBody)){ ((CpBody*)_o)->_sleepWithGroup((CpBody*)_args.mem[0].o);}}
sSI   YAC_CALL CpBody___isSleeping  (void *_o                                ) {return (sSI)((CpBody*)_o)->_isSleeping();}
sSI   YAC_CALL CpBody___getType     (void *_o                                ) {return (sSI)((CpBody*)_o)->_getType();}
void  YAC_CALL CpBody___setType     (void *_o, yacmemptr _args               ) {((CpBody*)_o)->_setType(_args.mem[0].si);}
void* YAC_CALL CpBody___getPosition (void *_o                                ) {return (void*)((CpBody*)_o)->_getPosition();}
void* YAC_CALL CpBody___getP        (void *_o                                ) {return (void*)((CpBody*)_o)->_getP();}
void  YAC_CALL CpBody___setPosition (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBody*)_o)->_setPosition((CpVect*)_args.mem[0].o);}}
void  YAC_CALL CpBody___setP        (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBody*)_o)->_setP((CpVect*)_args.mem[0].o);}}
void* YAC_CALL CpBody___getCenterOfGravity(void *_o                          ) {return (void*)((CpBody*)_o)->_getCenterOfGravity();}
void* YAC_CALL CpBody___getCog      (void *_o                                ) {return (void*)((CpBody*)_o)->_getCog();}
void  YAC_CALL CpBody___setCenterOfGravity(void *_o, yacmemptr _args         ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBody*)_o)->_setCenterOfGravity((CpVect*)_args.mem[0].o);}}
void  YAC_CALL CpBody___setCog      (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBody*)_o)->_setCog((CpVect*)_args.mem[0].o);}}
void* YAC_CALL CpBody___getVelocity (void *_o                                ) {return (void*)((CpBody*)_o)->_getVelocity();}
void* YAC_CALL CpBody___getV        (void *_o                                ) {return (void*)((CpBody*)_o)->_getV();}
void  YAC_CALL CpBody___setVelocity (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBody*)_o)->_setVelocity((CpVect*)_args.mem[0].o);}}
void  YAC_CALL CpBody___setV        (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBody*)_o)->_setV((CpVect*)_args.mem[0].o);}}
sF32  YAC_CALL CpBody___getAngularVelocity(void *_o                          ) {return (sF32)((CpBody*)_o)->_getAngularVelocity();}
sF32  YAC_CALL CpBody___getW        (void *_o                                ) {return (sF32)((CpBody*)_o)->_getW();}
void  YAC_CALL CpBody___setAngularVelocity(void *_o, yacmemptr _args         ) {((CpBody*)_o)->_setAngularVelocity(_args.mem[0].f32);}
void  YAC_CALL CpBody___setW        (void *_o, yacmemptr _args               ) {((CpBody*)_o)->_setW(_args.mem[0].f32);}
void* YAC_CALL CpBody___getForce    (void *_o                                ) {return (void*)((CpBody*)_o)->_getForce();}
void* YAC_CALL CpBody___getF        (void *_o                                ) {return (void*)((CpBody*)_o)->_getF();}
void  YAC_CALL CpBody___setForce    (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBody*)_o)->_setForce((CpVect*)_args.mem[0].o);}}
void  YAC_CALL CpBody___setF        (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBody*)_o)->_setF((CpVect*)_args.mem[0].o);}}
void* YAC_CALL CpBody___getRotation (void *_o                                ) {return (void*)((CpBody*)_o)->_getRotation();}
void* YAC_CALL CpBody___getRot      (void *_o                                ) {return (void*)((CpBody*)_o)->_getRot();}
void  YAC_CALL CpBody___setRot      (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBody*)_o)->_setRot((CpVect*)_args.mem[0].o);}}
sF32  YAC_CALL CpBody___getTorque   (void *_o                                ) {return (sF32)((CpBody*)_o)->_getTorque();}
sF32  YAC_CALL CpBody___getT        (void *_o                                ) {return (sF32)((CpBody*)_o)->_getT();}
void  YAC_CALL CpBody___setTorque   (void *_o, yacmemptr _args               ) {((CpBody*)_o)->_setTorque(_args.mem[0].f32);}
void  YAC_CALL CpBody___setT        (void *_o, yacmemptr _args               ) {((CpBody*)_o)->_setT(_args.mem[0].f32);}
sF32  YAC_CALL CpBody___getMass     (void *_o                                ) {return (sF32)((CpBody*)_o)->_getMass();}
sF32  YAC_CALL CpBody___getM        (void *_o                                ) {return (sF32)((CpBody*)_o)->_getM();}
void  YAC_CALL CpBody___setMass     (void *_o, yacmemptr _args               ) {((CpBody*)_o)->_setMass(_args.mem[0].f32);}
void  YAC_CALL CpBody___setM        (void *_o, yacmemptr _args               ) {((CpBody*)_o)->_setM(_args.mem[0].f32);}
sF32  YAC_CALL CpBody___getMoment   (void *_o                                ) {return (sF32)((CpBody*)_o)->_getMoment();}
sF32  YAC_CALL CpBody___getI        (void *_o                                ) {return (sF32)((CpBody*)_o)->_getI();}
void  YAC_CALL CpBody___setMoment   (void *_o, yacmemptr _args               ) {((CpBody*)_o)->_setMoment(_args.mem[0].f32);}
void  YAC_CALL CpBody___setI        (void *_o, yacmemptr _args               ) {((CpBody*)_o)->_setI(_args.mem[0].f32);}
sF32  YAC_CALL CpBody___getAngle    (void *_o                                ) {return (sF32)((CpBody*)_o)->_getAngle();}
sF32  YAC_CALL CpBody___getA        (void *_o                                ) {return (sF32)((CpBody*)_o)->_getA();}
void  YAC_CALL CpBody___setAngle    (void *_o, yacmemptr _args               ) {((CpBody*)_o)->_setAngle(_args.mem[0].f32);}
void  YAC_CALL CpBody___setA        (void *_o, yacmemptr _args               ) {((CpBody*)_o)->_setA(_args.mem[0].f32);}
void  YAC_CALL CpBody___localToWorld_YAC_RARG(void *_o, yacmemptr _args      ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ ((CpBody*)_o)->_localToWorld_YAC_RARG((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}}
void  YAC_CALL CpBody___localToWorld_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBody*)_o)->_localToWorld_YAC_RVAL((CpVect*)_args.mem[0].o, _r);}}
void  YAC_CALL CpBody___worldToLocal_YAC_RARG(void *_o, yacmemptr _args      ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ ((CpBody*)_o)->_worldToLocal_YAC_RARG((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}}
void  YAC_CALL CpBody___worldToLocal_YAC_RVAL(void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBody*)_o)->_worldToLocal_YAC_RVAL((CpVect*)_args.mem[0].o, _r);}}
void  YAC_CALL CpBody___applyImpulseAtWorldPoint(void *_o, yacmemptr _args   ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ ((CpBody*)_o)->_applyImpulseAtWorldPoint((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}}
void  YAC_CALL CpBody___applyImpulse(void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ ((CpBody*)_o)->_applyImpulse((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}}
void  YAC_CALL CpBody___applyImpulseAtLocalPoint(void *_o, yacmemptr _args   ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ ((CpBody*)_o)->_applyImpulseAtLocalPoint((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}}
void  YAC_CALL CpBody___applyForceAtWorldPoint(void *_o, yacmemptr _args     ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ ((CpBody*)_o)->_applyForceAtWorldPoint((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}}
void  YAC_CALL CpBody___applyForce  (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ ((CpBody*)_o)->_applyForce((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}}
void  YAC_CALL CpBody___applyForceAtLocalPoint(void *_o, yacmemptr _args     ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ ((CpBody*)_o)->_applyForceAtLocalPoint((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}}
void  YAC_CALL CpBody__getVelocityAtWorldPoint(void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBody*)_o)->getVelocityAtWorldPoint((CpVect*)_args.mem[0].o, _r);}}
void  YAC_CALL CpBody__getVelocityAtLocalPoint(void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBody*)_o)->getVelocityAtLocalPoint((CpVect*)_args.mem[0].o, _r);}}
void  YAC_CALL CpBody___updateVelocity(void *_o, yacmemptr _args             ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpBody*)_o)->_updateVelocity((CpVect*)_args.mem[0].o, _args.mem[1].f32, _args.mem[2].f32);}}
void  YAC_CALL CpBody___updatePosition(void *_o, yacmemptr _args             ) {((CpBody*)_o)->_updatePosition(_args.mem[0].f32);}
sF32  YAC_CALL CpBody___getKineticEnergy(void *_o                            ) {return (sF32)((CpBody*)_o)->_getKineticEnergy();}
void  YAC_CALL CpBody___setId       (void *_o, yacmemptr _args               ) {((CpBody*)_o)->_setId(_args.mem[0].o);}
void* YAC_CALL CpBody___getId       (void *_o                                ) {return (void*)((CpBody*)_o)->_getId();}
