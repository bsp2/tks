// ---- ying_cp_CpCircleShape.cpp: auto generated by YInG - the YAC interface generator (Sun, 26/Sep/2021 12:44:11)

void  YAC_CALL CpCircleShape___initCircle(void *, yacmemptr        );
void  YAC_CALL CpCircleShape___New  (void *, yacmemptr, YAC_Value *);
void* YAC_CALL CpCircleShape___getC (void *                        );
void  YAC_CALL CpCircleShape___setC (void *, yacmemptr             );
sF32  YAC_CALL CpCircleShape___getR (void *                        );
void  YAC_CALL CpCircleShape___setR (void *, yacmemptr             );

// ------------------ YAC class "CpCircleShape" reflection map (implementation) ------------------
sUI          YAC_VCALL CpCircleShape::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL CpCircleShape::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL CpCircleShape::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL CpCircleShape::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL CpCircleShape::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL CpCircleShape::yacMethodGetNum                  (void) {return 7;}
const char **YAC_VCALL CpCircleShape::yacMethodGetNames                (void) {static const char *r[]={"operator", "initCircle", "New", "getC", "setC", "getR", "setR"}; return r;}
const sUI   *YAC_VCALL CpCircleShape::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 3, 3, 0, 1, 0, 1}; return r;}
const sUI  **YAC_VCALL CpCircleShape::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={3, 2, 3,};static const sUI rt2[]={3, 2, 3,};static const sUI rt3[]={0,};static const sUI rt4[]={3,};static const sUI rt5[]={0,};static const sUI rt6[]={2,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6}; return r;}
const char***YAC_VCALL CpCircleShape::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={"CpBody", (const char*)0, "CpVect",};static const char *rs2[]={"CpBody", (const char*)0, "CpVect",};static const char *rs3[]={(const char*)0,};static const char *rs4[]={"CpVect",};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6}; return r;}
const sUI   *YAC_VCALL CpCircleShape::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 0, 4, 3, 0, 2, 0}; return r;}
const char **YAC_VCALL CpCircleShape::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL CpCircleShape::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)CpCircleShape___initCircle, (void*)CpCircleShape___New, (void*)CpCircleShape___getC, (void*)CpCircleShape___setC, (void*)CpCircleShape___getR, (void*)CpCircleShape___setR}; return r;}
sUI          YAC_VCALL CpCircleShape::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL CpCircleShape::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL CpCircleShape::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL CpCircleShape::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(CpCircleShape, "CpCircleShape");

void  YAC_CALL CpCircleShape___initCircle(void *_o, yacmemptr _args          ) {if(YAC_BCHK(_args.mem[0].o, clid_CpBody))if(YAC_BCHK(_args.mem[2].o, clid_CpVect)){ ((CpCircleShape*)_o)->_initCircle((CpBody*)_args.mem[0].o, _args.mem[1].f32, (CpVect*)_args.mem[2].o);}}
void  YAC_CALL CpCircleShape___New  (void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, clid_CpBody))if(YAC_BCHK(_args.mem[2].o, clid_CpVect)){ ((CpCircleShape*)_o)->_New((CpBody*)_args.mem[0].o, _args.mem[1].f32, (CpVect*)_args.mem[2].o, _r);}}
void* YAC_CALL CpCircleShape___getC (void *_o                                ) {return (void*)((CpCircleShape*)_o)->_getC();}
void  YAC_CALL CpCircleShape___setC (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ ((CpCircleShape*)_o)->_setC((CpVect*)_args.mem[0].o);}}
sF32  YAC_CALL CpCircleShape___getR (void *_o                                ) {return (sF32)((CpCircleShape*)_o)->_getR();}
void  YAC_CALL CpCircleShape___setR (void *_o, yacmemptr _args               ) {((CpCircleShape*)_o)->_setR(_args.mem[0].f32);}
