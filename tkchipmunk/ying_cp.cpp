// ---- auto generated by YInG - the YAC interface generator (Sun, 26/Sep/2021 12:44:11)
#ifndef __YAC__cp_h__
#define __YAC__cp_h__

sUI                                          clid_CpVect;
YAC_Template <CpVect>                          *t_CpVect;
sUI                                          clid_CpBB;
YAC_Template <CpBB>                            *t_CpBB;
sUI                                          clid_CpTransform;
YAC_Template <CpTransform>                     *t_CpTransform;
sUI                                          clid_CpArbiter;
YAC_Template <CpArbiter>                       *t_CpArbiter;
sUI                                          clid_CpSpace;
YAC_Template <CpSpace>                         *t_CpSpace;
sUI                                          clid_CpBody;
YAC_Template <CpBody>                          *t_CpBody;
sUI                                          clid_CpShape;
YAC_RTemplate<CpShape>                         *t_CpShape;
sUI                                          clid_CpCircleShape;
YAC_Template <CpCircleShape>                   *t_CpCircleShape;
sUI                                          clid_CpSegmentShape;
YAC_Template <CpSegmentShape>                  *t_CpSegmentShape;
sUI                                          clid_CpPolyShape;
YAC_Template <CpPolyShape>                     *t_CpPolyShape;
sUI                                          clid_CpConstraint;
YAC_RTemplate<CpConstraint>                    *t_CpConstraint;
sUI                                          clid_CpJoint;
YAC_RTemplate<CpJoint>                         *t_CpJoint;
sUI                                          clid_CpPinJoint;
YAC_Template <CpPinJoint>                      *t_CpPinJoint;
sUI                                          clid_CpSlideJoint;
YAC_Template <CpSlideJoint>                    *t_CpSlideJoint;
sUI                                          clid_CpPivotJoint;
YAC_Template <CpPivotJoint>                    *t_CpPivotJoint;
sUI                                          clid_CpGrooveJoint;
YAC_Template <CpGrooveJoint>                   *t_CpGrooveJoint;
sUI                                          clid_CpDampedSpring;
YAC_Template <CpDampedSpring>                  *t_CpDampedSpring;
sUI                                          clid_CpGearJoint;
YAC_Template <CpGearJoint>                     *t_CpGearJoint;
sUI                                          clid_CpRotaryLimitJoint;
YAC_Template <CpRotaryLimitJoint>              *t_CpRotaryLimitJoint;
sUI                                          clid_CpRatchetJoint;
YAC_Template <CpRatchetJoint>                  *t_CpRatchetJoint;

void YAC_CALL YAC_Init_cp(YAC_Host *_host) {
	// --------------------------------- classes ---------------------------------
	   t_CpVect                   =new YAC_Template <CpVect>(_host);
	clid_CpVect                   =                t_CpVect->ctemplate.class_ID;
	   t_CpBB                     =new YAC_Template <CpBB>(_host);
	clid_CpBB                     =                t_CpBB->ctemplate.class_ID;
	   t_CpTransform              =new YAC_Template <CpTransform>(_host);
	clid_CpTransform              =                t_CpTransform->ctemplate.class_ID;
	   t_CpArbiter                =new YAC_Template <CpArbiter>(_host);
	clid_CpArbiter                =                t_CpArbiter->ctemplate.class_ID;
	   t_CpSpace                  =new YAC_Template <CpSpace>(_host);
	clid_CpSpace                  =                t_CpSpace->ctemplate.class_ID;
	   t_CpBody                   =new YAC_Template <CpBody>(_host);
	clid_CpBody                   =                t_CpBody->ctemplate.class_ID;
	   t_CpShape                  =new YAC_RTemplate<CpShape>(_host);
	clid_CpShape                  =                t_CpShape->ctemplate.class_ID;
	   t_CpCircleShape            =new YAC_Template <CpCircleShape>(_host);
	clid_CpCircleShape            =                t_CpCircleShape->ctemplate.class_ID;
	   t_CpSegmentShape           =new YAC_Template <CpSegmentShape>(_host);
	clid_CpSegmentShape           =                t_CpSegmentShape->ctemplate.class_ID;
	   t_CpPolyShape              =new YAC_Template <CpPolyShape>(_host);
	clid_CpPolyShape              =                t_CpPolyShape->ctemplate.class_ID;
	   t_CpConstraint             =new YAC_RTemplate<CpConstraint>(_host);
	clid_CpConstraint             =                t_CpConstraint->ctemplate.class_ID;
	   t_CpJoint                  =new YAC_RTemplate<CpJoint>(_host);
	clid_CpJoint                  =                t_CpJoint->ctemplate.class_ID;
	   t_CpPinJoint               =new YAC_Template <CpPinJoint>(_host);
	clid_CpPinJoint               =                t_CpPinJoint->ctemplate.class_ID;
	   t_CpSlideJoint             =new YAC_Template <CpSlideJoint>(_host);
	clid_CpSlideJoint             =                t_CpSlideJoint->ctemplate.class_ID;
	   t_CpPivotJoint             =new YAC_Template <CpPivotJoint>(_host);
	clid_CpPivotJoint             =                t_CpPivotJoint->ctemplate.class_ID;
	   t_CpGrooveJoint            =new YAC_Template <CpGrooveJoint>(_host);
	clid_CpGrooveJoint            =                t_CpGrooveJoint->ctemplate.class_ID;
	   t_CpDampedSpring           =new YAC_Template <CpDampedSpring>(_host);
	clid_CpDampedSpring           =                t_CpDampedSpring->ctemplate.class_ID;
	   t_CpGearJoint              =new YAC_Template <CpGearJoint>(_host);
	clid_CpGearJoint              =                t_CpGearJoint->ctemplate.class_ID;
	   t_CpRotaryLimitJoint       =new YAC_Template <CpRotaryLimitJoint>(_host);
	clid_CpRotaryLimitJoint       =                t_CpRotaryLimitJoint->ctemplate.class_ID;
	   t_CpRatchetJoint           =new YAC_Template <CpRatchetJoint>(_host);
	clid_CpRatchetJoint           =                t_CpRatchetJoint->ctemplate.class_ID;
	// -------------------------------- functions --------------------------------
	static const sUI   __APIC___cpv_arg_types                     []={2, 2,};
	static const sUI   __APIC___cpvpin_arg_types                  []={2, 2,};
	static const sUI   __APIC___cpvadd_YAC_RVAL_arg_types         []={3, 3,};
	static const sUI   __APIC___cpvadd_YAC_RARG_arg_types         []={3, 3, 3,};
	static const sUI   __APIC___cpvsub_YAC_RVAL_arg_types         []={3, 3,};
	static const sUI   __APIC___cpvsub_YAC_RARG_arg_types         []={3, 3, 3,};
	static const sUI   __APIC___cpvmult_YAC_RVAL_arg_types        []={3, 2,};
	static const sUI   __APIC___cpvmult_YAC_RARG_arg_types        []={3, 2, 3,};
	static const sUI   __APIC___cpvproject_YAC_RVAL_arg_types     []={3, 3,};
	static const sUI   __APIC___cpvproject_YAC_RARG_arg_types     []={3, 3, 3,};
	static const sUI   __APIC___cpvrotate_YAC_RVAL_arg_types      []={3, 3,};
	static const sUI   __APIC___cpvrotate_YAC_RARG_arg_types      []={3, 3, 3,};
	static const sUI   __APIC___cpvunrotate_YAC_RVAL_arg_types    []={3, 3,};
	static const sUI   __APIC___cpvunrotate_YAC_RARG_arg_types    []={3, 3, 3,};
	static const sUI   __APIC___cpvneg_YAC_RVAL_arg_types         []={3,};
	static const sUI   __APIC___cpvneg_YAC_RARG_arg_types         []={3, 3,};
	static const sUI   __APIC___cpvperp_YAC_RVAL_arg_types        []={3,};
	static const sUI   __APIC___cpvperp_YAC_RARG_arg_types        []={3, 3,};
	static const sUI   __APIC___cpvnormalize_YAC_RVAL_arg_types   []={3,};
	static const sUI   __APIC___cpvnormalize_YAC_RARG_arg_types   []={3, 3,};
	static const sUI   __APIC___cpvforangle_YAC_RVAL_arg_types    []={2,};
	static const sUI   __APIC___cpvforangle_YAC_RARG_arg_types    []={2, 3,};
	static const sUI   __APIC___cpvtoangle_arg_types              []={3,};
	static const sUI   __APIC___cpvdot_arg_types                  []={3, 3,};
	static const sUI   __APIC___cpvcross_arg_types                []={3, 3,};
	static const sUI   __APIC___cpvlength_arg_types               []={3,};
	static const sUI   __APIC___cpvlengthsq_arg_types             []={3,};
	static const sUI   __APIC___cpMomentForCircle_arg_types       []={2, 2, 2, 3,};
	static const sUI   __APIC___cpMomentForPoly_arg_types         []={2, 3, 3, 2,};
	static const sUI   __APIC___cpSpaceGetStaticBody_arg_types    []={3,};
	static const char *__APIC___cpv_arg_otypes                    []={"", "",};
	static const char *__APIC___cpvpin_arg_otypes                 []={"", "",};
	static const char *__APIC___cpvadd_YAC_RVAL_arg_otypes        []={"CpVect", "CpVect",};
	static const char *__APIC___cpvadd_YAC_RARG_arg_otypes        []={"CpVect", "CpVect", "CpVect",};
	static const char *__APIC___cpvsub_YAC_RVAL_arg_otypes        []={"CpVect", "CpVect",};
	static const char *__APIC___cpvsub_YAC_RARG_arg_otypes        []={"CpVect", "CpVect", "CpVect",};
	static const char *__APIC___cpvmult_YAC_RVAL_arg_otypes       []={"CpVect", "",};
	static const char *__APIC___cpvmult_YAC_RARG_arg_otypes       []={"CpVect", "", "CpVect",};
	static const char *__APIC___cpvproject_YAC_RVAL_arg_otypes    []={"CpVect", "CpVect",};
	static const char *__APIC___cpvproject_YAC_RARG_arg_otypes    []={"CpVect", "CpVect", "CpVect",};
	static const char *__APIC___cpvrotate_YAC_RVAL_arg_otypes     []={"CpVect", "CpVect",};
	static const char *__APIC___cpvrotate_YAC_RARG_arg_otypes     []={"CpVect", "CpVect", "CpVect",};
	static const char *__APIC___cpvunrotate_YAC_RVAL_arg_otypes   []={"CpVect", "CpVect",};
	static const char *__APIC___cpvunrotate_YAC_RARG_arg_otypes   []={"CpVect", "CpVect", "CpVect",};
	static const char *__APIC___cpvneg_YAC_RVAL_arg_otypes        []={"CpVect",};
	static const char *__APIC___cpvneg_YAC_RARG_arg_otypes        []={"CpVect", "CpVect",};
	static const char *__APIC___cpvperp_YAC_RVAL_arg_otypes       []={"CpVect",};
	static const char *__APIC___cpvperp_YAC_RARG_arg_otypes       []={"CpVect", "CpVect",};
	static const char *__APIC___cpvnormalize_YAC_RVAL_arg_otypes  []={"CpVect",};
	static const char *__APIC___cpvnormalize_YAC_RARG_arg_otypes  []={"CpVect", "CpVect",};
	static const char *__APIC___cpvforangle_YAC_RVAL_arg_otypes   []={"",};
	static const char *__APIC___cpvforangle_YAC_RARG_arg_otypes   []={"", "CpVect",};
	static const char *__APIC___cpvtoangle_arg_otypes             []={"CpVect",};
	static const char *__APIC___cpvdot_arg_otypes                 []={"CpVect", "CpVect",};
	static const char *__APIC___cpvcross_arg_otypes               []={"CpVect", "CpVect",};
	static const char *__APIC___cpvlength_arg_otypes              []={"CpVect",};
	static const char *__APIC___cpvlengthsq_arg_otypes            []={"CpVect",};
	static const char *__APIC___cpMomentForCircle_arg_otypes      []={"", "", "", "CpVect",};
	static const char *__APIC___cpMomentForPoly_arg_otypes        []={"", "", "CpVect", "",};
	static const char *__APIC___cpSpaceGetStaticBody_arg_otypes   []={"CpSpace",};
	_host->yacRegisterFunction((void*)__APIC___cpv, "cpv", 4, "", 2, __APIC___cpv_arg_types, __APIC___cpv_arg_otypes, 4);
	_host->yacRegisterFunction((void*)__APIC___cpvpin, "cpvpin", 4, "", 2, __APIC___cpvpin_arg_types, __APIC___cpvpin_arg_otypes, 4);
	_host->yacRegisterFunction((void*)__APIC___cpvadd_YAC_RVAL, "cpvadd_YAC_RVAL", 4, "", 2, __APIC___cpvadd_YAC_RVAL_arg_types, __APIC___cpvadd_YAC_RVAL_arg_otypes, 4);
	_host->yacRegisterFunction((void*)__APIC___cpvadd_YAC_RARG, "cpvadd_YAC_RARG", 0, "", 3, __APIC___cpvadd_YAC_RARG_arg_types, __APIC___cpvadd_YAC_RARG_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC___cpvsub_YAC_RVAL, "cpvsub_YAC_RVAL", 4, "", 2, __APIC___cpvsub_YAC_RVAL_arg_types, __APIC___cpvsub_YAC_RVAL_arg_otypes, 4);
	_host->yacRegisterFunction((void*)__APIC___cpvsub_YAC_RARG, "cpvsub_YAC_RARG", 0, "", 3, __APIC___cpvsub_YAC_RARG_arg_types, __APIC___cpvsub_YAC_RARG_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC___cpvmult_YAC_RVAL, "cpvmult_YAC_RVAL", 4, "", 2, __APIC___cpvmult_YAC_RVAL_arg_types, __APIC___cpvmult_YAC_RVAL_arg_otypes, 4);
	_host->yacRegisterFunction((void*)__APIC___cpvmult_YAC_RARG, "cpvmult_YAC_RARG", 0, "", 3, __APIC___cpvmult_YAC_RARG_arg_types, __APIC___cpvmult_YAC_RARG_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC___cpvproject_YAC_RVAL, "cpvproject_YAC_RVAL", 4, "", 2, __APIC___cpvproject_YAC_RVAL_arg_types, __APIC___cpvproject_YAC_RVAL_arg_otypes, 4);
	_host->yacRegisterFunction((void*)__APIC___cpvproject_YAC_RARG, "cpvproject_YAC_RARG", 0, "", 3, __APIC___cpvproject_YAC_RARG_arg_types, __APIC___cpvproject_YAC_RARG_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC___cpvrotate_YAC_RVAL, "cpvrotate_YAC_RVAL", 4, "", 2, __APIC___cpvrotate_YAC_RVAL_arg_types, __APIC___cpvrotate_YAC_RVAL_arg_otypes, 4);
	_host->yacRegisterFunction((void*)__APIC___cpvrotate_YAC_RARG, "cpvrotate_YAC_RARG", 0, "", 3, __APIC___cpvrotate_YAC_RARG_arg_types, __APIC___cpvrotate_YAC_RARG_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC___cpvunrotate_YAC_RVAL, "cpvunrotate_YAC_RVAL", 4, "", 2, __APIC___cpvunrotate_YAC_RVAL_arg_types, __APIC___cpvunrotate_YAC_RVAL_arg_otypes, 4);
	_host->yacRegisterFunction((void*)__APIC___cpvunrotate_YAC_RARG, "cpvunrotate_YAC_RARG", 0, "", 3, __APIC___cpvunrotate_YAC_RARG_arg_types, __APIC___cpvunrotate_YAC_RARG_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC___cpvneg_YAC_RVAL, "cpvneg_YAC_RVAL", 4, "", 1, __APIC___cpvneg_YAC_RVAL_arg_types, __APIC___cpvneg_YAC_RVAL_arg_otypes, 4);
	_host->yacRegisterFunction((void*)__APIC___cpvneg_YAC_RARG, "cpvneg_YAC_RARG", 0, "", 2, __APIC___cpvneg_YAC_RARG_arg_types, __APIC___cpvneg_YAC_RARG_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC___cpvperp_YAC_RVAL, "cpvperp_YAC_RVAL", 4, "", 1, __APIC___cpvperp_YAC_RVAL_arg_types, __APIC___cpvperp_YAC_RVAL_arg_otypes, 4);
	_host->yacRegisterFunction((void*)__APIC___cpvperp_YAC_RARG, "cpvperp_YAC_RARG", 0, "", 2, __APIC___cpvperp_YAC_RARG_arg_types, __APIC___cpvperp_YAC_RARG_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC___cpvnormalize_YAC_RVAL, "cpvnormalize_YAC_RVAL", 4, "", 1, __APIC___cpvnormalize_YAC_RVAL_arg_types, __APIC___cpvnormalize_YAC_RVAL_arg_otypes, 4);
	_host->yacRegisterFunction((void*)__APIC___cpvnormalize_YAC_RARG, "cpvnormalize_YAC_RARG", 0, "", 2, __APIC___cpvnormalize_YAC_RARG_arg_types, __APIC___cpvnormalize_YAC_RARG_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC___cpvforangle_YAC_RVAL, "cpvforangle_YAC_RVAL", 4, "", 1, __APIC___cpvforangle_YAC_RVAL_arg_types, __APIC___cpvforangle_YAC_RVAL_arg_otypes, 4);
	_host->yacRegisterFunction((void*)__APIC___cpvforangle_YAC_RARG, "cpvforangle_YAC_RARG", 0, "", 2, __APIC___cpvforangle_YAC_RARG_arg_types, __APIC___cpvforangle_YAC_RARG_arg_otypes, 0);
	_host->yacRegisterFunction((void*)__APIC___cpvtoangle, "cpvtoangle", 2, "", 1, __APIC___cpvtoangle_arg_types, __APIC___cpvtoangle_arg_otypes, 2);
	_host->yacRegisterFunction((void*)__APIC___cpvdot, "cpvdot", 2, "", 2, __APIC___cpvdot_arg_types, __APIC___cpvdot_arg_otypes, 2);
	_host->yacRegisterFunction((void*)__APIC___cpvcross, "cpvcross", 2, "", 2, __APIC___cpvcross_arg_types, __APIC___cpvcross_arg_otypes, 2);
	_host->yacRegisterFunction((void*)__APIC___cpvlength, "cpvlength", 2, "", 1, __APIC___cpvlength_arg_types, __APIC___cpvlength_arg_otypes, 2);
	_host->yacRegisterFunction((void*)__APIC___cpvlengthsq, "cpvlengthsq", 2, "", 1, __APIC___cpvlengthsq_arg_types, __APIC___cpvlengthsq_arg_otypes, 2);
	_host->yacRegisterFunction((void*)__APIC___cpMomentForCircle, "cpMomentForCircle", 2, "", 4, __APIC___cpMomentForCircle_arg_types, __APIC___cpMomentForCircle_arg_otypes, 2);
	_host->yacRegisterFunction((void*)__APIC___cpMomentForPoly, "cpMomentForPoly", 2, "", 4, __APIC___cpMomentForPoly_arg_types, __APIC___cpMomentForPoly_arg_otypes, 2);
	_host->yacRegisterFunction((void*)__APIC___cpSpaceGetStaticBody, "cpSpaceGetStaticBody", 4, "", 1, __APIC___cpSpaceGetStaticBody_arg_types, __APIC___cpSpaceGetStaticBody_arg_otypes, 4);

}
void  YAC_CALL __APIC___cpv         (yacmemptr _args, YAC_Value *_r          ) {_cpv(_args.mem[0].f32, _args.mem[1].f32, _r);}
void  YAC_CALL __APIC___cpvpin      (yacmemptr _args, YAC_Value *_r          ) {_cpvpin(_args.mem[0].f32, _args.mem[1].f32, _r);}
void  YAC_CALL __APIC___cpvadd_YAC_RVAL(yacmemptr _args, YAC_Value *_r       ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ _cpvadd_YAC_RVAL((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o, _r);}}
void  YAC_CALL __APIC___cpvadd_YAC_RARG(yacmemptr _args                      ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect))if(YAC_BCHK(_args.mem[2].o, clid_CpVect)){ _cpvadd_YAC_RARG((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o, (CpVect*)_args.mem[2].o);}}
void  YAC_CALL __APIC___cpvsub_YAC_RVAL(yacmemptr _args, YAC_Value *_r       ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ _cpvsub_YAC_RVAL((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o, _r);}}
void  YAC_CALL __APIC___cpvsub_YAC_RARG(yacmemptr _args                      ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect))if(YAC_BCHK(_args.mem[2].o, clid_CpVect)){ _cpvsub_YAC_RARG((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o, (CpVect*)_args.mem[2].o);}}
void  YAC_CALL __APIC___cpvmult_YAC_RVAL(yacmemptr _args, YAC_Value *_r      ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ _cpvmult_YAC_RVAL((CpVect*)_args.mem[0].o, _args.mem[1].f32, _r);}}
void  YAC_CALL __APIC___cpvmult_YAC_RARG(yacmemptr _args                     ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[2].o, clid_CpVect)){ _cpvmult_YAC_RARG((CpVect*)_args.mem[0].o, _args.mem[1].f32, (CpVect*)_args.mem[2].o);}}
void  YAC_CALL __APIC___cpvproject_YAC_RVAL(yacmemptr _args, YAC_Value *_r   ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ _cpvproject_YAC_RVAL((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o, _r);}}
void  YAC_CALL __APIC___cpvproject_YAC_RARG(yacmemptr _args                  ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect))if(YAC_BCHK(_args.mem[2].o, clid_CpVect)){ _cpvproject_YAC_RARG((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o, (CpVect*)_args.mem[2].o);}}
void  YAC_CALL __APIC___cpvrotate_YAC_RVAL(yacmemptr _args, YAC_Value *_r    ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ _cpvrotate_YAC_RVAL((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o, _r);}}
void  YAC_CALL __APIC___cpvrotate_YAC_RARG(yacmemptr _args                   ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect))if(YAC_BCHK(_args.mem[2].o, clid_CpVect)){ _cpvrotate_YAC_RARG((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o, (CpVect*)_args.mem[2].o);}}
void  YAC_CALL __APIC___cpvunrotate_YAC_RVAL(yacmemptr _args, YAC_Value *_r  ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ _cpvunrotate_YAC_RVAL((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o, _r);}}
void  YAC_CALL __APIC___cpvunrotate_YAC_RARG(yacmemptr _args                 ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect))if(YAC_BCHK(_args.mem[2].o, clid_CpVect)){ _cpvunrotate_YAC_RARG((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o, (CpVect*)_args.mem[2].o);}}
void  YAC_CALL __APIC___cpvneg_YAC_RVAL(yacmemptr _args, YAC_Value *_r       ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ _cpvneg_YAC_RVAL((CpVect*)_args.mem[0].o, _r);}}
void  YAC_CALL __APIC___cpvneg_YAC_RARG(yacmemptr _args                      ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ _cpvneg_YAC_RARG((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}}
void  YAC_CALL __APIC___cpvperp_YAC_RVAL(yacmemptr _args, YAC_Value *_r      ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ _cpvperp_YAC_RVAL((CpVect*)_args.mem[0].o, _r);}}
void  YAC_CALL __APIC___cpvperp_YAC_RARG(yacmemptr _args                     ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ _cpvperp_YAC_RARG((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}}
void  YAC_CALL __APIC___cpvnormalize_YAC_RVAL(yacmemptr _args, YAC_Value *_r ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ _cpvnormalize_YAC_RVAL((CpVect*)_args.mem[0].o, _r);}}
void  YAC_CALL __APIC___cpvnormalize_YAC_RARG(yacmemptr _args                ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ _cpvnormalize_YAC_RARG((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}}
void  YAC_CALL __APIC___cpvforangle_YAC_RVAL(yacmemptr _args, YAC_Value *_r  ) {_cpvforangle_YAC_RVAL(_args.mem[0].f32, _r);}
void  YAC_CALL __APIC___cpvforangle_YAC_RARG(yacmemptr _args                 ) {if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ _cpvforangle_YAC_RARG(_args.mem[0].f32, (CpVect*)_args.mem[1].o);}}
sF32  YAC_CALL __APIC___cpvtoangle  (yacmemptr _args                         ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ return (sF32)_cpvtoangle((CpVect*)_args.mem[0].o);}return 0.0f;}
sF32  YAC_CALL __APIC___cpvdot      (yacmemptr _args                         ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ return (sF32)_cpvdot((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}return 0.0f;}
sF32  YAC_CALL __APIC___cpvcross    (yacmemptr _args                         ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect))if(YAC_BCHK(_args.mem[1].o, clid_CpVect)){ return (sF32)_cpvcross((CpVect*)_args.mem[0].o, (CpVect*)_args.mem[1].o);}return 0.0f;}
sF32  YAC_CALL __APIC___cpvlength   (yacmemptr _args                         ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ return (sF32)_cpvlength((CpVect*)_args.mem[0].o);}return 0.0f;}
sF32  YAC_CALL __APIC___cpvlengthsq (yacmemptr _args                         ) {if(YAC_BCHK(_args.mem[0].o, clid_CpVect)){ return (sF32)_cpvlengthsq((CpVect*)_args.mem[0].o);}return 0.0f;}
sF32  YAC_CALL __APIC___cpMomentForCircle(yacmemptr _args                    ) {if(YAC_BCHK(_args.mem[3].o, clid_CpVect)){ return (sF32)_cpMomentForCircle(_args.mem[0].f32, _args.mem[1].f32, _args.mem[2].f32, (CpVect*)_args.mem[3].o);}return 0.0f;}
sF32  YAC_CALL __APIC___cpMomentForPoly(yacmemptr _args                      ) {if(YAC_BCHK(_args.mem[2].o, clid_CpVect)){ return (sF32)_cpMomentForPoly(_args.mem[0].f32, _args.mem[1].o, (CpVect*)_args.mem[2].o, _args.mem[3].f32);}return 0.0f;}
void  YAC_CALL __APIC___cpSpaceGetStaticBody(yacmemptr _args, YAC_Value *_r  ) {if(YAC_BCHK(_args.mem[0].o, clid_CpSpace)){ _cpSpaceGetStaticBody((CpSpace*)_args.mem[0].o, _r);}}

void YAC_CALL YAC_Exit_cp(YAC_Host *_host) {
	delete t_CpRatchetJoint;
	delete t_CpRotaryLimitJoint;
	delete t_CpGearJoint;
	delete t_CpDampedSpring;
	delete t_CpGrooveJoint;
	delete t_CpPivotJoint;
	delete t_CpSlideJoint;
	delete t_CpPinJoint;
	delete t_CpJoint;
	delete t_CpConstraint;
	delete t_CpPolyShape;
	delete t_CpSegmentShape;
	delete t_CpCircleShape;
	delete t_CpShape;
	delete t_CpBody;
	delete t_CpSpace;
	delete t_CpArbiter;
	delete t_CpTransform;
	delete t_CpBB;
	delete t_CpVect;
}

#endif
