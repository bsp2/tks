// ---- ying_analogrytm_AR_Kit.cpp: auto generated by YInG - the YAC interface generator (Fri, 8/Dec/2023 09:43:41)

#ifndef YAC_NO_HOST
sSI   YAC_CALL AR_Kit__getRequiredSizeSyx(void *                   );
sSI   YAC_CALL AR_Kit__getRequiredSizeRaw(void *                   );
sSI   YAC_CALL AR_Kit__getCurrentDataIdx(void *                    );
void  YAC_CALL AR_Kit__saveSyxToStream(void *, yacmemptr           );
void  YAC_CALL AR_Kit__saveRawToStream(void *, yacmemptr           );
sSI   YAC_CALL AR_Kit__loadSyxFromStream(void *, yacmemptr         );
sSI   YAC_CALL AR_Kit__loadRawFromStream(void *, yacmemptr         );
sSI   YAC_CALL AR_Kit__addKitRequestX(void *, yacmemptr            );
sSI   YAC_CALL AR_Kit__syxToRaw     (void *, yacmemptr             );
sSI   YAC_CALL AR_Kit__sendKitX     (void *, yacmemptr             );
sSI   YAC_CALL AR_Kit__sendSoundX   (void *, yacmemptr             );
sSI   YAC_CALL AR_Kit__getRawBuffer (void *, yacmemptr             );
sSI   YAC_CALL AR_Kit__getVersion   (void *                        );
sSI   YAC_CALL AR_Kit__copyPerfCtlFrom(void *, yacmemptr           );
sSI   YAC_CALL AR_Kit__copySceneCtlFrom(void *, yacmemptr          );
sSI   YAC_CALL AR_Kit__copyFXFrom   (void *, yacmemptr             );
sSI   YAC_CALL AR_Kit__copyTrackSoundFrom(void *, yacmemptr        );
sSI   YAC_CALL AR_Kit__copyTrackSoundFromSound(void *, yacmemptr   );
sSI   YAC_CALL AR_Kit__getTrackSampleNr(void *, yacmemptr          );
void  YAC_CALL AR_Kit__setTrackSampleNr(void *, yacmemptr          );
sSI   YAC_CALL AR_Kit__getSoundRefByIndex(void *, yacmemptr        );
sSI   YAC_CALL AR_Kit__getTrackLevel(void *, yacmemptr             );
void  YAC_CALL AR_Kit__setTrackLevel(void *, yacmemptr             );
#endif // YAC_NO_HOST

// ------------------ YAC class "AR_Kit" reflection map (implementation) ------------------
sUI          YAC_VCALL AR_Kit::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL AR_Kit::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL AR_Kit::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL AR_Kit::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL AR_Kit::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL AR_Kit::yacMethodGetNum                  (void) {return 24;}
const char **YAC_VCALL AR_Kit::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "getRequiredSizeSyx", "getRequiredSizeRaw", "getCurrentDataIdx", "saveSyxToStream", "saveRawToStream", "loadSyxFromStream", "loadRawFromStream", "addKitRequestX", "syxToRaw", "sendKitX", "sendSoundX", "getRawBuffer", "getVersion", "copyPerfCtlFrom", "copySceneCtlFrom", "copyFXFrom", "copyTrackSoundFrom", "copyTrackSoundFromSound", "getTrackSampleNr", "setTrackSampleNr", "getSoundRefByIndex", "getTrackLevel", "setTrackLevel"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL AR_Kit::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 3, 3, 1, 0, 1, 1, 1, 3, 2, 1, 2, 2, 1, 2}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL AR_Kit::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={0,};static const sUI rt3[]={0,};static const sUI rt4[]={3,};static const sUI rt5[]={3,};static const sUI rt6[]={3,};static const sUI rt7[]={3,};static const sUI rt8[]={3, 1, 1,};static const sUI rt9[]={3,};static const sUI rt10[]={3, 1, 1,};static const sUI rt11[]={3, 1, 1,};static const sUI rt12[]={3,};static const sUI rt13[]={0,};static const sUI rt14[]={3,};static const sUI rt15[]={3,};static const sUI rt16[]={3,};static const sUI rt17[]={1, 3, 1,};static const sUI rt18[]={1, 3,};static const sUI rt19[]={1,};static const sUI rt20[]={1, 1,};static const sUI rt21[]={1, 3,};static const sUI rt22[]={1,};static const sUI rt23[]={1, 1,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL AR_Kit::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={"Buffer", (const char*)0, (const char*)0,};static const char *rs9[]={"Buffer",};static const char *rs10[]={"Buffer", (const char*)0, (const char*)0,};static const char *rs11[]={"Buffer", (const char*)0, (const char*)0,};static const char *rs12[]={"Buffer",};static const char *rs13[]={(const char*)0,};static const char *rs14[]={"AR_Kit",};static const char *rs15[]={"AR_Kit",};static const char *rs16[]={"AR_Kit",};static const char *rs17[]={(const char*)0, "AR_Kit", (const char*)0,};static const char *rs18[]={(const char*)0, "AR_Sound",};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0, (const char*)0,};static const char *rs21[]={(const char*)0, (const char*)0,};static const char *rs22[]={(const char*)0,};static const char *rs23[]={(const char*)0, (const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL AR_Kit::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL AR_Kit::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL AR_Kit::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)AR_Kit__getRequiredSizeSyx, (void*)AR_Kit__getRequiredSizeRaw, (void*)AR_Kit__getCurrentDataIdx, (void*)AR_Kit__saveSyxToStream, (void*)AR_Kit__saveRawToStream, (void*)AR_Kit__loadSyxFromStream, (void*)AR_Kit__loadRawFromStream, (void*)AR_Kit__addKitRequestX, (void*)AR_Kit__syxToRaw, (void*)AR_Kit__sendKitX, (void*)AR_Kit__sendSoundX, (void*)AR_Kit__getRawBuffer, (void*)AR_Kit__getVersion, (void*)AR_Kit__copyPerfCtlFrom, (void*)AR_Kit__copySceneCtlFrom, (void*)AR_Kit__copyFXFrom, (void*)AR_Kit__copyTrackSoundFrom, (void*)AR_Kit__copyTrackSoundFromSound, (void*)AR_Kit__getTrackSampleNr, (void*)AR_Kit__setTrackSampleNr, (void*)AR_Kit__getSoundRefByIndex, (void*)AR_Kit__getTrackLevel, (void*)AR_Kit__setTrackLevel}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL AR_Kit::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL AR_Kit::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL AR_Kit::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL AR_Kit::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(AR_Kit, "AR_Kit");

#ifndef YAC_NO_HOST
sSI   YAC_CALL AR_Kit__getRequiredSizeSyx(void *_o                           ) {return (sSI)((AR_Kit*)_o)->getRequiredSizeSyx();}
sSI   YAC_CALL AR_Kit__getRequiredSizeRaw(void *_o                           ) {return (sSI)((AR_Kit*)_o)->getRequiredSizeRaw();}
sSI   YAC_CALL AR_Kit__getCurrentDataIdx(void *_o                            ) {return (sSI)((AR_Kit*)_o)->getCurrentDataIdx();}
void  YAC_CALL AR_Kit__saveSyxToStream(void *_o, yacmemptr _args             ) {((AR_Kit*)_o)->saveSyxToStream(_args.mem[0].o);}
void  YAC_CALL AR_Kit__saveRawToStream(void *_o, yacmemptr _args             ) {((AR_Kit*)_o)->saveRawToStream(_args.mem[0].o);}
sSI   YAC_CALL AR_Kit__loadSyxFromStream(void *_o, yacmemptr _args           ) {return (sSI)((AR_Kit*)_o)->loadSyxFromStream(_args.mem[0].o);}
sSI   YAC_CALL AR_Kit__loadRawFromStream(void *_o, yacmemptr _args           ) {return (sSI)((AR_Kit*)_o)->loadRawFromStream(_args.mem[0].o);}
sSI   YAC_CALL AR_Kit__addKitRequestX(void *_o, yacmemptr _args              ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_BUFFER)){ return (sSI)((AR_Kit*)_o)->addKitRequestX((YAC_Buffer*)_args.mem[0].o, _args.mem[1].si, _args.mem[2].si);}return 0;}
sSI   YAC_CALL AR_Kit__syxToRaw     (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_BUFFER)){ return (sSI)((AR_Kit*)_o)->syxToRaw((YAC_Buffer*)_args.mem[0].o);}return 0;}
sSI   YAC_CALL AR_Kit__sendKitX     (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_BUFFER)){ return (sSI)((AR_Kit*)_o)->sendKitX((YAC_Buffer*)_args.mem[0].o, _args.mem[1].si, _args.mem[2].si);}return 0;}
sSI   YAC_CALL AR_Kit__sendSoundX   (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_BUFFER)){ return (sSI)((AR_Kit*)_o)->sendSoundX((YAC_Buffer*)_args.mem[0].o, _args.mem[1].si, _args.mem[2].si);}return 0;}
sSI   YAC_CALL AR_Kit__getRawBuffer (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_BUFFER)){ return (sSI)((AR_Kit*)_o)->getRawBuffer((YAC_Buffer*)_args.mem[0].o);}return 0;}
sSI   YAC_CALL AR_Kit__getVersion   (void *_o                                ) {return (sSI)((AR_Kit*)_o)->getVersion();}
sSI   YAC_CALL AR_Kit__copyPerfCtlFrom(void *_o, yacmemptr _args             ) {if(YAC_BCHK(_args.mem[0].o, clid_AR_Kit)){ return (sSI)((AR_Kit*)_o)->copyPerfCtlFrom((AR_Kit*)_args.mem[0].o);}return 0;}
sSI   YAC_CALL AR_Kit__copySceneCtlFrom(void *_o, yacmemptr _args            ) {if(YAC_BCHK(_args.mem[0].o, clid_AR_Kit)){ return (sSI)((AR_Kit*)_o)->copySceneCtlFrom((AR_Kit*)_args.mem[0].o);}return 0;}
sSI   YAC_CALL AR_Kit__copyFXFrom   (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, clid_AR_Kit)){ return (sSI)((AR_Kit*)_o)->copyFXFrom((AR_Kit*)_args.mem[0].o);}return 0;}
sSI   YAC_CALL AR_Kit__copyTrackSoundFrom(void *_o, yacmemptr _args          ) {if(YAC_BCHK(_args.mem[1].o, clid_AR_Kit)){ return (sSI)((AR_Kit*)_o)->copyTrackSoundFrom(_args.mem[0].si, (AR_Kit*)_args.mem[1].o, _args.mem[2].si);}return 0;}
sSI   YAC_CALL AR_Kit__copyTrackSoundFromSound(void *_o, yacmemptr _args     ) {if(YAC_BCHK(_args.mem[1].o, clid_AR_Sound)){ return (sSI)((AR_Kit*)_o)->copyTrackSoundFromSound(_args.mem[0].si, (AR_Sound*)_args.mem[1].o);}return 0;}
sSI   YAC_CALL AR_Kit__getTrackSampleNr(void *_o, yacmemptr _args            ) {return (sSI)((AR_Kit*)_o)->getTrackSampleNr(_args.mem[0].si);}
void  YAC_CALL AR_Kit__setTrackSampleNr(void *_o, yacmemptr _args            ) {((AR_Kit*)_o)->setTrackSampleNr(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL AR_Kit__getSoundRefByIndex(void *_o, yacmemptr _args          ) {return (sSI)((AR_Kit*)_o)->getSoundRefByIndex(_args.mem[0].si, _args.mem[1].o);}
sSI   YAC_CALL AR_Kit__getTrackLevel(void *_o, yacmemptr _args               ) {return (sSI)((AR_Kit*)_o)->getTrackLevel(_args.mem[0].si);}
void  YAC_CALL AR_Kit__setTrackLevel(void *_o, yacmemptr _args               ) {((AR_Kit*)_o)->setTrackLevel(_args.mem[0].si, _args.mem[1].si);}
#endif // YAC_NO_HOST
