// ---- ying_analogrytm_AR_Pattern.cpp: auto generated by YInG - the YAC interface generator (Fri, 8/Dec/2023 09:43:41)

#ifndef YAC_NO_HOST
sSI   YAC_CALL AR_Pattern__getRequiredSizeSyx(void *               );
sSI   YAC_CALL AR_Pattern__getRequiredSizeRaw(void *               );
sSI   YAC_CALL AR_Pattern__getCurrentDataIdx(void *                );
void  YAC_CALL AR_Pattern__saveSyxToStream(void *, yacmemptr       );
void  YAC_CALL AR_Pattern__saveRawToStream(void *, yacmemptr       );
sSI   YAC_CALL AR_Pattern__loadSyxFromStream(void *, yacmemptr     );
sSI   YAC_CALL AR_Pattern__loadRawFromStream(void *, yacmemptr     );
sSI   YAC_CALL AR_Pattern__addPatternRequestX(void *, yacmemptr    );
sSI   YAC_CALL AR_Pattern__syxToRaw (void *, yacmemptr             );
sSI   YAC_CALL AR_Pattern__sendPattern(void *, yacmemptr           );
sSI   YAC_CALL AR_Pattern__getRawBuffer(void *, yacmemptr          );
sSI   YAC_CALL AR_Pattern__getVersion(void *                       );
sSI   YAC_CALL AR_Pattern__getMasterLength(void *                  );
void  YAC_CALL AR_Pattern__setMasterLength(void *, yacmemptr       );
sSI   YAC_CALL AR_Pattern__getMasterSpeed(void *                   );
void  YAC_CALL AR_Pattern__setMasterSpeed(void *, yacmemptr        );
sSI   YAC_CALL AR_Pattern__getFlagsAndSpeed(void *, yacmemptr      );
void  YAC_CALL AR_Pattern__setFlagsAndSpeed(void *, yacmemptr      );
sSI   YAC_CALL AR_Pattern__getDefaultNote(void *, yacmemptr        );
void  YAC_CALL AR_Pattern__setDefaultNote(void *, yacmemptr        );
sSI   YAC_CALL AR_Pattern__getDefaultVelocity(void *, yacmemptr    );
void  YAC_CALL AR_Pattern__setDefaultVelocity(void *, yacmemptr    );
sSI   YAC_CALL AR_Pattern__getDefaultNoteLength(void *, yacmemptr  );
void  YAC_CALL AR_Pattern__setDefaultNoteLength(void *, yacmemptr  );
sSI   YAC_CALL AR_Pattern__getDefaultTrigFlags(void *, yacmemptr   );
void  YAC_CALL AR_Pattern__setDefaultTrigFlags(void *, yacmemptr   );
sSI   YAC_CALL AR_Pattern__getNumSteps(void *, yacmemptr           );
void  YAC_CALL AR_Pattern__setNumSteps(void *, yacmemptr           );
sSI   YAC_CALL AR_Pattern__getTrig  (void *, yacmemptr             );
void  YAC_CALL AR_Pattern__setTrig  (void *, yacmemptr             );
sSI   YAC_CALL AR_Pattern__getStepNote(void *, yacmemptr           );
void  YAC_CALL AR_Pattern__setStepNote(void *, yacmemptr           );
sSI   YAC_CALL AR_Pattern__getStepVelocity(void *, yacmemptr       );
void  YAC_CALL AR_Pattern__setStepVelocity(void *, yacmemptr       );
sSI   YAC_CALL AR_Pattern__getStepNoteLength(void *, yacmemptr     );
void  YAC_CALL AR_Pattern__setStepNoteLength(void *, yacmemptr     );
sSI   YAC_CALL AR_Pattern__getStepMicroTiming(void *, yacmemptr    );
void  YAC_CALL AR_Pattern__setStepMicroTiming(void *, yacmemptr    );
sSI   YAC_CALL AR_Pattern__getStepRetrigLength(void *, yacmemptr   );
void  YAC_CALL AR_Pattern__setStepRetrigLength(void *, yacmemptr   );
sSI   YAC_CALL AR_Pattern__getStepRetrigRate(void *, yacmemptr     );
void  YAC_CALL AR_Pattern__setStepRetrigRate(void *, yacmemptr     );
sSI   YAC_CALL AR_Pattern__getStepRetrigVelocityOffset(void *, yacmemptr);
void  YAC_CALL AR_Pattern__setStepRetrigVelocityOffset(void *, yacmemptr);
sSI   YAC_CALL AR_Pattern__getStepTrigCondition(void *, yacmemptr  );
void  YAC_CALL AR_Pattern__setStepTrigCondition(void *, yacmemptr  );
sSI   YAC_CALL AR_Pattern__getTrigEnable(void *, yacmemptr         );
void  YAC_CALL AR_Pattern__setTrigEnable(void *, yacmemptr         );
sSI   YAC_CALL AR_Pattern__getTrigRetrig(void *, yacmemptr         );
void  YAC_CALL AR_Pattern__setTrigRetrig(void *, yacmemptr         );
sSI   YAC_CALL AR_Pattern__getTrigMute(void *, yacmemptr           );
void  YAC_CALL AR_Pattern__setTrigMute(void *, yacmemptr           );
sSI   YAC_CALL AR_Pattern__getTrigAccent(void *, yacmemptr         );
void  YAC_CALL AR_Pattern__setTrigAccent(void *, yacmemptr         );
sSI   YAC_CALL AR_Pattern__getTrigSwing(void *, yacmemptr          );
void  YAC_CALL AR_Pattern__setTrigSwing(void *, yacmemptr          );
sSI   YAC_CALL AR_Pattern__getTrigSlide(void *, yacmemptr          );
void  YAC_CALL AR_Pattern__setTrigSlide(void *, yacmemptr          );
sSI   YAC_CALL AR_Pattern__getTrigLFOPLockSW(void *, yacmemptr     );
void  YAC_CALL AR_Pattern__setTrigLFOPlockSW(void *, yacmemptr     );
sSI   YAC_CALL AR_Pattern__getTrigLFOPLockEN(void *, yacmemptr     );
void  YAC_CALL AR_Pattern__setTrigLFOPlockEN(void *, yacmemptr     );
sSI   YAC_CALL AR_Pattern__getTrigSYNPLockSW(void *, yacmemptr     );
void  YAC_CALL AR_Pattern__setTrigSYNPlockSW(void *, yacmemptr     );
sSI   YAC_CALL AR_Pattern__getTrigSYNPLockEN(void *, yacmemptr     );
void  YAC_CALL AR_Pattern__setTrigSYNPlockEN(void *, yacmemptr     );
sSI   YAC_CALL AR_Pattern__getTrigSMPPLockSW(void *, yacmemptr     );
void  YAC_CALL AR_Pattern__setTrigSMPPlockSW(void *, yacmemptr     );
sSI   YAC_CALL AR_Pattern__getTrigSMPPLockEN(void *, yacmemptr     );
void  YAC_CALL AR_Pattern__setTrigSMPPlockEN(void *, yacmemptr     );
sSI   YAC_CALL AR_Pattern__getTrigENVPLockSW(void *, yacmemptr     );
void  YAC_CALL AR_Pattern__setTrigENVPlockSW(void *, yacmemptr     );
sSI   YAC_CALL AR_Pattern__getTrigENVPLockEN(void *, yacmemptr     );
void  YAC_CALL AR_Pattern__setTrigENVPlockEN(void *, yacmemptr     );
sSI   YAC_CALL AR_Pattern__getTrigless(void *, yacmemptr           );
void  YAC_CALL AR_Pattern__setTrigless(void *, yacmemptr           );
#endif // YAC_NO_HOST

// ------------------ YAC class "AR_Pattern" reflection map (implementation) ------------------
sUI          YAC_VCALL AR_Pattern::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL AR_Pattern::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL AR_Pattern::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL AR_Pattern::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL AR_Pattern::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL AR_Pattern::yacMethodGetNum                  (void) {return 77;}
const char **YAC_VCALL AR_Pattern::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "getRequiredSizeSyx", "getRequiredSizeRaw", "getCurrentDataIdx", "saveSyxToStream", "saveRawToStream", "loadSyxFromStream", "loadRawFromStream", "addPatternRequestX", "syxToRaw", "sendPattern", "getRawBuffer", "getVersion", "getMasterLength", "setMasterLength", "getMasterSpeed", "setMasterSpeed", "getFlagsAndSpeed", "setFlagsAndSpeed", "getDefaultNote", "setDefaultNote", "getDefaultVelocity", "setDefaultVelocity", "getDefaultNoteLength", "setDefaultNoteLength", "getDefaultTrigFlags", "setDefaultTrigFlags", "getNumSteps", "setNumSteps", "getTrig", "setTrig", "getStepNote", "setStepNote", "getStepVelocity", "setStepVelocity", "getStepNoteLength", "setStepNoteLength", "getStepMicroTiming", "setStepMicroTiming", "getStepRetrigLength", "setStepRetrigLength", "getStepRetrigRate", "setStepRetrigRate", "getStepRetrigVelocityOffset", "setStepRetrigVelocityOffset", "getStepTrigCondition", "setStepTrigCondition", "getTrigEnable", "setTrigEnable", "getTrigRetrig", "setTrigRetrig", "getTrigMute", "setTrigMute", "getTrigAccent", "setTrigAccent", "getTrigSwing", "setTrigSwing", "getTrigSlide", "setTrigSlide", "getTrigLFOPLockSW", "setTrigLFOPlockSW", "getTrigLFOPLockEN", "setTrigLFOPlockEN", "getTrigSYNPLockSW", "setTrigSYNPlockSW", "getTrigSYNPLockEN", "setTrigSYNPlockEN", "getTrigSMPPLockSW", "setTrigSMPPlockSW", "getTrigSMPPLockEN", "setTrigSMPPlockEN", "getTrigENVPLockSW", "setTrigENVPlockSW", "getTrigENVPLockEN", "setTrigENVPlockEN", "getTrigless", "setTrigless"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL AR_Pattern::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 4, 1, 0, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL AR_Pattern::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={0,};static const sUI rt3[]={0,};static const sUI rt4[]={3,};static const sUI rt5[]={3,};static const sUI rt6[]={3,};static const sUI rt7[]={3,};static const sUI rt8[]={3, 1, 1,};static const sUI rt9[]={3,};static const sUI rt10[]={3, 1, 1, 1,};static const sUI rt11[]={3,};static const sUI rt12[]={0,};static const sUI rt13[]={0,};static const sUI rt14[]={1,};static const sUI rt15[]={0,};static const sUI rt16[]={1,};static const sUI rt17[]={1,};static const sUI rt18[]={1, 1,};static const sUI rt19[]={1,};static const sUI rt20[]={1, 1,};static const sUI rt21[]={1,};static const sUI rt22[]={1, 1,};static const sUI rt23[]={1,};static const sUI rt24[]={1, 1,};static const sUI rt25[]={1,};static const sUI rt26[]={1, 1,};static const sUI rt27[]={1,};static const sUI rt28[]={1, 1,};static const sUI rt29[]={1, 1,};static const sUI rt30[]={1, 1, 1,};static const sUI rt31[]={1, 1,};static const sUI rt32[]={1, 1, 1,};static const sUI rt33[]={1, 1,};static const sUI rt34[]={1, 1, 1,};static const sUI rt35[]={1, 1,};static const sUI rt36[]={1, 1, 1,};static const sUI rt37[]={1, 1,};static const sUI rt38[]={1, 1, 1,};static const sUI rt39[]={1, 1,};static const sUI rt40[]={1, 1, 1,};static const sUI rt41[]={1, 1,};static const sUI rt42[]={1, 1, 1,};static const sUI rt43[]={1, 1,};static const sUI rt44[]={1, 1, 1,};static const sUI rt45[]={1, 1,};static const sUI rt46[]={1, 1, 1,};static const sUI rt47[]={1, 1,};static const sUI rt48[]={1, 1, 1,};static const sUI rt49[]={1, 1,};static const sUI rt50[]={1, 1, 1,};static const sUI rt51[]={1, 1,};static const sUI rt52[]={1, 1, 1,};static const sUI rt53[]={1, 1,};static const sUI rt54[]={1, 1, 1,};static const sUI rt55[]={1, 1,};static const sUI rt56[]={1, 1, 1,};static const sUI rt57[]={1, 1,};static const sUI rt58[]={1, 1, 1,};static const sUI rt59[]={1, 1,};static const sUI rt60[]={1, 1, 1,};static const sUI rt61[]={1, 1,};static const sUI rt62[]={1, 1, 1,};static const sUI rt63[]={1, 1,};static const sUI rt64[]={1, 1, 1,};static const sUI rt65[]={1, 1,};static const sUI rt66[]={1, 1, 1,};static const sUI rt67[]={1, 1,};static const sUI rt68[]={1, 1, 1,};static const sUI rt69[]={1, 1,};static const sUI rt70[]={1, 1, 1,};static const sUI rt71[]={1, 1,};static const sUI rt72[]={1, 1, 1,};static const sUI rt73[]={1, 1,};static const sUI rt74[]={1, 1, 1,};static const sUI rt75[]={1, 1,};static const sUI rt76[]={1, 1, 1,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15, rt16, rt17, rt18, rt19, rt20, rt21, rt22, rt23, rt24, rt25, rt26, rt27, rt28, rt29, rt30, rt31, rt32, rt33, rt34, rt35, rt36, rt37, rt38, rt39, rt40, rt41, rt42, rt43, rt44, rt45, rt46, rt47, rt48, rt49, rt50, rt51, rt52, rt53, rt54, rt55, rt56, rt57, rt58, rt59, rt60, rt61, rt62, rt63, rt64, rt65, rt66, rt67, rt68, rt69, rt70, rt71, rt72, rt73, rt74, rt75, rt76}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL AR_Pattern::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={"Buffer", (const char*)0, (const char*)0,};static const char *rs9[]={"Buffer",};static const char *rs10[]={"Buffer", (const char*)0, (const char*)0, (const char*)0,};static const char *rs11[]={"Buffer",};static const char *rs12[]={(const char*)0,};static const char *rs13[]={(const char*)0,};static const char *rs14[]={(const char*)0,};static const char *rs15[]={(const char*)0,};static const char *rs16[]={(const char*)0,};static const char *rs17[]={(const char*)0,};static const char *rs18[]={(const char*)0, (const char*)0,};static const char *rs19[]={(const char*)0,};static const char *rs20[]={(const char*)0, (const char*)0,};static const char *rs21[]={(const char*)0,};static const char *rs22[]={(const char*)0, (const char*)0,};static const char *rs23[]={(const char*)0,};static const char *rs24[]={(const char*)0, (const char*)0,};static const char *rs25[]={(const char*)0,};static const char *rs26[]={(const char*)0, (const char*)0,};static const char *rs27[]={(const char*)0,};static const char *rs28[]={(const char*)0, (const char*)0,};static const char *rs29[]={(const char*)0, (const char*)0,};static const char *rs30[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs31[]={(const char*)0, (const char*)0,};static const char *rs32[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs33[]={(const char*)0, (const char*)0,};static const char *rs34[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs35[]={(const char*)0, (const char*)0,};static const char *rs36[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs37[]={(const char*)0, (const char*)0,};static const char *rs38[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs39[]={(const char*)0, (const char*)0,};static const char *rs40[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs41[]={(const char*)0, (const char*)0,};static const char *rs42[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs43[]={(const char*)0, (const char*)0,};static const char *rs44[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs45[]={(const char*)0, (const char*)0,};static const char *rs46[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs47[]={(const char*)0, (const char*)0,};static const char *rs48[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs49[]={(const char*)0, (const char*)0,};static const char *rs50[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs51[]={(const char*)0, (const char*)0,};static const char *rs52[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs53[]={(const char*)0, (const char*)0,};static const char *rs54[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs55[]={(const char*)0, (const char*)0,};static const char *rs56[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs57[]={(const char*)0, (const char*)0,};static const char *rs58[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs59[]={(const char*)0, (const char*)0,};static const char *rs60[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs61[]={(const char*)0, (const char*)0,};static const char *rs62[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs63[]={(const char*)0, (const char*)0,};static const char *rs64[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs65[]={(const char*)0, (const char*)0,};static const char *rs66[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs67[]={(const char*)0, (const char*)0,};static const char *rs68[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs69[]={(const char*)0, (const char*)0,};static const char *rs70[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs71[]={(const char*)0, (const char*)0,};static const char *rs72[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs73[]={(const char*)0, (const char*)0,};static const char *rs74[]={(const char*)0, (const char*)0, (const char*)0,};static const char *rs75[]={(const char*)0, (const char*)0,};static const char *rs76[]={(const char*)0, (const char*)0, (const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15, rs16, rs17, rs18, rs19, rs20, rs21, rs22, rs23, rs24, rs25, rs26, rs27, rs28, rs29, rs30, rs31, rs32, rs33, rs34, rs35, rs36, rs37, rs38, rs39, rs40, rs41, rs42, rs43, rs44, rs45, rs46, rs47, rs48, rs49, rs50, rs51, rs52, rs53, rs54, rs55, rs56, rs57, rs58, rs59, rs60, rs61, rs62, rs63, rs64, rs65, rs66, rs67, rs68, rs69, rs70, rs71, rs72, rs73, rs74, rs75, rs76}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL AR_Pattern::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL AR_Pattern::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL AR_Pattern::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)AR_Pattern__getRequiredSizeSyx, (void*)AR_Pattern__getRequiredSizeRaw, (void*)AR_Pattern__getCurrentDataIdx, (void*)AR_Pattern__saveSyxToStream, (void*)AR_Pattern__saveRawToStream, (void*)AR_Pattern__loadSyxFromStream, (void*)AR_Pattern__loadRawFromStream, (void*)AR_Pattern__addPatternRequestX, (void*)AR_Pattern__syxToRaw, (void*)AR_Pattern__sendPattern, (void*)AR_Pattern__getRawBuffer, (void*)AR_Pattern__getVersion, (void*)AR_Pattern__getMasterLength, (void*)AR_Pattern__setMasterLength, (void*)AR_Pattern__getMasterSpeed, (void*)AR_Pattern__setMasterSpeed, (void*)AR_Pattern__getFlagsAndSpeed, (void*)AR_Pattern__setFlagsAndSpeed, (void*)AR_Pattern__getDefaultNote, (void*)AR_Pattern__setDefaultNote, (void*)AR_Pattern__getDefaultVelocity, (void*)AR_Pattern__setDefaultVelocity, (void*)AR_Pattern__getDefaultNoteLength, (void*)AR_Pattern__setDefaultNoteLength, (void*)AR_Pattern__getDefaultTrigFlags, (void*)AR_Pattern__setDefaultTrigFlags, (void*)AR_Pattern__getNumSteps, (void*)AR_Pattern__setNumSteps, (void*)AR_Pattern__getTrig, (void*)AR_Pattern__setTrig, (void*)AR_Pattern__getStepNote, (void*)AR_Pattern__setStepNote, (void*)AR_Pattern__getStepVelocity, (void*)AR_Pattern__setStepVelocity, (void*)AR_Pattern__getStepNoteLength, (void*)AR_Pattern__setStepNoteLength, (void*)AR_Pattern__getStepMicroTiming, (void*)AR_Pattern__setStepMicroTiming, (void*)AR_Pattern__getStepRetrigLength, (void*)AR_Pattern__setStepRetrigLength, (void*)AR_Pattern__getStepRetrigRate, (void*)AR_Pattern__setStepRetrigRate, (void*)AR_Pattern__getStepRetrigVelocityOffset, (void*)AR_Pattern__setStepRetrigVelocityOffset, (void*)AR_Pattern__getStepTrigCondition, (void*)AR_Pattern__setStepTrigCondition, (void*)AR_Pattern__getTrigEnable, (void*)AR_Pattern__setTrigEnable, (void*)AR_Pattern__getTrigRetrig, (void*)AR_Pattern__setTrigRetrig, (void*)AR_Pattern__getTrigMute, (void*)AR_Pattern__setTrigMute, (void*)AR_Pattern__getTrigAccent, (void*)AR_Pattern__setTrigAccent, (void*)AR_Pattern__getTrigSwing, (void*)AR_Pattern__setTrigSwing, (void*)AR_Pattern__getTrigSlide, (void*)AR_Pattern__setTrigSlide, (void*)AR_Pattern__getTrigLFOPLockSW, (void*)AR_Pattern__setTrigLFOPlockSW, (void*)AR_Pattern__getTrigLFOPLockEN, (void*)AR_Pattern__setTrigLFOPlockEN, (void*)AR_Pattern__getTrigSYNPLockSW, (void*)AR_Pattern__setTrigSYNPlockSW, (void*)AR_Pattern__getTrigSYNPLockEN, (void*)AR_Pattern__setTrigSYNPlockEN, (void*)AR_Pattern__getTrigSMPPLockSW, (void*)AR_Pattern__setTrigSMPPlockSW, (void*)AR_Pattern__getTrigSMPPLockEN, (void*)AR_Pattern__setTrigSMPPlockEN, (void*)AR_Pattern__getTrigENVPLockSW, (void*)AR_Pattern__setTrigENVPlockSW, (void*)AR_Pattern__getTrigENVPLockEN, (void*)AR_Pattern__setTrigENVPlockEN, (void*)AR_Pattern__getTrigless, (void*)AR_Pattern__setTrigless}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL AR_Pattern::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL AR_Pattern::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL AR_Pattern::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL AR_Pattern::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(AR_Pattern, "AR_Pattern");

#ifndef YAC_NO_HOST
sSI   YAC_CALL AR_Pattern__getRequiredSizeSyx(void *_o                       ) {return (sSI)((AR_Pattern*)_o)->getRequiredSizeSyx();}
sSI   YAC_CALL AR_Pattern__getRequiredSizeRaw(void *_o                       ) {return (sSI)((AR_Pattern*)_o)->getRequiredSizeRaw();}
sSI   YAC_CALL AR_Pattern__getCurrentDataIdx(void *_o                        ) {return (sSI)((AR_Pattern*)_o)->getCurrentDataIdx();}
void  YAC_CALL AR_Pattern__saveSyxToStream(void *_o, yacmemptr _args         ) {((AR_Pattern*)_o)->saveSyxToStream(_args.mem[0].o);}
void  YAC_CALL AR_Pattern__saveRawToStream(void *_o, yacmemptr _args         ) {((AR_Pattern*)_o)->saveRawToStream(_args.mem[0].o);}
sSI   YAC_CALL AR_Pattern__loadSyxFromStream(void *_o, yacmemptr _args       ) {return (sSI)((AR_Pattern*)_o)->loadSyxFromStream(_args.mem[0].o);}
sSI   YAC_CALL AR_Pattern__loadRawFromStream(void *_o, yacmemptr _args       ) {return (sSI)((AR_Pattern*)_o)->loadRawFromStream(_args.mem[0].o);}
sSI   YAC_CALL AR_Pattern__addPatternRequestX(void *_o, yacmemptr _args      ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_BUFFER)){ return (sSI)((AR_Pattern*)_o)->addPatternRequestX((YAC_Buffer*)_args.mem[0].o, _args.mem[1].si, _args.mem[2].si);}return 0;}
sSI   YAC_CALL AR_Pattern__syxToRaw (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_BUFFER)){ return (sSI)((AR_Pattern*)_o)->syxToRaw((YAC_Buffer*)_args.mem[0].o);}return 0;}
sSI   YAC_CALL AR_Pattern__sendPattern(void *_o, yacmemptr _args             ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_BUFFER)){ return (sSI)((AR_Pattern*)_o)->sendPattern((YAC_Buffer*)_args.mem[0].o, _args.mem[1].si, _args.mem[2].si, _args.mem[3].si);}return 0;}
sSI   YAC_CALL AR_Pattern__getRawBuffer(void *_o, yacmemptr _args            ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_BUFFER)){ return (sSI)((AR_Pattern*)_o)->getRawBuffer((YAC_Buffer*)_args.mem[0].o);}return 0;}
sSI   YAC_CALL AR_Pattern__getVersion(void *_o                               ) {return (sSI)((AR_Pattern*)_o)->getVersion();}
sSI   YAC_CALL AR_Pattern__getMasterLength(void *_o                          ) {return (sSI)((AR_Pattern*)_o)->getMasterLength();}
void  YAC_CALL AR_Pattern__setMasterLength(void *_o, yacmemptr _args         ) {((AR_Pattern*)_o)->setMasterLength(_args.mem[0].si);}
sSI   YAC_CALL AR_Pattern__getMasterSpeed(void *_o                           ) {return (sSI)((AR_Pattern*)_o)->getMasterSpeed();}
void  YAC_CALL AR_Pattern__setMasterSpeed(void *_o, yacmemptr _args          ) {((AR_Pattern*)_o)->setMasterSpeed(_args.mem[0].si);}
sSI   YAC_CALL AR_Pattern__getFlagsAndSpeed(void *_o, yacmemptr _args        ) {return (sSI)((AR_Pattern*)_o)->getFlagsAndSpeed(_args.mem[0].si);}
void  YAC_CALL AR_Pattern__setFlagsAndSpeed(void *_o, yacmemptr _args        ) {((AR_Pattern*)_o)->setFlagsAndSpeed(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL AR_Pattern__getDefaultNote(void *_o, yacmemptr _args          ) {return (sSI)((AR_Pattern*)_o)->getDefaultNote(_args.mem[0].si);}
void  YAC_CALL AR_Pattern__setDefaultNote(void *_o, yacmemptr _args          ) {((AR_Pattern*)_o)->setDefaultNote(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL AR_Pattern__getDefaultVelocity(void *_o, yacmemptr _args      ) {return (sSI)((AR_Pattern*)_o)->getDefaultVelocity(_args.mem[0].si);}
void  YAC_CALL AR_Pattern__setDefaultVelocity(void *_o, yacmemptr _args      ) {((AR_Pattern*)_o)->setDefaultVelocity(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL AR_Pattern__getDefaultNoteLength(void *_o, yacmemptr _args    ) {return (sSI)((AR_Pattern*)_o)->getDefaultNoteLength(_args.mem[0].si);}
void  YAC_CALL AR_Pattern__setDefaultNoteLength(void *_o, yacmemptr _args    ) {((AR_Pattern*)_o)->setDefaultNoteLength(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL AR_Pattern__getDefaultTrigFlags(void *_o, yacmemptr _args     ) {return (sSI)((AR_Pattern*)_o)->getDefaultTrigFlags(_args.mem[0].si);}
void  YAC_CALL AR_Pattern__setDefaultTrigFlags(void *_o, yacmemptr _args     ) {((AR_Pattern*)_o)->setDefaultTrigFlags(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL AR_Pattern__getNumSteps(void *_o, yacmemptr _args             ) {return (sSI)((AR_Pattern*)_o)->getNumSteps(_args.mem[0].si);}
void  YAC_CALL AR_Pattern__setNumSteps(void *_o, yacmemptr _args             ) {((AR_Pattern*)_o)->setNumSteps(_args.mem[0].si, _args.mem[1].si);}
sSI   YAC_CALL AR_Pattern__getTrig  (void *_o, yacmemptr _args               ) {return (sSI)((AR_Pattern*)_o)->getTrig(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setTrig  (void *_o, yacmemptr _args               ) {((AR_Pattern*)_o)->setTrig(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getStepNote(void *_o, yacmemptr _args             ) {return (sSI)((AR_Pattern*)_o)->getStepNote(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setStepNote(void *_o, yacmemptr _args             ) {((AR_Pattern*)_o)->setStepNote(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getStepVelocity(void *_o, yacmemptr _args         ) {return (sSI)((AR_Pattern*)_o)->getStepVelocity(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setStepVelocity(void *_o, yacmemptr _args         ) {((AR_Pattern*)_o)->setStepVelocity(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getStepNoteLength(void *_o, yacmemptr _args       ) {return (sSI)((AR_Pattern*)_o)->getStepNoteLength(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setStepNoteLength(void *_o, yacmemptr _args       ) {((AR_Pattern*)_o)->setStepNoteLength(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getStepMicroTiming(void *_o, yacmemptr _args      ) {return (sSI)((AR_Pattern*)_o)->getStepMicroTiming(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setStepMicroTiming(void *_o, yacmemptr _args      ) {((AR_Pattern*)_o)->setStepMicroTiming(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getStepRetrigLength(void *_o, yacmemptr _args     ) {return (sSI)((AR_Pattern*)_o)->getStepRetrigLength(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setStepRetrigLength(void *_o, yacmemptr _args     ) {((AR_Pattern*)_o)->setStepRetrigLength(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getStepRetrigRate(void *_o, yacmemptr _args       ) {return (sSI)((AR_Pattern*)_o)->getStepRetrigRate(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setStepRetrigRate(void *_o, yacmemptr _args       ) {((AR_Pattern*)_o)->setStepRetrigRate(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getStepRetrigVelocityOffset(void *_o, yacmemptr _args) {return (sSI)((AR_Pattern*)_o)->getStepRetrigVelocityOffset(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setStepRetrigVelocityOffset(void *_o, yacmemptr _args) {((AR_Pattern*)_o)->setStepRetrigVelocityOffset(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getStepTrigCondition(void *_o, yacmemptr _args    ) {return (sSI)((AR_Pattern*)_o)->getStepTrigCondition(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setStepTrigCondition(void *_o, yacmemptr _args    ) {((AR_Pattern*)_o)->setStepTrigCondition(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getTrigEnable(void *_o, yacmemptr _args           ) {return (sSI)((AR_Pattern*)_o)->getTrigEnable(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setTrigEnable(void *_o, yacmemptr _args           ) {((AR_Pattern*)_o)->setTrigEnable(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getTrigRetrig(void *_o, yacmemptr _args           ) {return (sSI)((AR_Pattern*)_o)->getTrigRetrig(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setTrigRetrig(void *_o, yacmemptr _args           ) {((AR_Pattern*)_o)->setTrigRetrig(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getTrigMute(void *_o, yacmemptr _args             ) {return (sSI)((AR_Pattern*)_o)->getTrigMute(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setTrigMute(void *_o, yacmemptr _args             ) {((AR_Pattern*)_o)->setTrigMute(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getTrigAccent(void *_o, yacmemptr _args           ) {return (sSI)((AR_Pattern*)_o)->getTrigAccent(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setTrigAccent(void *_o, yacmemptr _args           ) {((AR_Pattern*)_o)->setTrigAccent(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getTrigSwing(void *_o, yacmemptr _args            ) {return (sSI)((AR_Pattern*)_o)->getTrigSwing(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setTrigSwing(void *_o, yacmemptr _args            ) {((AR_Pattern*)_o)->setTrigSwing(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getTrigSlide(void *_o, yacmemptr _args            ) {return (sSI)((AR_Pattern*)_o)->getTrigSlide(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setTrigSlide(void *_o, yacmemptr _args            ) {((AR_Pattern*)_o)->setTrigSlide(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getTrigLFOPLockSW(void *_o, yacmemptr _args       ) {return (sSI)((AR_Pattern*)_o)->getTrigLFOPLockSW(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setTrigLFOPlockSW(void *_o, yacmemptr _args       ) {((AR_Pattern*)_o)->setTrigLFOPlockSW(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getTrigLFOPLockEN(void *_o, yacmemptr _args       ) {return (sSI)((AR_Pattern*)_o)->getTrigLFOPLockEN(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setTrigLFOPlockEN(void *_o, yacmemptr _args       ) {((AR_Pattern*)_o)->setTrigLFOPlockEN(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getTrigSYNPLockSW(void *_o, yacmemptr _args       ) {return (sSI)((AR_Pattern*)_o)->getTrigSYNPLockSW(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setTrigSYNPlockSW(void *_o, yacmemptr _args       ) {((AR_Pattern*)_o)->setTrigSYNPlockSW(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getTrigSYNPLockEN(void *_o, yacmemptr _args       ) {return (sSI)((AR_Pattern*)_o)->getTrigSYNPLockEN(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setTrigSYNPlockEN(void *_o, yacmemptr _args       ) {((AR_Pattern*)_o)->setTrigSYNPlockEN(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getTrigSMPPLockSW(void *_o, yacmemptr _args       ) {return (sSI)((AR_Pattern*)_o)->getTrigSMPPLockSW(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setTrigSMPPlockSW(void *_o, yacmemptr _args       ) {((AR_Pattern*)_o)->setTrigSMPPlockSW(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getTrigSMPPLockEN(void *_o, yacmemptr _args       ) {return (sSI)((AR_Pattern*)_o)->getTrigSMPPLockEN(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setTrigSMPPlockEN(void *_o, yacmemptr _args       ) {((AR_Pattern*)_o)->setTrigSMPPlockEN(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getTrigENVPLockSW(void *_o, yacmemptr _args       ) {return (sSI)((AR_Pattern*)_o)->getTrigENVPLockSW(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setTrigENVPlockSW(void *_o, yacmemptr _args       ) {((AR_Pattern*)_o)->setTrigENVPlockSW(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getTrigENVPLockEN(void *_o, yacmemptr _args       ) {return (sSI)((AR_Pattern*)_o)->getTrigENVPLockEN(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setTrigENVPlockEN(void *_o, yacmemptr _args       ) {((AR_Pattern*)_o)->setTrigENVPlockEN(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
sSI   YAC_CALL AR_Pattern__getTrigless(void *_o, yacmemptr _args             ) {return (sSI)((AR_Pattern*)_o)->getTrigless(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL AR_Pattern__setTrigless(void *_o, yacmemptr _args             ) {((AR_Pattern*)_o)->setTrigless(_args.mem[0].si, _args.mem[1].si, _args.mem[2].si);}
#endif // YAC_NO_HOST
