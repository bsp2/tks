// ---- auto generated by YInG - the YAC interface generator (Fri, 8/Dec/2023 09:43:41)
#ifndef __YAC__analogrytm_h__
#define __YAC__analogrytm_h__

sUI                                          clid_AR_Global;
YAC_Template <AR_Global>                       *t_AR_Global;
sUI                                          clid_AR_Kit;
YAC_Template <AR_Kit>                          *t_AR_Kit;
sUI                                          clid_AR_Pattern;
YAC_Template <AR_Pattern>                      *t_AR_Pattern;
sUI                                          clid_AR_Settings;
YAC_Template <AR_Settings>                     *t_AR_Settings;
sUI                                          clid_AR_Sound;
YAC_Template <AR_Sound>                        *t_AR_Sound;

void YAC_CALL YAC_Init_analogrytm(YAC_Host *_host) {
	// --------------------------------- classes ---------------------------------
	   t_AR_Global                =new YAC_Template <AR_Global>(_host);
	clid_AR_Global                =                t_AR_Global->ctemplate.class_ID;
	   t_AR_Kit                   =new YAC_Template <AR_Kit>(_host);
	clid_AR_Kit                   =                t_AR_Kit->ctemplate.class_ID;
	   t_AR_Pattern               =new YAC_Template <AR_Pattern>(_host);
	clid_AR_Pattern               =                t_AR_Pattern->ctemplate.class_ID;
	   t_AR_Settings              =new YAC_Template <AR_Settings>(_host);
	clid_AR_Settings              =                t_AR_Settings->ctemplate.class_ID;
	   t_AR_Sound                 =new YAC_Template <AR_Sound>(_host);
	clid_AR_Sound                 =                t_AR_Sound->ctemplate.class_ID;
	// -------------------------------- functions --------------------------------

}

void YAC_CALL YAC_Exit_analogrytm(YAC_Host *_host) {
	delete t_AR_Global;
	delete t_AR_Kit;
	delete t_AR_Pattern;
	delete t_AR_Settings;
	delete t_AR_Sound;
}

#endif
