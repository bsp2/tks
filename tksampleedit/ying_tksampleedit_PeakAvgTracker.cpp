// ---- ying_tksampleedit_PeakAvgTracker.cpp: auto generated by YInG - the YAC interface generator (Thu, 18/Sep/2025 23:15:52)

#ifndef YAC_NO_HOST
void  YAC_CALL PeakAvgTracker__reset(void *                        );
void  YAC_CALL PeakAvgTracker__process(void *, yacmemptr           );
sF32  YAC_CALL PeakAvgTracker__getPeak(void *                      );
sF32  YAC_CALL PeakAvgTracker__getAvg(void *                       );
#endif // YAC_NO_HOST

// ------------------ YAC class "PeakAvgTracker" reflection map (implementation) ------------------
sUI          YAC_VCALL PeakAvgTracker::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL PeakAvgTracker::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL PeakAvgTracker::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL PeakAvgTracker::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL PeakAvgTracker::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL PeakAvgTracker::yacMethodGetNum                  (void) {return 5;}
const char **YAC_VCALL PeakAvgTracker::yacMethodGetNames                (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"operator", "reset", "process", "getPeak", "getAvg"}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL PeakAvgTracker::yacMethodGetNumParameters        (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={2, 0, 1, 0, 0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI  **YAC_VCALL PeakAvgTracker::yacMethodGetParameterTypes       (void) {
#ifndef YAC_NO_HOST
static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={2,};static const sUI rt3[]={0,};static const sUI rt4[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char***YAC_VCALL PeakAvgTracker::yacMethodGetParameterObjectTypes (void) {
#ifndef YAC_NO_HOST
static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const sUI   *YAC_VCALL PeakAvgTracker::yacMethodGetReturnTypes          (void) {
#ifndef YAC_NO_HOST
static const sUI r[]={4, 0, 0, 2, 2}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const char **YAC_VCALL PeakAvgTracker::yacMethodGetReturnObjectTypes    (void) {
#ifndef YAC_NO_HOST
static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
const void **YAC_VCALL PeakAvgTracker::yacMethodGetAdr                  (void) {
#ifndef YAC_NO_HOST
static const void *r[]={(void*)Object__operator, (void*)PeakAvgTracker__reset, (void*)PeakAvgTracker__process, (void*)PeakAvgTracker__getPeak, (void*)PeakAvgTracker__getAvg}; return r;
#else
return 0;
#endif // YAC_NO_HOST
}
sUI          YAC_VCALL PeakAvgTracker::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL PeakAvgTracker::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL PeakAvgTracker::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL PeakAvgTracker::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(PeakAvgTracker, "PeakAvgTracker");

#ifndef YAC_NO_HOST
void  YAC_CALL PeakAvgTracker__reset(void *_o                                ) {((PeakAvgTracker*)_o)->reset();}
void  YAC_CALL PeakAvgTracker__process(void *_o, yacmemptr _args             ) {((PeakAvgTracker*)_o)->process(_args.mem[0].f32);}
sF32  YAC_CALL PeakAvgTracker__getPeak(void *_o                              ) {return (sF32)((PeakAvgTracker*)_o)->getPeak();}
sF32  YAC_CALL PeakAvgTracker__getAvg(void *_o                               ) {return (sF32)((PeakAvgTracker*)_o)->getAvg();}
#endif // YAC_NO_HOST
