// ---- ying_network_Network.cpp: auto generated by YInG - the YAC interface generator (Wed, 31/Jul/2019 21:27:24)

void  YAC_CALL Network___getError   (void *, YAC_Value *           );
void  YAC_CALL Network___resolveHost(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Network___resolveIP  (void *, yacmemptr, YAC_Value *);
sSI   YAC_CALL Network___allocSocketSet(void *, yacmemptr          );
void  YAC_CALL Network___freeSocketSet(void *                      );
sSI   YAC_CALL Network___addSocket  (void *, yacmemptr             );
sSI   YAC_CALL Network___addTCPSocket(void *, yacmemptr            );
sSI   YAC_CALL Network___addUDPSocket(void *, yacmemptr            );
sSI   YAC_CALL Network___removeSocket(void *, yacmemptr            );
sSI   YAC_CALL Network___checkSockets(void *, yacmemptr            );

// ------------------ YAC class "_Network" reflection map (implementation) ------------------
sUI          YAC_VCALL _Network::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _Network::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _Network::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _Network::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _Network::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _Network::yacMethodGetNum                  (void) {return 11;}
const char **YAC_VCALL _Network::yacMethodGetNames                (void) {static const char *r[]={"operator", "getError", "resolveHost", "resolveIP", "allocSocketSet", "freeSocketSet", "addSocket", "addTCPSocket", "addUDPSocket", "removeSocket", "checkSockets"}; return r;}
const sUI   *YAC_VCALL _Network::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 0, 2, 1, 1, 0, 1, 1, 1, 1, 1}; return r;}
const sUI  **YAC_VCALL _Network::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={0,};static const sUI rt2[]={3, 1,};static const sUI rt3[]={3,};static const sUI rt4[]={1,};static const sUI rt5[]={0,};static const sUI rt6[]={3,};static const sUI rt7[]={3,};static const sUI rt8[]={3,};static const sUI rt9[]={3,};static const sUI rt10[]={1,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10}; return r;}
const char***YAC_VCALL _Network::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0, (const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10}; return r;}
const sUI   *YAC_VCALL _Network::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 4, 4, 4, 1, 0, 1, 1, 1, 1, 1}; return r;}
const char **YAC_VCALL _Network::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL _Network::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)Network___getError, (void*)Network___resolveHost, (void*)Network___resolveIP, (void*)Network___allocSocketSet, (void*)Network___freeSocketSet, (void*)Network___addSocket, (void*)Network___addTCPSocket, (void*)Network___addUDPSocket, (void*)Network___removeSocket, (void*)Network___checkSockets}; return r;}
sUI          YAC_VCALL _Network::yacConstantGetNum                (void) {return 2;}
const char **YAC_VCALL _Network::yacConstantGetNames              (void) {static const char*r[]={"INADDR_ANY", "INADDR_NONE"}; return r;}
const sUI   *YAC_VCALL _Network::yacConstantGetTypes              (void) {static const sUI r[]={1, 1}; return r;}
yacmemptr    YAC_VCALL _Network::yacConstantGetValues             (void) {static sUI r[2]; yacmemptr m; m.ui=r; m.si[0]=(sSI)0;m.si[1]=(sSI)0xFFFFFFFF;; return m;}

YAC_C(_Network, "Network");

void  YAC_CALL Network___getError   (void *_o, YAC_Value *_r                 ) {((_Network*)_o)->_getError(_r);}
void  YAC_CALL Network___resolveHost(void *_o, yacmemptr _args, YAC_Value *_r) {((_Network*)_o)->_resolveHost(_args.mem[0].o, _args.mem[1].si, _r);}
void  YAC_CALL Network___resolveIP  (void *_o, yacmemptr _args, YAC_Value *_r) {((_Network*)_o)->_resolveIP(_args.mem[0].o, _r);}
sSI   YAC_CALL Network___allocSocketSet(void *_o, yacmemptr _args            ) {return (sSI)((_Network*)_o)->_allocSocketSet(_args.mem[0].si);}
void  YAC_CALL Network___freeSocketSet(void *_o                              ) {((_Network*)_o)->_freeSocketSet();}
sSI   YAC_CALL Network___addSocket  (void *_o, yacmemptr _args               ) {return (sSI)((_Network*)_o)->_addSocket(_args.mem[0].o);}
sSI   YAC_CALL Network___addTCPSocket(void *_o, yacmemptr _args              ) {return (sSI)((_Network*)_o)->_addTCPSocket(_args.mem[0].o);}
sSI   YAC_CALL Network___addUDPSocket(void *_o, yacmemptr _args              ) {return (sSI)((_Network*)_o)->_addUDPSocket(_args.mem[0].o);}
sSI   YAC_CALL Network___removeSocket(void *_o, yacmemptr _args              ) {return (sSI)((_Network*)_o)->_removeSocket(_args.mem[0].o);}
sSI   YAC_CALL Network___checkSockets(void *_o, yacmemptr _args              ) {return (sSI)((_Network*)_o)->_checkSockets(_args.mem[0].si);}
