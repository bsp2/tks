// ---- ying_network_IPAddress.cpp: auto generated by YInG - the YAC interface generator (Wed, 31/Jul/2019 21:27:24)

void  YAC_CALL IPAddress___setHost  (void *, yacmemptr             );
sSI   YAC_CALL IPAddress___getHost  (void *                        );
void  YAC_CALL IPAddress___setPort  (void *, yacmemptr             );
sSI   YAC_CALL IPAddress___getPort  (void *                        );
sSI   YAC_CALL IPAddress___setHostByName(void *, yacmemptr         );
void  YAC_CALL IPAddress___getHostName(void *, YAC_Value *         );
void  YAC_CALL IPAddress___init     (void *, yacmemptr             );
void  YAC_CALL IPAddress___getHostString(void *, YAC_Value *       );

// ------------------ YAC class "_IPAddress" reflection map (implementation) ------------------
sUI          YAC_VCALL _IPAddress::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _IPAddress::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _IPAddress::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _IPAddress::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _IPAddress::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _IPAddress::yacMethodGetNum                  (void) {return 9;}
const char **YAC_VCALL _IPAddress::yacMethodGetNames                (void) {static const char *r[]={"operator", "setHost", "getHost", "setPort", "getPort", "setHostByName", "getHostName", "init", "getHostString"}; return r;}
const sUI   *YAC_VCALL _IPAddress::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 1, 0, 1, 0, 1, 0, 2, 0}; return r;}
const sUI  **YAC_VCALL _IPAddress::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={1,};static const sUI rt2[]={0,};static const sUI rt3[]={1,};static const sUI rt4[]={0,};static const sUI rt5[]={3,};static const sUI rt6[]={0,};static const sUI rt7[]={1, 1,};static const sUI rt8[]={0,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8}; return r;}
const char***YAC_VCALL _IPAddress::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0,};static const char *rs5[]={"String",};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0, (const char*)0,};static const char *rs8[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8}; return r;}
const sUI   *YAC_VCALL _IPAddress::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 0, 1, 0, 1, 1, 4, 0, 4}; return r;}
const char **YAC_VCALL _IPAddress::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL _IPAddress::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)IPAddress___setHost, (void*)IPAddress___getHost, (void*)IPAddress___setPort, (void*)IPAddress___getPort, (void*)IPAddress___setHostByName, (void*)IPAddress___getHostName, (void*)IPAddress___init, (void*)IPAddress___getHostString}; return r;}
sUI          YAC_VCALL _IPAddress::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _IPAddress::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _IPAddress::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _IPAddress::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(_IPAddress, "IPAddress");

void  YAC_CALL IPAddress___setHost  (void *_o, yacmemptr _args               ) {((_IPAddress*)_o)->_setHost(_args.mem[0].si);}
sSI   YAC_CALL IPAddress___getHost  (void *_o                                ) {return (sSI)((_IPAddress*)_o)->_getHost();}
void  YAC_CALL IPAddress___setPort  (void *_o, yacmemptr _args               ) {((_IPAddress*)_o)->_setPort(_args.mem[0].si);}
sSI   YAC_CALL IPAddress___getPort  (void *_o                                ) {return (sSI)((_IPAddress*)_o)->_getPort();}
sSI   YAC_CALL IPAddress___setHostByName(void *_o, yacmemptr _args           ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((_IPAddress*)_o)->_setHostByName((YAC_String*)_args.mem[0].o);}return 0;}
void  YAC_CALL IPAddress___getHostName(void *_o, YAC_Value *_r               ) {((_IPAddress*)_o)->_getHostName(_r);}
void  YAC_CALL IPAddress___init     (void *_o, yacmemptr _args               ) {((_IPAddress*)_o)->_init(_args.mem[0].si, _args.mem[1].si);}
void  YAC_CALL IPAddress___getHostString(void *_o, YAC_Value *_r             ) {((_IPAddress*)_o)->_getHostString(_r);}
