// ---- ying_network_UDPSocket.cpp: auto generated by YInG - the YAC interface generator (Wed, 31/Jul/2019 21:27:25)

sSI   YAC_CALL UDPSocket___open     (void *, yacmemptr             );
void  YAC_CALL UDPSocket___close    (void *                        );
void  YAC_CALL UDPSocket___getPeerAddress(void *, yacmemptr, YAC_Value *);
sSI   YAC_CALL UDPSocket___bind     (void *, yacmemptr             );
sSI   YAC_CALL UDPSocket___send     (void *, yacmemptr             );
sSI   YAC_CALL UDPSocket___recv     (void *, yacmemptr             );
sSI   YAC_CALL UDPSocket___socketReady(void *                      );
void  YAC_CALL UDPSocket___unbind   (void *, yacmemptr             );

// ------------------ YAC class "_UDPSocket" reflection map (implementation) ------------------
sUI          YAC_VCALL _UDPSocket::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL _UDPSocket::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL _UDPSocket::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL _UDPSocket::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL _UDPSocket::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL _UDPSocket::yacMethodGetNum                  (void) {return 9;}
const char **YAC_VCALL _UDPSocket::yacMethodGetNames                (void) {static const char *r[]={"operator", "open", "close", "getPeerAddress", "bind", "send", "recv", "socketReady", "unbind"}; return r;}
const sUI   *YAC_VCALL _UDPSocket::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 1, 0, 1, 2, 2, 1, 0, 1}; return r;}
const sUI  **YAC_VCALL _UDPSocket::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={1,};static const sUI rt2[]={0,};static const sUI rt3[]={1,};static const sUI rt4[]={1, 3,};static const sUI rt5[]={1, 3,};static const sUI rt6[]={3,};static const sUI rt7[]={0,};static const sUI rt8[]={1,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8}; return r;}
const char***YAC_VCALL _UDPSocket::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={(const char*)0,};static const char *rs2[]={(const char*)0,};static const char *rs3[]={(const char*)0,};static const char *rs4[]={(const char*)0, (const char*)0,};static const char *rs5[]={(const char*)0, (const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={(const char*)0,};static const char *rs8[]={(const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8}; return r;}
const sUI   *YAC_VCALL _UDPSocket::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 1, 0, 4, 1, 1, 1, 1, 0}; return r;}
const char **YAC_VCALL _UDPSocket::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL _UDPSocket::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)UDPSocket___open, (void*)UDPSocket___close, (void*)UDPSocket___getPeerAddress, (void*)UDPSocket___bind, (void*)UDPSocket___send, (void*)UDPSocket___recv, (void*)UDPSocket___socketReady, (void*)UDPSocket___unbind}; return r;}
sUI          YAC_VCALL _UDPSocket::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL _UDPSocket::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL _UDPSocket::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL _UDPSocket::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(_UDPSocket, "UDPSocket");

sSI   YAC_CALL UDPSocket___open     (void *_o, yacmemptr _args               ) {return (sSI)((_UDPSocket*)_o)->_open(_args.mem[0].si);}
void  YAC_CALL UDPSocket___close    (void *_o                                ) {((_UDPSocket*)_o)->_close();}
void  YAC_CALL UDPSocket___getPeerAddress(void *_o, yacmemptr _args, YAC_Value *_r) {((_UDPSocket*)_o)->_getPeerAddress(_args.mem[0].si, _r);}
sSI   YAC_CALL UDPSocket___bind     (void *_o, yacmemptr _args               ) {return (sSI)((_UDPSocket*)_o)->_bind(_args.mem[0].si, _args.mem[1].o);}
sSI   YAC_CALL UDPSocket___send     (void *_o, yacmemptr _args               ) {return (sSI)((_UDPSocket*)_o)->_send(_args.mem[0].si, _args.mem[1].o);}
sSI   YAC_CALL UDPSocket___recv     (void *_o, yacmemptr _args               ) {return (sSI)((_UDPSocket*)_o)->_recv(_args.mem[0].o);}
sSI   YAC_CALL UDPSocket___socketReady(void *_o                              ) {return (sSI)((_UDPSocket*)_o)->_socketReady();}
void  YAC_CALL UDPSocket___unbind   (void *_o, yacmemptr _args               ) {((_UDPSocket*)_o)->_unbind(_args.mem[0].si);}
