
use tkzip;

Zip zip;

String pathNameIn = "tests/tkzip-20200104.zip";
String pathNameOut = "tests/tkzip-create.zip";

// Read a zip file
if(zip.openLocalReadOnly(pathNameIn))
{
   trace "[...] ok, zip \""+pathNameIn+"\" opened for reading";
   int numEntries = zip.numEntries;
   trace "[...] zip has "+numEntries+" entries";

   int idx = 0;
   loop(numEntries)
   {
      String name = zip.getNameByIndex(idx);
      trace "[...]------------------------------------------------------------------------";
      trace "[...] entry["+idx+"] name=\""+name+"\"";
      trace "[...]    getIndexByName() => "+zip.getIndexByName(name);
      trace "[...]    getSizeByIndex() => "+zip.getSizeByIndex(idx);
      trace "[...]    getCompressedSizeByIndex() => "+zip.getCompressedSizeByIndex(idx);
      trace "[...] file content as string=\""+zip.loadStringByIndex(idx)+"\"";

      // Next file entry
      idx++;
   }
   zip.close();
}
else
{
   trace "[---] failed to open \""+pathNameIn+"\" for reading";
}

// Write a zip file (create)
if(zip.createLocal(pathNameOut))
{
   // add String
   zip.addFile("test.txt", "data: hello, world");

   // add IntArray
   IntArray ia; ia.identity(256);
   zip.addFile("ia256.bin", ia);

   // add Buffer
   Buffer b; b.size = 11;
   b.byteOrder = YAC_LITTLE_ENDIAN;
   b.i8 = '!';
   b.i16 = 0xFFFF;
   b.i32 = 0x44894489;
   b.f32 = 3.1415;
   b.offset = 0; // addFile looks at size, not io offset
   zip.addFile("b11.bin", b);

   // add Stream
   File f;
   if(f.openLocal("test.tks", IOS_IN))
   {
      zip.addFile("test.tks", f);
      f.close();
   }

   zip.close();
}
else
{
   trace "[---] failed to open \""+pathNameOut+"\" for writing";
}


trace "[...] exiting";
