// ---- ying_zip_Zip.cpp: auto generated by YInG - the YAC interface generator (Fri, 10/Jan/2020 17:06:14)

sSI   YAC_CALL Zip__openLocalReadOnly(void *, yacmemptr            );
sSI   YAC_CALL Zip__openLocal       (void *, yacmemptr             );
sSI   YAC_CALL Zip__createLocal     (void *, yacmemptr             );
void  YAC_CALL Zip__close           (void *                        );
sSI   YAC_CALL Zip__getNumEntries   (void *                        );
void  YAC_CALL Zip__getNameByIndex  (void *, yacmemptr, YAC_Value *);
sSI   YAC_CALL Zip__getIndexByName  (void *, yacmemptr             );
void  YAC_CALL Zip__getSizeByIndex  (void *, yacmemptr, YAC_Value *);
void  YAC_CALL Zip__getCompressedSizeByIndex(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Zip__loadStringByIndex(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Zip__loadStringByName(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Zip__loadBufferByIndex(void *, yacmemptr, YAC_Value *);
void  YAC_CALL Zip__loadBufferByName(void *, yacmemptr, YAC_Value *);
sSI   YAC_CALL Zip__addDir          (void *, yacmemptr             );
sSI   YAC_CALL Zip__addFile         (void *, yacmemptr             );

// ------------------ YAC class "Zip" reflection map (implementation) ------------------
sUI          YAC_VCALL Zip::yacMemberGetNum                  (void) {return 0;}
const char **YAC_VCALL Zip::yacMemberGetNames                (void) {return 0;}
const sUI   *YAC_VCALL Zip::yacMemberGetTypes                (void) {return 0;}
const char **YAC_VCALL Zip::yacMemberGetObjectTypes          (void) {return 0;}
const sU8  **YAC_VCALL Zip::yacMemberGetOffsets              (void) {return (const sU8**)0;}
sUI          YAC_VCALL Zip::yacMethodGetNum                  (void) {return 16;}
const char **YAC_VCALL Zip::yacMethodGetNames                (void) {static const char *r[]={"operator", "openLocalReadOnly", "openLocal", "createLocal", "close", "getNumEntries", "getNameByIndex", "getIndexByName", "getSizeByIndex", "getCompressedSizeByIndex", "loadStringByIndex", "loadStringByName", "loadBufferByIndex", "loadBufferByName", "addDir", "addFile"}; return r;}
const sUI   *YAC_VCALL Zip::yacMethodGetNumParameters        (void) {static const sUI r[]={2, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2}; return r;}
const sUI  **YAC_VCALL Zip::yacMethodGetParameterTypes       (void) {static const sUI rt0[]={1,3};static const sUI rt1[]={3,};static const sUI rt2[]={3,};static const sUI rt3[]={3,};static const sUI rt4[]={0,};static const sUI rt5[]={0,};static const sUI rt6[]={1,};static const sUI rt7[]={3,};static const sUI rt8[]={1,};static const sUI rt9[]={1,};static const sUI rt10[]={1,};static const sUI rt11[]={3,};static const sUI rt12[]={1,};static const sUI rt13[]={3,};static const sUI rt14[]={3,};static const sUI rt15[]={3, 3,};static const sUI *r[]={rt0, rt1, rt2, rt3, rt4, rt5, rt6, rt7, rt8, rt9, rt10, rt11, rt12, rt13, rt14, rt15}; return r;}
const char***YAC_VCALL Zip::yacMethodGetParameterObjectTypes (void) {static const char *rs0[]={0,"",};static const char *rs1[]={"String",};static const char *rs2[]={"String",};static const char *rs3[]={"String",};static const char *rs4[]={(const char*)0,};static const char *rs5[]={(const char*)0,};static const char *rs6[]={(const char*)0,};static const char *rs7[]={"String",};static const char *rs8[]={(const char*)0,};static const char *rs9[]={(const char*)0,};static const char *rs10[]={(const char*)0,};static const char *rs11[]={"String",};static const char *rs12[]={(const char*)0,};static const char *rs13[]={"String",};static const char *rs14[]={"String",};static const char *rs15[]={"String", (const char*)0,};static const char**r[]={rs0, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10, rs11, rs12, rs13, rs14, rs15}; return r;}
const sUI   *YAC_VCALL Zip::yacMethodGetReturnTypes          (void) {static const sUI r[]={4, 1, 1, 1, 0, 1, 4, 1, 4, 4, 4, 4, 4, 4, 1, 1}; return r;}
const char **YAC_VCALL Zip::yacMethodGetReturnObjectTypes    (void) {static const char *r[]={"", (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0, (const char*)0}; return r;}
const void **YAC_VCALL Zip::yacMethodGetAdr                  (void) {static const void *r[]={(void*)Object__operator, (void*)Zip__openLocalReadOnly, (void*)Zip__openLocal, (void*)Zip__createLocal, (void*)Zip__close, (void*)Zip__getNumEntries, (void*)Zip__getNameByIndex, (void*)Zip__getIndexByName, (void*)Zip__getSizeByIndex, (void*)Zip__getCompressedSizeByIndex, (void*)Zip__loadStringByIndex, (void*)Zip__loadStringByName, (void*)Zip__loadBufferByIndex, (void*)Zip__loadBufferByName, (void*)Zip__addDir, (void*)Zip__addFile}; return r;}
sUI          YAC_VCALL Zip::yacConstantGetNum                (void) {return 0;}
const char **YAC_VCALL Zip::yacConstantGetNames              (void) {static const char*r[]={""}; return r;}
const sUI   *YAC_VCALL Zip::yacConstantGetTypes              (void) {static const sUI r[]={0}; return r;}
yacmemptr    YAC_VCALL Zip::yacConstantGetValues             (void) {static sUI r[]={0,};yacmemptr m; m.ui=(sUI*)r; return m;}

YAC_C(Zip, "Zip");

sSI   YAC_CALL Zip__openLocalReadOnly(void *_o, yacmemptr _args              ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((Zip*)_o)->openLocalReadOnly((YAC_String*)_args.mem[0].o);}return 0;}
sSI   YAC_CALL Zip__openLocal       (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((Zip*)_o)->openLocal((YAC_String*)_args.mem[0].o);}return 0;}
sSI   YAC_CALL Zip__createLocal     (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((Zip*)_o)->createLocal((YAC_String*)_args.mem[0].o);}return 0;}
void  YAC_CALL Zip__close           (void *_o                                ) {((Zip*)_o)->close();}
sSI   YAC_CALL Zip__getNumEntries   (void *_o                                ) {return (sSI)((Zip*)_o)->getNumEntries();}
void  YAC_CALL Zip__getNameByIndex  (void *_o, yacmemptr _args, YAC_Value *_r) {((Zip*)_o)->getNameByIndex(_args.mem[0].si, _r);}
sSI   YAC_CALL Zip__getIndexByName  (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((Zip*)_o)->getIndexByName((YAC_String*)_args.mem[0].o);}return 0;}
void  YAC_CALL Zip__getSizeByIndex  (void *_o, yacmemptr _args, YAC_Value *_r) {((Zip*)_o)->getSizeByIndex(_args.mem[0].si, _r);}
void  YAC_CALL Zip__getCompressedSizeByIndex(void *_o, yacmemptr _args, YAC_Value *_r) {((Zip*)_o)->getCompressedSizeByIndex(_args.mem[0].si, _r);}
void  YAC_CALL Zip__loadStringByIndex(void *_o, yacmemptr _args, YAC_Value *_r) {((Zip*)_o)->loadStringByIndex(_args.mem[0].si, _r);}
void  YAC_CALL Zip__loadStringByName(void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ ((Zip*)_o)->loadStringByName((YAC_String*)_args.mem[0].o, _r);}}
void  YAC_CALL Zip__loadBufferByIndex(void *_o, yacmemptr _args, YAC_Value *_r) {((Zip*)_o)->loadBufferByIndex(_args.mem[0].si, _r);}
void  YAC_CALL Zip__loadBufferByName(void *_o, yacmemptr _args, YAC_Value *_r) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ ((Zip*)_o)->loadBufferByName((YAC_String*)_args.mem[0].o, _r);}}
sSI   YAC_CALL Zip__addDir          (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((Zip*)_o)->addDir((YAC_String*)_args.mem[0].o);}return 0;}
sSI   YAC_CALL Zip__addFile         (void *_o, yacmemptr _args               ) {if(YAC_BCHK(_args.mem[0].o, YAC_CLID_STRING)){ return (sSI)((Zip*)_o)->addFile((YAC_String*)_args.mem[0].o, _args.mem[1].o);}return 0;}
