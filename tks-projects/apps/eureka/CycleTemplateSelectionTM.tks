// ----
// ---- file   : CycleTemplateSelectionTM.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2025 by Bastian Spiegel.
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "syntracker" midi sequencer.
// ----
// ---- created: 11Jun2025
// ---- changed: 
// ----
// ----
// ----

module MCycleTemplateSelectionTM;

use namespace ui;
use namespace st2;


// <class.png>
class CycleTemplateSelectionTM : TableModel {

   define int COL_NR     = 0;
   define int COL_NAME   = 1;

   StringArray *templates;


   // <method_get.png>
   public virtual getNumColumns() : int {
      return 2;
   }

   // <method_get.png>
   public virtual getColumnCaption(int _col) : String {
      return ["Nr", "Template"].get(_col);
   }

   // <method_get.png>
   public virtual getNumRows() : int {
      return (null != templates) ? templates.numElements : 0;
   }

   // <method_get.png>
   public virtual getCellCaption(int _col, int _row) : String {
      String s <= (null != templates) ? templates.get(_row) : null;
      if(null != s)
      {
         switch(_col)
         {
            case COL_NR:
               return String(_row + 1);

            case COL_NAME:
               return s;
         }
      }
   }

   // <method_get.png>
   public virtual getMinimumColumnWidth(int _col) : int {
      switch(_col)
      {
         case COL_NR:
            return 40;

         case COL_NAME:
            return 300;
      }
   }

   // <method_get.png>
   public virtual getPreferredColumnWidth(int _col) : int {
      switch(_col)
      {
         case COL_NR:
            return 40;

         case COL_NAME:
            return 300;
      }
   }

}
