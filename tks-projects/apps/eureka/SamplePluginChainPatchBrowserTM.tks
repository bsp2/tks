// ----
// ---- file   : SamplePluginChainPatchBrowserTM.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2021-2024 by Bastian Spiegel.
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "syntracker" midi sequencer.
// ----
// ---- created: 09Feb2021
// ---- changed: 27Sep2024
// ----
// ----
// ----

module MSamplePluginChainPatchBrowserTM;

use namespace ui;
use namespace st2;


// <class.png>
class SamplePluginChainPatchBrowserTM : TableModel {

   define int COL_NAME = 0;

   StringArray *patch_names;  // ref to PatchBrowserDialog.patch_names


   // <method_get.png>
   public virtual getNumColumns() : int {
      return 1;
   }

   // <method_get.png>
   public virtual getColumnCaption(int _col) : String {
      return ["Name"][_col];
   }

   // <method_get.png>
   public virtual getNumRows() : int {
      if(null != patch_names)
         return patch_names.numElements;
      else
         return 0;
   }

   // <method_get.png>
   public virtual getCellCaption(int _col, _row) : String {
      if(null != patch_names)
      {
         String patchName <= patch_names.get(_row);
         switch(_col)
         {
            case COL_NAME:
               return patchName;
         }
      }
      return "";
   }

   // <method_get.png>
   public virtual getMinimumColumnWidth(int _col) : int {
      switch(_col)
      {
         case COL_NAME:
            return 200;
      }
   }

   // <method_get.png>
   public virtual getPreferredColumnWidth(int _col) : int {
      switch(_col)
      {
         case COL_NAME:
            return 400;
      }
   }

}
