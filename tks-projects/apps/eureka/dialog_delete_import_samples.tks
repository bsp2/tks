// ----
// ---- file   : dialog_delete_import_samples.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2023 by Bastian Spiegel. 
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See 
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "syntracker" sequencer.
// ----
// ---- changed: 25Mar2023
// ----
// ----
// ----
module MDialog_DeleteImportSamples;

use namespace ui;
use namespace st2;


class Dialog_DeleteImportSamples extends ActionConsumer, ActionProvider {

   define String ACTION_DELETE;
   define String ACTION_CANCEL;

   ChoiceDialog *d;
   ActionConsumer *listener;

   public method run(int _num, ActionConsumer _listener) {

      listener <= _listener;

      d <= ChoiceDialog.New("Delete Source Samples", 
                            "Are you sure you want to delete "+_num+" source sample"+Utils.GetPluralString(_num)+" ?",
                            "\aDelete", "\aCancel", null,
                            "choice",
                            this
                            );

      d.setMessageFont("big7");
      d.setButtonFont("big3");
      d.resizeToMinimum();
      d.showCentered();
   }

   // <method_get.png>
   public virtual getProvidedActionNames() : StringArray {
      return [ACTION_DELETE, ACTION_CANCEL];
   }
    
   public virtual consumeAction(IntAction _action) : boolean {
      if(_action.getActionProvider() == d)
      {
         d <= null; // Delete dialog
         switch(_action.getIntValue())
         {
            case ChoiceDialog.SELECT_YES:
               if(null != listener)
               {
                  listener.consumeAction(Action.New(ACTION_DELETE, this));
               }
               return true;

            case ChoiceDialog.SELECT_NO:
               if(null != listener)
               {
                  listener.consumeAction(Action.New(ACTION_CANCEL, this));
               }
               return true;
         }
      }
      return false;
   }
}
