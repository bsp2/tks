// ----
// ---- file   : dialogs.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2018-2024 by Bastian Spiegel.
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "syntracker" sequencer.
// ----
// ---- created: 22Jan2018
// ---- changed: 27Mar2018, 29Mar2018, 28Dec2018, 04May2019, 08Sep2019, 30Jan2021, 15Apr2021
// ----          23Aug2021, 13May2022, 15Sep2023, 15Sep2024, 05Oct2024
// ----
// ----
// ----
module MDialogs;

use namespace ui;
namespace st2;


// <class.png>
class Dialogs {

   public static CurveDialog   *curve_dialog;
   public static ResynthDialog *resynth_dialog;
   public static ScopeDialog   *scope_dialog;


   // <init.png>
   static Init() : boolean {
      boolean ret = true;

      ret = ret && InitCurveDialog();
      ret = ret && InitResynthDialog();
      ret = ret && InitScopeDialog();

      return ret;
   }

   // // <ui_init.png>
   static InitCurveDialog() : boolean {
      curve_dialog <= new CurveDialog;
      return curve_dialog.initCurveDialog();
   }

   // // <ui_init.png>
   static InitResynthDialog() : boolean {
      resynth_dialog <= new ResynthDialog;
      return resynth_dialog.initResynthDialog();
   }

   // // <ui_init.png>
   static InitScopeDialog() : boolean {
      scope_dialog <= new ScopeDialog;
      return scope_dialog.initScopeDialog();
   }

   // <ui_show.png>
   static ShowErrorDialog(String _title, _message) {
      InfoDialog d;

      Global.Debug(" --- ShowErrorDialog: title=\""+_title+"\" message=\""+_message+"\".");

      d <= InfoDialog.NewError(_title, _message, null);
      d.showCentered();
   }

   // <ui_show.png>
   static ShowTriadKeyHelpDialog(String _title, _message, ActionConsumer _recipient) {

      Global.Debug(" --- ShowTriadKeyHelpDialog: title=\""+_title+"\" message=\""+_message+"\".");

      KeyHelpDialog *dlg <= new KeyHelpDialog;
      dlg.showKeyHelpDialog(deref _title,
                            deref _message,
                            true/*bOkButton*/,
                            true/*bSendTriadKey*/,
                            _recipient
                            );
   }

   // <ui_show.png>
   static ShowCurveDialogEx(String          _title,
                            BezierEditState _envState,
                            Envelope        _env,
                            StEnvelope      _stEnvOrNull,
                            PointerArray    _mirrorEnvStates,
                            PointerArray    _mirrorEnvs,
                            PointerArray    _mirrorStEnvsOrNull,
                            String          _mtxNamedRecalc,
                            ActionConsumer  _listenerOrNull,
                            FloatArray      _sampleDataOrNull
                            ) : BezierEdit {
      return curve_dialog.showCurve(_title,
                                    _envState,
                                    _env,
                                    _stEnvOrNull,
                                    _mirrorEnvStates,
                                    _mirrorEnvs,
                                    _mirrorStEnvsOrNull,
                                    deref _mtxNamedRecalc,
                                    _listenerOrNull,
                                    deref _sampleDataOrNull
                                    );
   }

   // <ui_show.png>
   static ShowCurveDialog(String          _title,
                          BezierEditState _envState,
                          Envelope        _env,
                          StEnvelope      _stEnvOrNull,
                          PointerArray    _mirrorEnvStates,    // BezierEditState
                          PointerArray    _mirrorEnvDatas,     // Envelope/FloatArray
                          PointerArray    _mirrorStEnvsOrNull, // StEnvelope (for ADSR exponent)
                          String          _mtxNamedRecalc
                          ) : BezierEdit {
      return curve_dialog.showCurve(_title,
                                    _envState,
                                    _env,
                                    _stEnvOrNull,
                                    _mirrorEnvStates,
                                    _mirrorEnvDatas,
                                    _mirrorStEnvsOrNull,
                                    deref _mtxNamedRecalc,
                                    null/*listenerOrNull*/,
                                    null/*sampleData*/
                                    );
   }

   // <ui_show.png>
   static HideCurveDialog() {
      if(curve_dialog.isFloatingLayerVisible())
         curve_dialog.hide();
   }

   // <ui_show.png>
   static ShowResynthDialog() {
      resynth_dialog.showResynthDialog();
   }

   // <ui_show.png>
   static ShowScopeDialog() {
      if(!scope_dialog.isFloatingLayerVisible())
         scope_dialog.showScopeDialog();
   }

   // <ui_show.png>
   static HideScopeDialog() {
      if(scope_dialog.isFloatingLayerVisible())
         scope_dialog.hide();
   }

   // <ui_show.png>
   static ToggleScopeDialog() : boolean {
      if(scope_dialog.isFloatingLayerVisible())
      {
         scope_dialog.hide();
         return false;
      }
      else
      {
         scope_dialog.showScopeDialog();
         return true;
      }
   }

}
