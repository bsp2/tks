// ----
// ---- file   : MidiIndicator.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2018-2024 by Bastian Spiegel.
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "syntracker" midi/audio sequencer.
// ----
// ---- created: 24Feb2018
// ---- changed: 29Nov2018, 19Sep2024
// ----
// ----
// ----

module MMidiIndicator;

use namespace ui;
use namespace st2;


// <class.png>
class MidiIndicator : Panel {

   // suggested sizeY=23 (=> stepY=3)

   protected float activity;  // 0..1


   // <ui_init.png>
   public method initMidiIndicator() {
      initPanel();
      setEnableCollapse(true);
   }

   // <method_set.png>
   public method setActivity(float _f) {
      int old = int(activity*100);

      activity = _f;

      if(int(activity*100) != old)
         redraw();
   }

   // <ui_render.png>
   public virtual onDraw() {
      float w = getSizeX();
      float h = getSizeY();

      int a = mathClampf(activity, 0.0, 1.0) * 255;
      int c32 = lnfGetTintedColor(LookAndFeel.COLOR_WINDOW_BG, (a<<24)|#ffff00);

      UIRenderer.DrawFilledRectangle(0, 0, w, h, c32);

      UIRenderer.DrawDefaultSunkenBorder(0, 0, w, h);
   }

   // <ui_mouse.png>
   public virtual onMouseClick(MouseEvent _ev) : boolean {
      return true;
   }
}
