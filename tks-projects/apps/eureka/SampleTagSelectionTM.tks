// ----
// ---- file   : SampleTagSelectionTM.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2024 by Bastian Spiegel.
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "syntracker" midi sequencer.
// ----
// ---- created: 02Aug2024
// ---- changed: 03Aug2024
// ----
// ----
// ----

module MSampleTagSelectionTM;

use namespace ui;
use namespace st2;


// <class.png>
class SampleTagSelectionTM : TableModel {

   define int COL_NAME = 0;
   define int COL_FREQ = 1;  // when b_freq=true

   StringArray *tags;  // ref to SampleTagSelectionTM.tags

   boolean b_freq;


   // <method_get.png>
   public virtual getNumColumns() : int {
      return b_freq ? 2 : 1;
   }

   // <method_get.png>
   public virtual getColumnCaption(int _col) : String {
      return ["Name", "Freq"][_col];
   }

   // <method_get.png>
   public virtual getNumRows() : int {
      if(null != tags)
         return tags.numElements;
      else
         return 0;
   }

   // <method_get.png>
   public virtual getCellCaption(int _col, _row) : String {
      if(null != tags)
      {
         String sTag <= tags.get(_row);
         switch(_col)
         {
            case COL_NAME:
               return sTag;

            case COL_FREQ:
               HashTable ht <= Samples.ht_tag_frequency;
               return int(ht.get(sTag));
         }
      }
      return "";
   }

   // <method_get.png>
   public virtual getMinimumColumnWidth(int _col) : int {
      switch(_col)
      {
         case COL_NAME:
            return 140;

         case COL_FREQ:
            return 64;
      }
   }

   // <method_get.png>
   public virtual getPreferredColumnWidth(int _col) : int {
      switch(_col)
      {
         case COL_NAME:
            return 400;

         case COL_FREQ:
            return 64;
      }
   }

}
