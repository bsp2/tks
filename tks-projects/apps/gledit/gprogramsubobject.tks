// ----
// ---- file   : gprogramsubobject.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2020-2025 by Bastian Spiegel.
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "GL edit" application.
// ----
// ---- created: 12Jun2020
// ---- changed: 15Jun2020, 16Jun2020, 17Jun2020, 19Jun2020, 24Jun2020, 09Feb2025
// ----
// ----
// ----
module MGProgramSubObject;

use namespace ui;
use namespace gledit;


// <class.png>
class GProgramSubObject : GObject {
   GProgram *parent_program;


   // <method_get.png>
   public virtual getObjectPathDir() : String {
      local String r <= parent_program.getObjectPath();
      local String virtFolder <= getObjectPathVirtFolder();

      if(!virtFolder.isBlank())
      {
         r.append(".");
         r.append(virtFolder);
      }
      return deref r;
   }

   // <method.png>
   public method initIO() {
      // init/reinit
   }

   // <method_get.png>
   public virtual isAnon() : boolean {
      return false;
   }

   // <method.png>
   public virtual getNamespace() : GNamespace {
      return parent_program.getNamespace();
   }

   // <method.png>
   public virtual getNamespacePrefix() : String {
      local String r <= parent_program.getNamespacePrefix()+"_prg_"+parent_program.id+"_";
      return deref r;
   }

   // <method_find.png>
   public virtual isConnectedToAnyObject() : boolean {
      // auto-connected to parent_program object
      return true;
   }

   // <method_get.png>
   public method getParentProgram() : GProgram {
      return parent_program;
   }

}
