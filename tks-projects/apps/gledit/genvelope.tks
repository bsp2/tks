// ----
// ---- file   : genvelope.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2020 by Bastian Spiegel.
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "GL edit" application.
// ----
// ---- created: 12Jun2020
// ---- changed: 15Jun2020, 20Jun2020, 27Jun2020
// ----
// ----
// ----
module MGEnvelope;

use namespace ui;
use namespace gledit;


// <class.png>
class GEnvelope : GObject {

   // <method_init.png>
   public virtual init() {
      GObject::init();

      addOutput(GOutput.OUT_DEF, TYPE_FLOAT);
   }

   // <method_get.png>
   public virtual getObjectPathVirtFolder() : String {
      return "envelopes";
   }

   // <method_get.png>
   public virtual getPreferredIdPrefix() : String {
      return "env";
   }

   // <save.png>
   public virtual saveStateObject(local Stream ofs, local GConnectionWriter connectionWriter) {
      GObject::saveStateObject(ofs, connectionWriter);

      // Version
      ofs.i16 = 1;
   }

   // <load.png>
   public virtual loadStateObject(local Stream ifs) : boolean {
      // (note) base class object info is loaded by LoadStateObject

      // Version
      short ver = ifs.u16;

      if(1 <= ver <= 1)
      {
         // Succeeded
         return true;
      }
      else
      {
         trace "[---] GEnvelope::loadStateObject: invalid version "+ver+", this="+#(this)+" path="+getObjectPath();
      }
      return false;
   }

}
