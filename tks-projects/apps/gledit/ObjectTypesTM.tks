// ----
// ---- file   : ObjectTypesTM.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2020 by Bastian Spiegel. 
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See 
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "GL Edit" application.
// ----
// ---- created: 15Jun2020
// ---- changed: 
// ----          
// ----
// ----

module MObjectTypesTM;


use namespace ui;
use namespace gledit;


class ObjectTypesTMEntry {
   String name;

   Object *clazz;
}


class ObjectTypesTM : TableModel {

   define int COL_NAME = 0;

   ObjectTypesTMEntry*[]*entries;//PointerArray *entries;


   public virtual getNumColumns() : int {
      return 1;
   }
   
   public virtual getColumnCaption(int _col) : String {
      return ["Name"] [_col];
   }

   public virtual getNumRows() : int {
      return entries.numElements;
   }

   public virtual getCellRenderer(int _col, int _row, int _visibleRow) : Layer {
      Label lb <= TableModel::getCellRenderer(_col, _row, _visibleRow);

      // lb.setFontByName("big2");

      ObjectTypesTMEntry en <= entries.get(_row);

      if(null != en)
      {
         if(COL_NAME == _col)
         {
            // lb.setIcon(UI.GetIcon("arr2x_r"));
            lb.setInnerPadLeft(12);
         }
      }

      return lb;
   }

   public virtual getCellCaption(int _col, _row) : String {

      ObjectTypesTMEntry en <= entries.get(_row);

      switch(_col)
      {
         case COL_NAME:
            if(null != en)
            {
               return en.name;
            }
            else
            {
               return "-";
            }
            break;
      }
   }

   public virtual getMinimumColumnWidth(int _col) : int {
      switch(_col)
      {
         case COL_NAME:
            return 150;
      }
   }

   public virtual getPreferredColumnWidth(int _col) : int {
      switch(_col)
      {
         case COL_NAME:
            return 150;
      }
   }

}
