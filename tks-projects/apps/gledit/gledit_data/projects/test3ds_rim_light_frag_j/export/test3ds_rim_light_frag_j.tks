//
// auto-generated by GL Edit v2025.02.09 on 20250918-154931
//
module Mtest3ds_rim_light_frag_j;

use tksdl;
use tkopengl;
use tkmath;
use tkzip;

boolean b_glcore = getenv("TKSDL_GLCORE");
int vao_id;

float g_time;
int g_default_fb;
int g_default_vp_x;
int g_default_vp_y;
int g_default_vp_w;
int g_default_vp_h;
float g_dt;
int last_model_id;    // (note) set to 0 to force attrib/buffer rebind
int last_program_id;  // (note) set to 0 to force program rebind
boolean g_init;
int g_tri_count;
class OrbitCamView { float ctr_x; float ctr_y; float ctr_z; float rot_x; float rot_y; float rot_z; float eye_dist; }

// -------- section "default_scene1_render_fbo_model_3ds_prg_prg1" --------
ZGLShader default_scene1_render_fbo_model_3ds_prg_prg1;
String default_scene1_render_fbo_model_3ds_prg_prg1_vtx_src = "in vec4 a_position;
in vec2 a_uv;
in vec4 a_color;
in vec3 a_normal;
uniform mat4 u_transform;
uniform mat4 u_modelview;
uniform sampler2D u_tex;
uniform sampler2D u_tex_pal;
uniform sampler2D u_tex_rim_post;
uniform vec3 u_lightpos;
uniform vec3 u_lightpos_pal;
uniform mat4 u_modelview_inv;
uniform vec3 u_diffuse_color_bg;
uniform vec3 u_diffuse_color_fg;
out vec2 v_uv;
out vec4 v_color;
out vec3 v_normal;
out vec4 v_vertex;

void fxn1_rim_light_vs(out vec4 color, out vec3 normal, out vec4 vertex) {
   vec4 vtxNormal = vec4(a_normal,1);
   vtxNormal = u_modelview_inv * vtxNormal;
   normal = vtxNormal.xyz;
   vertex = u_modelview * a_position;
   vertex *= float( 1.07 ); // 0.6 3 2
   
}

void main() {
   vec4 tmp1_gl_Position;
   tmp1_gl_Position = a_position;
   mat4 tmp2_inTransform;
   tmp2_inTransform = u_transform;
   tmp1_gl_Position = tmp2_inTransform * tmp1_gl_Position;
   v_uv = vec2(0,0); /* not connected */
   vec4 tmp3_fxnOut_color;
   vec3 tmp4_fxnOut_normal;
   vec4 tmp5_fxnOut_vertex;
   fxn1_rim_light_vs(tmp3_fxnOut_color, tmp4_fxnOut_normal, tmp5_fxnOut_vertex);
   v_color = tmp3_fxnOut_color; // read GSource id=rim_light_vs output=color
   vec4 tmp6_fxnOut_color;
   vec3 tmp7_fxnOut_normal;
   vec4 tmp8_fxnOut_vertex;
   fxn1_rim_light_vs(tmp6_fxnOut_color, tmp7_fxnOut_normal, tmp8_fxnOut_vertex);
   v_normal = tmp7_fxnOut_normal; // read GSource id=rim_light_vs output=normal
   vec4 tmp9_fxnOut_color;
   vec3 tmp10_fxnOut_normal;
   vec4 tmp11_fxnOut_vertex;
   fxn1_rim_light_vs(tmp9_fxnOut_color, tmp10_fxnOut_normal, tmp11_fxnOut_vertex);
   v_vertex = tmp11_fxnOut_vertex; // read GSource id=rim_light_vs output=vertex
   gl_Position = tmp1_gl_Position;
   
}
";
String default_scene1_render_fbo_model_3ds_prg_prg1_frag_src = "uniform mat4 u_transform;
uniform mat4 u_modelview;
uniform sampler2D u_tex;
uniform sampler2D u_tex_pal;
uniform sampler2D u_tex_rim_post;
uniform vec3 u_lightpos;
uniform vec3 u_lightpos_pal;
uniform mat4 u_modelview_inv;
uniform vec3 u_diffuse_color_bg;
uniform vec3 u_diffuse_color_fg;
uniform vec4 u_fragcoord_off_scl;
uniform vec2 u_normcoord_scl;

in vec2 v_uv;
in vec4 v_color;
in vec3 v_normal;
in vec4 v_vertex;

out vec4 o_FragColor;


void fxn2_rim_light_fs(in vec4 in_color, in vec3 in_normal, in vec4 in_vertex, out vec4 out_color, in vec4 g_FragCoord, in vec2 g_NormCoord) {
   out_color = in_color;
   vec3 n = normalize(in_normal);
   vec3 c = vec3(0);
   #if 1
   float dRim = dot(u_lightpos, n);
   if(dRim < 0.674)
     dRim = 0.674;
   #if 1
   float dVtx = dot(-in_vertex.xyz, n);
   if(dVtx < 0.402)
     dVtx = 0.402;
   if(dVtx < 0.0)
     dVtx = 0.0;
   else
     dVtx = pow(dVtx, 0.121);
   dRim = mix(dRim, dVtx*dRim, 0.89);
   #endif
   if(dRim < 0.0)
   {
     dRim = 1.0;
   }
   else
   {
     dRim = 1.0 - dRim;
     dRim = pow(dRim, 1.491);
   }
   dRim = texture(u_tex, vec2(dRim, 0)).r;
   vec3 colorRim = mix(u_diffuse_color_bg, u_diffuse_color_fg, dRim);
   c += colorRim * 0.94;
   #if 1
   c.r = texture(u_tex_rim_post, vec2(c.r, 0)).r;
   c.g = texture(u_tex_rim_post, vec2(c.g, 0)).g;
   c.b = texture(u_tex_rim_post, vec2(c.b, 0)).b;
   #endif
   #endif
   #if 1
   float dPal = dot(u_lightpos_pal, n);
   if(dPal < 0.0)
   {
     dPal = 0.0;
   }
   else
   {
     dPal = pow(dPal, 0.308);
   }
   vec4 colorPal = texture(u_tex_pal, vec2(dPal,0));
   c += colorPal.rgb * (colorPal.a * 0.384);
   #endif
   out_color = vec4(c, 1);
   
}

void main() {
   vec4 g_FragCoord = vec4((gl_FragCoord.xy + u_fragcoord_off_scl.xy) * u_fragcoord_off_scl.zw, gl_FragCoord.zw);
   vec2 g_NormCoord = g_FragCoord.xy * u_normcoord_scl - 1.0;
   vec4 tmp12_fxnIn_in_color;
   vec3 tmp13_fxnIn_in_normal;
   vec4 tmp14_fxnIn_in_vertex;
   vec4 tmp15_fxnOut_out_color;
   tmp12_fxnIn_in_color = v_color;
   tmp13_fxnIn_in_normal = v_normal;
   tmp14_fxnIn_in_vertex = v_vertex;
   fxn2_rim_light_fs(tmp12_fxnIn_in_color, tmp13_fxnIn_in_normal, tmp14_fxnIn_in_vertex, tmp15_fxnOut_out_color, g_FragCoord, g_NormCoord);
   o_FragColor = tmp15_fxnOut_out_color; // read GSource id=rim_light_fs output=out_color
   
}
";
int default_scene1_render_fbo_model_3ds_prg_prg1__a_position;
int default_scene1_render_fbo_model_3ds_prg_prg1__a_uv;
int default_scene1_render_fbo_model_3ds_prg_prg1__a_color;
int default_scene1_render_fbo_model_3ds_prg_prg1__a_normal;
int default_scene1_render_fbo_model_3ds_prg_prg1__u_transform;
int default_scene1_render_fbo_model_3ds_prg_prg1__u_modelview;
int default_scene1_render_fbo_model_3ds_prg_prg1__u_tex;
int default_scene1_render_fbo_model_3ds_prg_prg1__u_tex_pal;
int default_scene1_render_fbo_model_3ds_prg_prg1__u_tex_rim_post;
int default_scene1_render_fbo_model_3ds_prg_prg1__u_lightpos;
int default_scene1_render_fbo_model_3ds_prg_prg1__u_lightpos_pal;
int default_scene1_render_fbo_model_3ds_prg_prg1__u_modelview_inv;
int default_scene1_render_fbo_model_3ds_prg_prg1__u_diffuse_color_bg;
int default_scene1_render_fbo_model_3ds_prg_prg1__u_diffuse_color_fg;
int default_scene1_render_fbo_model_3ds_prg_prg1_u_fragcoord_off_scl;
int default_scene1_render_fbo_model_3ds_prg_prg1_u_normcoord_scl;

// -------- section "default_scene1_render_fbo_model_model_3ds" --------

function CalcMat4Perspective(Matrix4f _d, float aspect, float fov, float znear, float zfar) {
   float top = tan(fov * 2PI * (1.0f/360.0f) * 0.5f) * znear;
   float left   = aspect*-top;
   float right  = aspect*top;
   float bottom = -top;

   float near2 = (2.0f * znear);

   float a = near2 / (right - left);
   float b = near2 / (top - bottom);

   float c = (right + left) / (right - left);
   float d = (top + bottom) / (top - bottom);
   float e = -(zfar + znear) / (zfar - znear);

   float f = -(2.0f * zfar * znear) / (zfar - znear);

   _d = [a,0,c,0,
         0,b,d,0,
         0,0,e,f,
         0,0,-1,0
         ];
   //trace "xxx mat4persp="+#(_d);
}
int g_mod_default_scene1_tween_cam_src_idx = 0;
int g_mod_default_scene1_tween_cam_dst_idx = 1;
float g_mod_default_scene1_tween_cam_t = 0.0f;
boolean g_mod_default_scene1_tween_cam_adv = false;
Envelope *default_scene1_env1_env_cam_t_val;
float ext_default_global_time = 0.0f;
Texture *default_scene1_render_fbo_model_3ds_tex_tex_light_curve;
Texture *default_scene1_render_fbo_model_3ds_tex_tex_pal;
Texture *default_scene1_render_fbo_model_3ds_tex_tex_rim_post;
int default_scene1_render_fbo_buf_model_3ds_a;
Buffer *default_scene1_render_fbo_buf_model_3ds_a_data;

// -------- section "default_scene1_ground_ground_prg_prg1" --------
ZGLShader default_scene1_ground_ground_prg_prg1;
String default_scene1_ground_ground_prg_prg1_vtx_src = "in vec3 a_position;
in vec2 a_uv;
uniform float u_time;
uniform mat4 u_transform;
uniform sampler2D u_tex;
out vec2 v_uv;
out vec2 v_pos;

void fxn3_src(out vec2 o_pos) {
   o_pos = vec2(a_position.xy);
   
}

void main() {
   vec4 tmp16_gl_Position;
   vec3 tmp17_position_src;
   tmp17_position_src = a_position;
   tmp16_gl_Position = vec4(tmp17_position_src.xyz, 1);
   mat4 tmp18_inTransform;
   tmp18_inTransform = u_transform;
   tmp16_gl_Position = tmp18_inTransform * tmp16_gl_Position;
   v_uv = a_uv;
   vec2 tmp19_fxnOut_o_pos;
   fxn3_src(tmp19_fxnOut_o_pos);
   v_pos = tmp19_fxnOut_o_pos; // read GSource id=src output=o_pos
   gl_Position = tmp16_gl_Position;
   
}
";
String default_scene1_ground_ground_prg_prg1_frag_src = "uniform float u_time;
uniform mat4 u_transform;
uniform sampler2D u_tex;
uniform vec4 u_fragcoord_off_scl;
uniform vec2 u_normcoord_scl;

in vec2 v_uv;
in vec2 v_pos;

out vec4 o_FragColor;


void fxn4_shader(in vec4 i_color, out vec4 o_color, in vec4 g_FragCoord, in vec2 g_NormCoord) {
   vec2 vp = v_pos * 0.49;
   float d = sqrt(vp.x*vp.x + vp.y*vp.y);
   d = smoothstep(0, 2.1, d);
   d = 1.0 - d;
   d = pow(d, 2.7);
   d += float( 0 ); // 0 0.5 3
   o_color = i_color * d;
   
}

void main() {
   vec4 g_FragCoord = vec4((gl_FragCoord.xy + u_fragcoord_off_scl.xy) * u_fragcoord_off_scl.zw, gl_FragCoord.zw);
   vec2 g_NormCoord = g_FragCoord.xy * u_normcoord_scl - 1.0;
   vec4 tmp20_fxnIn_i_color;
   vec4 tmp21_fxnOut_o_color;
   tmp20_fxnIn_i_color = vec4(0.211765, 0.321569, 0.392157, 1);
   fxn4_shader(tmp20_fxnIn_i_color, tmp21_fxnOut_o_color, g_FragCoord, g_NormCoord);
   o_FragColor = tmp21_fxnOut_o_color; // read GSource id=shader output=o_color
   
}
";
int default_scene1_ground_ground_prg_prg1__a_position;
int default_scene1_ground_ground_prg_prg1__a_uv;
int default_scene1_ground_ground_prg_prg1__u_time;
int default_scene1_ground_ground_prg_prg1__u_transform;
int default_scene1_ground_ground_prg_prg1__u_tex;
int default_scene1_ground_ground_prg_prg1_u_fragcoord_off_scl;
int default_scene1_ground_ground_prg_prg1_u_normcoord_scl;

// -------- section "default_scene1_ground_model_ground" --------
int default_scene1_ground_buf_ground_a;
Buffer *default_scene1_ground_buf_ground_a_data;

// -------- section "default_scene1_blit_fbo_blit_prg_prg1" --------
ZGLShader default_scene1_blit_fbo_blit_prg_prg1;
String default_scene1_blit_fbo_blit_prg_prg1_vtx_src = "in vec3 a_position;
in vec2 a_uv;
uniform float u_time;
uniform mat4 u_transform;
uniform sampler2D u_tex;
out vec2 v_uv;

void main() {
   vec4 tmp22_gl_Position;
   vec3 tmp23_position_src;
   tmp23_position_src = a_position;
   tmp22_gl_Position = vec4(tmp23_position_src.xyz, 1);
   mat4 tmp24_inTransform;
   tmp24_inTransform = u_transform;
   tmp22_gl_Position = tmp24_inTransform * tmp22_gl_Position;
   v_uv = a_uv;
   gl_Position = tmp22_gl_Position;
   
}
";
String default_scene1_blit_fbo_blit_prg_prg1_frag_src = "uniform float u_time;
uniform mat4 u_transform;
uniform sampler2D u_tex;
uniform vec4 u_fragcoord_off_scl;
uniform vec2 u_normcoord_scl;

in vec2 v_uv;

out vec4 o_FragColor;


void fxn5_shader(out vec4 o_color, in vec4 g_FragCoord, in vec2 g_NormCoord) {
   #if 1
   float us = -0.845/512.0;
   float vs = -0.45376/384.0;
   vec2 uv_lt = v_uv + vec2(-us, -vs);
   vec2 uv_rt = v_uv + vec2( us, -vs);
   vec2 uv_rb = v_uv + vec2( us,  vs);
   vec2 uv_lb = v_uv + vec2(-us,  vs);
   float s = 0.25;
   o_color  = texture(u_tex, uv_lt) * s; 
   o_color += texture(u_tex, uv_rt) * s; 
   o_color += texture(u_tex, uv_rb) * s; 
   o_color += texture(u_tex, uv_rt) * s; 
   #else
   o_color = texture(u_tex, v_uv); 
   #endif
   
}

void main() {
   vec4 g_FragCoord = vec4((gl_FragCoord.xy + u_fragcoord_off_scl.xy) * u_fragcoord_off_scl.zw, gl_FragCoord.zw);
   vec2 g_NormCoord = g_FragCoord.xy * u_normcoord_scl - 1.0;
   vec4 tmp25_fxnOut_o_color;
   fxn5_shader(tmp25_fxnOut_o_color, g_FragCoord, g_NormCoord);
   o_FragColor = tmp25_fxnOut_o_color; // read GSource id=shader output=o_color
   
}
";
int default_scene1_blit_fbo_blit_prg_prg1__a_position;
int default_scene1_blit_fbo_blit_prg_prg1__a_uv;
int default_scene1_blit_fbo_blit_prg_prg1__u_time;
int default_scene1_blit_fbo_blit_prg_prg1__u_transform;
int default_scene1_blit_fbo_blit_prg_prg1__u_tex;
int default_scene1_blit_fbo_blit_prg_prg1_u_fragcoord_off_scl;
int default_scene1_blit_fbo_blit_prg_prg1_u_normcoord_scl;

// -------- section "default_scene1_blit_fbo_model_blit" --------

function CalcMat4Ortho(Matrix4f _d, float w, float h, float d) {
   float left   = -w;
   float right  =  w;
   float bottom = -h;
   float top    =  h;
   float znear  = -d;
   float zfar   =  d;

   float tx = -(right + left) / (right - left);
   float ty = -(top + bottom) / (top - bottom);
   float tz = -(zfar + znear) / (zfar - znear);

   float sx = 2.0f / (right - left);
   float sy = 2.0f / (top - bottom);
   float sz = -2.0f / (zfar - znear);

   _d = [sx,0,0,tx,
         0,sy,0,ty,
         0,0,sz,tz,
         0,0,0,1
         ];
}
int default_scene1_blit_fbo_buf_blit_a;
Buffer *default_scene1_blit_fbo_buf_blit_a_data;

// -------- section "default_scene1_renderpass_render_fbo" --------

// -------- section "default_scene1_renderpass_ground" --------

// -------- section "default_scene1_renderpass_blit_fbo" --------

// -------- section "default_scene_scene1" --------
Texture *default_scene1_render_fbo_tex_fbo_tex;
int default_scene1_render_fbo_fbo_fbo;
int default_scene1_render_fbo_fbo_fbo_zs_rb;


function Init_default_scene1_render_fbo_model_3ds_prg_prg1() {
   default_scene1_render_fbo_model_3ds_prg_prg1.setVertexSource(default_scene1_render_fbo_model_3ds_prg_prg1_vtx_src);
   default_scene1_render_fbo_model_3ds_prg_prg1.setFragmentSource(default_scene1_render_fbo_model_3ds_prg_prg1_frag_src);
   if(!default_scene1_render_fbo_model_3ds_prg_prg1.create()) return false;
   default_scene1_render_fbo_model_3ds_prg_prg1__a_position = glGetAttribLocation(default_scene1_render_fbo_model_3ds_prg_prg1.programId, "a_position");
   default_scene1_render_fbo_model_3ds_prg_prg1__a_uv = glGetAttribLocation(default_scene1_render_fbo_model_3ds_prg_prg1.programId, "a_uv");
   default_scene1_render_fbo_model_3ds_prg_prg1__a_color = glGetAttribLocation(default_scene1_render_fbo_model_3ds_prg_prg1.programId, "a_color");
   default_scene1_render_fbo_model_3ds_prg_prg1__a_normal = glGetAttribLocation(default_scene1_render_fbo_model_3ds_prg_prg1.programId, "a_normal");
   default_scene1_render_fbo_model_3ds_prg_prg1__u_transform = glGetUniformLocation(default_scene1_render_fbo_model_3ds_prg_prg1.programId, "u_transform");
   default_scene1_render_fbo_model_3ds_prg_prg1__u_modelview = glGetUniformLocation(default_scene1_render_fbo_model_3ds_prg_prg1.programId, "u_modelview");
   default_scene1_render_fbo_model_3ds_prg_prg1__u_tex = glGetUniformLocation(default_scene1_render_fbo_model_3ds_prg_prg1.programId, "u_tex");
   default_scene1_render_fbo_model_3ds_prg_prg1__u_tex_pal = glGetUniformLocation(default_scene1_render_fbo_model_3ds_prg_prg1.programId, "u_tex_pal");
   default_scene1_render_fbo_model_3ds_prg_prg1__u_tex_rim_post = glGetUniformLocation(default_scene1_render_fbo_model_3ds_prg_prg1.programId, "u_tex_rim_post");
   default_scene1_render_fbo_model_3ds_prg_prg1__u_lightpos = glGetUniformLocation(default_scene1_render_fbo_model_3ds_prg_prg1.programId, "u_lightpos");
   default_scene1_render_fbo_model_3ds_prg_prg1__u_lightpos_pal = glGetUniformLocation(default_scene1_render_fbo_model_3ds_prg_prg1.programId, "u_lightpos_pal");
   default_scene1_render_fbo_model_3ds_prg_prg1__u_modelview_inv = glGetUniformLocation(default_scene1_render_fbo_model_3ds_prg_prg1.programId, "u_modelview_inv");
   default_scene1_render_fbo_model_3ds_prg_prg1__u_diffuse_color_bg = glGetUniformLocation(default_scene1_render_fbo_model_3ds_prg_prg1.programId, "u_diffuse_color_bg");
   default_scene1_render_fbo_model_3ds_prg_prg1__u_diffuse_color_fg = glGetUniformLocation(default_scene1_render_fbo_model_3ds_prg_prg1.programId, "u_diffuse_color_fg");
   default_scene1_render_fbo_model_3ds_prg_prg1_u_fragcoord_off_scl = glGetUniformLocation(default_scene1_render_fbo_model_3ds_prg_prg1.programId, "u_fragcoord_off_scl");
   default_scene1_render_fbo_model_3ds_prg_prg1_u_normcoord_scl = glGetUniformLocation(default_scene1_render_fbo_model_3ds_prg_prg1.programId, "u_normcoord_scl");
   
   return true;
}

function Exit_default_scene1_render_fbo_model_3ds_prg_prg1() {
   default_scene1_render_fbo_model_3ds_prg_prg1.destroy();
   
}

function Init_default_scene1_render_fbo_model_model_3ds() {
   default_scene1_render_fbo_buf_model_3ds_a = zglGenBuffer();
   glBindBuffer(GL_ARRAY_BUFFER, default_scene1_render_fbo_buf_model_3ds_a);
   zglBufferData(GL_ARRAY_BUFFER, (36/*vtxAttribSz*/ * 3888/*#verts*/), default_scene1_render_fbo_buf_model_3ds_a_data, GL_STATIC_DRAW);
   glBindBuffer(GL_ARRAY_BUFFER, 0);
   
   return true;
}

function Draw_default_scene1_render_fbo_model_model_3ds(int _fbW, int _fbH, Matrix4f _transform) {
   // <draw_pre>
   if(1 != last_model_id)
   {
      glBindBuffer(GL_ARRAY_BUFFER, default_scene1_render_fbo_buf_model_3ds_a);
      glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);
      last_model_id = 1;
   }
   if(1 != last_program_id)
   {
      default_scene1_render_fbo_model_3ds_prg_prg1.bind();
   } // 1 != last_program_id
   glActiveTexture(GL_TEXTURE0+0);
   default_scene1_render_fbo_model_3ds_tex_tex_light_curve.bind();
   glActiveTexture(GL_TEXTURE0+1);
   default_scene1_render_fbo_model_3ds_tex_tex_pal.bind();
   glActiveTexture(GL_TEXTURE0+2);
   default_scene1_render_fbo_model_3ds_tex_tex_rim_post.bind();
   if(1 != last_program_id)
   {
      default_scene1_render_fbo_model_3ds_prg_prg1.bind();
      if(default_scene1_render_fbo_model_3ds_prg_prg1__a_position >= 0)
      {
        glEnableVertexAttribArray(default_scene1_render_fbo_model_3ds_prg_prg1__a_position);
        zglVertexAttribOffset(default_scene1_render_fbo_model_3ds_prg_prg1__a_position, 3, GL_FLOAT, GL_FALSE/*normalize*/, 36/*stride*/, 0);
      }
      if(default_scene1_render_fbo_model_3ds_prg_prg1__a_uv >= 0)
      {
        glEnableVertexAttribArray(default_scene1_render_fbo_model_3ds_prg_prg1__a_uv);
        zglVertexAttribOffset(default_scene1_render_fbo_model_3ds_prg_prg1__a_uv, 2, GL_FLOAT, GL_FALSE/*normalize*/, 36/*stride*/, 12);
      }
      if(default_scene1_render_fbo_model_3ds_prg_prg1__a_color >= 0)
      {
        glEnableVertexAttribArray(default_scene1_render_fbo_model_3ds_prg_prg1__a_color);
        zglVertexAttribOffset(default_scene1_render_fbo_model_3ds_prg_prg1__a_color, 4, GL_UNSIGNED_BYTE, GL_TRUE/*normalize*/, 36/*stride*/, 20);
      }
      if(default_scene1_render_fbo_model_3ds_prg_prg1__a_normal >= 0)
      {
        glEnableVertexAttribArray(default_scene1_render_fbo_model_3ds_prg_prg1__a_normal);
        zglVertexAttribOffset(default_scene1_render_fbo_model_3ds_prg_prg1__a_normal, 3, GL_FLOAT, GL_FALSE/*normalize*/, 36/*stride*/, 24);
      }
      last_program_id = 1;
   } // 1 != last_program_id
   Matrix4f tmp1_init;
   // GMat4Perspective id=default.scenes.scene1.constants.projection
   CalcMat4Perspective(tmp1_init, 1.40177, 67.7671, 2.55539, 61.9984);
   //tmp1_init.initFrustumFov(1.40177, 67.7671, 2.55539, 61.9984);
   //trace "mat4frustumfov="+#(tmp1_init);
   Matrix4f tmp2_in_dst;
   Matrix4f tmp3_in_mat;
   // ---- BEGIN GMat4OrbitCam default.scenes.scene1.constants.cam
   OrbitCamView tmp4_in_view;
   
   //
   // Tween default.scenes.scene1.mods.tween_cam:
   //
   boolean tmp5_tween_cam_reset;
   boolean tmp6_tween_cam_prev;
   boolean tmp7_tween_cam_next;
   float tmp8_tween_cam_speed;
   tmp8_tween_cam_speed = 0.0017;
   float tmp9_in_t;
   float tmp10_t_src;
   float tmp11_in_v;
   float tmp12_value_src;
   tmp12_value_src = ext_default_global_time;
   float tmp13_value_scloff;
   tmp13_value_scloff = tmp12_value_src*0.43105+0.0;
   tmp11_in_v = tmp13_value_scloff;
   tmp11_in_v += 0;
   tmp10_t_src = tmp11_in_v;
   float tmp14_t_scloff;
   tmp14_t_scloff = tmp10_t_src*0.03+0.0;
   tmp9_in_t = tmp14_t_scloff;
   tmp9_in_t = tmp9_in_t % 1.0f;
   g_mod_default_scene1_tween_cam_t = default_scene1_env1_env_cam_t_val.valueAtTime(tmp9_in_t) * 7 + 0;
   g_mod_default_scene1_tween_cam_src_idx = int(g_mod_default_scene1_tween_cam_t);
   g_mod_default_scene1_tween_cam_dst_idx = g_mod_default_scene1_tween_cam_src_idx + 1;
   g_mod_default_scene1_tween_cam_t = g_mod_default_scene1_tween_cam_t - int(g_mod_default_scene1_tween_cam_t);
   if(tmp5_tween_cam_reset) { g_mod_default_scene1_tween_cam_src_idx = 0; g_mod_default_scene1_tween_cam_dst_idx = 1; g_mod_default_scene1_tween_cam_t = 0.0f; }
   if(tmp6_tween_cam_prev) { g_mod_default_scene1_tween_cam_src_idx--; g_mod_default_scene1_tween_cam_dst_idx--; g_mod_default_scene1_tween_cam_t = 0.0f; }
   if(tmp7_tween_cam_next) { g_mod_default_scene1_tween_cam_src_idx++; g_mod_default_scene1_tween_cam_dst_idx++; g_mod_default_scene1_tween_cam_t = 0.0f; }
   if(g_mod_default_scene1_tween_cam_adv) { g_mod_default_scene1_tween_cam_adv = false; g_mod_default_scene1_tween_cam_src_idx++; g_mod_default_scene1_tween_cam_dst_idx++; }
   g_mod_default_scene1_tween_cam_src_idx = (g_mod_default_scene1_tween_cam_src_idx % 7);
   g_mod_default_scene1_tween_cam_dst_idx = (g_mod_default_scene1_tween_cam_dst_idx % 7);
   OrbitCamView tmp15_tween_cam_src;
   OrbitCamView tmp16_tween_cam_dst;
   if( (g_mod_default_scene1_tween_cam_src_idx == 0) || (g_mod_default_scene1_tween_cam_dst_idx == 0) )
   {
      // input 1/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp17_tween_cam_input_0;
      Vector3f tmp18_in_ctr;
      Vector3f tmp19_in_rot;
      float tmp20_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      tmp18_in_ctr.init(0.0443118, -0.0471751, 3.81913);
      tmp19_in_rot.init(358.5, 1.5, 0);
      tmp20_in_dist = 1;
      tmp17_tween_cam_input_0.ctr_x = tmp18_in_ctr.x;
      tmp17_tween_cam_input_0.ctr_y = tmp18_in_ctr.y;
      tmp17_tween_cam_input_0.ctr_z = tmp18_in_ctr.z;
      tmp17_tween_cam_input_0.rot_x = tmp19_in_rot.x;
      tmp17_tween_cam_input_0.rot_y = tmp19_in_rot.y;
      tmp17_tween_cam_input_0.rot_z = tmp19_in_rot.z;
      tmp17_tween_cam_input_0.eye_dist = tmp20_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      
      if(g_mod_default_scene1_tween_cam_src_idx == 0)
         tmp15_tween_cam_src = tmp17_tween_cam_input_0;
      if(g_mod_default_scene1_tween_cam_dst_idx == 0)
         tmp16_tween_cam_dst = tmp17_tween_cam_input_0;
   } // end tween inputIdx=0
   if( (g_mod_default_scene1_tween_cam_src_idx == 1) || (g_mod_default_scene1_tween_cam_dst_idx == 1) )
   {
      // input 2/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp21_tween_cam_input_1;
      Vector3f tmp22_in_ctr;
      Vector3f tmp23_in_rot;
      float tmp24_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.1
      tmp22_in_ctr.init(-3.49277, 0.575794, 3.55952);
      tmp23_in_rot.init(18.5, 50.5, 0);
      tmp24_in_dist = 1;
      tmp21_tween_cam_input_1.ctr_x = tmp22_in_ctr.x;
      tmp21_tween_cam_input_1.ctr_y = tmp22_in_ctr.y;
      tmp21_tween_cam_input_1.ctr_z = tmp22_in_ctr.z;
      tmp21_tween_cam_input_1.rot_x = tmp23_in_rot.x;
      tmp21_tween_cam_input_1.rot_y = tmp23_in_rot.y;
      tmp21_tween_cam_input_1.rot_z = tmp23_in_rot.z;
      tmp21_tween_cam_input_1.eye_dist = tmp24_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.1
      
      if(g_mod_default_scene1_tween_cam_src_idx == 1)
         tmp15_tween_cam_src = tmp21_tween_cam_input_1;
      if(g_mod_default_scene1_tween_cam_dst_idx == 1)
         tmp16_tween_cam_dst = tmp21_tween_cam_input_1;
   } // end tween inputIdx=1
   if( (g_mod_default_scene1_tween_cam_src_idx == 2) || (g_mod_default_scene1_tween_cam_dst_idx == 2) )
   {
      // input 3/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp25_tween_cam_input_2;
      Vector3f tmp26_in_ctr;
      Vector3f tmp27_in_rot;
      float tmp28_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.2
      tmp26_in_ctr.init(-4.23649, -0.281754, -1.42568);
      tmp27_in_rot.init(358.5, 109.5, 0);
      tmp28_in_dist = 1;
      tmp25_tween_cam_input_2.ctr_x = tmp26_in_ctr.x;
      tmp25_tween_cam_input_2.ctr_y = tmp26_in_ctr.y;
      tmp25_tween_cam_input_2.ctr_z = tmp26_in_ctr.z;
      tmp25_tween_cam_input_2.rot_x = tmp27_in_rot.x;
      tmp25_tween_cam_input_2.rot_y = tmp27_in_rot.y;
      tmp25_tween_cam_input_2.rot_z = tmp27_in_rot.z;
      tmp25_tween_cam_input_2.eye_dist = tmp28_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.2
      
      if(g_mod_default_scene1_tween_cam_src_idx == 2)
         tmp15_tween_cam_src = tmp25_tween_cam_input_2;
      if(g_mod_default_scene1_tween_cam_dst_idx == 2)
         tmp16_tween_cam_dst = tmp25_tween_cam_input_2;
   } // end tween inputIdx=2
   if( (g_mod_default_scene1_tween_cam_src_idx == 3) || (g_mod_default_scene1_tween_cam_dst_idx == 3) )
   {
      // input 4/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp29_tween_cam_input_3;
      Vector3f tmp30_in_ctr;
      Vector3f tmp31_in_rot;
      float tmp32_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.3
      tmp30_in_ctr.init(-2.74722, 3.10906, -4.75795);
      tmp31_in_rot.init(38, 164, 0);
      tmp32_in_dist = 1;
      tmp29_tween_cam_input_3.ctr_x = tmp30_in_ctr.x;
      tmp29_tween_cam_input_3.ctr_y = tmp30_in_ctr.y;
      tmp29_tween_cam_input_3.ctr_z = tmp30_in_ctr.z;
      tmp29_tween_cam_input_3.rot_x = tmp31_in_rot.x;
      tmp29_tween_cam_input_3.rot_y = tmp31_in_rot.y;
      tmp29_tween_cam_input_3.rot_z = tmp31_in_rot.z;
      tmp29_tween_cam_input_3.eye_dist = tmp32_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.3
      
      if(g_mod_default_scene1_tween_cam_src_idx == 3)
         tmp15_tween_cam_src = tmp29_tween_cam_input_3;
      if(g_mod_default_scene1_tween_cam_dst_idx == 3)
         tmp16_tween_cam_dst = tmp29_tween_cam_input_3;
   } // end tween inputIdx=3
   if( (g_mod_default_scene1_tween_cam_src_idx == 4) || (g_mod_default_scene1_tween_cam_dst_idx == 4) )
   {
      // input 5/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp33_tween_cam_input_4;
      Vector3f tmp34_in_ctr;
      Vector3f tmp35_in_rot;
      float tmp36_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.4
      tmp34_in_ctr.init(4.48925, 0.639756, -3.05133);
      tmp35_in_rot.init(18, 245.5, 0);
      tmp36_in_dist = 1;
      tmp33_tween_cam_input_4.ctr_x = tmp34_in_ctr.x;
      tmp33_tween_cam_input_4.ctr_y = tmp34_in_ctr.y;
      tmp33_tween_cam_input_4.ctr_z = tmp34_in_ctr.z;
      tmp33_tween_cam_input_4.rot_x = tmp35_in_rot.x;
      tmp33_tween_cam_input_4.rot_y = tmp35_in_rot.y;
      tmp33_tween_cam_input_4.rot_z = tmp35_in_rot.z;
      tmp33_tween_cam_input_4.eye_dist = tmp36_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.4
      
      if(g_mod_default_scene1_tween_cam_src_idx == 4)
         tmp15_tween_cam_src = tmp33_tween_cam_input_4;
      if(g_mod_default_scene1_tween_cam_dst_idx == 4)
         tmp16_tween_cam_dst = tmp33_tween_cam_input_4;
   } // end tween inputIdx=4
   if( (g_mod_default_scene1_tween_cam_src_idx == 5) || (g_mod_default_scene1_tween_cam_dst_idx == 5) )
   {
      // input 6/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp37_tween_cam_input_5;
      Vector3f tmp38_in_ctr;
      Vector3f tmp39_in_rot;
      float tmp40_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.5
      tmp38_in_ctr.init(5.04278, 0.142524, 0.590748);
      tmp39_in_rot.init(358.5, 284.5, 359);
      tmp40_in_dist = 1;
      tmp37_tween_cam_input_5.ctr_x = tmp38_in_ctr.x;
      tmp37_tween_cam_input_5.ctr_y = tmp38_in_ctr.y;
      tmp37_tween_cam_input_5.ctr_z = tmp38_in_ctr.z;
      tmp37_tween_cam_input_5.rot_x = tmp39_in_rot.x;
      tmp37_tween_cam_input_5.rot_y = tmp39_in_rot.y;
      tmp37_tween_cam_input_5.rot_z = tmp39_in_rot.z;
      tmp37_tween_cam_input_5.eye_dist = tmp40_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.5
      
      if(g_mod_default_scene1_tween_cam_src_idx == 5)
         tmp15_tween_cam_src = tmp37_tween_cam_input_5;
      if(g_mod_default_scene1_tween_cam_dst_idx == 5)
         tmp16_tween_cam_dst = tmp37_tween_cam_input_5;
   } // end tween inputIdx=5
   if( (g_mod_default_scene1_tween_cam_src_idx == 6) || (g_mod_default_scene1_tween_cam_dst_idx == 6) )
   {
      // input 7/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp41_tween_cam_input_6;
      Vector3f tmp42_in_ctr;
      Vector3f tmp43_in_rot;
      float tmp44_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.6
      tmp42_in_ctr.init(3.20222, 1.96171, 5.34378);
      tmp43_in_rot.init(23.5, 341.5, 0);
      tmp44_in_dist = 1;
      tmp41_tween_cam_input_6.ctr_x = tmp42_in_ctr.x;
      tmp41_tween_cam_input_6.ctr_y = tmp42_in_ctr.y;
      tmp41_tween_cam_input_6.ctr_z = tmp42_in_ctr.z;
      tmp41_tween_cam_input_6.rot_x = tmp43_in_rot.x;
      tmp41_tween_cam_input_6.rot_y = tmp43_in_rot.y;
      tmp41_tween_cam_input_6.rot_z = tmp43_in_rot.z;
      tmp41_tween_cam_input_6.eye_dist = tmp44_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.6
      
      if(g_mod_default_scene1_tween_cam_src_idx == 6)
         tmp15_tween_cam_src = tmp41_tween_cam_input_6;
      if(g_mod_default_scene1_tween_cam_dst_idx == 6)
         tmp16_tween_cam_dst = tmp41_tween_cam_input_6;
   } // end tween inputIdx=6
   // Tween interpol=easeInOutQuad
   float tmp45_tween_cam_teaseinoutquad;
   tmp45_tween_cam_teaseinoutquad =  g_mod_default_scene1_tween_cam_t < 0.5 ? 2 * g_mod_default_scene1_tween_cam_t * g_mod_default_scene1_tween_cam_t : 1 - pow(-2 * g_mod_default_scene1_tween_cam_t + 2, 2) / 2;
   tmp4_in_view.rot_x = mathLerpCyclicf(tmp15_tween_cam_src.rot_x, tmp16_tween_cam_dst.rot_x, 360.0, tmp45_tween_cam_teaseinoutquad);
   tmp4_in_view.rot_y = mathLerpCyclicf(tmp15_tween_cam_src.rot_y, tmp16_tween_cam_dst.rot_y, 360.0, tmp45_tween_cam_teaseinoutquad);
   tmp4_in_view.rot_z = mathLerpCyclicf(tmp15_tween_cam_src.rot_z, tmp16_tween_cam_dst.rot_z, 360.0, tmp45_tween_cam_teaseinoutquad);
   tmp4_in_view.ctr_x = tmp15_tween_cam_src.ctr_x + (tmp16_tween_cam_dst.ctr_x - tmp15_tween_cam_src.ctr_x) * tmp45_tween_cam_teaseinoutquad;
   tmp4_in_view.ctr_y = tmp15_tween_cam_src.ctr_y + (tmp16_tween_cam_dst.ctr_y - tmp15_tween_cam_src.ctr_y) * tmp45_tween_cam_teaseinoutquad;
   tmp4_in_view.ctr_z = tmp15_tween_cam_src.ctr_z + (tmp16_tween_cam_dst.ctr_z - tmp15_tween_cam_src.ctr_z) * tmp45_tween_cam_teaseinoutquad;
   tmp4_in_view.eye_dist = tmp15_tween_cam_src.eye_dist + (tmp16_tween_cam_dst.eye_dist - tmp15_tween_cam_src.eye_dist) * tmp45_tween_cam_teaseinoutquad;
   
   Vector3f tmp46_eye;
   Vector3f tmp47_eye_rot;
   Matrix3f tmp48_eye_mat;
   Vector3f tmp49_ctr;
   Vector3f tmp50_up;
   tmp49_ctr.init(tmp4_in_view.ctr_x, tmp4_in_view.ctr_y, tmp4_in_view.ctr_z);
   tmp46_eye.init(0, 0, tmp4_in_view.eye_dist);
   tmp48_eye_mat.initEulerXYZ(tmp4_in_view.rot_x * (-2PI/360.0), tmp4_in_view.rot_y * (-2PI/360.0), 0);
   tmp48_eye_mat.mulv(tmp46_eye) => tmp47_eye_rot;
   tmp47_eye_rot.add(tmp49_ctr);
   tmp50_up.x = sin(tmp4_in_view.rot_z * (2PI/360.0));
   tmp50_up.y = cos(tmp4_in_view.rot_z * (2PI/360.0));
   Matrix4f.BuildLookAtMatrix4f(tmp47_eye_rot, tmp49_ctr, tmp50_up) => tmp3_in_mat;
   // ---- END GMat4OrbitCam default.scenes.scene1.constants.cam
   Matrix4f tmp51_mat_dst;
   // GMat4RotateXYZ id=default.scenes.scene1.constants
   float tmp52_in_y;
   float tmp53_y_src;
   tmp53_y_src = ext_default_global_time;
   float tmp54_y_scloff;
   tmp54_y_scloff = tmp53_y_src*-0.60401+0.0;
   tmp52_in_y = tmp54_y_scloff;
   tmp52_in_y += 0;
   tmp51_mat_dst.initEulerXYZ(0, tmp52_in_y, 0);
   // connOp=OP_MUL this_input.id=mat
   tmp3_in_mat = tmp3_in_mat * tmp51_mat_dst;
   // GMat4Scale id= id=default.scenes.scene1.constants.modelview.inputs.mat.3
   float tmp55_in_x;
   tmp55_in_x = 1 * 2.60482;
   float tmp56_in_y;
   tmp56_in_y = 1 * 2.60482;
   float tmp57_in_z;
   tmp57_in_z = 1 * 2.60482;
   tmp51_mat_dst.initScalef(tmp55_in_x, tmp56_in_y, tmp57_in_z);
   // connOp=OP_MUL this_input.id=mat
   tmp3_in_mat = tmp3_in_mat * tmp51_mat_dst;
   // GMat4Scale id= id=default.scenes.scene1.constants.modelview.inputs.mat.4
   float tmp58_in_x;
   tmp58_in_x = 1 * 1;
   float tmp59_in_y;
   tmp59_in_y = 1 * 1;
   float tmp60_in_z;
   tmp60_in_z = 1.26042 * 1;
   tmp51_mat_dst.initScalef(tmp58_in_x, tmp59_in_y, tmp60_in_z);
   // connOp=OP_MUL this_input.id=mat
   tmp3_in_mat = tmp3_in_mat * tmp51_mat_dst;
   // GMat4RotateXYZ id=default.scenes.scene1.constants
   float tmp61_in_z;
   float tmp62_z_src;
   float tmp63_in_v;
   float tmp64_value_src;
   tmp64_value_src = ext_default_global_time;
   float tmp65_value_scloff;
   tmp65_value_scloff = tmp64_value_src*0.41+0.0;
   tmp63_in_v = tmp65_value_scloff;
   tmp63_in_v += 0;
   tmp62_z_src = tmp63_in_v;
   float tmp66_z_scloff;
   tmp66_z_scloff = tmp62_z_src*-0.19+0.0;
   tmp61_in_z = tmp66_z_scloff;
   tmp61_in_z += 0;
   tmp51_mat_dst.initEulerXYZ(0, 0, tmp61_in_z);
   // connOp=OP_MUL this_input.id=mat
   tmp3_in_mat = tmp3_in_mat * tmp51_mat_dst;
   // GMat4RotateXYZ id=default.scenes.scene1.constants
   float tmp67_in_x;
   float tmp68_x_src;
   float tmp69_in_v;
   float tmp70_value_src;
   tmp70_value_src = ext_default_global_time;
   float tmp71_value_scloff;
   tmp71_value_scloff = tmp70_value_src*0.41+0.0;
   tmp69_in_v = tmp71_value_scloff;
   tmp69_in_v += 0;
   tmp68_x_src = tmp69_in_v;
   float tmp72_x_scloff;
   tmp72_x_scloff = tmp68_x_src*0.125+0.0;
   tmp67_in_x = tmp72_x_scloff;
   tmp67_in_x += 0;
   tmp51_mat_dst.initEulerXYZ(tmp67_in_x, 0, 0);
   // connOp=OP_MUL this_input.id=mat
   tmp3_in_mat = tmp3_in_mat * tmp51_mat_dst;
   // GMat4RotateXYZ id=default.scenes.scene1.constants
   float tmp73_in_y;
   float tmp74_y_src;
   float tmp75_in_v;
   float tmp76_value_src;
   tmp76_value_src = ext_default_global_time;
   float tmp77_value_scloff;
   tmp77_value_scloff = tmp76_value_src*0.41+0.0;
   tmp75_in_v = tmp77_value_scloff;
   tmp75_in_v += 0;
   tmp74_y_src = tmp75_in_v;
   float tmp78_y_scloff;
   tmp78_y_scloff = tmp74_y_src*1.25+0.0;
   tmp73_in_y = tmp78_y_scloff;
   tmp73_in_y += 0;
   tmp51_mat_dst.initEulerXYZ(0, tmp73_in_y, 0);
   // connOp=OP_MUL this_input.id=mat
   tmp3_in_mat = tmp3_in_mat * tmp51_mat_dst;
   // GMat4Scale id= id=default.scenes.scene1.constants.modelview.inputs.mat.8
   float tmp79_in_x;
   tmp79_in_x = 1 * 0.58659;
   float tmp80_in_y;
   tmp80_in_y = 1 * 0.58659;
   float tmp81_in_z;
   tmp81_in_z = 1 * 0.58659;
   tmp51_mat_dst.initScalef(tmp79_in_x, tmp80_in_y, tmp81_in_z);
   // connOp=OP_MUL this_input.id=mat
   tmp3_in_mat = tmp3_in_mat * tmp51_mat_dst;
   // GMat4Translate id= id=default.scenes.scene1.constants.modelview.inputs.mat.9
   tmp51_mat_dst.initTranslatef(0, -1.11253, 0);
   // connOp=OP_MUL this_input.id=mat
   tmp3_in_mat = tmp3_in_mat * tmp51_mat_dst;
   // GMat4Scale id= id=default.scenes.scene1.constants.modelview.inputs.mat.10
   float tmp82_in_x;
   tmp82_in_x = 1 * 1.88542;
   float tmp83_in_y;
   tmp83_in_y = 1 * 1.88542;
   float tmp84_in_z;
   tmp84_in_z = 4 * 1.88542;
   tmp51_mat_dst.initScalef(tmp82_in_x, tmp83_in_y, tmp84_in_z);
   // connOp=OP_MUL this_input.id=mat
   tmp3_in_mat = tmp3_in_mat * tmp51_mat_dst;
   tmp2_in_dst = tmp3_in_mat;
   // connOp=OP_MUL this_input.id=in
   tmp1_init = tmp1_init * tmp2_in_dst;
   if(null != _transform)
   {
      Matrix4f tmp85__transform_mat;
      _transform.mul(tmp1_init) => tmp85__transform_mat;
      glUniformMatrix4fv(default_scene1_render_fbo_model_3ds_prg_prg1__u_transform, 1/*count*/, GL_TRUE/*transpose*/, tmp85__transform_mat);
   }
   else
   {
      glUniformMatrix4fv(default_scene1_render_fbo_model_3ds_prg_prg1__u_transform, 1/*count*/, GL_TRUE/*transpose*/, tmp1_init);
   }
   Matrix4f tmp86_init;
   Matrix4f tmp87_in_mat;
   // ---- BEGIN GMat4OrbitCam default.scenes.scene1.constants.cam
   OrbitCamView tmp88_in_view;
   
   //
   // Tween default.scenes.scene1.mods.tween_cam:
   //
   boolean tmp89_tween_cam_reset;
   boolean tmp90_tween_cam_prev;
   boolean tmp91_tween_cam_next;
   float tmp92_tween_cam_speed;
   tmp92_tween_cam_speed = 0.0017;
   float tmp93_in_t;
   float tmp94_t_src;
   float tmp95_in_v;
   float tmp96_value_src;
   tmp96_value_src = ext_default_global_time;
   float tmp97_value_scloff;
   tmp97_value_scloff = tmp96_value_src*0.43105+0.0;
   tmp95_in_v = tmp97_value_scloff;
   tmp95_in_v += 0;
   tmp94_t_src = tmp95_in_v;
   float tmp98_t_scloff;
   tmp98_t_scloff = tmp94_t_src*0.03+0.0;
   tmp93_in_t = tmp98_t_scloff;
   tmp93_in_t = tmp93_in_t % 1.0f;
   g_mod_default_scene1_tween_cam_t = default_scene1_env1_env_cam_t_val.valueAtTime(tmp93_in_t) * 7 + 0;
   g_mod_default_scene1_tween_cam_src_idx = int(g_mod_default_scene1_tween_cam_t);
   g_mod_default_scene1_tween_cam_dst_idx = g_mod_default_scene1_tween_cam_src_idx + 1;
   g_mod_default_scene1_tween_cam_t = g_mod_default_scene1_tween_cam_t - int(g_mod_default_scene1_tween_cam_t);
   if(tmp89_tween_cam_reset) { g_mod_default_scene1_tween_cam_src_idx = 0; g_mod_default_scene1_tween_cam_dst_idx = 1; g_mod_default_scene1_tween_cam_t = 0.0f; }
   if(tmp90_tween_cam_prev) { g_mod_default_scene1_tween_cam_src_idx--; g_mod_default_scene1_tween_cam_dst_idx--; g_mod_default_scene1_tween_cam_t = 0.0f; }
   if(tmp91_tween_cam_next) { g_mod_default_scene1_tween_cam_src_idx++; g_mod_default_scene1_tween_cam_dst_idx++; g_mod_default_scene1_tween_cam_t = 0.0f; }
   if(g_mod_default_scene1_tween_cam_adv) { g_mod_default_scene1_tween_cam_adv = false; g_mod_default_scene1_tween_cam_src_idx++; g_mod_default_scene1_tween_cam_dst_idx++; }
   g_mod_default_scene1_tween_cam_src_idx = (g_mod_default_scene1_tween_cam_src_idx % 7);
   g_mod_default_scene1_tween_cam_dst_idx = (g_mod_default_scene1_tween_cam_dst_idx % 7);
   OrbitCamView tmp99_tween_cam_src;
   OrbitCamView tmp100_tween_cam_dst;
   if( (g_mod_default_scene1_tween_cam_src_idx == 0) || (g_mod_default_scene1_tween_cam_dst_idx == 0) )
   {
      // input 1/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp101_tween_cam_input_0;
      Vector3f tmp102_in_ctr;
      Vector3f tmp103_in_rot;
      float tmp104_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      tmp102_in_ctr.init(0.0443118, -0.0471751, 3.81913);
      tmp103_in_rot.init(358.5, 1.5, 0);
      tmp104_in_dist = 1;
      tmp101_tween_cam_input_0.ctr_x = tmp102_in_ctr.x;
      tmp101_tween_cam_input_0.ctr_y = tmp102_in_ctr.y;
      tmp101_tween_cam_input_0.ctr_z = tmp102_in_ctr.z;
      tmp101_tween_cam_input_0.rot_x = tmp103_in_rot.x;
      tmp101_tween_cam_input_0.rot_y = tmp103_in_rot.y;
      tmp101_tween_cam_input_0.rot_z = tmp103_in_rot.z;
      tmp101_tween_cam_input_0.eye_dist = tmp104_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      
      if(g_mod_default_scene1_tween_cam_src_idx == 0)
         tmp99_tween_cam_src = tmp101_tween_cam_input_0;
      if(g_mod_default_scene1_tween_cam_dst_idx == 0)
         tmp100_tween_cam_dst = tmp101_tween_cam_input_0;
   } // end tween inputIdx=0
   if( (g_mod_default_scene1_tween_cam_src_idx == 1) || (g_mod_default_scene1_tween_cam_dst_idx == 1) )
   {
      // input 2/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp105_tween_cam_input_1;
      Vector3f tmp106_in_ctr;
      Vector3f tmp107_in_rot;
      float tmp108_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.1
      tmp106_in_ctr.init(-3.49277, 0.575794, 3.55952);
      tmp107_in_rot.init(18.5, 50.5, 0);
      tmp108_in_dist = 1;
      tmp105_tween_cam_input_1.ctr_x = tmp106_in_ctr.x;
      tmp105_tween_cam_input_1.ctr_y = tmp106_in_ctr.y;
      tmp105_tween_cam_input_1.ctr_z = tmp106_in_ctr.z;
      tmp105_tween_cam_input_1.rot_x = tmp107_in_rot.x;
      tmp105_tween_cam_input_1.rot_y = tmp107_in_rot.y;
      tmp105_tween_cam_input_1.rot_z = tmp107_in_rot.z;
      tmp105_tween_cam_input_1.eye_dist = tmp108_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.1
      
      if(g_mod_default_scene1_tween_cam_src_idx == 1)
         tmp99_tween_cam_src = tmp105_tween_cam_input_1;
      if(g_mod_default_scene1_tween_cam_dst_idx == 1)
         tmp100_tween_cam_dst = tmp105_tween_cam_input_1;
   } // end tween inputIdx=1
   if( (g_mod_default_scene1_tween_cam_src_idx == 2) || (g_mod_default_scene1_tween_cam_dst_idx == 2) )
   {
      // input 3/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp109_tween_cam_input_2;
      Vector3f tmp110_in_ctr;
      Vector3f tmp111_in_rot;
      float tmp112_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.2
      tmp110_in_ctr.init(-4.23649, -0.281754, -1.42568);
      tmp111_in_rot.init(358.5, 109.5, 0);
      tmp112_in_dist = 1;
      tmp109_tween_cam_input_2.ctr_x = tmp110_in_ctr.x;
      tmp109_tween_cam_input_2.ctr_y = tmp110_in_ctr.y;
      tmp109_tween_cam_input_2.ctr_z = tmp110_in_ctr.z;
      tmp109_tween_cam_input_2.rot_x = tmp111_in_rot.x;
      tmp109_tween_cam_input_2.rot_y = tmp111_in_rot.y;
      tmp109_tween_cam_input_2.rot_z = tmp111_in_rot.z;
      tmp109_tween_cam_input_2.eye_dist = tmp112_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.2
      
      if(g_mod_default_scene1_tween_cam_src_idx == 2)
         tmp99_tween_cam_src = tmp109_tween_cam_input_2;
      if(g_mod_default_scene1_tween_cam_dst_idx == 2)
         tmp100_tween_cam_dst = tmp109_tween_cam_input_2;
   } // end tween inputIdx=2
   if( (g_mod_default_scene1_tween_cam_src_idx == 3) || (g_mod_default_scene1_tween_cam_dst_idx == 3) )
   {
      // input 4/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp113_tween_cam_input_3;
      Vector3f tmp114_in_ctr;
      Vector3f tmp115_in_rot;
      float tmp116_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.3
      tmp114_in_ctr.init(-2.74722, 3.10906, -4.75795);
      tmp115_in_rot.init(38, 164, 0);
      tmp116_in_dist = 1;
      tmp113_tween_cam_input_3.ctr_x = tmp114_in_ctr.x;
      tmp113_tween_cam_input_3.ctr_y = tmp114_in_ctr.y;
      tmp113_tween_cam_input_3.ctr_z = tmp114_in_ctr.z;
      tmp113_tween_cam_input_3.rot_x = tmp115_in_rot.x;
      tmp113_tween_cam_input_3.rot_y = tmp115_in_rot.y;
      tmp113_tween_cam_input_3.rot_z = tmp115_in_rot.z;
      tmp113_tween_cam_input_3.eye_dist = tmp116_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.3
      
      if(g_mod_default_scene1_tween_cam_src_idx == 3)
         tmp99_tween_cam_src = tmp113_tween_cam_input_3;
      if(g_mod_default_scene1_tween_cam_dst_idx == 3)
         tmp100_tween_cam_dst = tmp113_tween_cam_input_3;
   } // end tween inputIdx=3
   if( (g_mod_default_scene1_tween_cam_src_idx == 4) || (g_mod_default_scene1_tween_cam_dst_idx == 4) )
   {
      // input 5/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp117_tween_cam_input_4;
      Vector3f tmp118_in_ctr;
      Vector3f tmp119_in_rot;
      float tmp120_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.4
      tmp118_in_ctr.init(4.48925, 0.639756, -3.05133);
      tmp119_in_rot.init(18, 245.5, 0);
      tmp120_in_dist = 1;
      tmp117_tween_cam_input_4.ctr_x = tmp118_in_ctr.x;
      tmp117_tween_cam_input_4.ctr_y = tmp118_in_ctr.y;
      tmp117_tween_cam_input_4.ctr_z = tmp118_in_ctr.z;
      tmp117_tween_cam_input_4.rot_x = tmp119_in_rot.x;
      tmp117_tween_cam_input_4.rot_y = tmp119_in_rot.y;
      tmp117_tween_cam_input_4.rot_z = tmp119_in_rot.z;
      tmp117_tween_cam_input_4.eye_dist = tmp120_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.4
      
      if(g_mod_default_scene1_tween_cam_src_idx == 4)
         tmp99_tween_cam_src = tmp117_tween_cam_input_4;
      if(g_mod_default_scene1_tween_cam_dst_idx == 4)
         tmp100_tween_cam_dst = tmp117_tween_cam_input_4;
   } // end tween inputIdx=4
   if( (g_mod_default_scene1_tween_cam_src_idx == 5) || (g_mod_default_scene1_tween_cam_dst_idx == 5) )
   {
      // input 6/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp121_tween_cam_input_5;
      Vector3f tmp122_in_ctr;
      Vector3f tmp123_in_rot;
      float tmp124_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.5
      tmp122_in_ctr.init(5.04278, 0.142524, 0.590748);
      tmp123_in_rot.init(358.5, 284.5, 359);
      tmp124_in_dist = 1;
      tmp121_tween_cam_input_5.ctr_x = tmp122_in_ctr.x;
      tmp121_tween_cam_input_5.ctr_y = tmp122_in_ctr.y;
      tmp121_tween_cam_input_5.ctr_z = tmp122_in_ctr.z;
      tmp121_tween_cam_input_5.rot_x = tmp123_in_rot.x;
      tmp121_tween_cam_input_5.rot_y = tmp123_in_rot.y;
      tmp121_tween_cam_input_5.rot_z = tmp123_in_rot.z;
      tmp121_tween_cam_input_5.eye_dist = tmp124_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.5
      
      if(g_mod_default_scene1_tween_cam_src_idx == 5)
         tmp99_tween_cam_src = tmp121_tween_cam_input_5;
      if(g_mod_default_scene1_tween_cam_dst_idx == 5)
         tmp100_tween_cam_dst = tmp121_tween_cam_input_5;
   } // end tween inputIdx=5
   if( (g_mod_default_scene1_tween_cam_src_idx == 6) || (g_mod_default_scene1_tween_cam_dst_idx == 6) )
   {
      // input 7/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp125_tween_cam_input_6;
      Vector3f tmp126_in_ctr;
      Vector3f tmp127_in_rot;
      float tmp128_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.6
      tmp126_in_ctr.init(3.20222, 1.96171, 5.34378);
      tmp127_in_rot.init(23.5, 341.5, 0);
      tmp128_in_dist = 1;
      tmp125_tween_cam_input_6.ctr_x = tmp126_in_ctr.x;
      tmp125_tween_cam_input_6.ctr_y = tmp126_in_ctr.y;
      tmp125_tween_cam_input_6.ctr_z = tmp126_in_ctr.z;
      tmp125_tween_cam_input_6.rot_x = tmp127_in_rot.x;
      tmp125_tween_cam_input_6.rot_y = tmp127_in_rot.y;
      tmp125_tween_cam_input_6.rot_z = tmp127_in_rot.z;
      tmp125_tween_cam_input_6.eye_dist = tmp128_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.6
      
      if(g_mod_default_scene1_tween_cam_src_idx == 6)
         tmp99_tween_cam_src = tmp125_tween_cam_input_6;
      if(g_mod_default_scene1_tween_cam_dst_idx == 6)
         tmp100_tween_cam_dst = tmp125_tween_cam_input_6;
   } // end tween inputIdx=6
   // Tween interpol=easeInOutQuad
   float tmp129_tween_cam_teaseinoutquad;
   tmp129_tween_cam_teaseinoutquad =  g_mod_default_scene1_tween_cam_t < 0.5 ? 2 * g_mod_default_scene1_tween_cam_t * g_mod_default_scene1_tween_cam_t : 1 - pow(-2 * g_mod_default_scene1_tween_cam_t + 2, 2) / 2;
   tmp88_in_view.rot_x = mathLerpCyclicf(tmp99_tween_cam_src.rot_x, tmp100_tween_cam_dst.rot_x, 360.0, tmp129_tween_cam_teaseinoutquad);
   tmp88_in_view.rot_y = mathLerpCyclicf(tmp99_tween_cam_src.rot_y, tmp100_tween_cam_dst.rot_y, 360.0, tmp129_tween_cam_teaseinoutquad);
   tmp88_in_view.rot_z = mathLerpCyclicf(tmp99_tween_cam_src.rot_z, tmp100_tween_cam_dst.rot_z, 360.0, tmp129_tween_cam_teaseinoutquad);
   tmp88_in_view.ctr_x = tmp99_tween_cam_src.ctr_x + (tmp100_tween_cam_dst.ctr_x - tmp99_tween_cam_src.ctr_x) * tmp129_tween_cam_teaseinoutquad;
   tmp88_in_view.ctr_y = tmp99_tween_cam_src.ctr_y + (tmp100_tween_cam_dst.ctr_y - tmp99_tween_cam_src.ctr_y) * tmp129_tween_cam_teaseinoutquad;
   tmp88_in_view.ctr_z = tmp99_tween_cam_src.ctr_z + (tmp100_tween_cam_dst.ctr_z - tmp99_tween_cam_src.ctr_z) * tmp129_tween_cam_teaseinoutquad;
   tmp88_in_view.eye_dist = tmp99_tween_cam_src.eye_dist + (tmp100_tween_cam_dst.eye_dist - tmp99_tween_cam_src.eye_dist) * tmp129_tween_cam_teaseinoutquad;
   
   Vector3f tmp130_eye;
   Vector3f tmp131_eye_rot;
   Matrix3f tmp132_eye_mat;
   Vector3f tmp133_ctr;
   Vector3f tmp134_up;
   tmp133_ctr.init(tmp88_in_view.ctr_x, tmp88_in_view.ctr_y, tmp88_in_view.ctr_z);
   tmp130_eye.init(0, 0, tmp88_in_view.eye_dist);
   tmp132_eye_mat.initEulerXYZ(tmp88_in_view.rot_x * (-2PI/360.0), tmp88_in_view.rot_y * (-2PI/360.0), 0);
   tmp132_eye_mat.mulv(tmp130_eye) => tmp131_eye_rot;
   tmp131_eye_rot.add(tmp133_ctr);
   tmp134_up.x = sin(tmp88_in_view.rot_z * (2PI/360.0));
   tmp134_up.y = cos(tmp88_in_view.rot_z * (2PI/360.0));
   Matrix4f.BuildLookAtMatrix4f(tmp131_eye_rot, tmp133_ctr, tmp134_up) => tmp87_in_mat;
   // ---- END GMat4OrbitCam default.scenes.scene1.constants.cam
   Matrix4f tmp135_mat_dst;
   // GMat4RotateXYZ id=default.scenes.scene1.constants
   float tmp136_in_y;
   float tmp137_y_src;
   tmp137_y_src = ext_default_global_time;
   float tmp138_y_scloff;
   tmp138_y_scloff = tmp137_y_src*-0.60401+0.0;
   tmp136_in_y = tmp138_y_scloff;
   tmp136_in_y += 0;
   tmp135_mat_dst.initEulerXYZ(0, tmp136_in_y, 0);
   // connOp=OP_MUL this_input.id=mat
   tmp87_in_mat = tmp87_in_mat * tmp135_mat_dst;
   // GMat4Scale id= id=default.scenes.scene1.constants.modelview.inputs.mat.3
   float tmp139_in_x;
   tmp139_in_x = 1 * 2.60482;
   float tmp140_in_y;
   tmp140_in_y = 1 * 2.60482;
   float tmp141_in_z;
   tmp141_in_z = 1 * 2.60482;
   tmp135_mat_dst.initScalef(tmp139_in_x, tmp140_in_y, tmp141_in_z);
   // connOp=OP_MUL this_input.id=mat
   tmp87_in_mat = tmp87_in_mat * tmp135_mat_dst;
   // GMat4Scale id= id=default.scenes.scene1.constants.modelview.inputs.mat.4
   float tmp142_in_x;
   tmp142_in_x = 1 * 1;
   float tmp143_in_y;
   tmp143_in_y = 1 * 1;
   float tmp144_in_z;
   tmp144_in_z = 1.26042 * 1;
   tmp135_mat_dst.initScalef(tmp142_in_x, tmp143_in_y, tmp144_in_z);
   // connOp=OP_MUL this_input.id=mat
   tmp87_in_mat = tmp87_in_mat * tmp135_mat_dst;
   // GMat4RotateXYZ id=default.scenes.scene1.constants
   float tmp145_in_z;
   float tmp146_z_src;
   float tmp147_in_v;
   float tmp148_value_src;
   tmp148_value_src = ext_default_global_time;
   float tmp149_value_scloff;
   tmp149_value_scloff = tmp148_value_src*0.41+0.0;
   tmp147_in_v = tmp149_value_scloff;
   tmp147_in_v += 0;
   tmp146_z_src = tmp147_in_v;
   float tmp150_z_scloff;
   tmp150_z_scloff = tmp146_z_src*-0.19+0.0;
   tmp145_in_z = tmp150_z_scloff;
   tmp145_in_z += 0;
   tmp135_mat_dst.initEulerXYZ(0, 0, tmp145_in_z);
   // connOp=OP_MUL this_input.id=mat
   tmp87_in_mat = tmp87_in_mat * tmp135_mat_dst;
   // GMat4RotateXYZ id=default.scenes.scene1.constants
   float tmp151_in_x;
   float tmp152_x_src;
   float tmp153_in_v;
   float tmp154_value_src;
   tmp154_value_src = ext_default_global_time;
   float tmp155_value_scloff;
   tmp155_value_scloff = tmp154_value_src*0.41+0.0;
   tmp153_in_v = tmp155_value_scloff;
   tmp153_in_v += 0;
   tmp152_x_src = tmp153_in_v;
   float tmp156_x_scloff;
   tmp156_x_scloff = tmp152_x_src*0.125+0.0;
   tmp151_in_x = tmp156_x_scloff;
   tmp151_in_x += 0;
   tmp135_mat_dst.initEulerXYZ(tmp151_in_x, 0, 0);
   // connOp=OP_MUL this_input.id=mat
   tmp87_in_mat = tmp87_in_mat * tmp135_mat_dst;
   // GMat4RotateXYZ id=default.scenes.scene1.constants
   float tmp157_in_y;
   float tmp158_y_src;
   float tmp159_in_v;
   float tmp160_value_src;
   tmp160_value_src = ext_default_global_time;
   float tmp161_value_scloff;
   tmp161_value_scloff = tmp160_value_src*0.41+0.0;
   tmp159_in_v = tmp161_value_scloff;
   tmp159_in_v += 0;
   tmp158_y_src = tmp159_in_v;
   float tmp162_y_scloff;
   tmp162_y_scloff = tmp158_y_src*1.25+0.0;
   tmp157_in_y = tmp162_y_scloff;
   tmp157_in_y += 0;
   tmp135_mat_dst.initEulerXYZ(0, tmp157_in_y, 0);
   // connOp=OP_MUL this_input.id=mat
   tmp87_in_mat = tmp87_in_mat * tmp135_mat_dst;
   // GMat4Scale id= id=default.scenes.scene1.constants.modelview.inputs.mat.8
   float tmp163_in_x;
   tmp163_in_x = 1 * 0.58659;
   float tmp164_in_y;
   tmp164_in_y = 1 * 0.58659;
   float tmp165_in_z;
   tmp165_in_z = 1 * 0.58659;
   tmp135_mat_dst.initScalef(tmp163_in_x, tmp164_in_y, tmp165_in_z);
   // connOp=OP_MUL this_input.id=mat
   tmp87_in_mat = tmp87_in_mat * tmp135_mat_dst;
   // GMat4Translate id= id=default.scenes.scene1.constants.modelview.inputs.mat.9
   tmp135_mat_dst.initTranslatef(0, -1.11253, 0);
   // connOp=OP_MUL this_input.id=mat
   tmp87_in_mat = tmp87_in_mat * tmp135_mat_dst;
   // GMat4Scale id= id=default.scenes.scene1.constants.modelview.inputs.mat.10
   float tmp166_in_x;
   tmp166_in_x = 1 * 1.88542;
   float tmp167_in_y;
   tmp167_in_y = 1 * 1.88542;
   float tmp168_in_z;
   tmp168_in_z = 4 * 1.88542;
   tmp135_mat_dst.initScalef(tmp166_in_x, tmp167_in_y, tmp168_in_z);
   // connOp=OP_MUL this_input.id=mat
   tmp87_in_mat = tmp87_in_mat * tmp135_mat_dst;
   tmp86_init = tmp87_in_mat;
   glUniformMatrix4fv(default_scene1_render_fbo_model_3ds_prg_prg1__u_modelview, 1/*count*/, GL_TRUE/*transpose*/, tmp86_init);
   glUniform1i(default_scene1_render_fbo_model_3ds_prg_prg1__u_tex, 0);  // bind texture unit 0 to sampler2D
   glUniform1i(default_scene1_render_fbo_model_3ds_prg_prg1__u_tex_pal, 1);  // bind texture unit 1 to sampler2D
   glUniform1i(default_scene1_render_fbo_model_3ds_prg_prg1__u_tex_rim_post, 2);  // bind texture unit 2 to sampler2D
   Vector3f tmp169_init;
   tmp169_init = vector3f(0, 0, 1);
   tmp169_init.unit();
   glUniform3f(default_scene1_render_fbo_model_3ds_prg_prg1__u_lightpos, tmp169_init.x, tmp169_init.y, tmp169_init.z);
   Vector3f tmp170_init;
   tmp170_init = vector3f(0.43785, 22.7805, 5.42759);
   tmp170_init.unit();
   glUniform3f(default_scene1_render_fbo_model_3ds_prg_prg1__u_lightpos_pal, tmp170_init.x, tmp170_init.y, tmp170_init.z);
   Matrix4f tmp171_init;
   Matrix4f tmp172_in_mat;
   // ---- BEGIN GMat4OrbitCam default.scenes.scene1.constants.cam
   OrbitCamView tmp173_in_view;
   
   //
   // Tween default.scenes.scene1.mods.tween_cam:
   //
   boolean tmp174_tween_cam_reset;
   boolean tmp175_tween_cam_prev;
   boolean tmp176_tween_cam_next;
   float tmp177_tween_cam_speed;
   tmp177_tween_cam_speed = 0.0017;
   float tmp178_in_t;
   float tmp179_t_src;
   float tmp180_in_v;
   float tmp181_value_src;
   tmp181_value_src = ext_default_global_time;
   float tmp182_value_scloff;
   tmp182_value_scloff = tmp181_value_src*0.43105+0.0;
   tmp180_in_v = tmp182_value_scloff;
   tmp180_in_v += 0;
   tmp179_t_src = tmp180_in_v;
   float tmp183_t_scloff;
   tmp183_t_scloff = tmp179_t_src*0.03+0.0;
   tmp178_in_t = tmp183_t_scloff;
   tmp178_in_t = tmp178_in_t % 1.0f;
   g_mod_default_scene1_tween_cam_t = default_scene1_env1_env_cam_t_val.valueAtTime(tmp178_in_t) * 7 + 0;
   g_mod_default_scene1_tween_cam_src_idx = int(g_mod_default_scene1_tween_cam_t);
   g_mod_default_scene1_tween_cam_dst_idx = g_mod_default_scene1_tween_cam_src_idx + 1;
   g_mod_default_scene1_tween_cam_t = g_mod_default_scene1_tween_cam_t - int(g_mod_default_scene1_tween_cam_t);
   if(tmp174_tween_cam_reset) { g_mod_default_scene1_tween_cam_src_idx = 0; g_mod_default_scene1_tween_cam_dst_idx = 1; g_mod_default_scene1_tween_cam_t = 0.0f; }
   if(tmp175_tween_cam_prev) { g_mod_default_scene1_tween_cam_src_idx--; g_mod_default_scene1_tween_cam_dst_idx--; g_mod_default_scene1_tween_cam_t = 0.0f; }
   if(tmp176_tween_cam_next) { g_mod_default_scene1_tween_cam_src_idx++; g_mod_default_scene1_tween_cam_dst_idx++; g_mod_default_scene1_tween_cam_t = 0.0f; }
   if(g_mod_default_scene1_tween_cam_adv) { g_mod_default_scene1_tween_cam_adv = false; g_mod_default_scene1_tween_cam_src_idx++; g_mod_default_scene1_tween_cam_dst_idx++; }
   g_mod_default_scene1_tween_cam_src_idx = (g_mod_default_scene1_tween_cam_src_idx % 7);
   g_mod_default_scene1_tween_cam_dst_idx = (g_mod_default_scene1_tween_cam_dst_idx % 7);
   OrbitCamView tmp184_tween_cam_src;
   OrbitCamView tmp185_tween_cam_dst;
   if( (g_mod_default_scene1_tween_cam_src_idx == 0) || (g_mod_default_scene1_tween_cam_dst_idx == 0) )
   {
      // input 1/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp186_tween_cam_input_0;
      Vector3f tmp187_in_ctr;
      Vector3f tmp188_in_rot;
      float tmp189_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      tmp187_in_ctr.init(0.0443118, -0.0471751, 3.81913);
      tmp188_in_rot.init(358.5, 1.5, 0);
      tmp189_in_dist = 1;
      tmp186_tween_cam_input_0.ctr_x = tmp187_in_ctr.x;
      tmp186_tween_cam_input_0.ctr_y = tmp187_in_ctr.y;
      tmp186_tween_cam_input_0.ctr_z = tmp187_in_ctr.z;
      tmp186_tween_cam_input_0.rot_x = tmp188_in_rot.x;
      tmp186_tween_cam_input_0.rot_y = tmp188_in_rot.y;
      tmp186_tween_cam_input_0.rot_z = tmp188_in_rot.z;
      tmp186_tween_cam_input_0.eye_dist = tmp189_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      
      if(g_mod_default_scene1_tween_cam_src_idx == 0)
         tmp184_tween_cam_src = tmp186_tween_cam_input_0;
      if(g_mod_default_scene1_tween_cam_dst_idx == 0)
         tmp185_tween_cam_dst = tmp186_tween_cam_input_0;
   } // end tween inputIdx=0
   if( (g_mod_default_scene1_tween_cam_src_idx == 1) || (g_mod_default_scene1_tween_cam_dst_idx == 1) )
   {
      // input 2/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp190_tween_cam_input_1;
      Vector3f tmp191_in_ctr;
      Vector3f tmp192_in_rot;
      float tmp193_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.1
      tmp191_in_ctr.init(-3.49277, 0.575794, 3.55952);
      tmp192_in_rot.init(18.5, 50.5, 0);
      tmp193_in_dist = 1;
      tmp190_tween_cam_input_1.ctr_x = tmp191_in_ctr.x;
      tmp190_tween_cam_input_1.ctr_y = tmp191_in_ctr.y;
      tmp190_tween_cam_input_1.ctr_z = tmp191_in_ctr.z;
      tmp190_tween_cam_input_1.rot_x = tmp192_in_rot.x;
      tmp190_tween_cam_input_1.rot_y = tmp192_in_rot.y;
      tmp190_tween_cam_input_1.rot_z = tmp192_in_rot.z;
      tmp190_tween_cam_input_1.eye_dist = tmp193_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.1
      
      if(g_mod_default_scene1_tween_cam_src_idx == 1)
         tmp184_tween_cam_src = tmp190_tween_cam_input_1;
      if(g_mod_default_scene1_tween_cam_dst_idx == 1)
         tmp185_tween_cam_dst = tmp190_tween_cam_input_1;
   } // end tween inputIdx=1
   if( (g_mod_default_scene1_tween_cam_src_idx == 2) || (g_mod_default_scene1_tween_cam_dst_idx == 2) )
   {
      // input 3/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp194_tween_cam_input_2;
      Vector3f tmp195_in_ctr;
      Vector3f tmp196_in_rot;
      float tmp197_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.2
      tmp195_in_ctr.init(-4.23649, -0.281754, -1.42568);
      tmp196_in_rot.init(358.5, 109.5, 0);
      tmp197_in_dist = 1;
      tmp194_tween_cam_input_2.ctr_x = tmp195_in_ctr.x;
      tmp194_tween_cam_input_2.ctr_y = tmp195_in_ctr.y;
      tmp194_tween_cam_input_2.ctr_z = tmp195_in_ctr.z;
      tmp194_tween_cam_input_2.rot_x = tmp196_in_rot.x;
      tmp194_tween_cam_input_2.rot_y = tmp196_in_rot.y;
      tmp194_tween_cam_input_2.rot_z = tmp196_in_rot.z;
      tmp194_tween_cam_input_2.eye_dist = tmp197_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.2
      
      if(g_mod_default_scene1_tween_cam_src_idx == 2)
         tmp184_tween_cam_src = tmp194_tween_cam_input_2;
      if(g_mod_default_scene1_tween_cam_dst_idx == 2)
         tmp185_tween_cam_dst = tmp194_tween_cam_input_2;
   } // end tween inputIdx=2
   if( (g_mod_default_scene1_tween_cam_src_idx == 3) || (g_mod_default_scene1_tween_cam_dst_idx == 3) )
   {
      // input 4/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp198_tween_cam_input_3;
      Vector3f tmp199_in_ctr;
      Vector3f tmp200_in_rot;
      float tmp201_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.3
      tmp199_in_ctr.init(-2.74722, 3.10906, -4.75795);
      tmp200_in_rot.init(38, 164, 0);
      tmp201_in_dist = 1;
      tmp198_tween_cam_input_3.ctr_x = tmp199_in_ctr.x;
      tmp198_tween_cam_input_3.ctr_y = tmp199_in_ctr.y;
      tmp198_tween_cam_input_3.ctr_z = tmp199_in_ctr.z;
      tmp198_tween_cam_input_3.rot_x = tmp200_in_rot.x;
      tmp198_tween_cam_input_3.rot_y = tmp200_in_rot.y;
      tmp198_tween_cam_input_3.rot_z = tmp200_in_rot.z;
      tmp198_tween_cam_input_3.eye_dist = tmp201_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.3
      
      if(g_mod_default_scene1_tween_cam_src_idx == 3)
         tmp184_tween_cam_src = tmp198_tween_cam_input_3;
      if(g_mod_default_scene1_tween_cam_dst_idx == 3)
         tmp185_tween_cam_dst = tmp198_tween_cam_input_3;
   } // end tween inputIdx=3
   if( (g_mod_default_scene1_tween_cam_src_idx == 4) || (g_mod_default_scene1_tween_cam_dst_idx == 4) )
   {
      // input 5/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp202_tween_cam_input_4;
      Vector3f tmp203_in_ctr;
      Vector3f tmp204_in_rot;
      float tmp205_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.4
      tmp203_in_ctr.init(4.48925, 0.639756, -3.05133);
      tmp204_in_rot.init(18, 245.5, 0);
      tmp205_in_dist = 1;
      tmp202_tween_cam_input_4.ctr_x = tmp203_in_ctr.x;
      tmp202_tween_cam_input_4.ctr_y = tmp203_in_ctr.y;
      tmp202_tween_cam_input_4.ctr_z = tmp203_in_ctr.z;
      tmp202_tween_cam_input_4.rot_x = tmp204_in_rot.x;
      tmp202_tween_cam_input_4.rot_y = tmp204_in_rot.y;
      tmp202_tween_cam_input_4.rot_z = tmp204_in_rot.z;
      tmp202_tween_cam_input_4.eye_dist = tmp205_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.4
      
      if(g_mod_default_scene1_tween_cam_src_idx == 4)
         tmp184_tween_cam_src = tmp202_tween_cam_input_4;
      if(g_mod_default_scene1_tween_cam_dst_idx == 4)
         tmp185_tween_cam_dst = tmp202_tween_cam_input_4;
   } // end tween inputIdx=4
   if( (g_mod_default_scene1_tween_cam_src_idx == 5) || (g_mod_default_scene1_tween_cam_dst_idx == 5) )
   {
      // input 6/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp206_tween_cam_input_5;
      Vector3f tmp207_in_ctr;
      Vector3f tmp208_in_rot;
      float tmp209_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.5
      tmp207_in_ctr.init(5.04278, 0.142524, 0.590748);
      tmp208_in_rot.init(358.5, 284.5, 359);
      tmp209_in_dist = 1;
      tmp206_tween_cam_input_5.ctr_x = tmp207_in_ctr.x;
      tmp206_tween_cam_input_5.ctr_y = tmp207_in_ctr.y;
      tmp206_tween_cam_input_5.ctr_z = tmp207_in_ctr.z;
      tmp206_tween_cam_input_5.rot_x = tmp208_in_rot.x;
      tmp206_tween_cam_input_5.rot_y = tmp208_in_rot.y;
      tmp206_tween_cam_input_5.rot_z = tmp208_in_rot.z;
      tmp206_tween_cam_input_5.eye_dist = tmp209_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.5
      
      if(g_mod_default_scene1_tween_cam_src_idx == 5)
         tmp184_tween_cam_src = tmp206_tween_cam_input_5;
      if(g_mod_default_scene1_tween_cam_dst_idx == 5)
         tmp185_tween_cam_dst = tmp206_tween_cam_input_5;
   } // end tween inputIdx=5
   if( (g_mod_default_scene1_tween_cam_src_idx == 6) || (g_mod_default_scene1_tween_cam_dst_idx == 6) )
   {
      // input 7/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp210_tween_cam_input_6;
      Vector3f tmp211_in_ctr;
      Vector3f tmp212_in_rot;
      float tmp213_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.6
      tmp211_in_ctr.init(3.20222, 1.96171, 5.34378);
      tmp212_in_rot.init(23.5, 341.5, 0);
      tmp213_in_dist = 1;
      tmp210_tween_cam_input_6.ctr_x = tmp211_in_ctr.x;
      tmp210_tween_cam_input_6.ctr_y = tmp211_in_ctr.y;
      tmp210_tween_cam_input_6.ctr_z = tmp211_in_ctr.z;
      tmp210_tween_cam_input_6.rot_x = tmp212_in_rot.x;
      tmp210_tween_cam_input_6.rot_y = tmp212_in_rot.y;
      tmp210_tween_cam_input_6.rot_z = tmp212_in_rot.z;
      tmp210_tween_cam_input_6.eye_dist = tmp213_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.6
      
      if(g_mod_default_scene1_tween_cam_src_idx == 6)
         tmp184_tween_cam_src = tmp210_tween_cam_input_6;
      if(g_mod_default_scene1_tween_cam_dst_idx == 6)
         tmp185_tween_cam_dst = tmp210_tween_cam_input_6;
   } // end tween inputIdx=6
   // Tween interpol=easeInOutQuad
   float tmp214_tween_cam_teaseinoutquad;
   tmp214_tween_cam_teaseinoutquad =  g_mod_default_scene1_tween_cam_t < 0.5 ? 2 * g_mod_default_scene1_tween_cam_t * g_mod_default_scene1_tween_cam_t : 1 - pow(-2 * g_mod_default_scene1_tween_cam_t + 2, 2) / 2;
   tmp173_in_view.rot_x = mathLerpCyclicf(tmp184_tween_cam_src.rot_x, tmp185_tween_cam_dst.rot_x, 360.0, tmp214_tween_cam_teaseinoutquad);
   tmp173_in_view.rot_y = mathLerpCyclicf(tmp184_tween_cam_src.rot_y, tmp185_tween_cam_dst.rot_y, 360.0, tmp214_tween_cam_teaseinoutquad);
   tmp173_in_view.rot_z = mathLerpCyclicf(tmp184_tween_cam_src.rot_z, tmp185_tween_cam_dst.rot_z, 360.0, tmp214_tween_cam_teaseinoutquad);
   tmp173_in_view.ctr_x = tmp184_tween_cam_src.ctr_x + (tmp185_tween_cam_dst.ctr_x - tmp184_tween_cam_src.ctr_x) * tmp214_tween_cam_teaseinoutquad;
   tmp173_in_view.ctr_y = tmp184_tween_cam_src.ctr_y + (tmp185_tween_cam_dst.ctr_y - tmp184_tween_cam_src.ctr_y) * tmp214_tween_cam_teaseinoutquad;
   tmp173_in_view.ctr_z = tmp184_tween_cam_src.ctr_z + (tmp185_tween_cam_dst.ctr_z - tmp184_tween_cam_src.ctr_z) * tmp214_tween_cam_teaseinoutquad;
   tmp173_in_view.eye_dist = tmp184_tween_cam_src.eye_dist + (tmp185_tween_cam_dst.eye_dist - tmp184_tween_cam_src.eye_dist) * tmp214_tween_cam_teaseinoutquad;
   
   Vector3f tmp215_eye;
   Vector3f tmp216_eye_rot;
   Matrix3f tmp217_eye_mat;
   Vector3f tmp218_ctr;
   Vector3f tmp219_up;
   tmp218_ctr.init(tmp173_in_view.ctr_x, tmp173_in_view.ctr_y, tmp173_in_view.ctr_z);
   tmp215_eye.init(0, 0, tmp173_in_view.eye_dist);
   tmp217_eye_mat.initEulerXYZ(tmp173_in_view.rot_x * (-2PI/360.0), tmp173_in_view.rot_y * (-2PI/360.0), 0);
   tmp217_eye_mat.mulv(tmp215_eye) => tmp216_eye_rot;
   tmp216_eye_rot.add(tmp218_ctr);
   tmp219_up.x = sin(tmp173_in_view.rot_z * (2PI/360.0));
   tmp219_up.y = cos(tmp173_in_view.rot_z * (2PI/360.0));
   Matrix4f.BuildLookAtMatrix4f(tmp216_eye_rot, tmp218_ctr, tmp219_up) => tmp172_in_mat;
   // ---- END GMat4OrbitCam default.scenes.scene1.constants.cam
   Matrix4f tmp220_mat_dst;
   // GMat4RotateXYZ id=default.scenes.scene1.constants
   float tmp221_in_y;
   float tmp222_y_src;
   tmp222_y_src = ext_default_global_time;
   float tmp223_y_scloff;
   tmp223_y_scloff = tmp222_y_src*-0.60401+0.0;
   tmp221_in_y = tmp223_y_scloff;
   tmp221_in_y += 0;
   tmp220_mat_dst.initEulerXYZ(0, tmp221_in_y, 0);
   // connOp=OP_MUL this_input.id=mat
   tmp172_in_mat = tmp172_in_mat * tmp220_mat_dst;
   // GMat4Scale id= id=default.scenes.scene1.constants.modelview.inputs.mat.3
   float tmp224_in_x;
   tmp224_in_x = 1 * 2.60482;
   float tmp225_in_y;
   tmp225_in_y = 1 * 2.60482;
   float tmp226_in_z;
   tmp226_in_z = 1 * 2.60482;
   tmp220_mat_dst.initScalef(tmp224_in_x, tmp225_in_y, tmp226_in_z);
   // connOp=OP_MUL this_input.id=mat
   tmp172_in_mat = tmp172_in_mat * tmp220_mat_dst;
   // GMat4Scale id= id=default.scenes.scene1.constants.modelview.inputs.mat.4
   float tmp227_in_x;
   tmp227_in_x = 1 * 1;
   float tmp228_in_y;
   tmp228_in_y = 1 * 1;
   float tmp229_in_z;
   tmp229_in_z = 1.26042 * 1;
   tmp220_mat_dst.initScalef(tmp227_in_x, tmp228_in_y, tmp229_in_z);
   // connOp=OP_MUL this_input.id=mat
   tmp172_in_mat = tmp172_in_mat * tmp220_mat_dst;
   // GMat4RotateXYZ id=default.scenes.scene1.constants
   float tmp230_in_z;
   float tmp231_z_src;
   float tmp232_in_v;
   float tmp233_value_src;
   tmp233_value_src = ext_default_global_time;
   float tmp234_value_scloff;
   tmp234_value_scloff = tmp233_value_src*0.41+0.0;
   tmp232_in_v = tmp234_value_scloff;
   tmp232_in_v += 0;
   tmp231_z_src = tmp232_in_v;
   float tmp235_z_scloff;
   tmp235_z_scloff = tmp231_z_src*-0.19+0.0;
   tmp230_in_z = tmp235_z_scloff;
   tmp230_in_z += 0;
   tmp220_mat_dst.initEulerXYZ(0, 0, tmp230_in_z);
   // connOp=OP_MUL this_input.id=mat
   tmp172_in_mat = tmp172_in_mat * tmp220_mat_dst;
   // GMat4RotateXYZ id=default.scenes.scene1.constants
   float tmp236_in_x;
   float tmp237_x_src;
   float tmp238_in_v;
   float tmp239_value_src;
   tmp239_value_src = ext_default_global_time;
   float tmp240_value_scloff;
   tmp240_value_scloff = tmp239_value_src*0.41+0.0;
   tmp238_in_v = tmp240_value_scloff;
   tmp238_in_v += 0;
   tmp237_x_src = tmp238_in_v;
   float tmp241_x_scloff;
   tmp241_x_scloff = tmp237_x_src*0.125+0.0;
   tmp236_in_x = tmp241_x_scloff;
   tmp236_in_x += 0;
   tmp220_mat_dst.initEulerXYZ(tmp236_in_x, 0, 0);
   // connOp=OP_MUL this_input.id=mat
   tmp172_in_mat = tmp172_in_mat * tmp220_mat_dst;
   // GMat4RotateXYZ id=default.scenes.scene1.constants
   float tmp242_in_y;
   float tmp243_y_src;
   float tmp244_in_v;
   float tmp245_value_src;
   tmp245_value_src = ext_default_global_time;
   float tmp246_value_scloff;
   tmp246_value_scloff = tmp245_value_src*0.41+0.0;
   tmp244_in_v = tmp246_value_scloff;
   tmp244_in_v += 0;
   tmp243_y_src = tmp244_in_v;
   float tmp247_y_scloff;
   tmp247_y_scloff = tmp243_y_src*1.25+0.0;
   tmp242_in_y = tmp247_y_scloff;
   tmp242_in_y += 0;
   tmp220_mat_dst.initEulerXYZ(0, tmp242_in_y, 0);
   // connOp=OP_MUL this_input.id=mat
   tmp172_in_mat = tmp172_in_mat * tmp220_mat_dst;
   // GMat4Scale id= id=default.scenes.scene1.constants.modelview.inputs.mat.8
   float tmp248_in_x;
   tmp248_in_x = 1 * 0.58659;
   float tmp249_in_y;
   tmp249_in_y = 1 * 0.58659;
   float tmp250_in_z;
   tmp250_in_z = 1 * 0.58659;
   tmp220_mat_dst.initScalef(tmp248_in_x, tmp249_in_y, tmp250_in_z);
   // connOp=OP_MUL this_input.id=mat
   tmp172_in_mat = tmp172_in_mat * tmp220_mat_dst;
   // GMat4Translate id= id=default.scenes.scene1.constants.modelview.inputs.mat.9
   tmp220_mat_dst.initTranslatef(0, -1.11253, 0);
   // connOp=OP_MUL this_input.id=mat
   tmp172_in_mat = tmp172_in_mat * tmp220_mat_dst;
   // GMat4Scale id= id=default.scenes.scene1.constants.modelview.inputs.mat.10
   float tmp251_in_x;
   tmp251_in_x = 1 * 1.88542;
   float tmp252_in_y;
   tmp252_in_y = 1 * 1.88542;
   float tmp253_in_z;
   tmp253_in_z = 4 * 1.88542;
   tmp220_mat_dst.initScalef(tmp251_in_x, tmp252_in_y, tmp253_in_z);
   // connOp=OP_MUL this_input.id=mat
   tmp172_in_mat = tmp172_in_mat * tmp220_mat_dst;
   tmp171_init = tmp172_in_mat;
   // OP_MAT_INV_TRP
   tmp171_init.invert();
   tmp171_init.transpose();
   glUniformMatrix4fv(default_scene1_render_fbo_model_3ds_prg_prg1__u_modelview_inv, 1/*count*/, GL_TRUE/*transpose*/, tmp171_init);
   Vector3f tmp254_init;
   tmp254_init = vector3f(0.0941176, 0.278431, 0.427451);
   glUniform3f(default_scene1_render_fbo_model_3ds_prg_prg1__u_diffuse_color_bg, tmp254_init.x, tmp254_init.y, tmp254_init.z);
   Vector3f tmp255_init;
   tmp255_init = vector3f(0.87451, 0.929412, 1);
   glUniform3f(default_scene1_render_fbo_model_3ds_prg_prg1__u_diffuse_color_fg, tmp255_init.x, tmp255_init.y, tmp255_init.z);
   if(0 == _fbW) glUniform4f(default_scene1_render_fbo_model_3ds_prg_prg1_u_fragcoord_off_scl, 0, 0, 1.0, 1.0);
   else glUniform4f(default_scene1_render_fbo_model_3ds_prg_prg1_u_fragcoord_off_scl, 0.0f, 0.0f, 1.0f, 1.0f);
   if(0 == _fbW) glUniform2f(default_scene1_render_fbo_model_3ds_prg_prg1_u_normcoord_scl, 0.0025, 0.00333333);
   else glUniform2f(default_scene1_render_fbo_model_3ds_prg_prg1_u_normcoord_scl, 1.0f / (0.5f * _fbW), 1.0f / (0.5f * _fbH));
   // draw 1296 triangles
   g_tri_count += 1296;
   glDrawArrays(GL_TRIANGLES, 0/*first*/, 3888);
   

   // <draw_post>
   default_scene1_render_fbo_model_3ds_tex_tex_light_curve.unbind();
   default_scene1_render_fbo_model_3ds_tex_tex_pal.unbind();
   default_scene1_render_fbo_model_3ds_tex_tex_rim_post.unbind();
   
}

function Exit_default_scene1_render_fbo_model_model_3ds() {
   default_scene1_render_fbo_model_3ds_tex_tex_light_curve.unload();
   default_scene1_render_fbo_model_3ds_tex_tex_pal.unload();
   default_scene1_render_fbo_model_3ds_tex_tex_rim_post.unload();
   zglDeleteBuffer(default_scene1_render_fbo_buf_model_3ds_a);
   
}

function Init_default_scene1_ground_ground_prg_prg1() {
   default_scene1_ground_ground_prg_prg1.setVertexSource(default_scene1_ground_ground_prg_prg1_vtx_src);
   default_scene1_ground_ground_prg_prg1.setFragmentSource(default_scene1_ground_ground_prg_prg1_frag_src);
   if(!default_scene1_ground_ground_prg_prg1.create()) return false;
   default_scene1_ground_ground_prg_prg1__a_position = glGetAttribLocation(default_scene1_ground_ground_prg_prg1.programId, "a_position");
   default_scene1_ground_ground_prg_prg1__a_uv = glGetAttribLocation(default_scene1_ground_ground_prg_prg1.programId, "a_uv");
   default_scene1_ground_ground_prg_prg1__u_time = glGetUniformLocation(default_scene1_ground_ground_prg_prg1.programId, "u_time");
   default_scene1_ground_ground_prg_prg1__u_transform = glGetUniformLocation(default_scene1_ground_ground_prg_prg1.programId, "u_transform");
   default_scene1_ground_ground_prg_prg1__u_tex = glGetUniformLocation(default_scene1_ground_ground_prg_prg1.programId, "u_tex");
   default_scene1_ground_ground_prg_prg1_u_fragcoord_off_scl = glGetUniformLocation(default_scene1_ground_ground_prg_prg1.programId, "u_fragcoord_off_scl");
   default_scene1_ground_ground_prg_prg1_u_normcoord_scl = glGetUniformLocation(default_scene1_ground_ground_prg_prg1.programId, "u_normcoord_scl");
   
   return true;
}

function Exit_default_scene1_ground_ground_prg_prg1() {
   default_scene1_ground_ground_prg_prg1.destroy();
   
}

function Init_default_scene1_ground_model_ground() {
   default_scene1_ground_buf_ground_a = zglGenBuffer();
   glBindBuffer(GL_ARRAY_BUFFER, default_scene1_ground_buf_ground_a);
   zglBufferData(GL_ARRAY_BUFFER, (16/*vtxAttribSz*/ * 4/*#verts*/), default_scene1_ground_buf_ground_a_data, GL_STATIC_DRAW);
   glBindBuffer(GL_ARRAY_BUFFER, 0);
   
   return true;
}

function Draw_default_scene1_ground_model_ground(int _fbW, int _fbH, Matrix4f _transform) {
   // <draw_pre>
   if(2 != last_model_id)
   {
      glBindBuffer(GL_ARRAY_BUFFER, default_scene1_ground_buf_ground_a);
      glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);
      last_model_id = 2;
   }
   if(2 != last_program_id)
   {
      default_scene1_ground_ground_prg_prg1.bind();
   } // 2 != last_program_id
   if(2 != last_program_id)
   {
      default_scene1_ground_ground_prg_prg1.bind();
      if(default_scene1_ground_ground_prg_prg1__a_position >= 0)
      {
        glEnableVertexAttribArray(default_scene1_ground_ground_prg_prg1__a_position);
        zglVertexAttribOffset(default_scene1_ground_ground_prg_prg1__a_position, 2, GL_FLOAT, GL_FALSE/*normalize*/, 16/*stride*/, 0);
      }
      if(default_scene1_ground_ground_prg_prg1__a_uv >= 0)
      {
        glEnableVertexAttribArray(default_scene1_ground_ground_prg_prg1__a_uv);
        zglVertexAttribOffset(default_scene1_ground_ground_prg_prg1__a_uv, 2, GL_FLOAT, GL_FALSE/*normalize*/, 16/*stride*/, 8);
      }
      last_program_id = 2;
   } // 2 != last_program_id
   float tmp256_init;
   tmp256_init = ext_default_global_time;
   glUniform1f(default_scene1_ground_ground_prg_prg1__u_time, tmp256_init);
   Matrix4f tmp257_init;
   // GMat4Perspective id=default.scenes.scene1.constants.projection
   CalcMat4Perspective(tmp257_init, 1.40177, 67.7671, 2.55539, 61.9984);
   //tmp257_init.initFrustumFov(1.40177, 67.7671, 2.55539, 61.9984);
   //trace "mat4frustumfov="+#(tmp257_init);
   Matrix4f tmp258_in_dst;
   // ---- BEGIN GMat4OrbitCam default.scenes.scene1.constants.cam
   OrbitCamView tmp259_in_view;
   
   //
   // Tween default.scenes.scene1.mods.tween_cam:
   //
   boolean tmp260_tween_cam_reset;
   boolean tmp261_tween_cam_prev;
   boolean tmp262_tween_cam_next;
   float tmp263_tween_cam_speed;
   tmp263_tween_cam_speed = 0.0017;
   float tmp264_in_t;
   float tmp265_t_src;
   float tmp266_in_v;
   float tmp267_value_src;
   tmp267_value_src = ext_default_global_time;
   float tmp268_value_scloff;
   tmp268_value_scloff = tmp267_value_src*0.43105+0.0;
   tmp266_in_v = tmp268_value_scloff;
   tmp266_in_v += 0;
   tmp265_t_src = tmp266_in_v;
   float tmp269_t_scloff;
   tmp269_t_scloff = tmp265_t_src*0.03+0.0;
   tmp264_in_t = tmp269_t_scloff;
   tmp264_in_t = tmp264_in_t % 1.0f;
   g_mod_default_scene1_tween_cam_t = default_scene1_env1_env_cam_t_val.valueAtTime(tmp264_in_t) * 7 + 0;
   g_mod_default_scene1_tween_cam_src_idx = int(g_mod_default_scene1_tween_cam_t);
   g_mod_default_scene1_tween_cam_dst_idx = g_mod_default_scene1_tween_cam_src_idx + 1;
   g_mod_default_scene1_tween_cam_t = g_mod_default_scene1_tween_cam_t - int(g_mod_default_scene1_tween_cam_t);
   if(tmp260_tween_cam_reset) { g_mod_default_scene1_tween_cam_src_idx = 0; g_mod_default_scene1_tween_cam_dst_idx = 1; g_mod_default_scene1_tween_cam_t = 0.0f; }
   if(tmp261_tween_cam_prev) { g_mod_default_scene1_tween_cam_src_idx--; g_mod_default_scene1_tween_cam_dst_idx--; g_mod_default_scene1_tween_cam_t = 0.0f; }
   if(tmp262_tween_cam_next) { g_mod_default_scene1_tween_cam_src_idx++; g_mod_default_scene1_tween_cam_dst_idx++; g_mod_default_scene1_tween_cam_t = 0.0f; }
   if(g_mod_default_scene1_tween_cam_adv) { g_mod_default_scene1_tween_cam_adv = false; g_mod_default_scene1_tween_cam_src_idx++; g_mod_default_scene1_tween_cam_dst_idx++; }
   g_mod_default_scene1_tween_cam_src_idx = (g_mod_default_scene1_tween_cam_src_idx % 7);
   g_mod_default_scene1_tween_cam_dst_idx = (g_mod_default_scene1_tween_cam_dst_idx % 7);
   OrbitCamView tmp270_tween_cam_src;
   OrbitCamView tmp271_tween_cam_dst;
   if( (g_mod_default_scene1_tween_cam_src_idx == 0) || (g_mod_default_scene1_tween_cam_dst_idx == 0) )
   {
      // input 1/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp272_tween_cam_input_0;
      Vector3f tmp273_in_ctr;
      Vector3f tmp274_in_rot;
      float tmp275_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      tmp273_in_ctr.init(0.0443118, -0.0471751, 3.81913);
      tmp274_in_rot.init(358.5, 1.5, 0);
      tmp275_in_dist = 1;
      tmp272_tween_cam_input_0.ctr_x = tmp273_in_ctr.x;
      tmp272_tween_cam_input_0.ctr_y = tmp273_in_ctr.y;
      tmp272_tween_cam_input_0.ctr_z = tmp273_in_ctr.z;
      tmp272_tween_cam_input_0.rot_x = tmp274_in_rot.x;
      tmp272_tween_cam_input_0.rot_y = tmp274_in_rot.y;
      tmp272_tween_cam_input_0.rot_z = tmp274_in_rot.z;
      tmp272_tween_cam_input_0.eye_dist = tmp275_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      
      if(g_mod_default_scene1_tween_cam_src_idx == 0)
         tmp270_tween_cam_src = tmp272_tween_cam_input_0;
      if(g_mod_default_scene1_tween_cam_dst_idx == 0)
         tmp271_tween_cam_dst = tmp272_tween_cam_input_0;
   } // end tween inputIdx=0
   if( (g_mod_default_scene1_tween_cam_src_idx == 1) || (g_mod_default_scene1_tween_cam_dst_idx == 1) )
   {
      // input 2/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp276_tween_cam_input_1;
      Vector3f tmp277_in_ctr;
      Vector3f tmp278_in_rot;
      float tmp279_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.1
      tmp277_in_ctr.init(-3.49277, 0.575794, 3.55952);
      tmp278_in_rot.init(18.5, 50.5, 0);
      tmp279_in_dist = 1;
      tmp276_tween_cam_input_1.ctr_x = tmp277_in_ctr.x;
      tmp276_tween_cam_input_1.ctr_y = tmp277_in_ctr.y;
      tmp276_tween_cam_input_1.ctr_z = tmp277_in_ctr.z;
      tmp276_tween_cam_input_1.rot_x = tmp278_in_rot.x;
      tmp276_tween_cam_input_1.rot_y = tmp278_in_rot.y;
      tmp276_tween_cam_input_1.rot_z = tmp278_in_rot.z;
      tmp276_tween_cam_input_1.eye_dist = tmp279_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.1
      
      if(g_mod_default_scene1_tween_cam_src_idx == 1)
         tmp270_tween_cam_src = tmp276_tween_cam_input_1;
      if(g_mod_default_scene1_tween_cam_dst_idx == 1)
         tmp271_tween_cam_dst = tmp276_tween_cam_input_1;
   } // end tween inputIdx=1
   if( (g_mod_default_scene1_tween_cam_src_idx == 2) || (g_mod_default_scene1_tween_cam_dst_idx == 2) )
   {
      // input 3/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp280_tween_cam_input_2;
      Vector3f tmp281_in_ctr;
      Vector3f tmp282_in_rot;
      float tmp283_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.2
      tmp281_in_ctr.init(-4.23649, -0.281754, -1.42568);
      tmp282_in_rot.init(358.5, 109.5, 0);
      tmp283_in_dist = 1;
      tmp280_tween_cam_input_2.ctr_x = tmp281_in_ctr.x;
      tmp280_tween_cam_input_2.ctr_y = tmp281_in_ctr.y;
      tmp280_tween_cam_input_2.ctr_z = tmp281_in_ctr.z;
      tmp280_tween_cam_input_2.rot_x = tmp282_in_rot.x;
      tmp280_tween_cam_input_2.rot_y = tmp282_in_rot.y;
      tmp280_tween_cam_input_2.rot_z = tmp282_in_rot.z;
      tmp280_tween_cam_input_2.eye_dist = tmp283_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.2
      
      if(g_mod_default_scene1_tween_cam_src_idx == 2)
         tmp270_tween_cam_src = tmp280_tween_cam_input_2;
      if(g_mod_default_scene1_tween_cam_dst_idx == 2)
         tmp271_tween_cam_dst = tmp280_tween_cam_input_2;
   } // end tween inputIdx=2
   if( (g_mod_default_scene1_tween_cam_src_idx == 3) || (g_mod_default_scene1_tween_cam_dst_idx == 3) )
   {
      // input 4/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp284_tween_cam_input_3;
      Vector3f tmp285_in_ctr;
      Vector3f tmp286_in_rot;
      float tmp287_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.3
      tmp285_in_ctr.init(-2.74722, 3.10906, -4.75795);
      tmp286_in_rot.init(38, 164, 0);
      tmp287_in_dist = 1;
      tmp284_tween_cam_input_3.ctr_x = tmp285_in_ctr.x;
      tmp284_tween_cam_input_3.ctr_y = tmp285_in_ctr.y;
      tmp284_tween_cam_input_3.ctr_z = tmp285_in_ctr.z;
      tmp284_tween_cam_input_3.rot_x = tmp286_in_rot.x;
      tmp284_tween_cam_input_3.rot_y = tmp286_in_rot.y;
      tmp284_tween_cam_input_3.rot_z = tmp286_in_rot.z;
      tmp284_tween_cam_input_3.eye_dist = tmp287_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.3
      
      if(g_mod_default_scene1_tween_cam_src_idx == 3)
         tmp270_tween_cam_src = tmp284_tween_cam_input_3;
      if(g_mod_default_scene1_tween_cam_dst_idx == 3)
         tmp271_tween_cam_dst = tmp284_tween_cam_input_3;
   } // end tween inputIdx=3
   if( (g_mod_default_scene1_tween_cam_src_idx == 4) || (g_mod_default_scene1_tween_cam_dst_idx == 4) )
   {
      // input 5/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp288_tween_cam_input_4;
      Vector3f tmp289_in_ctr;
      Vector3f tmp290_in_rot;
      float tmp291_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.4
      tmp289_in_ctr.init(4.48925, 0.639756, -3.05133);
      tmp290_in_rot.init(18, 245.5, 0);
      tmp291_in_dist = 1;
      tmp288_tween_cam_input_4.ctr_x = tmp289_in_ctr.x;
      tmp288_tween_cam_input_4.ctr_y = tmp289_in_ctr.y;
      tmp288_tween_cam_input_4.ctr_z = tmp289_in_ctr.z;
      tmp288_tween_cam_input_4.rot_x = tmp290_in_rot.x;
      tmp288_tween_cam_input_4.rot_y = tmp290_in_rot.y;
      tmp288_tween_cam_input_4.rot_z = tmp290_in_rot.z;
      tmp288_tween_cam_input_4.eye_dist = tmp291_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.4
      
      if(g_mod_default_scene1_tween_cam_src_idx == 4)
         tmp270_tween_cam_src = tmp288_tween_cam_input_4;
      if(g_mod_default_scene1_tween_cam_dst_idx == 4)
         tmp271_tween_cam_dst = tmp288_tween_cam_input_4;
   } // end tween inputIdx=4
   if( (g_mod_default_scene1_tween_cam_src_idx == 5) || (g_mod_default_scene1_tween_cam_dst_idx == 5) )
   {
      // input 6/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp292_tween_cam_input_5;
      Vector3f tmp293_in_ctr;
      Vector3f tmp294_in_rot;
      float tmp295_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.5
      tmp293_in_ctr.init(5.04278, 0.142524, 0.590748);
      tmp294_in_rot.init(358.5, 284.5, 359);
      tmp295_in_dist = 1;
      tmp292_tween_cam_input_5.ctr_x = tmp293_in_ctr.x;
      tmp292_tween_cam_input_5.ctr_y = tmp293_in_ctr.y;
      tmp292_tween_cam_input_5.ctr_z = tmp293_in_ctr.z;
      tmp292_tween_cam_input_5.rot_x = tmp294_in_rot.x;
      tmp292_tween_cam_input_5.rot_y = tmp294_in_rot.y;
      tmp292_tween_cam_input_5.rot_z = tmp294_in_rot.z;
      tmp292_tween_cam_input_5.eye_dist = tmp295_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.5
      
      if(g_mod_default_scene1_tween_cam_src_idx == 5)
         tmp270_tween_cam_src = tmp292_tween_cam_input_5;
      if(g_mod_default_scene1_tween_cam_dst_idx == 5)
         tmp271_tween_cam_dst = tmp292_tween_cam_input_5;
   } // end tween inputIdx=5
   if( (g_mod_default_scene1_tween_cam_src_idx == 6) || (g_mod_default_scene1_tween_cam_dst_idx == 6) )
   {
      // input 7/7: 7 connections, first=default.scenes.scene1.mods.tween_cam.inputs.input_conn.0
      OrbitCamView tmp296_tween_cam_input_6;
      Vector3f tmp297_in_ctr;
      Vector3f tmp298_in_rot;
      float tmp299_in_dist;
      // ---- BEGIN GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.6
      tmp297_in_ctr.init(3.20222, 1.96171, 5.34378);
      tmp298_in_rot.init(23.5, 341.5, 0);
      tmp299_in_dist = 1;
      tmp296_tween_cam_input_6.ctr_x = tmp297_in_ctr.x;
      tmp296_tween_cam_input_6.ctr_y = tmp297_in_ctr.y;
      tmp296_tween_cam_input_6.ctr_z = tmp297_in_ctr.z;
      tmp296_tween_cam_input_6.rot_x = tmp298_in_rot.x;
      tmp296_tween_cam_input_6.rot_y = tmp298_in_rot.y;
      tmp296_tween_cam_input_6.rot_z = tmp298_in_rot.z;
      tmp296_tween_cam_input_6.eye_dist = tmp299_in_dist;
      // ---- END GOrbitCamView default.scenes.scene1.mods.tween_cam.inputs.input_conn.6
      
      if(g_mod_default_scene1_tween_cam_src_idx == 6)
         tmp270_tween_cam_src = tmp296_tween_cam_input_6;
      if(g_mod_default_scene1_tween_cam_dst_idx == 6)
         tmp271_tween_cam_dst = tmp296_tween_cam_input_6;
   } // end tween inputIdx=6
   // Tween interpol=easeInOutQuad
   float tmp300_tween_cam_teaseinoutquad;
   tmp300_tween_cam_teaseinoutquad =  g_mod_default_scene1_tween_cam_t < 0.5 ? 2 * g_mod_default_scene1_tween_cam_t * g_mod_default_scene1_tween_cam_t : 1 - pow(-2 * g_mod_default_scene1_tween_cam_t + 2, 2) / 2;
   tmp259_in_view.rot_x = mathLerpCyclicf(tmp270_tween_cam_src.rot_x, tmp271_tween_cam_dst.rot_x, 360.0, tmp300_tween_cam_teaseinoutquad);
   tmp259_in_view.rot_y = mathLerpCyclicf(tmp270_tween_cam_src.rot_y, tmp271_tween_cam_dst.rot_y, 360.0, tmp300_tween_cam_teaseinoutquad);
   tmp259_in_view.rot_z = mathLerpCyclicf(tmp270_tween_cam_src.rot_z, tmp271_tween_cam_dst.rot_z, 360.0, tmp300_tween_cam_teaseinoutquad);
   tmp259_in_view.ctr_x = tmp270_tween_cam_src.ctr_x + (tmp271_tween_cam_dst.ctr_x - tmp270_tween_cam_src.ctr_x) * tmp300_tween_cam_teaseinoutquad;
   tmp259_in_view.ctr_y = tmp270_tween_cam_src.ctr_y + (tmp271_tween_cam_dst.ctr_y - tmp270_tween_cam_src.ctr_y) * tmp300_tween_cam_teaseinoutquad;
   tmp259_in_view.ctr_z = tmp270_tween_cam_src.ctr_z + (tmp271_tween_cam_dst.ctr_z - tmp270_tween_cam_src.ctr_z) * tmp300_tween_cam_teaseinoutquad;
   tmp259_in_view.eye_dist = tmp270_tween_cam_src.eye_dist + (tmp271_tween_cam_dst.eye_dist - tmp270_tween_cam_src.eye_dist) * tmp300_tween_cam_teaseinoutquad;
   
   Vector3f tmp301_eye;
   Vector3f tmp302_eye_rot;
   Matrix3f tmp303_eye_mat;
   Vector3f tmp304_ctr;
   Vector3f tmp305_up;
   tmp304_ctr.init(tmp259_in_view.ctr_x, tmp259_in_view.ctr_y, tmp259_in_view.ctr_z);
   tmp301_eye.init(0, 0, tmp259_in_view.eye_dist);
   tmp303_eye_mat.initEulerXYZ(tmp259_in_view.rot_x * (-2PI/360.0), tmp259_in_view.rot_y * (-2PI/360.0), 0);
   tmp303_eye_mat.mulv(tmp301_eye) => tmp302_eye_rot;
   tmp302_eye_rot.add(tmp304_ctr);
   tmp305_up.x = sin(tmp259_in_view.rot_z * (2PI/360.0));
   tmp305_up.y = cos(tmp259_in_view.rot_z * (2PI/360.0));
   Matrix4f.BuildLookAtMatrix4f(tmp302_eye_rot, tmp304_ctr, tmp305_up) => tmp258_in_dst;
   // ---- END GMat4OrbitCam default.scenes.scene1.constants.cam
   // connOp=OP_MUL this_input.id=in
   tmp257_init = tmp257_init * tmp258_in_dst;
   // GMat4RotateXYZ id=default.scenes.scene1.constants
   float tmp306_in_y;
   float tmp307_y_src;
   tmp307_y_src = ext_default_global_time;
   float tmp308_y_scloff;
   tmp308_y_scloff = tmp307_y_src*-0.60401+0.0;
   tmp306_in_y = tmp308_y_scloff;
   tmp306_in_y += 0;
   tmp258_in_dst.initEulerXYZ(0, tmp306_in_y, 0);
   // connOp=OP_MUL this_input.id=in
   tmp257_init = tmp257_init * tmp258_in_dst;
   // GMat4RotateXYZ id=<anon>
   tmp258_in_dst.initEulerXYZ(1.44399, 0, 0.192258);
   // connOp=OP_MUL this_input.id=in
   tmp257_init = tmp257_init * tmp258_in_dst;
   // GMat4Translate id= id=default.scenes.scene1.renderpasses.ground.models.ground.programs.prg1.uniforms.transform.inputs.in.4
   tmp258_in_dst.initTranslatef(0, 0, 1.96226);
   // connOp=OP_MUL this_input.id=in
   tmp257_init = tmp257_init * tmp258_in_dst;
   if(null != _transform)
   {
      Matrix4f tmp309__transform_mat;
      _transform.mul(tmp257_init) => tmp309__transform_mat;
      glUniformMatrix4fv(default_scene1_ground_ground_prg_prg1__u_transform, 1/*count*/, GL_TRUE/*transpose*/, tmp309__transform_mat);
   }
   else
   {
      glUniformMatrix4fv(default_scene1_ground_ground_prg_prg1__u_transform, 1/*count*/, GL_TRUE/*transpose*/, tmp257_init);
   }
   glUniform1i(default_scene1_ground_ground_prg_prg1__u_tex, 0);  // bind texture unit 0 to sampler2D
   if(0 == _fbW) glUniform4f(default_scene1_ground_ground_prg_prg1_u_fragcoord_off_scl, 0, 0, 1.0, 1.0);
   else glUniform4f(default_scene1_ground_ground_prg_prg1_u_fragcoord_off_scl, 0.0f, 0.0f, 1.0f, 1.0f);
   if(0 == _fbW) glUniform2f(default_scene1_ground_ground_prg_prg1_u_normcoord_scl, 0.0025, 0.00333333);
   else glUniform2f(default_scene1_ground_ground_prg_prg1_u_normcoord_scl, 1.0f / (0.5f * _fbW), 1.0f / (0.5f * _fbH));
   // draw 2 triangles
   g_tri_count += 2;
   glDrawArrays(GL_TRIANGLE_FAN, 0/*first*/, 4);
   

   // <draw_post>
}

function Exit_default_scene1_ground_model_ground() {
   zglDeleteBuffer(default_scene1_ground_buf_ground_a);
   
}

function Init_default_scene1_blit_fbo_blit_prg_prg1() {
   default_scene1_blit_fbo_blit_prg_prg1.setVertexSource(default_scene1_blit_fbo_blit_prg_prg1_vtx_src);
   default_scene1_blit_fbo_blit_prg_prg1.setFragmentSource(default_scene1_blit_fbo_blit_prg_prg1_frag_src);
   if(!default_scene1_blit_fbo_blit_prg_prg1.create()) return false;
   default_scene1_blit_fbo_blit_prg_prg1__a_position = glGetAttribLocation(default_scene1_blit_fbo_blit_prg_prg1.programId, "a_position");
   default_scene1_blit_fbo_blit_prg_prg1__a_uv = glGetAttribLocation(default_scene1_blit_fbo_blit_prg_prg1.programId, "a_uv");
   default_scene1_blit_fbo_blit_prg_prg1__u_time = glGetUniformLocation(default_scene1_blit_fbo_blit_prg_prg1.programId, "u_time");
   default_scene1_blit_fbo_blit_prg_prg1__u_transform = glGetUniformLocation(default_scene1_blit_fbo_blit_prg_prg1.programId, "u_transform");
   default_scene1_blit_fbo_blit_prg_prg1__u_tex = glGetUniformLocation(default_scene1_blit_fbo_blit_prg_prg1.programId, "u_tex");
   default_scene1_blit_fbo_blit_prg_prg1_u_fragcoord_off_scl = glGetUniformLocation(default_scene1_blit_fbo_blit_prg_prg1.programId, "u_fragcoord_off_scl");
   default_scene1_blit_fbo_blit_prg_prg1_u_normcoord_scl = glGetUniformLocation(default_scene1_blit_fbo_blit_prg_prg1.programId, "u_normcoord_scl");
   
   return true;
}

function Exit_default_scene1_blit_fbo_blit_prg_prg1() {
   default_scene1_blit_fbo_blit_prg_prg1.destroy();
   
}

function Init_default_scene1_blit_fbo_model_blit() {
   default_scene1_blit_fbo_buf_blit_a = zglGenBuffer();
   glBindBuffer(GL_ARRAY_BUFFER, default_scene1_blit_fbo_buf_blit_a);
   zglBufferData(GL_ARRAY_BUFFER, (16/*vtxAttribSz*/ * 4/*#verts*/), default_scene1_blit_fbo_buf_blit_a_data, GL_STATIC_DRAW);
   glBindBuffer(GL_ARRAY_BUFFER, 0);
   
   return true;
}

function Draw_default_scene1_blit_fbo_model_blit(int _fbW, int _fbH, Matrix4f _transform) {
   // <draw_pre>
   if(3 != last_model_id)
   {
      glBindBuffer(GL_ARRAY_BUFFER, default_scene1_blit_fbo_buf_blit_a);
      glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);
      last_model_id = 3;
   }
   if(3 != last_program_id)
   {
      default_scene1_blit_fbo_blit_prg_prg1.bind();
   } // 3 != last_program_id
   glActiveTexture(GL_TEXTURE0+0);
   default_scene1_render_fbo_tex_fbo_tex.bind();
   if(3 != last_program_id)
   {
      default_scene1_blit_fbo_blit_prg_prg1.bind();
      if(default_scene1_blit_fbo_blit_prg_prg1__a_position >= 0)
      {
        glEnableVertexAttribArray(default_scene1_blit_fbo_blit_prg_prg1__a_position);
        zglVertexAttribOffset(default_scene1_blit_fbo_blit_prg_prg1__a_position, 2, GL_FLOAT, GL_FALSE/*normalize*/, 16/*stride*/, 0);
      }
      if(default_scene1_blit_fbo_blit_prg_prg1__a_uv >= 0)
      {
        glEnableVertexAttribArray(default_scene1_blit_fbo_blit_prg_prg1__a_uv);
        zglVertexAttribOffset(default_scene1_blit_fbo_blit_prg_prg1__a_uv, 2, GL_FLOAT, GL_FALSE/*normalize*/, 16/*stride*/, 8);
      }
      last_program_id = 3;
   } // 3 != last_program_id
   float tmp310_init;
   tmp310_init = ext_default_global_time;
   glUniform1f(default_scene1_blit_fbo_blit_prg_prg1__u_time, tmp310_init);
   Matrix4f tmp311_init;
   // GMat4Ortho id=<anon>
   CalcMat4Ortho(tmp311_init, 1, 1, 1);
   if(null != _transform)
   {
      Matrix4f tmp312__transform_mat;
      _transform.mul(tmp311_init) => tmp312__transform_mat;
      glUniformMatrix4fv(default_scene1_blit_fbo_blit_prg_prg1__u_transform, 1/*count*/, GL_TRUE/*transpose*/, tmp312__transform_mat);
   }
   else
   {
      glUniformMatrix4fv(default_scene1_blit_fbo_blit_prg_prg1__u_transform, 1/*count*/, GL_TRUE/*transpose*/, tmp311_init);
   }
   glUniform1i(default_scene1_blit_fbo_blit_prg_prg1__u_tex, 0);  // bind texture unit 0 to sampler2D
   if(0 == _fbW) glUniform4f(default_scene1_blit_fbo_blit_prg_prg1_u_fragcoord_off_scl, 0, 0, 1.0, 1.0);
   else glUniform4f(default_scene1_blit_fbo_blit_prg_prg1_u_fragcoord_off_scl, 0.0f, 0.0f, 1.0f, 1.0f);
   if(0 == _fbW) glUniform2f(default_scene1_blit_fbo_blit_prg_prg1_u_normcoord_scl, 0.0025, 0.00333333);
   else glUniform2f(default_scene1_blit_fbo_blit_prg_prg1_u_normcoord_scl, 1.0f / (0.5f * _fbW), 1.0f / (0.5f * _fbH));
   // draw 2 triangles
   g_tri_count += 2;
   glDrawArrays(GL_TRIANGLE_FAN, 0/*first*/, 4);
   

   // <draw_post>
   default_scene1_render_fbo_tex_fbo_tex.unbind();
   
}

function Exit_default_scene1_blit_fbo_model_blit() {
   zglDeleteBuffer(default_scene1_blit_fbo_buf_blit_a);
   
}

function Init_default_scene1_renderpass_render_fbo() {
   return true;
}

function Draw_default_scene1_renderpass_render_fbo(int _fbW, int _fbH) {
   // <draw_pre>
   // -------- BEGIN renderpass default.scenes.scene1.renderpasses.render_fbo --------
   glBindFramebuffer(GL_FRAMEBUFFER, default_scene1_render_fbo_fbo_fbo);
   glViewport(0, 0, 2048, 2048);
   glScissor(0, 0, 2048, 2048);
   glClearColor(0.176471, 0.262745, 0.352941, 1);
   glClearDepth(1);
   glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
   glEnable(GL_DEPTH_TEST);
   glDisable(GL_STENCIL_TEST);
   glDisable(GL_BLEND);
   glColorMask(GL_TRUE, GL_TRUE, GL_TRUE, GL_TRUE);
   glDepthMask(GL_TRUE);
   glDepthFunc(GL_LESS);
   glStencilMask(255);
   glStencilFunc(GL_ALWAYS, 0, 0);
   glStencilOp(GL_KEEP, GL_KEEP, GL_KEEP);
   glEnable(GL_CULL_FACE);
   glFrontFace(GL_CW);
   glCullFace(GL_BACK);
   Draw_default_scene1_render_fbo_model_model_3ds(2048, 2048, null/*transform*/);
   

   // <draw_post>
   glBindFramebuffer(GL_FRAMEBUFFER, g_default_fb);
   glViewport(g_default_vp_x, g_default_vp_y, g_default_vp_w, g_default_vp_h);
   glScissor(g_default_vp_x, g_default_vp_y, g_default_vp_w, g_default_vp_h);
   // -------- END renderpass default.scenes.scene1.renderpasses.render_fbo --------
   
}

function Exit_default_scene1_renderpass_render_fbo() {
}

function Init_default_scene1_renderpass_ground() {
   return true;
}

function Draw_default_scene1_renderpass_ground(int _fbW, int _fbH) {
   // <draw_pre>
   // -------- BEGIN renderpass default.scenes.scene1.renderpasses.ground --------
   glBindFramebuffer(GL_FRAMEBUFFER, default_scene1_render_fbo_fbo_fbo);
   glViewport(0, 0, 2048, 2048);
   glScissor(0, 0, 2048, 2048);
   glEnable(GL_DEPTH_TEST);
   glDisable(GL_STENCIL_TEST);
   glEnable(GL_BLEND);
   glBlendFuncSeparate(GL_ONE, GL_ONE, GL_ONE, GL_ZERO);
   glBlendColor(0, 0, 0, 0);
   glColorMask(GL_TRUE, GL_TRUE, GL_TRUE, GL_TRUE);
   glDepthMask(GL_TRUE);
   glDepthFunc(GL_LESS);
   glStencilMask(255);
   glStencilFunc(GL_ALWAYS, 0, 0);
   glStencilOp(GL_KEEP, GL_KEEP, GL_KEEP);
   glDisable(GL_CULL_FACE);
   Draw_default_scene1_ground_model_ground(2048, 2048, null/*transform*/);
   

   // <draw_post>
   glBindFramebuffer(GL_FRAMEBUFFER, g_default_fb);
   glViewport(g_default_vp_x, g_default_vp_y, g_default_vp_w, g_default_vp_h);
   glScissor(g_default_vp_x, g_default_vp_y, g_default_vp_w, g_default_vp_h);
   // -------- END renderpass default.scenes.scene1.renderpasses.ground --------
   
}

function Exit_default_scene1_renderpass_ground() {
}

function Init_default_scene1_renderpass_blit_fbo() {
   return true;
}

function Draw_default_scene1_renderpass_blit_fbo(int _fbW, int _fbH) {
   // <draw_pre>
   // -------- BEGIN renderpass default.scenes.scene1.renderpasses.blit_fbo --------
   glClearColor(0.176471, 0.262745, 0.352941, 1);
   glClear(GL_COLOR_BUFFER_BIT);
   glDisable(GL_DEPTH_TEST);
   glDisable(GL_STENCIL_TEST);
   glDisable(GL_BLEND);
   glColorMask(GL_TRUE, GL_TRUE, GL_TRUE, GL_TRUE);
   glDepthMask(GL_TRUE);
   glDepthFunc(GL_LESS);
   glStencilMask(255);
   glStencilFunc(GL_ALWAYS, 0, 0);
   glStencilOp(GL_KEEP, GL_KEEP, GL_KEEP);
   glEnable(GL_CULL_FACE);
   glFrontFace(GL_CW);
   glCullFace(GL_BACK);
   Draw_default_scene1_blit_fbo_model_blit(0, 0, null/*transform*/);
   

   // <draw_post>
   // -------- END renderpass default.scenes.scene1.renderpasses.blit_fbo --------
   
}

function Exit_default_scene1_renderpass_blit_fbo() {
}

function Init_default_scene_scene1() {
   // -------- BEGIN init FBO default.scenes.scene1.renderpasses.render_fbo.fbos.fbo -------
   default_scene1_render_fbo_fbo_fbo = zglGenFramebuffer();
   glBindFramebuffer(GL_FRAMEBUFFER, default_scene1_render_fbo_fbo_fbo);
   default_scene1_render_fbo_tex_fbo_tex.bind(); // create id + alloc GL texture RAM
   default_scene1_render_fbo_tex_fbo_tex.unbind();
   glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, default_scene1_render_fbo_tex_fbo_tex.id, 0/*level*/);
   default_scene1_render_fbo_fbo_fbo_zs_rb = zglGenRenderbuffer();
   glBindRenderbuffer(GL_RENDERBUFFER, default_scene1_render_fbo_fbo_fbo_zs_rb);
   glRenderbufferStorage(GL_RENDERBUFFER, GL_DEPTH24_STENCIL8, 2048, 2048);
   glFramebufferRenderbuffer(GL_FRAMEBUFFER, GL_DEPTH_STENCIL_ATTACHMENT, GL_RENDERBUFFER, default_scene1_render_fbo_fbo_fbo_zs_rb);
   glBindRenderbuffer(GL_RENDERBUFFER, 0);
   int default_scene1_render_fbo_fbo_fbo_fbStatus = glCheckFramebufferStatus(GL_FRAMEBUFFER);
   if(GL_FRAMEBUFFER_COMPLETE != default_scene1_render_fbo_fbo_fbo_fbStatus)
     trace "[~~~] <tempscript> GFBO: glCheckFramebufferStatus() indicated a problem (id=default.scenes.scene1.renderpasses.render_fbo.fbos.fbo, status="+default_scene1_render_fbo_fbo_fbo_fbStatus+"="+TKS.constantToString(default_scene1_render_fbo_fbo_fbo_fbStatus, "GL_FRAMEBUFFER")+")";
   glBindFramebuffer(GL_FRAMEBUFFER, g_default_fb);
   // -------- END init FBO default.scenes.scene1.renderpasses.render_fbo.fbos.fbo -------
   
   return true;
}

function Draw_default_scene_scene1(int _fbW, int _fbH) {
   // <draw_pre>
   Draw_default_scene1_renderpass_render_fbo(0/*fbW*/, 0/*fbH*/);
   Draw_default_scene1_renderpass_ground(0/*fbW*/, 0/*fbH*/);
   Draw_default_scene1_renderpass_blit_fbo(0/*fbW*/, 0/*fbH*/);
   

   // <draw_post>
}

function Exit_default_scene_scene1() {
   default_scene1_render_fbo_tex_fbo_tex.unload();
   // -------- BEGIN exit FBO default.scenes.scene1.renderpasses.render_fbo.fbos.fbo -------
   zglDeleteRenderbuffer(default_scene1_render_fbo_fbo_fbo_zs_rb);
   zglDeleteFramebuffer(default_scene1_render_fbo_fbo_fbo);
   // -------- END exit FBO default.scenes.scene1.renderpasses.render_fbo.fbos.fbo -------
   
}

function Init() {

if(b_glcore)
   vao_id = zglGenVertexArray();

   if(!Init_default_scene1_render_fbo_model_3ds_prg_prg1()) return false;
   if(!Init_default_scene1_render_fbo_model_model_3ds()) return false;
   if(!Init_default_scene1_ground_ground_prg_prg1()) return false;
   if(!Init_default_scene1_ground_model_ground()) return false;
   if(!Init_default_scene1_blit_fbo_blit_prg_prg1()) return false;
   if(!Init_default_scene1_blit_fbo_model_blit()) return false;
   if(!Init_default_scene1_renderpass_render_fbo()) return false;
   if(!Init_default_scene1_renderpass_ground()) return false;
   if(!Init_default_scene1_renderpass_blit_fbo()) return false;
   if(!Init_default_scene_scene1()) return false;
   
   return true;
}

function Exit() {
   Exit_default_scene1_render_fbo_model_3ds_prg_prg1();
   Exit_default_scene1_render_fbo_model_model_3ds();
   Exit_default_scene1_ground_ground_prg_prg1();
   Exit_default_scene1_ground_model_ground();
   Exit_default_scene1_blit_fbo_blit_prg_prg1();
   Exit_default_scene1_blit_fbo_model_blit();
   Exit_default_scene1_renderpass_render_fbo();
   Exit_default_scene1_renderpass_ground();
   Exit_default_scene1_renderpass_blit_fbo();
   Exit_default_scene_scene1();
   

if(b_glcore)
   zglDeleteVertexArray(vao_id);

}

function Draw() {
   if(b_glcore)
      glBindVertexArray(vao_id);
   glEnable(GL_CULL_FACE);
   glCullFace(GL_BACK);
   glFrontFace(GL_CW);
   glDisable(GL_DEPTH_TEST);
   glDepthMask(GL_TRUE);
   glDepthFunc(GL_LESS);
   // <draw_pre>
   last_model_id   = 0;
   last_program_id = 0;
   g_tri_count     = 0;  // debug: total number of triangles
   glEnable(GL_SCISSOR_TEST);
   glViewport(g_default_vp_x, g_default_vp_y, g_default_vp_w, g_default_vp_h);
   glScissor(g_default_vp_x, g_default_vp_y, g_default_vp_w, g_default_vp_h);
   glClearColor(0.3,0.3,0.3,1.0);
   glClear(GL_COLOR_BUFFER_BIT);
   Draw_default_scene_scene1(0, 0);
   
   // <draw_post>
   glUseProgram(0);
   glBindBuffer(GL_ARRAY_BUFFER, 0);
   glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);
   g_init = false;
   
}


function Load(String _zipPathNamePrefix) {
   local Zip zip;
   if(zip.openLocalReadOnly(_zipPathNamePrefix+"test3ds_rim_light_frag_j.zip"))
   {
      local Buffer *b;
      default_scene1_render_fbo_buf_model_3ds_a_data <= zip.loadBufferByName("default_scene1_render_fbo_buf_model_3ds_a_data.dat");
      default_scene1_ground_buf_ground_a_data <= zip.loadBufferByName("default_scene1_ground_buf_ground_a_data.dat");
      default_scene1_blit_fbo_buf_blit_a_data <= zip.loadBufferByName("default_scene1_blit_fbo_buf_blit_a_data.dat");
      
      // Texture default_scene1_render_fbo_tex_fbo_tex
      default_scene1_render_fbo_tex_fbo_tex <= new Texture;
      default_scene1_render_fbo_tex_fbo_tex.alloc(2048, 2048, 4/*bpp*/);
      default_scene1_render_fbo_tex_fbo_tex.target = GL_TEXTURE_2D;
      default_scene1_render_fbo_tex_fbo_tex.flags  = TEX_MODULATE | TEX_ALPHA | TEX_MINFILTERLINEAR | TEX_MAGFILTERLINEAR | TEX_CLAMPTOEDGE_S | TEX_CLAMPTOEDGE_T;
      
      // Envelope default_scene1_env1_env_cam_t_val
      default_scene1_env1_env_cam_t_val <= new Envelope;
      b <= zip.loadBufferByName("default_scene1_env1_env_cam_t_val.env");
      b.offset = 0;
      default_scene1_env1_env_cam_t_val << b;
      
      // Texture default_scene1_render_fbo_model_3ds_tex_tex_light_curve
      default_scene1_render_fbo_model_3ds_tex_tex_light_curve <= new Texture;
      b <= zip.loadBufferByName("default_scene1_render_fbo_model_3ds_tex_tex_light_curve.png");
      b.offset = 0;
      default_scene1_render_fbo_model_3ds_tex_tex_light_curve.loadImageStream(b, 256, 1, 4/*bpp*/);
      default_scene1_render_fbo_model_3ds_tex_tex_light_curve.target = GL_TEXTURE_2D;
      default_scene1_render_fbo_model_3ds_tex_tex_light_curve.flags  = TEX_MODULATE | TEX_ALPHA | TEX_MINFILTERLINEAR | TEX_MAGFILTERLINEAR | TEX_CLAMPTOEDGE_S | TEX_CLAMPTOEDGE_T;
      
      // Texture default_scene1_render_fbo_model_3ds_tex_tex_pal
      default_scene1_render_fbo_model_3ds_tex_tex_pal <= new Texture;
      b <= zip.loadBufferByName("default_scene1_render_fbo_model_3ds_tex_tex_pal.png");
      b.offset = 0;
      default_scene1_render_fbo_model_3ds_tex_tex_pal.loadImageStream(b, 128, 1, 4/*bpp*/);
      default_scene1_render_fbo_model_3ds_tex_tex_pal.target = GL_TEXTURE_2D;
      default_scene1_render_fbo_model_3ds_tex_tex_pal.flags  = TEX_MODULATE | TEX_ALPHA | TEX_CLAMPTOEDGE_S | TEX_CLAMPTOEDGE_T;
      
      // Texture default_scene1_render_fbo_model_3ds_tex_tex_rim_post
      default_scene1_render_fbo_model_3ds_tex_tex_rim_post <= new Texture;
      b <= zip.loadBufferByName("default_scene1_render_fbo_model_3ds_tex_tex_rim_post.png");
      b.offset = 0;
      default_scene1_render_fbo_model_3ds_tex_tex_rim_post.loadImageStream(b, 256, 1, 4/*bpp*/);
      default_scene1_render_fbo_model_3ds_tex_tex_rim_post.target = GL_TEXTURE_2D;
      default_scene1_render_fbo_model_3ds_tex_tex_rim_post.flags  = TEX_MODULATE | TEX_ALPHA | TEX_MINFILTERLINEAR | TEX_MAGFILTERLINEAR | TEX_CLAMPTOEDGE_S | TEX_CLAMPTOEDGE_T;
      
   }
   else
   {
      trace "[---] Mtest3ds_rim_light_frag_j.Load: failed to open "+_zipPathNamePrefix+"test3ds_rim_light_frag_j.zip";
   }
   g_init = true;
   g_default_vp_w = 800;
   g_default_vp_h = 600;
}
