// ----
// ---- file   : UniformSelectTM.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2020 by Bastian Spiegel. 
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See 
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "GL Edit" application.
// ----
// ---- created: 01Aug2020
// ---- changed: 
// ----          
// ----
// ----

module MUniformSelectTM;


use namespace ui;
use namespace gledit;


class UniformSelectTM : TableModel {

   define int COL_NAME = 0;
   define int COL_TYPE = 1;

   GUniform*[]*entries;


   public virtual getNumColumns() : int {
      return 2;
   }
   
   public virtual getColumnCaption(int _col) : String {
      return ["Name", "Type"] [_col];
   }

   public virtual getNumRows() : int {
      return entries.numElements;
   }

   public virtual getCellRenderer(int _col, int _row, int _visibleRow) : Layer {
      Label lb <= TableModel::getCellRenderer(_col, _row, _visibleRow);

      GUniform *en <= entries.get(_row);

      if(null != en)
      {
         if(COL_NAME == _col)
         {
            // lb.setIcon(UI.GetIcon("arr2x_r"));
            lb.setInnerPadLeft(12);
         }
      }

      return lb;
   }

   public virtual getCellCaption(int _col, _row) : String {

      GUniform *en <= entries.get(_row);

      switch(_col)
      {
         case COL_NAME:
            return en.getId();

         case COL_TYPE:
            return en.getGLSLTypeName();
      }
   }

   public virtual getMinimumColumnWidth(int _col) : int {
      switch(_col)
      {
         case COL_NAME:
            return 150;

         case COL_TYPE:
            return 80;
      }
   }

   public virtual getPreferredColumnWidth(int _col) : int {
      switch(_col)
      {
         case COL_NAME:
            return 150;

         case COL_TYPE:
            return 80;
      }
   }

}
