// ----
// ---- file   : gconstantint.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2020 by Bastian Spiegel. 
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See 
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "GL edit" application.
// ----
// ---- created: 12Jun2020
// ---- changed: 13Jun2020, 14Jun2020, 15Jun2020, 16Jun2020, 09Jul2020, 20Jul2020, 14Aug2020
// ----
// ----
// ----
module MGConstantInt;

use namespace ui;
use namespace gledit;


// <class.png>
class GConstantInt : GConstant {

   // <method_new.png>
   public static New() : GConstantInt {
      local GConstantInt r;
      r.init();
      return deref r;
   }

   // <method_init.png>
   public virtual init() {
      GConstant::init();
      type = TYPE_INT;

      addParamInt("value", "value", 0, -100, INT_MIN, 100, INT_MAX, 0);

      addInput("value", TYPE_INT);

      addOutput(GOutput.OUT_DEF, type);
   }

   // <method_get.png>
   public virtual getString() : String {
      int value = getIntParamById("value");
      return String(value);
   }

   // <method.png>
   public virtual emit(local String       _outputId, 
                       local GModule      _module, 
                       local GProgram     _program, 
                       local String       _out, 
                       local String       _dstVar, 
                       local boolean      _bGLSL,
                       local PointerArray _parents
                       ) {
      int value = getIntParamById("value");

      local GInput *input;

      // value
      local String *sV;
      input <= getInputById("value");
      if(input.isConnected())
      {
         sV <= _module.allocTmpVarScript(_out, TYPE_INT, "in_v");
         input.emit(_module, _program, _out, sV, _bGLSL, _parents);
         _out.append(sV+" += "+value+";\n");
      }
      else
         sV <= String(value);

      _out.append(_dstVar+" = "+sV+";\n");
   }

}
