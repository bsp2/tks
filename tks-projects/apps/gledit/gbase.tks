// ----
// ---- file   : gbase.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2020-2025 by Bastian Spiegel.
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "GL edit" application.
// ----
// ---- created: 12Jun2020
// ---- changed: 13Jun2020, 20Jun2020, 22Jun2020, 27Jun2020, 01Jul2020, 05Feb2025, 07Feb2025
// ----
// ----
// ----
module MGBase;

use namespace ui;
use namespace gledit;


// <class.png>
class GBase : GDefs {
   String   id;    // blank for <anon> objects
   int      type;  // see GDefs.TYPE_xxx


   // <method_init.png>
   public method init() {
   }

   // <method_init.png>
   public method initIdType(String _id, int _type) {
      init();
      id   = _id;
      type = _type;
   }

   // <method_get.png>
   public method getPreferredIdPrefix() : String {
      return null;
   }

   // <method_set.png>
   public method setId(String _id) {
      id = _id;
   }

   // <method_get.png>
   public method getId() : String {
      return id;
   }

   // <method_get.png>
   public method getIdString() : String {
      // table display
      return getId();
   }

   // <method_set.png>
   public method setType(int _type) {
      type = _type;
   }

   // <method_get.png>
   public method getType() : int {
      return type;
   }

   // <method_get.png>
   public method getGLSLTypeName() : String {
      return GDefs.GetGLSLTypeName(type);
   }

   // <method_get.png>
   public method getScriptTypeName() : String {
      return GDefs.GetScriptTypeName(type);
   }

   // <method_get.png>
   public method getScriptTypeNameAsObject() : String {
      return GDefs.GetScriptTypeNameAsObject(type);
   }

   // <method_get.png>
   public method getPreferredTypeClass() : Class {
      // e.g. GInput TYPE_BOOL => GConstantBool
      return null;
   }

}
