// ----
// ---- file   : dialogs.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2006-2023 by Bastian Spiegel.
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "syntracker" sequencer.
// ----
// ---- changed: 14Sep2006, 17Sep2006, 20Sep2006, 15Oct2007, 20Oct2007, 21Oct2007, 22Oct2007,
// ----          30Oct2007, 31Oct2007, 04Nov2007, 05Nov2007, 10Nov2007, 21Dec2007, 04Jan2008
// ----          07Jan2008, 10Jan2008, 12Jan2008, 13Jan2008, 15Jan2008, 16Jan2008, 03Aug2008
// ----          09Aug2008, 24Aug2008, 31Aug2008, 17Sep2009, 18Sep2009, 20Sep2009, 21Sep2009
// ----          22Sep2009, 23Sep2009, 26Dec2009, 02Jan2010, 03Jan2010, 09Jan2010, 10Jan2010
// ----          11Jan2010, 16Jan2010, 25Jan2010, 27Jan2010, 29Jan2010, 06Feb2010, 25Feb2010
// ----          01Mar2010, 24Apr2010, 29Apr2010, 30Apr2010, 01May2010, 02May2010, 03May2010
// ----          04May2010, 11May2010, 14May2010, 15May2010, 16May2010, 06Jun2010, 10Jun2010
// ----          13Jun2010, 15Jun2010, 24Jun2010, 26Jun2010, 28Jun2010, 30Jun2010, 01Jul2010
// ----          02Jul2010, 04Jul2010, 06Jul2010, 10Jul2010, 12Jul2010, 16Jul2010, 17Jul2010
// ----          18Jul2010, 21Jul2010, 08Sep2010, 24Sep2010, 26Sep2010, 27Sep2010, 28Sep2010
// ----          04Oct2010, 08Oct2010, 09Oct2010, 10Oct2010, 12Oct2010, 13Oct2010, 14Oct2010
// ----          15Oct2010, 16Oct2010, 17Oct2010, 19Oct2010, 20Oct2010, 25Oct2010, 26Oct2010
// ----          02Nov2010, 09Nov2010, 16Nov2010, 21Nov2010, 19Jan2011, 23Jan2011, 03Feb2011
// ----          18Feb2011, 20Feb2011, 25Feb2011, 28Feb2011, 12Mar2011, 13Mar2011, 19Mar2011
// ----          30Mar2011, 02Apr2011, 06Apr2011, 20Apr2011, 11Jun2011, 08Jan2012, 09Jan2012
// ----          16Jan2012, 17Jan2012, 19Jan2012, 20Jan2012, 24Jan2012, 06Feb2012, 08Feb2012
// ----          13Feb2012, 14Feb2012, 19Feb2012, 20Feb2012, 24Feb2012, 25Feb2012, 13May2012
// ----          26Jun2012, 28Jun2012, 09Nov2012, 13Nov2012, 21Nov2012, 21Dec2012, 03Jan2013
// ----          04Jan2013, 05Jan2013, 06Jan2013, 09Jan2013, 28Feb2013, 23Mar2013, 01Apr2013
// ----          07Apr2013, 13Apr2013, 14Apr2013, 15Apr2013, 19Apr2013, 04May2013, 08May2013
// ----          09May2013, 10May2013, 13May2013, 14May2013, 15May2013, 24May2013, 26May2013
// ----          27May2013, 29May2013, 31May2013, 01Jun2013, 04Jun2013, 05Jun2013, 02Feb2014
// ----          09Aug2014, 11Aug2014, 12Aug2014, 13Aug2014, 14Aug2014, 18Aug2014, 27Jan2015
// ----          04Mar2015, 20Apr2015, 12Mar2017, 13Jan2019, 30Jan2021, 25Nov2022, 28Jul2023
// ----
// ----
// ----
module MDialogs;

use namespace ui;
namespace st2;


// Windows/Dialogs
EditMIDIDeviceFilterDialog  *dlg_edit_midi_device_filter;
FileDialog                  *filedlg_sample;

// Some more simple input/confirmation dialogs
Dialog_Quit                           dialog_quit;
Dialog_OverwriteSong                  dialog_overwritesong;
Dialog_NewSong                        dialog_newsong;
Dialog_About                          dialog_about;
Dialog_SongComment                    dialog_songcomment;
Dialog_OverwriteNodePreset            dialog_overwritenodepreset;
Dialog_OverwritePipePreset            dialog_overwritepipepreset;


// <class.png>
class Dialogs {

   static StringDialog   dialog_string;
   static FileNameDialog dialog_filename;


   // <init.png>
   static Init() {
      // must be created via new or not all initializers are run (bug?!)

      // Initialize "complex" dialogs
      InitEditMIDIDeviceFilterDialog();

      InitStringDialog();
      InitFileNameDialog();
   }

   // <ui_init.png>
   static InitStringDialog() {
      dialog_string.init("big5");
   }

   // <ui_show.png>
   static ShowStringDialog(String _text, int _maxCols, int _visCols, ActionConsumer _recipient) {
      dialog_string.configure(_text, _maxCols, _visCols, _recipient);

      dialog_string.showCentered();
   }

   // <ui_init.png>
   static InitFileNameDialog() {
      dialog_filename.init("big5");
   }

   // <ui_show.png>
   static ShowFileNameDialog(String         _title,
                             String         _fileName,
                             boolean        _bDir,
                             ActionConsumer _recipient,
                             boolean        _bSave,
                             String         _suffix,
                             String         _baseDir
                             ) {
      dialog_filename.configure(_title, _fileName, _bDir, _recipient, _bSave, _suffix, _baseDir);

      dialog_filename.showCentered();
   }

   // <ui_init.png>
   static InitEditMIDIDeviceFilterDialog() {
      dlg_edit_midi_device_filter <= new EditMIDIDeviceFilterDialog();
      if(!dlg_edit_midi_device_filter.init())
      {
         die "EditMIDIDeviceFilterDialog::init() failed";
      }
   }

   // <ui_show.png>
   static ShowErrorDialog(String _title, _message) {
      InfoDialog d;

      Global.Debug(" --- ShowErrorDialog: title=\""+_title+"\" message=\""+_message+"\".");

      d <= InfoDialog.NewError(_title, _message, null);
      d.showCentered();
   }

   // <ui_show.png>
   static ShowTriadKeyHelpDialog(String _title, _message, ActionConsumer _recipient) {

      Global.Debug(" --- ShowTriadKeyHelpDialog: title=\""+_title+"\" message=\""+_message+"\".");

      KeyHelpDialog *dlg <= new KeyHelpDialog;
      dlg.showKeyHelpDialog(deref _title,
                            deref _message,
                            true/*bOkButton*/,
                            true/*bSendTriadKey*/,
                            _recipient
                            );
   }

}
