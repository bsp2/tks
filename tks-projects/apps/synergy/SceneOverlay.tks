// ----
// ---- file   : SceneOverlay.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2014-2018 by Bastian Spiegel. 
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See 
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "syntracker" sequencer.
// ----
// ---- changed: 20Aug2014, 21Aug2014, 22Aug2014, 16Sep2014, 21Feb2015, 22May2018, 06Jun2018
// ----          03Dec2018
// ----
// ----
// ----

module MSceneOverlay;

use namespace ui;
use namespace st2;


class SceneOverlay : XMLForm, ActionProvider, MIDIMapContext, FloatingLayer {

   protected Panel *pn_bg;

   protected Label *lb_scene;
   protected Label *lb_name;


   public method init() : boolean {

      if(!initPakFile("SceneOverlay.xfm"))
      {
         trace "[---] failed to parse SceneOverlay.xfm";
         return false;
      }

      autoResolveIds(this);

      recursiveBuildTabCycleLists();

      b_fl_no_fbo_destroy = true;

      return true;
   }

   public virtual wantShadeModal() : boolean {
      return true;
   }

   public virtual flWantInitialFocus() : boolean {
      return false;
   }

   public method showScene(int _groupIdx) {

      pn_bg.setPanelAlphaAndTint(app_lnf.sceneoverlay_bg_alpha, app_lnf.sceneoverlay_group_bg_tint.get(_groupIdx));

      lb_scene.setCaption("Select Scene "+tcchar(65 + _groupIdx)+"-"+(MIDIMorphScene.GetCurrentSceneIdx(_groupIdx) + 1));
      lb_scene.setForegroundColor(app_lnf.getColor(AppLookAndFeel.COLOR_SCENEOVERLAY_SCENE_FG));

      MIDIMorphScene mms <= MIDIMorphScene.GetCurrentScene(_groupIdx);

      lb_name.setCaption("\""+mms.mms_name+"\"");
      lb_name.setForegroundColor(app_lnf.getColor(AppLookAndFeel.COLOR_SCENEOVERLAY_NAME_FG));

      Global.Print("Select scene "+tcchar(65 + _groupIdx)+"-"+(MIDIMorphScene.GetCurrentSceneIdx(_groupIdx) + 1) + " \""+mms.mms_name+"\".");

      resizeToMinimum();

      showCentered();
   }

   public method showMulti(int _multiIdx) {

      MIDIMorphMulti multi <= MIDIMorphScene.GetMultiByIdx(_multiIdx);

      pn_bg.setPanelAlphaAndTint(app_lnf.sceneoverlay_bg_alpha, app_lnf.sceneoverlay_group_bg_tint.get(_multiIdx));

      lb_scene.setCaption("Select Multi "+(_multiIdx + 1));
      lb_scene.setForegroundColor(app_lnf.getColor(AppLookAndFeel.COLOR_SCENEOVERLAY_SCENE_FG));

      lb_name.setCaption("\""+multi.name+"\"");
      lb_name.setForegroundColor(app_lnf.getColor(AppLookAndFeel.COLOR_SCENEOVERLAY_NAME_FG));

      Global.Print("Select multi "+(_multiIdx + 1) + " \""+multi.name+"\".");

      resizeToMinimum();

      showCentered();
   }
}
