// ----
// ---- file   : dialog_overwritesong.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2006-2019 by Bastian Spiegel. 
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See 
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "syntracker" sequencer.
// ----
// ---- changed: 14Sep2006, ..., 28Feb2011, 18Aug2014, 06May2017, 05Nov2019
// ----
// ----
// ----
module MDialog_OverwriteSong;

use namespace ui;


class Dialog_OverwriteSong extends ActionConsumer {
   ChoiceDialog *d;
   String file_name;

   public method run(String _fileName) {
      file_name = _fileName;

      // d <= ChoiceDialog.NewYesNo("Overwrite song file", 
      //                            "The file \""+_fileName+"\" already exists.\nAre you sure you want to overwrite it?", 
      //                            this);

      d <= ChoiceDialogMMT.New("Overwrite project file", 
                               "The file \""+Utils.AbbrevPathName(Utils.ToNativePathName(_fileName))+"\" already exists.\nAre you sure you want to overwrite it?",
                               "\aOverwrite", "\aCancel", null,
                               "choice",
                               this);

      d.setMessageFont("big7");
      d.setButtonFont("big3");
      d.resizeToMinimum();
      d.showCentered();
   }
    
   public method consumeAction(IntAction _action) returns boolean {
      if(_action.getActionProvider() == d)
      {
         d <= null; // Delete dialog
         switch(_action.getIntValue())
         {
            case ChoiceDialog.SELECT_YES:
               Global.cmd_file_saveas_2(file_name, false/*bAutosave*/);
               return true;

            case ChoiceDialog.SELECT_NO:
               trace "xxx CMD file_saveas aborted.";
               return true;
         }
      }
      return false;
   }
}
