// ----
// ---- file   : chord.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2017-2021 by Bastian Spiegel.
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "syntracker" sequencer.
// ----
// ---- created: 21Sep2017
// ---- changed: 22Sep2017, 15Sep2019, 22May2021, 27Jun2021
// ----
// ----
// ----

module MChord;

use namespace st2;


// <class.png>
class Chord {
   define int CHORD_UNISON                =   0;  // C
   define int CHORD_INTERVAL_MINOR_2      =   1;  // C,C#
   define int CHORD_INTERVAL_MAJOR_2      =   2;  // C,D
   define int CHORD_INTERVAL_MINOR_3      =   3;  // C,D#
   define int CHORD_INTERVAL_MAJOR_3      =   4;  // C,E
   define int CHORD_INTERVAL_4            =   5;  // C,F
   define int CHORD_INTERVAL_TRITONE      =   6;  // C,F#
   define int CHORD_INTERVAL_5            =   7;  // C,G
   define int CHORD_INTERVAL_MINOR_6      =   8;  // C,G#
   define int CHORD_INTERVAL_MAJOR_6      =   9;  // C,A
   define int CHORD_INTERVAL_MINOR_7      =  10;  // C,A#
   define int CHORD_INTERVAL_MAJOR_7      =  11;  // C,B
   define int CHORD_SUSPENDED_2           =  12;  // C,D,G
   define int CHORD_SUSPENDED_4           =  13;  // C,F,G
   define int CHORD_DIMINISHED            =  14;  // C,D#,F#
   define int CHORD_DIMINISHED_INV1       =  15;  // D#,F#,C
   define int CHORD_DIMINISHED_INV2       =  16;  // F#,C,D#
   define int CHORD_MINOR                 =  17;  // C,D#,G
   define int CHORD_MINOR_INV1            =  18;  // D#,G,C
   define int CHORD_MINOR_INV2            =  19;  // G,C,D#
   define int CHORD_MINOR_7_NO5           =  20;  // C,D#,A#
   define int CHORD_MINOR_7_NO5_INV1      =  21;  // D#,A#,C
   define int CHORD_MINOR_7_NO5_INV2      =  22;  // A#,C,D#
   define int CHORD_AUG                   =  23;  // C,E,G#  (note) inversions are augmented chords with different root note
   define int CHORD_DOMINANT_7_NO5        =  24;  // C,G,A#
   define int CHORD_DOMINANT_7_NO5_INV1   =  25;  // G,A#,C
   define int CHORD_DOMINANT_7_NO5_INV2   =  26;  // A#,C,G
   define int CHORD_MAJOR                 =  27;  // C,E,G
   define int CHORD_MAJOR_INV1            =  28;  // E,G,C (1st inversion)
   define int CHORD_MAJOR_INV2            =  29;  // G,C,E (2nd inversion)
   define int CHORD_MAJOR_7_NO3           =  30;  // C,G,B
   define int CHORD_MAJOR_7_NO3_INV1      =  31;  // G,B,C
   define int CHORD_MAJOR_7_NO3_INV2      =  32;  // B,C,G
   define int CHORD_MINOR_6               =  33;  // C,D#,G,A
   define int CHORD_MINOR_7               =  34;  // C,D#,G,A#
   define int CHORD_MINOR_7_INV1          =  35;  // D#,G,A#,C
   define int CHORD_MINOR_7_INV2          =  36;  // G,A#,C,D#
   define int CHORD_MINOR_7_INV3          =  37;  // A#,C,D#,G
   define int CHORD_MINOR_ADD2            =  38;  // C,D#,G,D
   define int CHORD_MINOR_ADD2_INV1       =  39;  // D#,G,D,C
   define int CHORD_MINOR_ADD2_INV2       =  40;  // G,D,C,D#
   define int CHORD_MINOR_ADD2_INV3       =  41;  // D,C,D#,G
   define int CHORD_MINOR_ADD4            =  42;  // C,D#,G,F
   define int CHORD_MINOR_ADD4_INV1       =  43;  // D#,G,F,C
   define int CHORD_MINOR_ADD4_INV2       =  44;  // G,F,C,D#
   define int CHORD_MINOR_ADD4_INV3       =  45;  // F,C,D#,G
   define int CHORD_MAJOR_6               =  46;  // C,E,G,A
   define int CHORD_MAJOR_7               =  47;  // C,E,G,B
   define int CHORD_MAJOR_7_INV1          =  48;  // E,G,B,C (1st inversion)
   define int CHORD_MAJOR_7_INV2          =  49;  // G,B,C,E (2nd inversion)
   define int CHORD_MAJOR_7_INV3          =  50;  // B,C,E,G (3rd inversion)
   define int CHORD_MAJOR_ADD2            =  51;  // C,E,G,D
   define int CHORD_MAJOR_ADD2_INV1       =  52;  // E,G,D,C
   define int CHORD_MAJOR_ADD2_INV2       =  53;  // G,D,C,E
   define int CHORD_MAJOR_ADD2_INV3       =  54;  // D,C,E,G
   define int CHORD_MAJOR_ADD4            =  55;  // C,E,G,F
   define int CHORD_MAJOR_ADD4_INV1       =  56;  // E,G,F,C
   define int CHORD_MAJOR_ADD4_INV2       =  57;  // G,F,C,E
   define int CHORD_MAJOR_ADD4_INV3       =  58;  // F,C,E,G
   define int CHORD_MINOR_MAJOR_7         =  59;  // C,D#,G,B
   define int CHORD_MINOR_MAJOR_7_INV1    =  60;  // D#,G,B,C
   define int CHORD_MINOR_MAJOR_7_INV2    =  61;  // G,B,C,D#
   define int CHORD_MINOR_MAJOR_7_INV3    =  62;  // B,C,D#,G
   define int CHORD_DOMINANT_7            =  63;  // C,E,G,A#
   define int CHORD_DOMINANT_7_INV1       =  64;  // E,G,A#,C
   define int CHORD_DOMINANT_7_INV2       =  65;  // G,A#,C,E
   define int CHORD_DOMINANT_7_INV3       =  66;  // A#,C,E,G
   define int CHORD_9                     =  67;  // C,D,E,G,A#
   define int CHORD_MINOR_9               =  68;  // C,D#,G,A#,D
   define int CHORD_11                    =  69;  // C,D,E,F,G,A#
   define int CHORD_MINOR_11              =  70;  // C,D#,G,A#,D,F
   define int CHORD_13                    =  71;  // C,D,E,G,A,A#
   define int CHORD_MINOR_MAJOR_11        =  72;  // C,D,D#,F,G,B
   define int CHORD_MINOR_13              =  73;  // C,D#,G,A#,D,F,G#
   define int CHORD_MAJOR_6_ADD9          =  74;  // C,D,E,G,A [22May2021]
   define int CHORD_MINOR_6_ADD9          =  75;  // C,D,D#,G,A [22May2021]
   define int CHORD_MAJOR_9               =  76;  // C,E,G,B,D  / C,D,E,G,B
   define int CHORD_MINOR_MAJOR_9         =  77;  // C,D,D#,G,B
   define int CHORD_MINOR_MAJOR_9_INV1    =  78;  // D,D#,G,B,C
   define int CHORD_MINOR_MAJOR_9_INV2    =  79;  // D#,G,B,C,D
   define int CHORD_MINOR_MAJOR_9_INV3    =  80;  // G,B,C,D,D#
   define int CHORD_MINOR_MAJOR_9_INV4    =  81;  // B,C,D,D#,G
   define int CHORD_MAJOR_11              =  82;  // C,E,G,B,D,F#
   define int CHORD_MAJOR_13              =  83;  // C,E,G,B,D,F,A
   define int CHORD_MINOR_MAJOR_13        =  84;  // C,D,D#,G,A,B
   define int CHORD_9_INV1                =  85;  // D,E,G,A#,C
   define int CHORD_9_INV2                =  86;  // E,G,A#,C,D
   define int CHORD_9_INV3                =  87;  // G,A#,C,D,E
   define int CHORD_9_INV4                =  88;  // A#,C,D,E,G
   define int CHORD_MINOR_9_INV1          =  89;  // D#,G,A#,D,C
   define int CHORD_MINOR_9_INV2          =  90;  // G,A#,D,C,D#
   define int CHORD_MINOR_9_INV3          =  91;  // A#,D,C,D#,G
   define int CHORD_MINOR_9_INV4          =  92;  // D,C,D#,G,A#
   define int CHORD_MAJOR_9_INV1          =  93;  // E,G,B,D,C
   define int CHORD_MAJOR_9_INV2          =  94;  // G,B,D,C,E
   define int CHORD_MAJOR_9_INV3          =  95;  // B,D,C,E,G
   define int CHORD_MAJOR_9_INV4          =  96;  // D,C,E,G,B
   define int CHORD_DOMINANT_7_ADD11      =  97;  // C,E,F,G,A#
   define int CHORD_DOMINANT_7_ADD11_INV1 =  98;  // E,F,G,A#,C
   define int CHORD_DOMINANT_7_ADD11_INV2 =  99;  // F,G,A#,C,E
   define int CHORD_DOMINANT_7_ADD11_INV3 = 100;  // G,A#,C,E,F
   define int CHORD_DOMINANT_7_ADD11_INV4 = 101;  // A#,C,E,F,G
   define int CHORD_MAJOR_7_ADD11         = 102;  // C,E,F,G,B
   define int CHORD_MAJOR_7_ADD11_INV1    = 103;  // E,F,G,B,C
   define int CHORD_MAJOR_7_ADD11_INV2    = 104;  // F,G,B,C,E
   define int CHORD_MAJOR_7_ADD11_INV3    = 105;  // G,B,C,E,F
   define int CHORD_MAJOR_7_ADD11_INV4    = 106;  // B,C,E,F,G
   define int CHORD_MINOR_7_ADD11         = 107;  // C,D#,F,G,A#
   define int CHORD_MINOR_7_ADD11_INV1    = 108;  // D#,F,G,A#,C
   define int CHORD_MINOR_7_ADD11_INV2    = 109;  // F,G,A#,C,D#
   define int CHORD_MINOR_7_ADD11_INV3    = 110;  // G,A#,C,D#,F
   define int CHORD_MINOR_7_ADD11_INV4    = 111;  // A#,C,D#,F,G
   define int CHORD_MAJOR_6_ADD9_INV1     = 112;  // D,E,G,A,C
   define int CHORD_MAJOR_6_ADD9_INV2     = 113;  // E,G,A,C,D
   define int CHORD_MAJOR_6_ADD9_INV3     = 114;  // G,A,C,D,E
   define int CHORD_MAJOR_6_ADD9_INV4     = 115;  // A,C,D,E,G
   define int CHORD_MINOR_6_ADD9_INV1     = 116;  // D,D#,G,A,C
   define int CHORD_MINOR_6_ADD9_INV2     = 117;  // D#,G,A,C,D
   define int CHORD_MINOR_6_ADD9_INV3     = 118;  // G,A,C,D,D#
   define int CHORD_MINOR_6_ADD9_INV4     = 119;  // A,C,D,D#,G
   define int CHORD_11_INV1               = 120;  // D,E,F,G,A#,C
   define int CHORD_11_INV2               = 121;  // E,F,G,A#,C,D
   define int CHORD_11_INV3               = 122;  // F,G,A#,C,D,E
   define int CHORD_11_INV4               = 123;  // G,A#,C,D,E,F
   define int CHORD_11_INV5               = 124;  // A#,C,D,E,F,G
   define int CHORD_MINOR_11_INV1         = 125;  // D#,G,A#,D,F,C
   define int CHORD_MINOR_11_INV2         = 126;  // G,A#,D,F,C,D#
   define int CHORD_MINOR_11_INV3         = 127;  // A#,D,F,C,D#,G
   define int CHORD_MINOR_11_INV4         = 128;  // D,F,C,D#,G,A#
   define int CHORD_MINOR_11_INV5         = 129;  // F,C,D#,G,A#,D
   define int CHORD_MAJOR_11_INV1         = 130;  // E,G,B,D,F#,C
   define int CHORD_MAJOR_11_INV2         = 131;  // G,B,D,F#,C,E
   define int CHORD_MAJOR_11_INV3         = 132;  // B,D,F#,C,E,G
   define int CHORD_MAJOR_11_INV4         = 133;  // D,F#,C,E,G,B
   define int CHORD_MAJOR_11_INV5         = 134;  // F#,C,E,G,B,D
   define int CHORD_13_INV1               = 135;  // D,E,G,A,A#,C
   define int CHORD_13_INV2               = 136;  // E,G,A,A#,C,D
   define int CHORD_13_INV3               = 137;  // G,A,A#,C,D,E
   define int CHORD_13_INV4               = 138;  // A,A#,C,D,E,G
   define int CHORD_13_INV5               = 139;  // A#,C,D,E,G,A
   define int CHORD_MINOR_MAJOR_11_INV1   = 140;  // D,D#,F,G,B,C
   define int CHORD_MINOR_MAJOR_11_INV2   = 141;  // D#,F,G,B,C,D
   define int CHORD_MINOR_MAJOR_11_INV3   = 142;  // F,G,B,C,D,D#
   define int CHORD_MINOR_MAJOR_11_INV4   = 143;  // G,B,C,D,D#,F
   define int CHORD_MINOR_MAJOR_11_INV5   = 144;  // B,C,D,D#,F,G
   define int CHORD_MINOR_13_INV1         = 145;  // D#,G,A#,D,F,G#,C
   define int CHORD_MINOR_13_INV2         = 146;  // G,A#,D,F,G#,C,D#
   define int CHORD_MINOR_13_INV3         = 147;  // A#,D,F,G#,C,D#,G
   define int CHORD_MINOR_13_INV4         = 148;  // D,F,G#,C,D#,G,A#
   define int CHORD_MINOR_13_INV5         = 149;  // F,G#,C,D#,G,A#,D
   define int CHORD_MINOR_13_INV6         = 150;  // G#,C,D#,G,A#,D,F
   define int CHORD_MAJOR_13_INV1         = 151;  // E,G,B,D,F,A,C
   define int CHORD_MAJOR_13_INV2         = 152;  // G,B,D,F,A,C,E
   define int CHORD_MAJOR_13_INV3         = 153;  // B,D,F,A,C,E,G
   define int CHORD_MAJOR_13_INV4         = 154;  // D,F,A,C,E,G,B
   define int CHORD_MAJOR_13_INV5         = 155;  // F,A,C,E,G,B,D
   define int CHORD_MAJOR_13_INV6         = 156;  // A,C,E,G,B,D,F
   define int CHORD_MINOR_MAJOR_13_INV1   = 157;  // D,D#,G,A,B,C
   define int CHORD_MINOR_MAJOR_13_INV2   = 158;  // D#,G,A,B,C,D
   define int CHORD_MINOR_MAJOR_13_INV3   = 159;  // G,A,B,C,D,D#
   define int CHORD_MINOR_MAJOR_13_INV4   = 160;  // A,B,C,D,D#,G
   define int CHORD_MINOR_MAJOR_13_INV5   = 161;  // B,C,D,D#,G,A
   define int CHORD_7B5                   = 162;  // C,E,F#,A#    \/ \/ https://www.apassion4jazz.net/keys.html \/ \/
   define int CHORD_7B5_INV1              = 163;  // E,F#,A#,C
   define int CHORD_7B5_INV2              = 164;  // F#,A#,C,E
   define int CHORD_7B5_INV3              = 165;  // A#,C,E,F#
   define int CHORD_7S5                   = 166;  // C,E,G#,A#
   define int CHORD_7S5_INV1              = 167;  // E,G#,A#,C
   define int CHORD_7S5_INV2              = 168;  // G#,A#,C,E
   define int CHORD_7S5_INV3              = 169;  // A#,C,E,G#
   define int CHORD_7B9                   = 170;  // C,C#,E,G,A#
   define int CHORD_7B9_INV1              = 171;  // C#,E,G,A#,C
   define int CHORD_7B9_INV2              = 172;  // E,G,A#,C,C#
   define int CHORD_7B9_INV3              = 173;  // G,A#,C,C#,E
   define int CHORD_7B9_INV4              = 174;  // A#,C,C#,E,G
   define int CHORD_7S9                   = 175;  // C,D#,E,G,A#
   define int CHORD_7S9_INV1              = 176;  // D#,E,G,A#,C
   define int CHORD_7S9_INV2              = 177;  // E,G,A#,C,D#
   define int CHORD_7S9_INV3              = 178;  // G,A#,C,D#,E
   define int CHORD_7S9_INV4              = 179;  // A#,C,D#,E,G
   define int CHORD_7S5B9                 = 180;  // C,C#,E,G#,A#
   define int CHORD_7S5B9_INV1            = 181;  // C#,E,G#,A#,C
   define int CHORD_7S5B9_INV2            = 182;  // E,G#,A#,C,C#
   define int CHORD_7S5B9_INV3            = 183;  // G#,A#,C,C#,E
   define int CHORD_7S5B9_INV4            = 184;  // A#,C,C#,E,G#
   define int CHORD_M7B9                  = 185;  // C,D#,F#,A#
   define int CHORD_M7B9_INV1             = 186;  // D#,F#,A#,C
   define int CHORD_M7B9_INV2             = 187;  // F#,A#,C,D#
   define int CHORD_M7B9_INV3             = 188;  // A#,C,D#,F#
   define int CHORD_M7S9                  = 189;  // C,D#,G#,A#
   define int CHORD_M7S9_INV1             = 190;  // D#,G#,A#,C
   define int CHORD_M7S9_INV2             = 191;  // G#,A#,C,D#
   define int CHORD_M7S9_INV3             = 192;  // A#,C,D#,G#
   define int CHORD_M7B9                  = 193;  // C,C#,D#,G,A#
   define int CHORD_M7B9_INV1             = 194;  // C#,D#,G,A#,C
   define int CHORD_M7B9_INV2             = 195;  // D#,G,A#,C,C#
   define int CHORD_M7B9_INV3             = 196;  // G,A#,C,C#,D#
   define int CHORD_M7B9_INV4             = 197;  // A#,C,C#,D#,G
   define int CHORD_9S11                  = 198;  // C,D,E,F#,G,A#
   define int CHORD_9S11_INV1             = 199;  // D,E,F#,G,A#,C
   define int CHORD_9S11_INV2             = 200;  // E,F#,G,A#,C,D
   define int CHORD_9S11_INV3             = 201;  // F#,G,A#,C,D,E
   define int CHORD_9S11_INV4             = 202;  // G,A#,C,D,E,F#
   define int CHORD_9S11_INV5             = 203;  // A#,C,D,E,F#,G
   define int CHORD_9B13                  = 204;  // C,D,E,G,G#,A#
   define int CHORD_9B13_INV1             = 205;  // D,E,G,G#,A#,C
   define int CHORD_9B13_INV2             = 206;  // E,G,G#,A#,C,D
   define int CHORD_9B13_INV3             = 207;  // G,G#,A#,C,D,E
   define int CHORD_9B13_INV4             = 208;  // G#,A#,C,D,E,G
   define int CHORD_9B13_INV5             = 209;  // A#,C,D,E,G,G#
   define int CHORD_6SUS4                 = 210;  // C,F,G,A
   define int CHORD_6SUS4_INV1            = 211;  // F,G,A,C
   define int CHORD_6SUS4_INV2            = 212;  // G,A,C,F
   define int CHORD_6SUS4_INV3            = 213;  // A,C,F,G
   define int CHORD_7SUS4                 = 214;  // C,F,G,A#
   define int CHORD_7SUS4_INV1            = 215;  // F,G,A#,C
   define int CHORD_7SUS4_INV2            = 216;  // G,A#,C,F
   define int CHORD_7SUS4_INV3            = 217;  // A#,C,F,G
   define int CHORD_MAJ7SUS4              = 218;  // C,F,G,B
   define int CHORD_MAJ7SUS4_INV1         = 219;  // F,G,B,C
   define int CHORD_MAJ7SUS4_INV2         = 220;  // G,B,C,F
   define int CHORD_MAJ7SUS4_INV3         = 221;  // B,C,F,G
   define int CHORD_9SUS4                 = 222;  // C,D,F,G,A#
   define int CHORD_9SUS4_INV1            = 223;  // D,F,G,A#,C
   define int CHORD_9SUS4_INV2            = 224;  // F,G,A#,C,D
   define int CHORD_9SUS4_INV3            = 225;  // G,A#,C,D,F
   define int CHORD_9SUS4_INV4            = 226;  // A#,C,D,F,G
   define int CHORD_MAJ9SUS4              = 227;  // C,D,F,G,B
   define int CHORD_MAJ9SUS4_INV1         = 228;  // D,F,G,B,C
   define int CHORD_MAJ9SUS4_INV2         = 229;  // F,G,B,C,D
   define int CHORD_MAJ9SUS4_INV3         = 230;  // G,B,C,D,F
   define int CHORD_MAJ9SUS4_INV4         = 231;  // B,C,D,F,G
   define int NUM_CHORDS                  = 232;

   static PointerArray chord_tbl = [
      [0,    0 ],                          // UNISON
      [0,    0,  1 ],                      // INTERVAL_MINOR_2
      [0,    0,  2 ],                      // INTERVAL_MAJOR_2
      [0,    0,  3 ],                      // INTERVAL_MINOR_3
      [0,    0,  4 ],                      // INTERVAL_MAJOR_3
      [0,    0,  5 ],                      // INTERVAL_4
      [0,    0,  6 ],                      // INTERVAL_TRITONE
      [0,    0,  7 ],                      // INTERVAL_5
      [0,    0,  8 ],                      // INTERVAL_MINOR_6
      [0,    0,  9 ],                      // INTERVAL_MAJOR_6
      [0,    0, 10 ],                      // INTERVAL_MINOR_7
      [0,    0, 11 ],                      // INTERVAL_MAJOR_7
      [0,    0,  2,  7 ],                  // SUSPENDED_2
      [0,    0,  5,  7 ],                  // SUSPENDED_4
      [0,    0,  3,  6 ],                  // DIMINISHED
      [2,    3,  6, 12 ],                  // DIMINISHED_INV1
      [1,    6, 12, 15 ],                  // DIMINISHED_INV2
      [0,    0,  3,  7 ],                  // MINOR
      [2,    3,  7, 12 ],                  // MINOR_INV1
      [1,    7, 12, 15 ],                  // MINOR_INV2
      [0,    0,  3, 10 ],                  // MINOR_7_NO5
      [2,    3, 10, 12 ],                  // MINOR_7_NO5_INV1
      [1,   10, 12, 15 ],                  // MINOR_7_NO5_INV2
      [0,    0,  4,  8 ],                  // AUG
      [0,    0,  7, 10 ],                  // DOMINANT_7_NO5
      [2,    7, 10, 12 ],                  // DOMINANT_7_NO5_INV1
      [1,   10, 12, 19 ],                  // DOMINANT_7_NO5_INV2
      [0,    0,  4,  7 ],                  // MAJOR
      [2,    4,  7, 12 ],                  // MAJOR_INV1
      [1,    7, 12, 16 ],                  // MAJOR_INV2
      [0,    0,  7, 11 ],                  // MAJOR_7_NO3
      [2,    7, 11, 12 ],                  // MAJOR_7_NO3_INV1
      [1,   11, 12, 19 ],                  // MAJOR_7_NO3_INV2
      [0,    0,  3,  7,  9 ],              // MINOR_6
      [0,    0,  3,  7, 10 ],              // MINOR_7
      [3,    3,  7, 10, 12 ],              // MINOR_7_INV1
      [2,    7, 10, 12, 15 ],              // MINOR_7_INV2
      [1,   10, 12, 15, 19 ],              // MINOR_7_INV3
      [0,    0,  3,  7, 14 ],              // MINOR_ADD2
      [3,    3,  7, 14, 12 ],              // MINOR_ADD2_INV1
      [2,    7, 14, 12, 15 ],              // MINOR_ADD2_INV2
      [1,   14, 12, 15, 19 ],              // MINOR_ADD2_INV3
      [0,    0,  3,  7, 17 ],              // MINOR_ADD4
      [3,    3,  7, 17, 12 ],              // MINOR_ADD4_INV1
      [2,    7, 17, 12, 15 ],              // MINOR_ADD4_INV2
      [1,   17, 12, 15, 19 ],              // MINOR_ADD4_INV3
      [0,    0,  4,  7,  9 ],              // MAJOR_6
      [0,    0,  4,  7, 11 ],              // MAJOR_7
      [3,    4,  7, 11, 12 ],              // MAJOR_7_INV1
      [2,    7, 11, 12, 16 ],              // MAJOR_7_INV2
      [1,   11, 12, 16, 19 ],              // MAJOR_7_INV3
      [0,    0,  4,  7, 14 ],              // MAJOR_ADD2
      [3,    4,  7, 14, 12 ],              // MAJOR_ADD2_INV1
      [2,    7, 14, 12, 16 ],              // MAJOR_ADD2_INV2
      [1,   14, 12, 16, 19 ],              // MAJOR_ADD2_INV3
      [0,    0,  4,  7, 17 ],              // MAJOR_ADD4
      [3,    4,  7, 17, 12 ],              // MAJOR_ADD4_INV1
      [2,    7, 17, 12, 16 ],              // MAJOR_ADD4_INV2
      [1,   17, 12, 16, 19 ],              // MAJOR_ADD4_INV3
      [0,    0,  3,  7, 11 ],              // MINOR_MAJOR_7 (e.g. CmMaj7)
      [3,    3,  7, 11, 12 ],              // MINOR_MAJOR_7_INV1
      [2,    7, 11, 12, 15 ],              // MINOR_MAJOR_7_INV2
      [1,   11, 12, 15, 19 ],              // MINOR_MAJOR_7_INV3
      [0,    0,  4,  7, 10 ],              // DOMINANT_7 (e.g. C7)
      [3,    4,  7, 10, 12 ],              // DOMINANT_7_INV1
      [2,    7, 10, 12, 16 ],              // DOMINANT_7_INV2
      [1,   10, 12, 16, 19 ],              // DOMINANT_7_INV3
      [0,    0,  2,  4,  7, 10 ],          // 9
      [0,    0,  3,  7, 10, 14 ],          // MINOR_9
      [0,    0,  2,  4,  5,  7, 10 ],      // 11
      [0,    0,  3,  7, 10, 14, 17 ],      // MINOR_11
      [0,    0,  2,  4,  7,  9, 10 ],      // 13
      [0,    0,  2,  3,  5,  7, 11 ],      // MINOR_MAJOR_11
      [0,    0,  3,  7, 10, 14, 17, 21 ],  // MINOR_13
      [0,    0,  2,  4,  7,  9 ],          // MAJOR_6_ADD9
      [0,    0,  2,  3,  7,  9 ],          // MINOR_6_ADD9
      [0,    0,  4,  7, 11, 14 ],          // MAJOR_9
      [0,    0,  2,  3,  7, 11 ],          // MINOR_MAJOR_9
      [4,    2,  3,  7, 11, 12 ],          // MINOR_MAJOR_9_I1
      [3,    3,  7, 11, 12, 14 ],          // MINOR_MAJOR_9_I2
      [2,    7, 11, 12, 14, 15 ],          // MINOR_MAJOR_9_I3
      [1,   11, 12, 14, 15, 19 ],          // MINOR_MAJOR_9_I4
      [0,    0,  4,  7, 11, 14, 17 ],      // MAJOR_11
      [0,    0,  4,  7, 11, 14, 17, 21 ],  // MAJOR_13  (moved before MINOR_13_INV4)
      [0,    0,  2,  3,  7,  9, 11 ],      // MINOR_MAJOR_13
      [4,    2,  4,  7, 10, 12 ],          // 9_INV1
      [3,    4,  7, 10, 12, 14 ],          // 9_INV2
      [2,    7, 10, 12, 14, 16 ],          // 9_INV3
      [1,   10, 12, 14, 16, 19 ],          // 9_INV4
      [4,    3,  7, 10, 14, 12 ],          // MINOR_9_INV1
      [3,    7, 10, 14, 12, 15 ],          // MINOR_9_INV2
      [2,   10, 14, 12, 15, 19 ],          // MINOR_9_INV3
      [1,   14, 12, 15, 19, 22 ],          // MINOR_9_INV4
      [4,    4,  7, 11, 14, 12 ],          // MAJOR_9_INV1
      [3,    7, 11, 14, 12, 16 ],          // MAJOR_9_INV2
      [2,   11, 14, 12, 16, 19 ],          // MAJOR_9_INV3
      [1,   14, 12, 16, 19, 23 ],          // MAJOR_9_INV4
      [0,    0,  4,  5,  7, 10 ],          // DOMINANT_7_ADD11
      [4,    4,  5,  7, 10, 12 ],          // DOMINANT_7_ADD11_INV1
      [3,    5,  7, 10, 12, 16 ],          // DOMINANT_7_ADD11_INV2
      [2,    7, 10, 12, 16, 17 ],          // DOMINANT_7_ADD11_INV3
      [1,   10, 12, 16, 17, 19 ],          // DOMINANT_7_ADD11_INV4
      [0,    0,  4,  5,  7, 11 ],          // MAJOR_7_ADD11
      [4,    4,  5,  7, 11, 12 ],          // MAJOR_7_ADD11_INV1
      [3,    5,  7, 11, 12, 16 ],          // MAJOR_7_ADD11_INV2
      [2,    7, 11, 12, 16, 17 ],          // MAJOR_7_ADD11_INV3
      [1,   11, 12, 16, 17, 19 ],          // MAJOR_7_ADD11_INV4
      [0,    0,  3,  5,  7, 10 ],          // MINOR_7_ADD11
      [4,    3,  5,  7, 10, 12 ],          // MINOR_7_ADD11_INV1
      [3,    5,  7, 10, 12, 15 ],          // MINOR_7_ADD11_INV2
      [2,    7, 10, 12, 15, 17 ],          // MINOR_7_ADD11_INV3
      [1,   10, 12, 15, 17, 19 ],          // MINOR_7_ADD11_INV4
      [4,    2,  4,  7,  9, 12 ],          // MAJOR_6_ADD9_INV1
      [3,    4,  7,  9, 12, 14 ],          // MAJOR_6_ADD9_INV2
      [2,    7,  9, 12, 14, 16 ],          // MAJOR_6_ADD9_INV3
      [1,    9, 12, 14, 16, 19 ],          // MAJOR_6_ADD9_INV4
      [4,    2,  3,  7,  9, 12 ],          // MINOR_6_ADD9_INV1
      [3,    3,  7,  9, 12, 14 ],          // MINOR_6_ADD9_INV2
      [2,    7,  9, 12, 14, 15 ],          // MINOR_6_ADD9_INV3
      [1,    9, 12, 14, 15, 19 ],          // MINOR_6_ADD9_INV4
      [5,    2,  4,  5,  7, 10, 12 ],      // 11_INV1
      [4,    4,  5,  7, 10, 12, 14 ],      // 11_INV2
      [3,    5,  7, 10, 12, 14, 16 ],      // 11_INV3
      [2,    7, 10, 12, 14, 16, 17 ],      // 11_INV4
      [1,   10, 12, 14, 16, 17, 19 ],      // 11_INV5
      [5,    3,  7, 10, 14, 17, 12 ],      // MINOR_11_INV1
      [4,    7, 10, 14, 17, 12, 15 ],      // MINOR_11_INV2
      [3,   10, 14, 17, 12, 15, 19 ],      // MINOR_11_INV3
      [2,   14, 17, 12, 15, 19, 22 ],      // MINOR_11_INV4
      [1,   17, 12, 15, 19, 22, 26 ],      // MINOR_11_INV5
      [5,    4,  7, 11, 14, 17, 12 ],      // MAJOR_11_INV1
      [4,    7, 11, 14, 17, 12, 16 ],      // MAJOR_11_INV2
      [3,   11, 14, 17, 12, 16, 19 ],      // MAJOR_11_INV3
      [2,   14, 17, 12, 16, 19, 23 ],      // MAJOR_11_INV4
      [1,   17, 12, 16, 19, 23, 26 ],      // MAJOR_11_INV5
      [5,    2,  4,  7,  9, 10, 12 ],      // 13_INV1
      [4,    4,  7,  9, 10, 12, 14 ],      // 13_INV2
      [3,    7,  9, 10, 12, 14, 16 ],      // 13_INV3
      [2,    9, 10, 12, 14, 16, 19 ],      // 13_INV4
      [1,   10, 12, 14, 16, 19, 21 ],      // 13_INV5
      [5,    2,  3,  5,  7, 11, 12 ],      // MINOR_MAJOR_11_INV1
      [4,    3,  5,  7, 11, 12, 14 ],      // MINOR_MAJOR_11_INV2
      [3,    5,  7, 11, 12, 14, 15 ],      // MINOR_MAJOR_11_INV3
      [2,    7, 11, 12, 14, 15, 17 ],      // MINOR_MAJOR_11_INV4
      [1,   11, 12, 14, 15, 17, 19 ],      // MINOR_MAJOR_11_INV5
      [6,    3,  7, 10, 14, 17, 21, 12 ],  // MINOR_13_INV1
      [5,    7, 10, 14, 17, 21, 12, 15 ],  // MINOR_13_INV2
      [4,   10, 14, 17, 21, 12, 15, 19 ],  // MINOR_13_INV3
      [3,   14, 17, 21, 12, 15, 19, 22 ],  // MINOR_13_INV4
      [2,   17, 21, 12, 15, 19, 22, 26 ],  // MINOR_13_INV5
      [1,   21, 12, 15, 19, 22, 26, 29 ],  // MINOR_13_INV6
      [6,    4,  7, 11, 14, 17, 21, 12 ],  // MAJOR_13_INV1
      [5,    7, 11, 14, 17, 21, 12, 16 ],  // MAJOR_13_INV2
      [4,   11, 14, 17, 21, 12, 16, 19 ],  // MAJOR_13_INV3
      [3,   14, 17, 21, 12, 16, 19, 23 ],  // MAJOR_13_INV4
      [2,   17, 21, 12, 16, 19, 23, 26 ],  // MAJOR_13_INV5
      [1,   21, 12, 16, 19, 23, 26, 29 ],  // MAJOR_13_INV6
      [5,    2,  3,  7,  9, 11, 12 ],      // MINOR_MAJOR_13_INV1
      [4,    3,  7,  9, 11, 12, 14 ],      // MINOR_MAJOR_13_INV2
      [3,    7,  9, 11, 12, 14, 15 ],      // MINOR_MAJOR_13_INV3
      [2,    9, 11, 12, 14, 15, 19 ],      // MINOR_MAJOR_13_INV4
      [1,   11, 12, 14, 15, 19, 21 ],      // MINOR_MAJOR_13_INV5
      [0,    0,  4,  6, 10 ],              // 7B5
      [3,    4,  6, 10, 12 ],              // 7B5_INV1
      [2,    6, 10, 12, 16 ],              // 7B5_INV2
      [1,   10, 12, 16, 18 ],              // 7B5_INV3
      [0,    0,  4,  8, 10 ],              // 7S5
      [3,    4,  8, 10, 12 ],              // 7S5_INV1
      [2,    8, 10, 12, 16 ],              // 7S5_INV2
      [1,   10, 12, 16, 20 ],              // 7S5_INV3
      [0,    0,  1,  4,  7, 10 ],          // 7B9
      [4,    1,  4,  7, 10, 12 ],          // 7B9_INV1
      [3,    4,  7, 10, 12, 13 ],          // 7B9_INV2
      [2,    7, 10, 12, 13, 16 ],          // 7B9_INV3
      [1,   10, 12, 13, 16, 19 ],          // 7B9_INV4
      [0,    0,  3,  4,  7, 10 ],          // 7S9
      [4,    3,  4,  7, 10, 12 ],          // 7S9_INV1
      [3,    4,  7, 10, 12, 15 ],          // 7S9_INV2
      [2,    7, 10, 12, 15, 16 ],          // 7S9_INV3
      [1,   10, 12, 15, 16, 19 ],          // 7S9_INV4
      [0,    0,  1,  4,  8, 10 ],          // 7S5B9
      [4,    1,  4,  8, 10, 12 ],          // 7S5B9_INV1
      [3,    4,  8, 10, 12, 13 ],          // 7S5B9_INV2
      [2,    8, 10, 12, 13, 16 ],          // 7S5B9_INV3
      [1,   10, 12, 13, 16, 20 ],          // 7S5B9_INV4
      [0,    0,  3,  6, 10 ],              // M7B9
      [3,    3,  6, 10, 12 ],              // M7B9_INV1
      [2,    6, 10, 12, 18 ],              // M7B9_INV2
      [1,   10, 12, 18, 22 ],              // M7B9_INV3
      [0,    0,  3,  8, 10 ],              // M7S9
      [3,    3,  8, 10, 12 ],              // M7S9_INV1
      [2,    8, 10, 12, 15 ],              // M7S9_INV2
      [1,   10, 12, 15, 20 ],              // M7S9_INV3
      [0,    0,  1,  3,  7, 10 ],          // M7B9
      [4,    1,  3,  7, 10, 12 ],          // M7B9_INV1
      [3,    3,  7, 10, 12, 13 ],          // M7B9_INV2
      [2,    7, 10, 12, 13, 15 ],          // M7B9_INV3
      [1,   10, 12, 13, 15, 19 ],          // M7B9_INV4
      [0,    0,  2,  4,  6,  7, 10 ],      // 9S11
      [5,    2,  4,  6,  7, 10, 12 ],      // 9S11_INV1
      [4,    4,  6,  7, 10, 12, 14 ],      // 9S11_INV2
      [3,    6,  7, 10, 12, 14, 16 ],      // 9S11_INV3
      [2,    7, 10, 12, 14, 16, 18 ],      // 9S11_INV4
      [1,   10, 12, 14, 16, 18, 19 ],      // 9S11_INV5
      [0,    0,  2,  4,  7,  8, 10 ],      // 9B13
      [5,    2,  4,  7,  8, 10, 12 ],      // 9B13_INV1
      [4,    4,  7,  8, 10, 12, 14 ],      // 9B13_INV2
      [3,    7,  8, 10, 12, 14, 16 ],      // 9B13_INV3
      [2,    8, 10, 12, 14, 16, 19 ],      // 9B13_INV4
      [1,   10, 12, 14, 16, 19, 20 ],      // 9B13_INV5
      [0,    0,  5,  7,  9 ],              // 6SUS4
      [3,    5,  7,  9, 12 ],              // 6SUS4_INV1
      [2,    7,  9, 12, 17 ],              // 6SUS4_INV2
      [1,    9, 12, 17, 19 ],              // 6SUS4_INV3
      [0,    0,  5,  7, 10 ],              // 7SUS4
      [3,    5,  7, 10, 12 ],              // 7SUS4_INV1
      [2,    7, 10, 12, 17 ],              // 7SUS4_INV2
      [1,   10, 12, 17, 19 ],              // 7SUS4_INV3
      [0,    0,  5,  7, 11 ],              // MAJ7SUS4
      [3,    5,  7, 11, 12 ],              // MAJ7SUS4_INV1
      [2,    7, 11, 12, 17 ],              // MAJ7SUS4_INV2
      [1,   11, 12, 17, 19 ],              // MAJ7SUS4_INV3
      [0,    0,  2,  5,  7, 10 ],          // 9SUS4
      [4,    2,  5,  7, 10, 12 ],          // 9SUS4_INV1
      [3,    5,  7, 10, 12, 14 ],          // 9SUS4_INV2
      [2,    7, 10, 12, 14, 17 ],          // 9SUS4_INV3
      [1,   10, 12, 14, 17, 19 ],          // 9SUS4_INV4
      [0,    0,  2,  5,  7, 11 ],          // MAJ9SUS4
      [4,    2,  5,  7, 11, 12 ],          // MAJ9SUS4_INV1
      [3,    5,  7, 11, 12, 14 ],          // MAJ9SUS4_INV2
      [2,    7, 11, 12, 14, 17 ],          // MAJ9SUS4_INV3
      [1,   11, 12, 14, 17, 19 ],          // MAJ9SUS4_INV4

                                    ];

   define int MAX_CHORD_NOTES = 7;

   static StringArray chord_names_short = [
      "Unison",
      "Ival_Min2",
      "Ival_Maj2",
      "Ival_Min3",
      "Ival_Maj3",
      "Ival_4",
      "Ival_Tritone",
      "Ival_5",
      "Ival_Min6",
      "Ival_Maj6",
      "Ival_Min7",
      "Ival_Maj7",
      "Sus2",
      "Sus4",
      "Dim",
      "Dim:I1",
      "Dim:I2",
      "Min",
      "Min_I1",
      "Min_I2",
      "Min7No5",
      "Min7No5_I1",
      "Min7No5_I2",
      "Aug",
      "Dom7No5",
      "Dom7No5_I1",
      "Dom7No5_I2",
      "Maj",
      "Maj_I1",
      "Maj_I2",
      "Maj7No3",
      "Maj7No3_I1",
      "Maj7No3_I2",
      "Min6",
      "Min7",
      "Min7_I1",
      "Min7_I2",
      "Min7_I3",
      "MinAdd2",
      "MinAdd2_I1",
      "MinAdd2_I2",
      "MinAdd2_I3",
      "MinAdd4",
      "MinAdd4_I1",
      "MinAdd4_I2",
      "MinAdd4_I3",
      "Maj6",
      "Maj7",
      "Maj7_I1",
      "Maj7_I2",
      "Maj7_I3",
      "MajAdd2",
      "MajAdd2_I1",
      "MajAdd2_I2",
      "MajAdd2_I3",
      "MajAdd4",
      "MajAdd4_I1",
      "MajAdd4_I2",
      "MajAdd4_I3",
      "MinMaj7",
      "MinMaj7_I1",
      "MinMaj7_I2",
      "MinMaj7_I3",
      "Dom7",
      "Dom7_I1",
      "Dom7_I2",
      "Dom7_I3",
      "9",
      "Min9",
      "11",
      "Min11",
      "13",
      "MinMaj11",
      "Min13",
      "Maj6Add9",
      "Min6Add9",
      "Maj9",
      "MinMaj9",
      "MinMaj9_I1",
      "MinMaj9_I2",
      "MinMaj9_I3",
      "MinMaj9_I4",
      "Maj11",
      "Maj13",
      "MinMaj13",
      "9_I1",
      "9_I2",
      "9_I3",
      "9_I4",
      "Min9_I1",
      "Min9_I2",
      "Min9_I3",
      "Min9_I4",
      "Maj9_I1",
      "Maj9_I2",
      "Maj9_I3",
      "Maj9_I4",
      "Dom7Add11",
      "Dom7Add11_I1",
      "Dom7Add11_I2",
      "Dom7Add11_I3",
      "Dom7Add11_I4",
      "Maj7Add11",
      "Maj7Add11_I1",
      "Maj7Add11_I2",
      "Maj7Add11_I3",
      "Maj7Add11_I4",
      "Min7Add11",
      "Min7Add11_I1",
      "Min7Add11_I2",
      "Min7Add11_I3",
      "Min7Add11_I4",
      "Maj6Add9_I1",
      "Maj6Add9_I2",
      "Maj6Add9_I3",
      "Maj6Add9_I4",
      "Min6Add9_I1",
      "Min6Add9_I2",
      "Min6Add9_I3",
      "Min6Add9_I4",
      "11_I1",
      "11_I2",
      "11_I3",
      "11_I4",
      "11_I5",
      "Min11_I1",
      "Min11_I2",
      "Min11_I3",
      "Min11_I4",
      "Min11_I5",
      "Maj11_I1",
      "Maj11_I2",
      "Maj11_I3",
      "Maj11_I4",
      "Maj11_I5",
      "13_I1",
      "13_I2",
      "13_I3",
      "13_I4",
      "13_I5",
      "MinMaj11_I1",
      "MinMaj11_I2",
      "MinMaj11_I3",
      "MinMaj11_I4",
      "MinMaj11_I5",
      "Min13_I1",
      "Min13_I2",
      "Min13_I3",
      "Min13_I4",
      "Min13_I5",
      "Min13_I6",
      "Maj13_I1",
      "Maj13_I2",
      "Maj13_I3",
      "Maj13_I4",
      "Maj13_I5",
      "Maj13_I6",
      "MinMaj13_I1",
      "MinMaj13_I2",
      "MinMaj13_I3",
      "MinMaj13_I4",
      "MinMaj13_I5",
      "7b5",
      "7b5_I1",
      "7b5_I2",
      "7b5_I3",
      "7#5",
      "7#5_I1",
      "7#5_I2",
      "7#5_I3",
      "7b9",
      "7b9_I1",
      "7b9_I2",
      "7b9_I3",
      "7b9_I4",
      "7#9",
      "7#9_I1",
      "7#9_I2",
      "7#9_I3",
      "7#9_I4",
      "7#5b9",
      "7#5b9_I1",
      "7#5b9_I2",
      "7#5b9_I3",
      "7#5b9_I4",
      "M7b9",
      "M7b9_I1",
      "M7b9_I2",
      "M7b9_I3",
      "M7#9",
      "M7#9_I1",
      "M7#9_I2",
      "M7#9_I3",
      "M7b9",
      "M7b9_I1",
      "M7b9_I2",
      "M7b9_I3",
      "M7b9_I4",
      "9#11",
      "9#11_I1",
      "9#11_I2",
      "9#11_I3",
      "9#11_I4",
      "9#11_I5",
      "9b13",
      "9b13_I1",
      "9b13_I2",
      "9b13_I3",
      "9b13_I4",
      "9b13_I5",
      "6Sus4",
      "6Sus4_I1",
      "6Sus4_I2",
      "6Sus4_I3",
      "7Sus4",
      "7Sus4_I1",
      "7Sus4_I2",
      "7Sus4_I3",
      "Maj7Sus4",
      "Maj7Sus4_I1",
      "Maj7Sus4_I2",
      "Maj7Sus4_I3",
      "9Sus4",
      "9Sus4_I1",
      "9Sus4_I2",
      "9Sus4_I3",
      "9Sus4_I4",
      "Maj9Sus4",
      "Maj9Sus4_I1",
      "Maj9Sus4_I2",
      "Maj9Sus4_I3",
      "Maj9Sus4_I4",

                                           ];

   public static FindChordIdxByString(String _s) : int {
      return chord_names_short.indexOfObject(_s, 0);
   }
}
