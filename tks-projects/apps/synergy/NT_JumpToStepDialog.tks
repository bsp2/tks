// ----
// ---- file   : NT_JumpToStepDialog.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2020-2025 by Bastian Spiegel.
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "syntracker" sequencer.
// ----
// ---- created: 25Oct2020
// ---- changed: 28Feb2025
// ----
// ----
// ----
module MNT_JumpToStepDialog;

use namespace ui;
use namespace st2;


class NT_JumpToStepDialog extends ActionConsumer {
   TextInputDialog *d;

   int last_fmt = 0;  // 0=dec, 1=hex
   NT_PatternView *pattern_view;

   public method run(NT_PatternView _pv, int _stepNr) {
      pattern_view <= _pv;

      if(null == d)
      {
         d <= TextInputDialog.New("Enter step number",
                                  "Please enter step number (0..n / $0..$n):",
                                  "\aOk",
                                  "Cancel",
                                  "?",
                                  5, 5,
                                  this
                                  );
      }

      local String stepStr;
      switch(last_fmt)
      {
         default:
         case 0:
            stepStr = _stepNr;
            break;

         case 1:
            Integer io = _stepNr;
            stepStr = io.printf("$%x");
            break;
      }

      d.setDefaultText(stepStr);
      d.showCentered();
   }

   public virtual consumeAction(Action _action) : boolean {
      StringAction *sac;

      if(_action.getActionProvider() == d)
      {
         String acName <= _action.getActionName();
         if(TextInputDialog.ACTION_TEXTINPUTDIALOGCANCELED == acName)
         {
            UI.SetKeyboardFocus(pattern_view);
            return true;
         }
         if("" != acName)
         {
            if(_action instanceof StringAction)
            {
               sac <= _action;
               if("" != sac.getStringValue())
               {
                  String stepStr <= sac.getStringValue();
                  stepStr.toLower();

                  int stepNr;

                  // Dec or Hex
                  stepNr = stepStr;
                  last_fmt = (
                     (-1 != stepStr.indexOfChar('$', 0)) ||
                     (-1 != stepStr.indexOfChar('#', 0)) ||
                     (-1 != stepStr.indexOf("0x", 0))
                              ) ? 1: 0;

                  pattern_view.jumpToStep2(stepNr);
               } // "" != acValue
            } // if is StringAction
         } // "" != acName
         return true;
      }
      return false;
   }
}
