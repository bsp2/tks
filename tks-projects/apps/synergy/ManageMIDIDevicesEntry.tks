// ----
// ---- file   : ManageMIDIDevicesEntry
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2012-2024 by Bastian Spiegel.
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : This is part of the "syntracker" midi sequencer.
// ----
// ---- changed: 13May2012, 21Nov2012, 15Jun2014, 31Aug2014, 17Feb2015, 19Jan2016, 25Jan2016
// ----          24Jul2016, 03Jun2018, 01Nov2020, 14Jun2021, 02Oct2024
// ----
// ----
// ----

module MManageMIDIDevicesEntry;


// <class.png>
class ManageMIDIDevicesEntry {

   String   name;        // Full device name
   String  *alias;       // reference to device alias or "-" if null if no alias exists
   boolean  b_out;       // true=output device, false=input device
   boolean  b_open;      // true if the device shall be opened
   boolean  b_opened;    // true if the device has been opened
   boolean  b_present;   // true if device was enumerated / detected
   boolean  b_used;      // true if device is actually used by a generator or midi map entry
   boolean  b_echo;      // true if events shall be echoed to out device by default
   boolean  b_clk;       // true if device wants to receive MIDI timing clock
   boolean  b_mmcrec;    // true if device wants to receive MIDI machine control recording sysex
   boolean  b_mmcplay;   // true if device wants to receive MIDI machine control start/stop sysex
   boolean  b_mtc;       // true if device wants to receive MIDI Time Code (SMPTE) sysex
   boolean  b_spp;       // true if device wants to receive MIDI Song Position Pointer messages (0xF2)
   boolean  b_virtual;   // true if device is virtual ("<internal n>") (or unavail)
   boolean  b_joystick;
   boolean  b_unavail;   // true if device is 'unavail' virtual device


   public method getAliasOrDeviceName() : String {
      return (null != alias) ? alias : name;
   }
}
