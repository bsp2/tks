// mixed grid + fixed layout
//  - sub graph 'd' nodes are x/y constrained
//  - vertical space optimization (e<<f, *<<g)

style def {
  bgcolor = #eee
  fgcolor = #111
  shape = round
  border_width = 1
  border_color = #555
  ipad = "2;6;2;6"
}

style low {
  def
  bgtint = #20349a78
}

style sub {
  def
  border_color = #666
  fgcolor = #888
  ipad = "1;4;1;4"
  pad = 6
  bgtint = #2034789a
}

graph {
  grid         = 64,8
  cell_spacing = 4
  flip_x_opt   = 1  // (todo) detect edge crossing

  style=def
  a->b->c->d;

  d {
    layout = fixed;

    style=sub
    row="123";
    row="456";
    row="789";

    1 "1;1";
    2 "1;2";
    3 "1;3";

    4 "2;1";
    5 "2;2";
    6 "2;3";

    7 "3;1";
    8 "3;2";
    9 "3;3";
  }

  style=low

  e->c;
  f->e;
  g->b [edge_width_start=2 edge_width_end=0.25]
]
}
