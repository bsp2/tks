     title: Markdown Docs
start-date: 03Feb2020

! Introduction
  <<
  This text will be converted to markdown, and then be appended to the exported HTML project plan document.

  *Info nodes*, i.e. all `INFO` (`!`) nodes that occur before the first task node, can be used to outline a project (project goals etc).

  The text in the *task nodes* can be used to describe each task, so the resulting document becomes a mixture between a project plan and a technical proposal.

  For highly detailed task descriptions it is recommended to link to additional, external documents.
  >>

! Project goals
  The goal of this project is to serve as a debugging test case. 

--------------------------------------------------------------------------------
* Peter
  default resource
  ; (note) resource defs will not be converted to markdown


--------------------------------------------------------------------------------
* DONE Requirements (1d)
  Identify the requirements in detail and subdivide existing tasks into smaller, more manageable tasks.
  status: ok
  clock: 03Feb2020 4h

--------------------------------------------------------------------------------
* Specification (1d)
  depends: requirements
  status: ok
  clock: 04Feb2020 4h
  <<
  Once the requirements are known, devise a technical approach and specify the implementation details (architectural overview, block diagrams, ..).

  This includes updates to the `.org` files, and possibly the creation of additional technical documents.
  >>

--------------------------------------------------------------------------------
* Implementation
  ; inherit dependencies to all sub tasks ('depends' only applies to current task)
  after: specification

................................................................................
** Module One
  fold
  ;status: yellow. dog ate the specs.
  <<
  Implement the first module.
  >>

  - spec (1d)
     > create detailed module specification
     <<
     Here's more info about this in `markdown` format.
     >>

  - implement (3d)
     > implement module

  - test (2d)
     > test and debug module

................................................................................
** Module Two
  fold

  <<
  Implement the second module.
  
  Here's a markdown list:
    - item 1
       - sub item 1.1
    - item 2
       - sub item 2.1
       - sub item 2.2
  >>

  - spec (1d)
  - implement (5d)
  - test (3d)
