// ----
// ---- file   : RoundButton.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2021-2024 by Bastian Spiegel.
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   :
// ----
// ---- created: 26Mar2021
// ---- changed: 27Mar2021, 29Mar2021, 30Mar2021, 01Apr2021, 12Apr2021, 16Apr2021, 19Apr2021
// ----          07May2021, 13Nov2021, 27Dec2021, 28Dec2021, 21Feb2022, 08Oct2023, 11Nov2023
// ----          29Mar2024, 18Sep2024, 08Oct2024, 09Oct2024
// ----
// ----
// ----

module MModularCVRoundButton;

use namespace ui;
use namespace st2;
namespace modularcv;


// <class.png>
class RoundButton : ui::Button {

   public method initRoundButton() {
      initButton();
      setEnableKbdFocusOnMouse(false);
   }

   public method onDraw() {

      float sx = getSizeX();
      float sy = getSizeY();

      UIRenderer.DrawFilledRectangle(0, 0, getSizeX(), getSizeY(), app_lnf.getColor(AppLookAndFeel.COLOR_MODULAR_MODULE_BG));

      boolean bDrawPressed = (!b_toggle && b_pressed) || (b_toggle && b_toggle_state && b_toggle_draw_pressed);

      int c32;

      if(bDrawPressed)
      {
         c32 = app_lnf.getColor(AppLookAndFeel.COLOR_MODULAR_ROUNDBUTTON_FG_ENABLE);
      }
      else
      {
         c32 = app_lnf.getColor(AppLookAndFeel.COLOR_MODULAR_ROUNDBUTTON_FG_DISABLE);
      }

      glBlendFunc(GL_ONE, GL_ONE_MINUS_SRC_ALPHA);
      glEnable(GL_BLEND);

      if(app_lnf.b_modular_roundbutton_polygonsmooth)
      {
         glHint(GL_POLYGON_SMOOTH_HINT, GL_NICEST);
         glEnable(GL_POLYGON_SMOOTH);  // causes transparency glitches in dialogs/windows
      }
      // // glColorMask(GL_TRUE, GL_TRUE, GL_TRUE, GL_FALSE);

      glPolygonMode(GL_FRONT_AND_BACK, GL_FILL);
      UIRenderer.DrawFilledEllipse(sx*0.5, sy*0.5, sx*0.5, sx*0.5, 64, c32);

      glDisable(GL_BLEND);
      glDisable(GL_POLYGON_SMOOTH);
   }


}
