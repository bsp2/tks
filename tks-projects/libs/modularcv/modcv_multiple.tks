// ----
// ---- file   : modcv_multiple.tks
// ---- author : Bastian Spiegel <bs@tkscript.de>
// ---- legal  : (c) 2021-2022 by Bastian Spiegel. 
// ----          Distributed under terms of the GNU LESSER GENERAL PUBLIC LICENSE (LGPL). See 
// ----          http://www.gnu.org/licenses/licenses.html#LGPL or COPYING for further information.
// ----
// ---- info   : 
// ----
// ---- created: 30Mar2021
// ---- changed: 16Apr2021, 21Apr2021, 07May2021, 21Feb2022
// ----
// ----
// ----

module MModularCVMod_Multiple;

namespace modularcv;


class ModCV_Multiple : Module {

   public virtual init() {
      Module::init();

      initModule("Multiple"/*id*/,
                 "127"/*header_id*/,
                 "Multiple"/*tooltip*/
                 );
      setModuleSize(3, 3);

      addInput("i1", "Input", 0.0f, IO_ANY);

      addOutput("o1", "Output 1", IO_ANY);
      addOutput("o2", "Output 2", IO_ANY);
      addOutput("o3", "Output 3", IO_ANY);
      addOutput("o4", "Output 4", IO_ANY);
      addOutput("o5", "Output 5", IO_ANY);
      addOutput("o6", "Output 6", IO_ANY);
      addOutput("o7", "Output 7", IO_ANY);
   }

   public virtual initUI() {

      Module::initUI();

      float cx = 11;
      float cy = 30;
      float stepY = 23;

      createPortWidget(0, false/*bOutput*/,
                       cx,
                       cy,
                       null/*captionOrNull*/
                       );

      cy += stepY;
      createPortWidget(0, true/*bOutput*/,
                       cx,
                       cy,
                       null/*captionOrNull*/
                       );

      cy += stepY;
      createPortWidget(1, true/*bOutput*/,
                       cx,
                       cy,
                       null/*captionOrNull*/
                       );

      cy += stepY;
      createPortWidget(2, true/*bOutput*/,
                       cx,
                       cy,
                       null/*captionOrNull*/
                       );

      cy += stepY;
      createPortWidget(3, true/*bOutput*/,
                       cx,
                       cy,
                       null/*captionOrNull*/
                       );

      cy += stepY;
      createPortWidget(4, true/*bOutput*/,
                       cx,
                       cy,
                       null/*captionOrNull*/
                       );

      cy += stepY;
      createPortWidget(5, true/*bOutput*/,
                       cx,
                       cy,
                       null/*captionOrNull*/
                       );

      cy += stepY;
      createPortWidget(6, true/*bOutput*/,
                       cx,
                       cy,
                       null/*captionOrNull*/
                       );
   }

   public virtual saveState(Stream ofs) {
      Module::saveState(ofs);

      // ver
      ofs.i16 = 1;
   }

   public virtual loadState(Stream ifs) : boolean {
      if(Module::loadState(ifs))
      {
         short ver = ifs.u16;
         if(ver >= 1)
         {
            return true;
         }
         else
         {
            trace "[---] ModCV_Multiple::loadState: invalid ver="+ver;
         }
      }
      return false;
   }

   public virtual tick() {
      local float f = inputs[0].getValue();
      out[0] = f;
      out[1] = f;
      out[2] = f;
      out[3] = f;
      out[4] = f;
      out[5] = f;
      out[6] = f;
   }
}
