// 17Aug2024, 18Aug2024

RemoteScriptPort rsClient;
RemoteScriptPort rsHost;

String sClientId <= "test_client";
int maxReqSz = 1*1024;

if(rsClient.create(sClientId, maxReqSz))
{
   Integer reqIdx = 0;
   for(;;)
   {
      if(rsHost.connect("test_host", maxReqSz))
      {
         // trace "[dbg] client: rsHost.isConnected()="+rsHost.isConnected();
         Buffer bufSend; bufSend.size = maxReqSz;
         Buffer bufRecv; bufRecv.size = maxReqSz;
         bufSend.offset = 0;
         bufSend << sClientId;
         bufSend << "hello from client";
         if(rsHost.send(bufSend))
         {
            // trace "[dbg] client: sent "+bufSend.offset+" bytes";
            // wait for reply
            for(;;)
            {
               if(rsClient.recv(bufRecv))
               {
                  trace "[dbg] client: ["+reqIdx.printf("%05d")+"] recvd "+bufRecv.offset+" bytes from host";
                  bufRecv.offset = 0;
                  String sPayLoad; sPayLoad << bufRecv;
                  trace "[dbg] client: ["+reqIdx.printf("%05d")+"]    payload=\""+sPayLoad+"\"";
                  break;
               }
               else
                  TKS.sleep(1);
            }
         }
         else
            trace "[---] client: rsHost.send() failed";
         rsHost.disconnect();
      }
      else
         trace "[---] client: rsHost.connect() failed";
      reqIdx++;
   }
   rsClient.disconnect();
}
else
   trace "[---] client: rsClient.create() failed";
