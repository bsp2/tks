
// 14Mar2010

module MDoorEntity;

namespace jumpy;

class DoorEntity extends BoxEntity {

   public boolean b_open;

   protected Script open_script;
   protected Script close_script;


   public static NewDoorEntity(float x, y, w, h, int c32, boolean _bOpen) : DoorEntity {
      DoorEntity d <= new DoorEntity;
      d.initDoorEntity(x, y, w, h, c32, _bOpen);
      return deref d;
   }

   public method initDoorEntity(float x, y, w, h, int c32, _bOpen) {
      initBoxEntity(x, y, w, h, c32);
      b_open = _bOpen;
      b_visible = b_open;
   }

   public virtual hitBy(Entity _o) : int {
      if(!b_open && b_visible)
      {
         return BoxEntity::hitBy(_o);
      }
      else
      {
         return 0;
      }
   }

   public virtual draw(float dt) {
      if(!b_visible)
      {
         BoxEntity::draw(dt); // draw debug if in edit mode
      }
      if(!b_open)
      {
         Render.drawFilledBox(position_x, position_y, size_x, size_y, color32);
      }
      ////Render.drawRectangle(float x,y,w,h,int c32);
   }

   public virtual actionActivate() {
      b_open = true;
      b_visible = false;
      open_script.run();
   }

   public virtual actionDeactivate() {
      b_open = false;
      b_visible = true;
      close_script.run();
   }

   public virtual actionToggle() {
      if(b_open)
      {
         actionDeactivate();
      }
      else
      {
         actionActivate();
      }
   }

   public virtual actionSet(String key, value) : boolean {
      StringArray *a;
      switch(key)
      {
         case "size":
            size_x = int(value) * 3;
            return true;

         case "open":
            if(value == "toggle")
            {
               b_open = ! b_open;
            }
            else
            {
               b_open = value;
            }
            b_visible = !b_open;
            return true;
      }
      return BoxEntity::actionSet(key, value);
   }

   public virtual markScriptTargets() {
      open_script.markScriptTargets();
      close_script.markScriptTargets();
   }

}
