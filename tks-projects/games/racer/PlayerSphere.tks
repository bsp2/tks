
module MPlayerSphere;

namespace racer;


class PlayerSphere {
   float x, y, z; // center
   float vecx, vecy, vecz;
   float accy;
   float spring_vecy;

   boolean b_last_tick_collision;
   float time_since_collision;

   public method setPosition(float _x, _y, _z) {
      x = _x;
      y = _y;
      z = _z;
   }

   public method resetForces() {
      vecx = 0;
      vecy = 0;
      vecz = 0;
      accy = 0;
      spring_vecy = 0;
      time_since_collision = 1;
   }

   public method tick(float dt) {
      accy -= Player.GRAVITY * dt;
      if(!RacerConfiguration.b_halt_collision)
      {
         vecy += accy * 0.01 * dt;
         vecy -= Player.GRAVITY * dt;
         x += dt * vecx;
         y += dt * vecy;
         z += dt * vecz;
         float fricDt = mathPowerf(Player.FRICTION, dt);
         vecx *= fricDt;
         vecy *= fricDt;
         vecz *= fricDt;
         spring_vecy *= fricDt;
         time_since_collision += 0.1*dt;
         if(time_since_collision > 1)
         {
            time_since_collision = 1;
         }
      }
   }
}

