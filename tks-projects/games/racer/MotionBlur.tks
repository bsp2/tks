
module MMotionBlur;

namespace racer;

Texture tex_fb; // Motion blur feedback texture

class MotionBlur {

   public static OnOpen() {
      tex_fb.free();
      tex_fb.setFlags(TEX_MINFILTERLINEAR | TEX_MAGFILTERLINEAR | TEX_MODULATE);
      tex_fb.upload();
   }

   public static OnDraw() {
      glMatrixMode(GL_PROJECTION);
      glPushMatrix();
      glMatrixMode(GL_MODELVIEW);
      glPushMatrix();
      zglInit2D(Viewport.width, Viewport.height);
      glLoadIdentity();
      
      tex_fb.bind();
      glDisable(GL_DEPTH_TEST);
      glEnable(GL_BLEND);
      glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
      float plySpeed = player.speed;
      plySpeed = (plySpeed -0.0) * 0.3;
      if(plySpeed > 1) plySpeed = 1;
      else if(plySpeed < 0) plySpeed = 0;
      glColor4f(1,1,1,0.7 * plySpeed);
      glEnable(GL_TEXTURE_2D);

      float MB_ZOOM = 0.001;
      
      glBegin(GL_QUADS);
      glTexCoord2f(1-MB_ZOOM, 1-MB_ZOOM);
      glVertex2f(Viewport.width, 0+MB_ZOOM);
      glTexCoord2f(1-MB_ZOOM, 0+MB_ZOOM);
      glVertex2f(Viewport.width, Viewport.height);
      glTexCoord2f(0+MB_ZOOM, 0+MB_ZOOM);
      glVertex2f(0, Viewport.height);
      glTexCoord2f(0+MB_ZOOM, 1-MB_ZOOM);
      glVertex2f(0, 0);
      glEnd();
      
      glCopyTexImage2D(GL_TEXTURE_2D, 
                       0, 
                       GL_RGB, 
                          0, 0, 
                       Viewport.width, Viewport.height,
                       0
                       );
      
      glEnable(GL_DEPTH_TEST);
      glDisable(GL_BLEND);
      glDisable(GL_TEXTURE_2D);
      
      glPopMatrix();
      glMatrixMode(GL_PROJECTION);
      glPopMatrix();
      glMatrixMode(GL_MODELVIEW);
   }
   
}
