
module MScrEditor;

namespace racer;


class ScrEditor extends OSDScreen {

   public method startHiscoreRecording(int _mode) {
      RacerConfiguration.hiscore_mode = _mode;
      OSD.ShowScreen(scr_ingame);
      scr_ingame.restartRace();
   }

   public method onKey(Key _k) : boolean  { 
      switch(_k.pressed)
      {
         case VKEY_ESCAPE:
            if(0 == _k.mod)
            {
               OSD.ShowScreen(scr_ingame);
               return true;
            }
            return false;

         case VKEY_F5:
            startHiscoreRecording(RacerConfiguration.HIMODE_AUTHOR);
            return true;
         case VKEY_F6:
            startHiscoreRecording(RacerConfiguration.HIMODE_GOLD);
            return true;
         case VKEY_F7:
            startHiscoreRecording(RacerConfiguration.HIMODE_SILVER);
            return true;
         case VKEY_F8:
            startHiscoreRecording(RacerConfiguration.HIMODE_BRONZE);
            return true;

         case VKEY_F1:
         case VKEY_F2:
         case VKEY_F3:
            Editor.OnKey(_k); // Load preset map
            scr_ingame.restartRace();
            return true;
            
         case VKEY_RETURN:
         case 'm':
         case 's':
         case 'f':
         case VKEY_PAGEDOWN:
         case VKEY_PAGEUP:
         case 't':
         case 'h':
         case 'b':
         case VKEY_SPACE:
         default:
            if(!Editor.OnKey(_k))
            {
               return cam.onKey(_k);
            }
            else
               return true;
      }

   }

   public method onMouse(int _x, _y, _cbs, _nbs) : boolean  { 
      if(!Editor.OnMouse(_x, _y, _cbs, _nbs))
      {
         return cam.onMouse(_x, _y, _cbs, _nbs);
      }
      else
      {
         return true;
      }
   }

   public method onDraw(float dt) {
      scr_ingame.onDraw(dt);
   }

   public method onJoyAxisMotion(int dev, axis, val) : boolean  { 
   }

   public method onJoyButton(int dev, button, pressed) : boolean { 
   }

   public method onActivate() {
      RacerConfiguration.b_edit = true;
      trace "[...] edit mode is now active";
      Editor.SetEnabled(true, false);
      RacerConfiguration.hiscore_mode = RacerConfiguration.HIMODE_NORMAL;
   }

   public method onDeactivate() {
      RacerConfiguration.b_edit = false;
      trace "[...] edit mode is now inactive";
      Editor.SetEnabled(false, false);
   }
}

ScrEditor scr_editor;
