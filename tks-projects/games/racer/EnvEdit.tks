
module MEnvEdit;

namespace racer;

class BezierEnvEdit : BezierEdit {

   public method handleEndMouseDrag() {
      track.updateTrack();
   }
}

class EnvEdit {
   static BezierEnvEdit bezier_edit;

   static Init() {
      bezier_edit.init(true, 
                       0.5, 1.0, // scale
                       0.5, 0.0, // center
                       0.0005, 0.001);
      bezier_edit.setEnableZoomOnlyY(true);
   }

   static SetEnvelope(FloatArray _env, BezierPolyLine _bpl) {
      bezier_edit.setEnvelope(deref _env, deref _bpl);
   }

   static SetEnabled(boolean bEnabled) {
      if(bEnabled)
      {
         bezier_edit.setSize(Viewport.width, 128*3);
      }
      else
      {
         bezier_edit.setSize(Viewport.width, 96);
      }
   }

   static public method OnDraw(float _dt) {

      glViewport(0, 0, Viewport.width, bezier_edit.size_y);
      glScissor(0, 0, Viewport.width, bezier_edit.size_y);
      glEnable(GL_SCISSOR_TEST);
      zglInit2D(Viewport.width, bezier_edit.size_y);

      glDisable(GL_DEPTH_TEST);
      glDisable(GL_BLEND);

      glLoadIdentity();
    
      if(RacerConfiguration.b_edit_env)
      {
         glClearColor(0.48*1.1, 0.47*1.1, 0.45*1.1, 1.0);
      }
      else
      {
         glClearColor(0.48, 0.47, 0.45, 1.0);
      }
      glClear(GL_COLOR_BUFFER_BIT);

      //glTranslatef(0,Viewport.height-bezier_edit.size_y,0);
      bezier_edit.onDraw(_dt);
      //glTranslatef(0,-Viewport.height-bezier_edit.size_y,0);

      glScissor(0, 0, Viewport.width, Viewport.height);
      glDisable(GL_SCISSOR_TEST);
      glViewport(0, 0, Viewport.width, Viewport.height);
   }

   static public OnMouse(int _x, int _y, int _cbs, int _nbs) : boolean {
      return = bezier_edit.onMouse(_x, _y-(Viewport.height - bezier_edit.size_y), _cbs, _nbs);

      //trace "xxx envedit: sel_entity="+#(Editor.sel_entity);
      TrackPolyLineEntity ple <= Editor.sel_entity;
      if(ple instanceof TrackPolyLineEntity)
      {
         float ncx = bezier_edit.norm_cursor_x;
         if(ncx < 0) ncx = 0;
         else if(ncx > 1) ncx = 1;
         ple.highlightPoint(ncx);
      }
   }

   static public method OnKey(Key _k) {
      return bezier_edit.onKey(_k);
   }
}
