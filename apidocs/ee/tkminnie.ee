tkminnie
tkminnie
MinnieSetup
 MINNIE_PATH_TYPE_CONVEX
 MINNIE_PATH_TYPE_CONCAVE
 MINNIE_PATH_TYPE_EVENODD
 MINNIE_PATH_TYPE_IMMEDIATE
 MINNIE_LINEJOIN_NONE
 MINNIE_LINEJOIN_MITER
 MINNIE_LINEJOIN_ROUND
 MINNIE_LINEJOIN_BEVEL
 MINNIE_LINECAP_NONE
 MINNIE_LINECAP_BUTT
 MINNIE_LINECAP_ROUND
 MINNIE_LINECAP_SQUARE
 minBegin
Start new drawing
minEnd
End drawing
minFreeDynamic
Free dynamically allocated memory (paths)
minSetStrokeScale,float scale
Set stroke width scaling factor. Applied to next path draw calls.
minSetStrokeOffset,float offset
Set stroke width offset. Applied to next path draw calls.
minGetWidth:int
Get canvas width (pixels)
minGetWidth:int
Get canvas height (pixels)
minGetColorByIndex,int idx:int
Get ARGB32 color from current palette
minSetFramebufferOverride,int fbIdx,Texture tex,int w,int h,int pitch:boolean
minInitScratchBuffers,Buffer buf,int defPointsPerPath,int maxPointsPerPath,int maxClippedPointsPerPath,int maxExtrudedVerticesPerPath,int maxClippedTrisPerPath:int
minParseBuffer,Buffer buf:boolean
Parse MIB stream
minDebugPrintAllocStats
minDebugPrintPathStats
minResetAllocStats
minGetTotalNumPoints:int
minGetTotalNumLines:int
minGetTotalNumLineStrips:int
minGetTotalNumTris:int
minGetTotalNumTrisTex:int
minGetTotalNumRects:int
minGetTotalNumEllipses:int
minSetEnableDraw,boolean bEnable
minSetEnableDrawSW,boolean bEnable
minSetEnableRenderStrokes,boolean bEnable
minGetEnableRenderStrokes:boolean
minSetEnableRenderJoinCap,boolean bEnable
minGetEnableRenderJoinCap:boolean
minSetEnableRenderFillConcave,boolean bEnable
minGetEnableRenderFillConcave:boolean
minSetEnableRenderFillEvenOdd,boolean bEnable
minGetEnableRenderFillEvenOdd:boolean
minSetEnableEdgeAA,boolean bEnable
minGetEnableEdgeAA:boolean
minSetEnableTesselateConcave,boolean bEnable
minGetEnableTesselateConcave:boolean
minSetSwTesselateSizeThreshold,int sizeThreshold
Bounding box area threshold. 0=disable SW tesselation
minGetSwTesselateSizeThreshold:int
minSetEnableForceConcaveEvenOdd,boolean bEnable
minGetEnableForceConcaveEvenOdd:boolean
minSetEnableUniformColors,boolean bEnable
minGetEnableUniformColors:boolean
minSetStrokeWLineStripThreshold,float threshold
minGetStrokeWLineStripThreshold:float
minSetStrokeWLineJoinThreshold,float threshold
minGetStrokeWLineJoinThreshold:float
minSetVertexBufferExportOFS,Stream ofs
minSetDrawListExportOFS,Stream ofs
minIsEdgeAA:boolean
minIsVertexFix16:boolean
minIsEdgeAAScaleFix16:boolean
minSeg,int numSeg
Set number of subdivisions for next curve / arc path segment
minMoveTo,float x,float y
Move path cursor to absolute position

@arg x X position (abs)
@arg y Y position (abs)
minLineTo,float dstX,float dstY
Add line segment to current path

@arg dstX Destination X (abs)
@arg dstY Destination Y (abs)
minCubicTo,float c1x,float c1y,float c2x,float c2y,float dstX,float dstY
Add cubic spline segment to current path

@arg c1x Control point 1 X (abs)
@arg c1y Control point 1 Y (abs)
@arg c2x Control point 2 X (abs)
@arg c2y Control point 2 Y (abs)
@arg dstX Destination X (abs)
@arg dstY Destination Y (abs)
minCubicMirrorTo,float c2x,float c2y,float dstX,float dstY
Add smoothed / mirrored cubic spline segment to current path.

The implicite control point 1 is calculated by mirroring the previous segment's control point 2.

@arg c2x Control point 2 X (abs)
@arg c2y Control point 2 Y (abs)
@arg dstX Destination X (abs)
@arg dstY Destination Y (abs)
minArcTo,float rx,float ry,float rot,boolean bLargeArc,boolean bArcSweep,float dstX,float dstY
Add elliptic arc segment to current path

@arg rx Radius x
@arg ry Radius y
@arg rot Rotation (radiant measure)
@arg bLargeArc Large arc flag
@arg bArcSweep Arc sweep flag
@arg dstX Destination X (abs)
@arg dstY Destination Y (abs)
minRect,float w,float h
Add rectangle segment to current path (cursor position denotes left / top corner)
@arg w Width
@arg h Height
minRoundRect,float w,float h,float rx,float ry
Add rounded rectangle segment to current path (cursor position denotes left / top corner).
@arg w Width
@arg h Height
@arg rx Corner radius x
@arg ry Corner radius y
minEllipse,float rx,float ry
Add ellipse segment to current path (cursor position denotes center)
@arg rx Radius x
@arg ry Radius y
minCircle
Add circle segment to current path (cursor position denotes center)
@arg r Radius
minBeginPathEx,int pathType:int
Begin new path definition.

@arg pathType See §MINNIE_PATH_TYPE_CONVEX, §MINNIE_PATH_TYPE_CONCAVE, §MINNIE_PATH_TYPE_EVENODD, §MINNIE_PATH_TYPE_IMMEDIATE

@return Path id
minBeginPath:int
Begin new Even-Odd path definition
@return Path id
minBeginPathConvex:int
Begin new Convex path definition
@return Path id
minBeginPathConcave:int
Begin new Concave path definition
@return Path id
minBeginPathEvenOdd:int
Begin new Even-Odd path definition
@return Path id
minBeginPathImmediate:int
Begin new Immediate path definition
@return Path id
minEndImmediate
End Immediate path definition
minEndPath,boolean bClosed
End path definition
minEndPathOpen
End path definition and keep path open
minEndPathClosed
End path definition and close path (connect last to first)
minBeginSubEx,int pathType:int
Begin new sub-path definition
@return Sub-path id
minBeginSub:int
Begin new Even-Odd sub-path definition
@return Sub-path id
minBeginSubConvex:int
Begin new Convex sub-path definition
@return Sub-path id
minBeginSubConcave:int
Begin new Concave sub-path definition
@return Sub-path id
minBeginSubEvenOdd:int
Begin new Even-Odd sub-path definition
@return Sub-path id
minEndSub,boolean bClosed
End sub-path definition
minEndSubOpen
End sub-path definition and keep sub-path open
minEndSubClosed
End sub-path definition and close sub-path (connect last to first)
minStrokeWidth,float w
Set line stroke width
minFill
Select fill mode for next path draw call
minMiterLimit,float l
minColor
Set ARGB32 color for next path draw call
minJoinCap,int joinCap
minJoin,int joinType
minJoinNone
Disable line joints
minJoinMiter
Select Miter line joints
minJoinRound
Select Round line joints
minJoinBevel
Select Bevel line joints
minCap,int capType
minCapNone
Disable line caps
minCapRound
Select Round line caps
minCapButt
Select Butt line caps
minDrawPath,int pathId
Draw previously defined path
minBindTexture,int texId,boolean bRepeat,boolean bFilter
Bind 2D texture
@arg texId OpenGL texture id
@arg bRepeat true=repeat texture false=clamp to edge
@arg bFilter true=enable bilinear filter false=use nearest neighbour sampling
minUnbindTexture
minTextureDecalAlpha,float decalAlpha
Select alpha for 'decal' texture draw calls
minTriangleTexUVFlat,float x1,float y1,float u1,float v1,float x2,float y2,float u2,float v2,float x3,float y3,float u3,float v3
Draw texture mapped triangle

@arg x1 Vertex 1 x
@arg y1 Vertex 1 y
@arg u1 Vertex 1 u texture coordinate (0..1)
@arg v1 Vertex 1 v texture coordinate (0..1)
@arg x2 Vertex 2 x
@arg y2 Vertex 2 y
@arg u2 Vertex 2 u texture coordinate (0..1)
@arg v2 Vertex 2 v texture coordinate (0..1)
@arg x3 Vertex 3 x
@arg y3 Vertex 3 y
@arg u3 Vertex 3 u texture coordinate (0..1)
@arg v3 Vertex 3 v texture coordinate (0..1)

@see minBindTexture
minTriangleTexUVFlat,float x1,float y1,float u1,float v1,float x2,float y2,float u2,float v2,float x3,float y3,float u3,float v3
Draw texture mapped triangle. The texture is crossfaded with the current fill color according to §minTextureDecalAlpha.

@arg x1 Vertex 1 x
@arg y1 Vertex 1 y
@arg u1 Vertex 1 u texture coordinate (0..1)
@arg v1 Vertex 1 v texture coordinate (0..1)
@arg x2 Vertex 2 x
@arg y2 Vertex 2 y
@arg u2 Vertex 2 u texture coordinate (0..1)
@arg v2 Vertex 2 v texture coordinate (0..1)
@arg x3 Vertex 3 x
@arg y3 Vertex 3 y
@arg u3 Vertex 3 u texture coordinate (0..1)
@arg v3 Vertex 3 v texture coordinate (0..1)

@see minBindTexture
minTriangleTexUVGouraudDecal,float x1,float y1,float u1,float v1,int c32v1,float x2,float y2,float u2,float v2,int c32v2,float x3,float y3,float u3,float v3,int c32v3
Draw texture mapped, gouraud shaded triangle.

@arg x1 Vertex 1 x
@arg y1 Vertex 1 y
@arg u1 Vertex 1 u texture coordinate (0..1)
@arg v1 Vertex 1 v texture coordinate (0..1)
@arg c32v1 Vertex 1 ARGB32 color
@arg x2 Vertex 2 x
@arg y2 Vertex 2 y
@arg u2 Vertex 2 u texture coordinate (0..1)
@arg v2 Vertex 2 v texture coordinate (0..1)
@arg c32v2 Vertex 2 ARGB32 color
@arg x3 Vertex 3 x
@arg y3 Vertex 3 y
@arg u3 Vertex 3 u texture coordinate (0..1)
@arg v3 Vertex 3 v texture coordinate (0..1)
@arg c32v3 Vertex 3 ARGB32 color

@see minBindTexture
minTriangleTexUVGouraudDecal,float x1,float y1,float u1,float v1,int c32v1,float x2,float y2,float u2,float v2,int c32v2,float x3,float y3,float u3,float v3,int c32v3
Draw texture mapped, gouraud shaded triangle. The texture is crossfaded with the current fill color according to §minTextureDecalAlpha.

@arg x1 Vertex 1 x
@arg y1 Vertex 1 y
@arg u1 Vertex 1 u texture coordinate (0..1)
@arg v1 Vertex 1 v texture coordinate (0..1)
@arg c32v1 Vertex 1 ARGB32 color
@arg x2 Vertex 2 x
@arg y2 Vertex 2 y
@arg u2 Vertex 2 u texture coordinate (0..1)
@arg v2 Vertex 2 v texture coordinate (0..1)
@arg c32v2 Vertex 2 ARGB32 color
@arg x3 Vertex 3 x
@arg y3 Vertex 3 y
@arg u3 Vertex 3 u texture coordinate (0..1)
@arg v3 Vertex 3 v texture coordinate (0..1)
@arg c32v3 Vertex 3 ARGB32 color

@see minBindTexture
minRectTexUVFlat,float x,float y,float w,float h,float ul,float vt,float ur,float vb
Draw texture mapped rectangle

@arg x X position
@arg y Y position
@arg w Width
@arg h Height
@arg ul Left u texture coordinate
@arg vt Top v texture coordinate
@arg ur Right u texture coordinate
@arg vb Bottom v texture coordinate

@see minBindTexture
minRectTexUVFlatDecal,float x,float y,float w,float h,float ul,float vt,float ur,float vb
Draw texture mapped rectangle. The texture is crossfaded with the current fill color according to §minTextureDecalAlpha.

@arg x X position
@arg y Y position
@arg w Width
@arg h Height
@arg ul Left u texture coordinate
@arg vt Top v texture coordinate
@arg ur Right u texture coordinate
@arg vb Bottom v texture coordinate

@see minBindTexture
minRectTexUVGouraud,float x,float y,float w,float h,float ul,float vt,float ur,float vb,int c32lt,int c32rt,int c32rb,int c32lb
Draw texture mapped, gouraud shaded rectangle.

@arg x X position
@arg y Y position
@arg w Width
@arg h Height
@arg ul Left u texture coordinate
@arg vt Top v texture coordinate
@arg ur Right u texture coordinate
@arg vb Bottom v texture coordinate
@arg c32lt Left/Top ARGB32 color
@arg c32rt Right/Top ARGB32 color
@arg c32rb Right/Bottom ARGB32 color
@arg c32lb Left/Bottom ARGB32 color

@see minBindTexture
minRectTexUVGouraudDecal,float x,float y,float w,float h,float ul,float vt,float ur,float vb,int c32lt,int c32rt,int c32rb,int c32lb
Draw texture mapped, gouraud shaded rectangle. The texture is crossfaded with the current fill color according to §minTextureDecalAlpha.

@arg x X position
@arg y Y position
@arg w Width
@arg h Height
@arg ul Left u texture coordinate
@arg vt Top v texture coordinate
@arg ur Right u texture coordinate
@arg vb Bottom v texture coordinate
@arg c32lt Left/Top ARGB32 color
@arg c32rt Right/Top ARGB32 color
@arg c32rb Right/Bottom ARGB32 color
@arg c32lb Left/Bottom ARGB32 color

@see minBindTexture
